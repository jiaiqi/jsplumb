'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var defineProperty = _interopDefault(require('core-js/library/fn/object/define-property'));
var moment = _interopDefault(require('moment'));
require('core-js/modules/es6.array.from');
require('core-js/modules/es6.number.constructor');
require('core-js/modules/es6.number.parse-int');
require('core-js/modules/web.dom.iterable');
require('core-js/modules/es6.string.iterator');
require('core-js/modules/es6.map');
require('core-js/modules/es6.string.ends-with');
require('core-js/modules/es6.string.starts-with');
require('core-js/modules/es6.function.name');
require('core-js/modules/es6.regexp.split');
require('core-js/modules/es7.array.includes');
require('core-js/modules/es6.string.includes');
var Vue = _interopDefault(require('vue'));
var iterator = _interopDefault(require('core-js/library/fn/symbol/iterator'));
var symbol = _interopDefault(require('core-js/library/fn/symbol'));
require('core-js/modules/es6.regexp.replace');
require('core-js/modules/es6.regexp.to-string');
require('core-js/modules/es6.number.parse-float');
var _$1 = _interopDefault(require('lodash'));
var promise = _interopDefault(require('core-js/library/fn/promise'));
require('regenerator-runtime/runtime');
var ElInput = _interopDefault(require('element-ui/packages/input'));
var Focus = _interopDefault(require('element-ui/src/mixins/focus'));
var RepeatClick = _interopDefault(require('element-ui/src/directives/repeat-click'));
var isArray = _interopDefault(require('core-js/library/fn/array/is-array'));
var from = _interopDefault(require('core-js/library/fn/array/from'));
var isIterable = _interopDefault(require('core-js/library/fn/is-iterable'));
require('core-js/modules/es6.set');
require('core-js/modules/es7.object.values');
require('core-js/modules/es6.array.sort');
require('core-js/modules/es6.regexp.constructor');
require('core-js/modules/es6.object.keys');
require('core-js/modules/es7.symbol.async-iterator');
require('core-js/modules/es6.symbol');
require('core-js/modules/es6.array.find-index');
require('core-js/modules/es6.array.find');
require('core-js/modules/es6.string.fontsize');
require('core-js/modules/es6.string.repeat');
require('core-js/modules/es6.regexp.search');
require('core-js/modules/es6.regexp.match');

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var defineProperty$1 = defineProperty;

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;

    defineProperty$1(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function createLinkUrlFunc(optionListV2, thisColName) {
  var func = function func(data) {
    var service = optionListV2.serviceName;
    var srvApp = optionListV2.srv_app || "";
    var url = "/vpages/index.html#/detail/".concat(service, "/xxx?srvApp=").concat(srvApp, "&operate_params=");
    var refedCol = optionListV2.refed_col;
    var operateParams = {
      serviceName: service,
      condition: [{
        colName: refedCol,
        ruleType: "eq",
        value: data[thisColName]
      }]
    };
    return url + JSON.stringify(operateParams);
  };

  return func;
}

var FieldInfo =
/*#__PURE__*/
function () {
  function FieldInfo(srvCol, formType) {
    _classCallCheck(this, FieldInfo);

    if (!srvCol) {
      return;
    } // // !!! mock data !!!
    // 0.5/0.25
    // if (srvCol.columns === "id_card" || srvCol.columns === "mobile" ) {
    //   srvCol.group_field = "real_name"
    //   srvCol.col_span2 = 0.25;
    // }
    //
    // // for debug
    // if (srvCol.columns == 'real_name') {
    //   srvCol.col_span = "1" ;
    //   srvCol.col_span2 = "0.5" ;
    //
    // }


    this.srvCol = srvCol;
    this.type = srvCol.col_type;
    this.name = srvCol.columns;
    this.label = srvCol.label;
    this.placeholder = srvCol.placeholder || "请输入...";
    this.seq = srvCol.seq || 0; // only for add form, set too srvval

    this.initValueExpr = srvCol.init_expr; // internal use: 以只读文本方式显示，例如detail页面中的字段

    this.readonly = false;
    this.resolveEditor(formType);
    this.resolveOptions(srvCol);

    if (srvCol.col_span && ("" + srvCol.col_span).includes("/")) {
      var parts = ("" + srvCol.col_span).split("/");
      srvCol.col_span = parts[0];
      srvCol.col_span2 = parts[1];
    }

    this.resolveColspan(srvCol.col_span || 0.25);
    this.buildValidateRules(srvCol);
    this.resolveLinkUrl(srvCol);
    this.xIf = srvCol.x_if;
    this.upstream = srvCol.upstream;
    this.redundant = srvCol.redundant;
    this.visible = "true";
    this.bodyVisible = true;
    this.editable = srvCol.col_updatable_expr || srvCol.updatable !== 0 && srvCol.updatable !== "0";
    this.noSearchIcon = false;
    this.rows = 0;
    this.sec = srvCol.section;
  }

  _createClass(FieldInfo, [{
    key: "isNumeric",
    value: function isNumeric() {
      var numerics = ['int', 'Integer', 'float', 'Float', 'double', 'Double', 'Money'];
      return this.type && numerics.indexOf(this.type) >= 0;
    }
  }, {
    key: "isTextual",
    value: function isTextual() {
      var textuals = ['String', 'MultilineText', 'Note', "Json", "Sql", 'Js'];
      return this.type && textuals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isFinder",
    value: function isFinder() {
      var isFk = this.type && this.type.indexOf && (this.type.indexOf("bx") == 0 || this.type.indexOf("fk") == 0);
      var isBuiltinFk = this.type && (this.type === 'User' || this.type === 'Dept');
      return isFk || isBuiltinFk;
    }
  }, {
    key: "isCode",
    value: function isCode() {
      return this.type === "Json" || this.type === "Sql" || this.type === "Js";
    }
  }, {
    key: "isTemporal",
    value: function isTemporal() {
      var temporals = ['date', 'Date', 'time', 'Time', 'datetime', 'DateTime', "Year", "Month"];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isDateTime",
    value: function isDateTime() {
      var temporals = ['datetime', 'DateTime'];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isDate",
    value: function isDate() {
      var temporals = ['date', 'Date'];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isTime",
    value: function isTime() {
      var temporals = ['time', 'Time'];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isDict",
    value: function isDict() {
      var temporals = ['Dict', 'bxsys_dict'];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isUploader",
    value: function isUploader() {
      var temporals = ['FileList', 'Image'];
      return this.type && temporals.indexOf(this.type) >= 0;
    }
  }, {
    key: "isFilterable",
    value: function isFilterable() {
      return !(this.isUploader() || this.type === "Note");
    }
  }, {
    key: "isJoinedDisp",
    value: function isJoinedDisp() {
      return this.name && this.name.startsWith("_") && this.name.endsWith("_disp");
    }
  }, {
    key: "getMin",
    value: function getMin() {
      if (!this.rules) {
        return;
      }

      var ret = this.rules.filter(function (rule) {
        return rule.hasOwnProperty('min');
      });

      if (ret.length > 0) {
        return ret[0].min;
      }
    }
  }, {
    key: "getMax",
    value: function getMax() {
      if (!this.rules) {
        return;
      }

      var ret = this.rules.filter(function (rule) {
        return rule.hasOwnProperty('max');
      });

      if (ret.length > 0) {
        return ret[0].max;
      }
    }
  }, {
    key: "isRequired",
    value: function isRequired() {
      if (!this.rules) {
        return;
      }

      return this.rules.filter(function (rule) {
        return rule.hasOwnProperty('required');
      }).length > 0;
    }
  }, {
    key: "getDefaultValue",
    value: function getDefaultValue() {
      if (this.editor) {
        if (this.editor == 'input-range') {
          return [];
        } else if (this.editor == 'multiselect') {
          return [];
        }
      }

      return null;
    }
  }, {
    key: "resolveEditor",
    value: function resolveEditor(formType) {
      if (this.type == 'Dept') {
        this.editor = 'tree-finder';
      } else if (this.type == 'Enum' || this.type == 'Dict') {
        if (this.srvCol.subtype === 'radio') {
          this.editor = 'radio';
        } else {
          this.editor = 'select';
        }
      } else if (this.type == 'Set') {
        if (this.srvCol.subtype === 'checkbox') {
          this.editor = 'checkbox';
        } else {
          this.editor = 'multiselect';
        }
      } else if (this.type == 'Boolean') {
        this.editor = 'switch';
      } else if (this.type == 'Date') {
        this.editor = 'date-picker';
        this.subtype = "date";
      } else if (this.type == 'Year') {
        this.editor = 'date-picker';
        this.subtype = "year";
      } else if (this.type == 'Month') {
        this.editor = 'date-picker';
        this.subtype = "month";
      } else if (this.type == 'DateTime') {
        this.editor = 'date-time-picker';
      } else if (this.type == 'Time') {
        this.editor = 'time-picker';
      } else if (this.type == 'MultilineText') {
        this.editor = 'textarea';
      } else if (this.type == 'Note') {
        this.editor = 'ueditor';
      } else if (this.type == 'FileList') {
        this.editor = 'upload-file';
      } else if (this.type == 'Image') {
        this.editor = 'upload-image';
      } else if (this.type == 'UserList') {
        this.editor = 'userlist';
      } else if (this.type == 'QrCode') {
        this.editor = 'qrcode';
      } else if (this.isFinder()) {
        this.editor = 'finder';
      } else if (this.isNumeric()) {
        this.editor = 'input-number';
      } else if (this.type == "Json") {
        this.editor = 'code-editor';
        this.lang = "json";
      } else if (this.type == "Sql") {
        this.editor = 'code-editor';
        this.lang = "mysql";
      } else if (this.type == "Js") {
        this.editor = 'code-editor';
        this.lang = "javascript";
      } else {
        this.editor = null;
      }

      if (formType == 'filter') {
        if (this.isNumeric()) {
          this.editor = 'input-range';
        } else if (this.type == 'Date') {
          this.editor = 'date-range';
        } else if (this.type == 'Time') {
          this.editor = 'time-range';
        } else if (this.type == 'DateTime') {
          this.editor = 'date-time-range';
        } else if (this.type == 'Enum' || this.type == 'Dict') {
          this.editor = 'multiselect';
        } else if (this.isJoinedDisp() || this.isTextual() || this.isFinder()) {
          this.editor = 'input';
        }
      }
    }
  }, {
    key: "resolveOptions",
    value: function resolveOptions(srvCol) {
      // relocate literal options
      if (_.isArray(srvCol.option_list_v2)) {
        var options = srvCol.option_list_v2;
        srvCol.option_list_v2 = {
          options: options
        };
      }

      this.setOptionList4BuiltinFinder(srvCol);
      var optionListV2 = srvCol.option_list_v2;

      if (!optionListV2) {
        return;
      }

      this.dispLoader = {
        service: optionListV2.serviceName,
        conditions: optionListV2.conditions,
        orders: optionListV2.orders,
        showAsPair: optionListV2.show_as_pair,
        imgUrlExpr: optionListV2.img_url_expr,
        dedup: optionListV2.dedup
      };
      this.valueCol = optionListV2.refed_col;
      this.dispCol = optionListV2.key_disp_col;

      if (optionListV2.is_tree) {
        this.editor = "tree-finder";
      }
    }
  }, {
    key: "setOptionList4BuiltinFinder",
    value: function setOptionList4BuiltinFinder(srvCol) {
      if (this.type === 'Dept') {
        srvCol.option_list_v2 = {
          serviceName: 'srvauth_dept_select',
          srv_app: "auth",
          refed_col: 'dept_no',
          key_disp_col: 'dept_name',
          show_as_pair: false
        };
      } else if (this.type === 'User') {
        srvCol.option_list_v2 = {
          serviceName: 'srvsso_user_select',
          srv_app: "sso",
          refed_col: 'user_no',
          key_disp_col: 'user_disp',
          show_as_pair: false
        };
      } else if (this.type === 'UserList') {
        srvCol.option_list_v2 = {
          serviceName: 'srvsys_user_list_related_select',
          srv_app: "sso",
          refed_col: 'userlist unsupported',
          key_disp_col: 'disp',
          show_as_pair: false
        };
      } else if (this.type === 'Dict' || this.type === 'bxsys_dict') {
        var ext = {
          serviceName: 'srvsys_dict_select',
          refed_col: 'dict_no',
          key_disp_col: 'value',
          show_as_pair: false
        };

        _.assign(srvCol.option_list_v2, ext);
      }
    }
  }, {
    key: "resolveColspan",
    value: function resolveColspan(col_span) {
      this.colspan = {};

      if (!this.editor) {
        this.colspan = this.setLayoutColSize(col_span);
      } else {
        if (this.editor == 'textarea' || this.editor == 'ueditor' || this.editor.startsWith('upload') || this.isCode()) {
          this.colspan = this.setLayoutColSize(1);
        } else if (this.editor == 'date-range' || this.editor == 'date-time-range') {
          this.colspan = this.setLayoutColSize(0.5);
        } else if (this.editor == "input-range" || this.editor == "time-range") {
          this.colspan = this.setLayoutColSize(0.25);
        } else {
          // 根据colspan设置响应式布局
          this.colspan = this.setLayoutColSize(col_span);
        }
      }
    }
  }, {
    key: "setLayoutColSize",
    value: function setLayoutColSize(colSpan) {
      // this.colspan = 24;
      // 根据colspan设置响应式布局
      // xl:≥1920px;lg:≥1200px;md:≥992px;sm:≥768px;xs:<768px
      var cols = 24;
      var colspanObj = {};

      if (colSpan) {
        if (colSpan == '0.25') {
          colspanObj['xl'] = cols * colSpan;
          colspanObj['lg'] = cols * colSpan;
          colspanObj['md'] = cols * colSpan * 8 / 6;
          colspanObj['sm'] = cols * colSpan * 2;
          colspanObj['xs'] = cols;
        } else if (colSpan == '0.5') {
          colspanObj['xl'] = cols * colSpan;
          colspanObj['lg'] = cols * colSpan;
          colspanObj['md'] = cols * colSpan;
          colspanObj['sm'] = cols * colSpan * 2;
          colspanObj['xs'] = cols;
        } else if (colSpan == 1) {
          colspanObj['xl'] = cols * colSpan;
          colspanObj['lg'] = cols * colSpan;
          colspanObj['md'] = cols * colSpan;
          colspanObj['sm'] = cols * colSpan;
          colspanObj['xs'] = cols;
        }

        return colspanObj;
      } else {
        return null;
      }
    }
  }, {
    key: "buildValidateRules",
    value: function buildValidateRules(srvCol) {
      var _this = this;

      if (!srvCol.validators) {
        return null;
      }

      var map = new Map();
      var keyMapper = {
        ngPattern: 'pattern',
        ngMaxLength: 'max' // convert validator to map

      };
      srvCol.validators.split(";").filter(function (part) {
        return !!part;
      }).forEach(function (part) {
        var subparts = part.split("=");
        var key = subparts[0].trim();
        key = keyMapper[key] || key;
        var val = subparts.length > 1 ? subparts[1].trim() : true;

        if (key == 'min' || key == 'max') {
          val = Number.parseInt(val);

          if (isNaN(val)) {
            return;
          }
        }

        var rule = {
          name: key,
          trigger: 'change'
        };
        rule[key] = val;

        if (_this.isNumeric()) {
          rule.type = "number";
        }

        if (!rule.message) {
          switch (key) {
            case 'required':
              {
                rule.message = "".concat(_this.label, "\u4E3A\u5FC5\u586B");
                break;
              }

            case 'min':
              {
                rule.message = "".concat(_this.label, "\u5FC5\u987B\u5C0F\u4E8E");
                break;
              }

            case 'max':
              {
                rule.message = "".concat(_this.label, "\u5FC5\u987B\u5927\u4E8E");
                break;
              }
          }
        }

        map.set(key, rule);
      }); // put validator message to map

      if (srvCol.validators_message) {
        srvCol.validators_message.split(";").filter(function (part) {
          return !!part;
        }).forEach(function (part) {
          var subparts = part.split("=");
          var key = subparts[0].trim();
          key = keyMapper[key] || key;
          var val = subparts.length > 1 ? subparts[1].trim() : null;
          var rule = map.get(key);

          if (rule) {
            rule.message = val;
          }
        });
      } // convert to rules list


      this.rules = Array.from(map.values());
    }
  }, {
    key: "resolveLinkUrl",
    value: function resolveLinkUrl(srvCol) {
      var linkUrlFunc = srvCol.link_url_func;

      if (linkUrlFunc) {
        if (linkUrlFunc.trim() === "false") {
          return;
        }

        this.linkUrlFunc = function (data, vm) {
          var ret = eval("var zz=" + linkUrlFunc + "(data, vm); zz");
          return ret;
        };
      } else if (this.isFinder()) {
        // make an link url func
        var optionListV2 = srvCol.option_list_v2;
        this.linkUrlFunc = createLinkUrlFunc(optionListV2, this.name);
      }
    }
  }, {
    key: "getMaxLength",
    value: function getMaxLength() {
      if (!this.isNumeric() && this.rules) {
        var maxRules = this.rules.filter(function (rule) {
          return !!rule.max;
        });
        return maxRules.length > 0 && maxRules[0].max;
      }
    }
  }]);

  return FieldInfo;
}();

var iterator$1 = iterator;

var symbol$1 = symbol;

function _typeof2(obj) { if (typeof symbol$1 === "function" && typeof iterator$1 === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof symbol$1 === "function" && obj.constructor === symbol$1 && obj !== symbol$1.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof symbol$1 === "function" && _typeof2(iterator$1) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof symbol$1 === "function" && obj.constructor === symbol$1 && obj !== symbol$1.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function formatDate(jsDate, type) {
  if ("date" === type) {
    return moment(jsDate).format("YYYY-MM-DD");
  } else if ("datetime" === type) {
    return moment(jsDate).format("YYYY-MM-DD HH:mm:ss");
  } else if ("year" === type) {
    return moment(jsDate).format("YYYY");
  } else if ("month" === type) {
    return moment(jsDate).format("YYYY-MM" + "-01");
  } else if ("time" === type) {
    return jsDate;
  } else {
    throw new Error("unsupport: " + type);
  }
}
function money2Zh(money) {
  //汉字的数字
  var cnNums = new Array('零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖'); //基本单位

  var cnIntRadice = new Array('', '拾', '佰', '仟'); //对应整数部分扩展单位

  var cnIntUnits = new Array('', '万', '亿', '兆'); //对应小数部分单位

  var cnDecUnits = new Array('角', '分', '毫', '厘'); //整数金额时后面跟的字符

  var cnInteger = '整'; //整型完以后的单位

  var cnIntLast = '元'; //最大处理的数字

  var maxNum = 999999999999999.9999; //金额整数部分

  var integerNum; //金额小数部分

  var decimalNum; //输出的中文金额字符串

  var chineseStr = ''; //分离金额后用的数组，预定义

  var parts;

  if (money == '') {
    return '';
  }

  money = parseFloat(money);

  if (money >= maxNum) {
    //超出最大处理数字
    return '';
  }

  if (money == 0) {
    chineseStr = cnNums[0] + cnIntLast + cnInteger;
    return chineseStr;
  } //转换为字符串


  money = money.toString();

  if (money.indexOf('.') == -1) {
    integerNum = money;
    decimalNum = '';
  } else {
    parts = money.split('.');
    integerNum = parts[0];
    decimalNum = parts[1].substr(0, 4);
  } //获取整型部分转换


  if (parseInt(integerNum, 10) > 0) {
    var zeroCount = 0;
    var IntLen = integerNum.length;

    for (var i = 0; i < IntLen; i++) {
      var n = integerNum.substr(i, 1);
      var p = IntLen - i - 1;
      var q = p / 4;
      var m = p % 4;

      if (n == '0') {
        zeroCount++;
      } else {
        if (zeroCount > 0) {
          chineseStr += cnNums[0];
        } //归零


        zeroCount = 0;
        chineseStr += cnNums[parseInt(n)] + cnIntRadice[m];
      }

      if (m == 0 && zeroCount < 4) {
        chineseStr += cnIntUnits[q];
      }
    }

    chineseStr += cnIntLast;
  } //小数部分


  if (decimalNum != '') {
    var decLen = decimalNum.length;

    for (var _i = 0; _i < decLen; _i++) {
      var _n = decimalNum.substr(_i, 1);

      if (_n != '0') {
        chineseStr += cnNums[Number(_n)] + cnDecUnits[_i];
      }
    }
  }

  if (chineseStr == '') {
    chineseStr += cnNums[0] + cnIntLast + cnInteger;
  } else if (decimalNum == '') {
    chineseStr += cnInteger;
  }

  return chineseStr;
}
function formatMoney(valueStr) {
  if (/[^0-9\.]/.test(valueStr)) return "invalid value";
  valueStr = valueStr.replace(/^(\d*)$/, "$1.");
  valueStr = (valueStr + "00").replace(/(\d*\.\d\d)\d*/, "$1");
  valueStr = valueStr.replace(".", ",");
  var re = /(\d)(\d{3},)/;

  while (re.test(valueStr)) {
    valueStr = valueStr.replace(re, "$1,$2");
  }

  valueStr = valueStr.replace(/,(\d\d)$/, ".$1");
  return valueStr.replace(/^\./, "0.");
}
function traverseObj(obj, visitor, filter) {
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      visitor(obj, key);

      if (filter(obj, key)) {
        traverseObj(obj[key], visitor, filter);
      }
    }
  }
}
function weekStart() {
  return new Date(new Date().getYear() + 1900, new Date().getMonth(), new Date().getDate() - new Date().getDay());
}
function weekEnd() {
  return new Date(new Date().getYear() + 1900, new Date().getMonth(), new Date().getDate() + (6 - new Date().getDay()));
}
function monthStart() {
  var now = new Date();
  return new Date(now.getYear() + 1900, now.getMonth(), 1);
}
function monthEnd() {
  var now = new Date();
  return new Date(now.getYear() + 1900, now.getMonth(), moment().daysInMonth());
}

var hotTableMetadata = {
  User: {
    srvApp: "sso",
    selectService: "srvsso_user_select",
    table: "bxsso_user",
    valueCol: "user_no",
    dispCol: "user_disp"
  },
  Dept: {
    srvApp: "auth",
    selectService: "srvauth_dept_select",
    table: "bxsys_dept",
    valueCol: "dept_no",
    dispCol: "dept_name"
  }
};
function getHotTableName(type) {
  return hotTableMetadata[type] && hotTableMetadata[type].table;
}

var guid = function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }

  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
};

var Field =
/*#__PURE__*/
function () {
  function Field(fieldInfo, form) {
    var _this = this;

    _classCallCheck(this, Field);

    this.guid = guid();
    this.info = fieldInfo;
    this.model = null;
    this.vif = true;

    if (this.info.editor == 'multiselect') {
      // multiselect need default value as []
      this.model = this.model || [];
    }

    this.options = this.info.srvCol && this.info.srvCol.option_list_v2 && this.info.srvCol.option_list_v2.options || [];

    this.optionsFunc = function (_) {
      return _this.options;
    }; // vm instance of field-editor


    this.editor = null;
    this.form = form; // cache value for upstream field.model
    // if field has upstream field, add it as an condition

    if (this.info.upstream) {
      var field = this;
      var upstreamCondition = {
        colName: this.info.upstream.refCol,
        ruleType: "eq",
        valueFunc: function valueFunc(_) {
          return field.form.fields[field.info.upstream.field].getSrvVal();
        }
      };

      if (this.info.dispLoader) {
        this.info.dispLoader.conditions = this.info.dispLoader.conditions || [];
        this.info.dispLoader.conditions.push(upstreamCondition);
      }
    } // true 代表无权限查看的敏感数据


    this.noPerm4Sensi = false; // validate error msg map, key is rule name, value is err msg

    this.errMsg = {}; // array item is object, keys: value, remark

    this.historyData = [];
  }

  _createClass(Field, [{
    key: "getSrvVal",
    value: function getSrvVal() {
      if (this.info.type == 'Note' && this.editor) {
        return this.editor.getSrvVal();
      } else if (this.info.type == 'Boolean') {
        return !!this.model ? 1 : 0;
      } else if (this.info.editor == "userlist" && this.editor) {
        return this.editor.getSrvVal();
      }

      var ret = this.model;

      if (ret == null || ret == undefined) {
        return null;
      }

      if (this.info.isTemporal()) {
        var temporalType = this.info.subtype || this.info.type.toLowerCase();

        if (Array.isArray(ret)) {
          for (var key in ret) {
            ret[key] = formatDate(ret[key], temporalType);
          }
        } else {
          ret = formatDate(ret, temporalType);
        }
      } else if (this.info.isFinder()) {
        if (_typeof(ret) === 'object') {
          ret = ret[this.info.valueCol];
        }
      } else if (this.info.editor == "multiselect") {
        // both filter  ruletype == in, and sql set:   "a,b,c"
        if (ret && ret.length && ret.join) {
          ret = ret.join(",");
        } else {
          ret = null;
        }
      }

      return ret;
    }
  }, {
    key: "setSrvVal",
    value: function setSrvVal(srvVal) {
      if (srvVal === this.getSrvVal()) {
        var isFinderValScalar = this.info.isFinder() && !_$1.isObject(this.model);

        if (!isFinderValScalar) {
          return;
        }
      }

      var handledByEditor = false;

      if (this.editor && this.editor.isSpecial()) {
        this.editor.setSrvVal(srvVal);
        handledByEditor = true;
      } else if (this.info.editor == "multiselect") {
        if (srvVal && srvVal.trim()) {
          this.model = srvVal.trim().split(",");
        } else {
          this.model = [];
        }
      } else if (this.info.isNumeric()) {
        if (Number.parseFloat(srvVal) !== NaN) {
          this.model = Number.parseFloat(srvVal);
        } else {
          console.error("srvval ".concat(srvVal, " is not number!"));
        }
      } else {
        this.model = srvVal;
      }

      if (!handledByEditor && this.editor) {
        this.editor.$emit("field-value-changed", this.info.name);
      }
    }
  }, {
    key: "getDispVal",
    value: function getDispVal() {
      var _this2 = this;

      if (this.info.isFinder()) {
        if (!this.model) {
          return null;
        }

        var dispCol = this.info.dispCol;

        if (this.model.hasOwnProperty(dispCol)) {
          return this.model[dispCol];
        } else {
          return this.getSrvVal();
        }
      } else if (this.info.isDict()) {
        if (this.options) {
          var target = this.options.filter(function (pair) {
            return pair.value == _this2.model;
          });
          return target.length > 0 ? target[0].label : this.getSrvVal();
        } else {
          return this.getSrvVal();
        }
      } else if (this.info.type == 'Boolean') {
        return !!this.model ? '是' : '否';
      } else if (this.info.type == 'UserList') {
        try {
          if (this.model) {
            var items = JSON.parse(this.model);

            if (items && items.length) {
              return _$1.join(items.map(function (item) {
                return item.disp;
              }), ",");
            }
          }
        } catch (e) {}

        return "";
      } else {
        return this.getSrvVal();
      }
    }
  }, {
    key: "getDispVal4Read",
    value: function getDispVal4Read() {
      var _this3 = this;

      if (this.noPerm4Sensi === true) {
        return "******";
      }

      var value = this.getDispVal();
      var isSensitive = value === "******";

      if (_$1.isNull(value) || _$1.isUndefined(value) || "" === value || isSensitive) {
        return value;
      }

      var fieldType = this.info.type ? this.info.type : "";
      var dispCol = this.info.dispCol;
      var separator = "-";

      if ("year" === fieldType.toLowerCase()) {
        return _$1.split(value, separator)[0];
      } else if ("month" === fieldType.toLowerCase()) {
        var parts = _$1.split(value, separator).slice(0, 2);

        return _$1.join(parts, separator);
      } else if (fieldType === "Boolean") {
        return !!value ? "是" : "否";
      } else if (fieldType === "Money") {
        return formatMoney(value + "");
      } else if (this.shouldConvertDispValue4HotTable() && this.form.$store) {
        var table = getHotTableName(this.info.type);
        var noVal = this.getSrvVal();
        var tableData = this.form.$store.getters.getTableData(table);

        if (tableData && tableData.length > 0) {
          var target = tableData.filter(function (item) {
            return item[_this3.info.valueCol] === noVal;
          });
          return target && target.length && target[0][dispCol];
        } else {
          console.warn("not find target for hot table ");
          return noVal;
        }
      } else {
        return value;
      }
    }
  }, {
    key: "shouldConvertDispValue4HotTable",
    value: function shouldConvertDispValue4HotTable() {
      var type = this.info.type;
      return hotTableMetadata[type] && this.form && this.form.formType === "detail";
    }
  }, {
    key: "reset",
    value: function reset() {
      this.model = this.info.getDefaultValue();

      if (this.editor && this.editor.isSpecial()) {
        this.editor.setSrvVal(null);
      }
    }
  }, {
    key: "reset2Init",
    value: function reset2Init() {
      if (this.hasInitValueExpr()) {
        this.setSrvVal(this.evalInitValueExpr());
      } else {
        this.reset();
      }
    }
  }, {
    key: "evalXIf",
    value: function evalXIf() {
      if (this.info.xIf == null || this.info.xIf == undefined) {
        return true;
      } else if ((typeof variable === "undefined" ? "undefined" : _typeof(variable)) == _typeof(true)) {
        return this.info.xIf;
      } else if (this.form) {
        // should be an string of test_func
        // noinspection JSUnusedLocalSymbols
        var row = this.form.srvValFormModel();
        var ret = eval("var zz=" + this.info.xIf + "(row); zz");
        return !!ret;
      }
    }
  }, {
    key: "evalVisibleExpr",
    value: function evalVisibleExpr() {
      return this.evalVersatileFlagVar(this.info.visible);
    }
  }, {
    key: "evalEditable",
    value: function evalEditable() {
      return this.evalVersatileFlagVar(this.info.editable);
    }
  }, {
    key: "evalInitValueExpr",
    value: function evalInitValueExpr() {
      return this.evalVersatileFlagVar(this.info.initValueExpr);
    }
  }, {
    key: "evalVersatileFlagVar",
    value: function evalVersatileFlagVar(flagVar) {
      var vm = this.form;
      var formModel = vm.srvValFormModel && vm.srvValFormModel();

      if (_$1.isBoolean(flagVar)) {
        return flagVar;
      } else if (_$1.isString(flagVar)) {
        return vm.evalBxExpr(flagVar, formModel, vm);
      } else if (_$1.isFunction(flagVar)) {
        return flagVar(formModel);
      } else {
        return !!flagVar;
      }
    }
  }, {
    key: "evalFormExpr",
    value: function evalFormExpr(expr, defaultValue) {
      var vm = this.form;

      if (_$1.isBoolean(expr)) {
        return expr;
      } else {
        var formModel = vm.srvValFormModel && vm.srvValFormModel();

        if (_$1.isFunction(expr)) {
          return expr(formModel);
        } else if (_$1.isString(expr)) {
          if (expr.trim().startsWith("${") && expr.trim().endsWith("}")) {
            var readExpr = expr.trim().substring(2, expr.trim().length - 1);
            return vm.evalBxExpr(readExpr, formModel, vm, defaultValue);
          } else {
            return expr;
          }
        } else {
          return expr;
        }
      }
    }
  }, {
    key: "evalVisible",
    value: function evalVisible() {
      return this.evalXIf() && this.evalVisibleExpr();
    }
  }, {
    key: "isEmpty",
    value: function isEmpty() {
      var srvval = this.getSrvVal();
      return srvval === null || srvval === undefined || srvval === '' || srvval === 'Invalid date';
    }
  }, {
    key: "setVisible",
    value: function setVisible(visible) {
      this.info.visible = visible;
    }
  }, {
    key: "setEditable",
    value: function setEditable(editable) {
      this.info.editable = editable;
    }
  }, {
    key: "setInitValueExpr",
    value: function setInitValueExpr(initValueExpr) {
      console.info("setInitValueExpr called");
      this.info.initValueExpr = initValueExpr;
    }
  }, {
    key: "hasInitValueExpr",
    value: function hasInitValueExpr() {
      return !!this.info.initValueExpr;
    }
  }, {
    key: "putValidateError",
    value: function putValidateError(rule, errMsg) {
      console.info("validate ".concat(this.info.name, " err msg: ").concat(errMsg));
      this.errMsg[rule] = errMsg;
      this.errMsg = _$1.clone(this.errMsg);
    }
  }, {
    key: "clearValidateError",
    value: function clearValidateError(ruleName) {
      console.info("validate ".concat(this.info.name, " success"));
      delete this.errMsg[ruleName];
      this.errMsg = _$1.clone(this.errMsg);
    }
  }, {
    key: "hasValidateError",
    value: function hasValidateError() {
      return !_$1.isEmpty(this.errMsg);
    }
  }, {
    key: "getAnyValidateError",
    value: function getAnyValidateError() {
      for (var key in this.errMsg) {
        return this.errMsg[key];
      }

      return "";
    }
  }, {
    key: "hasHistoryData",
    value: function hasHistoryData() {
      return !_$1.isEmpty(this.historyData) && this.historyData.length > 1;
    }
  }, {
    key: "setNoPerm4Sensi",
    value: function setNoPerm4Sensi(value) {
      this.noPerm4Sensi = value;
      value && this.setEditable(false);
    }
  }]);

  return Field;
}();

//
var script = {
  props: ['field'],
  data: function data() {
    return {
      key: null
    };
  },
  created: function created() {
    if (this.field) {
      if (!this.field.model) {
        this.field.model = [];
      }
    }
  }
};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier
/* server only */
, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
  if (typeof shadowMode !== 'boolean') {
    createInjectorSSR = createInjector;
    createInjector = shadowMode;
    shadowMode = false;
  } // Vue.extend constructor export interop.


  var options = typeof script === 'function' ? script.options : script; // render functions

  if (template && template.render) {
    options.render = template.render;
    options.staticRenderFns = template.staticRenderFns;
    options._compiled = true; // functional template

    if (isFunctionalTemplate) {
      options.functional = true;
    }
  } // scopedId


  if (scopeId) {
    options._scopeId = scopeId;
  }

  var hook;

  if (moduleIdentifier) {
    // server build
    hook = function hook(context) {
      // 2.3 injection
      context = context || // cached call
      this.$vnode && this.$vnode.ssrContext || // stateful
      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional
      // 2.2 with runInNewContext: true

      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__;
      } // inject component styles


      if (style) {
        style.call(this, createInjectorSSR(context));
      } // register component module identifier for async chunk inference


      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier);
      }
    }; // used by ssr in case component is cached and beforeCreate
    // never gets called


    options._ssrRegister = hook;
  } else if (style) {
    hook = shadowMode ? function () {
      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));
    } : function (context) {
      style.call(this, createInjector(context));
    };
  }

  if (hook) {
    if (options.functional) {
      // register for functional component in vue file
      var originalRender = options.render;

      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context);
        return originalRender(h, context);
      };
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate;
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
    }
  }

  return script;
}

var normalizeComponent_1 = normalizeComponent;

var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
function createInjector(context) {
  return function (id, style) {
    return addStyle(id, style);
  };
}
var HEAD = document.head || document.getElementsByTagName('head')[0];
var styles = {};

function addStyle(id, css) {
  var group = isOldIE ? css.media || 'default' : id;
  var style = styles[group] || (styles[group] = {
    ids: new Set(),
    styles: []
  });

  if (!style.ids.has(id)) {
    style.ids.add(id);
    var code = css.source;

    if (css.map) {
      // https://developer.chrome.com/devtools/docs/javascript-debugging
      // this makes source maps inside style tags work properly in Chrome
      code += '\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875

      code += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';
    }

    if (!style.element) {
      style.element = document.createElement('style');
      style.element.type = 'text/css';
      if (css.media) style.element.setAttribute('media', css.media);
      HEAD.appendChild(style.element);
    }

    if ('styleSheet' in style.element) {
      style.styles.push(code);
      style.element.styleSheet.cssText = style.styles.filter(Boolean).join('\n');
    } else {
      var index = style.ids.size - 1;
      var textNode = document.createTextNode(code);
      var nodes = style.element.childNodes;
      if (nodes[index]) style.element.removeChild(nodes[index]);
      if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);
    }
  }
}

var browser = createInjector;

/* script */
const __vue_script__ = script;

/* template */
var __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"el-date-editor el-range-editor el-input__inner el-date-editor--daterange"},[(_vm.field.model)?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.field.model[0]),expression:"field.model[0]"}],staticClass:"el-range-input",attrs:{"autocomplete":"off","placeholder":"开始"},domProps:{"value":(_vm.field.model[0])},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.field.model, 0, $event.target.value);}}}):_vm._e(),_vm._v(" "),_c('span',{staticClass:"el-range-separator"},[_vm._v("至")]),_vm._v(" "),(_vm.field.model)?_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.field.model[1]),expression:"field.model[1]"}],staticClass:"el-range-input",attrs:{"autocomplete":"off","placeholder":"结束"},domProps:{"value":(_vm.field.model[1])},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.field.model, 1, $event.target.value);}}}):_vm._e()])};
var __vue_staticRenderFns__ = [];

  /* style */
  const __vue_inject_styles__ = function (inject) {
    if (!inject) return
    inject("data-v-3e02c000_0", { source: ".el-table th[data-v-3e02c000]{text-align:center}.el-table tbody tr td[data-v-3e02c000]:first-child{text-align:center}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__ = "data-v-3e02c000";
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = false;
  /* style inject SSR */
  

  
  var InputRange = normalizeComponent_1(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    browser,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$1 = {
  components: {
    List: function List() {
      return Promise.resolve().then(function () { return list; });
    }
  },
  props: {
    field: Object,
    defaultConditions: Array
  },
  data: function data() {
    return {
      selected: null,
      popup: false
    };
  },
  methods: {
    popupDefaultConditions: function popupDefaultConditions() {
      var conditions = this.defaultConditions || [];
      var fieldInfo = this.field.info;
      var loader = fieldInfo.dispLoader;
      return conditions.concat(this.buildConditions(loader));
    },
    dedupOptions: function dedupOptions(options) {
      var form = this.field.form;

      if (form) {
        var gridData = form.srvValFormModel()._gridData;

        if (gridData && gridData.length) {
          var key_col = this.field.info.srvCol.columns;
          var existVals = gridData.map(function (item) {
            return item[key_col];
          });

          _.remove(options, function (option) {
            return _.includes(existVals, option[key_col]);
          });
        }
      }
    },
    loadOptions: function loadOptions(queryString, cb) {
      var _this = this;

      var fieldInfo = this.field.info;
      var loader = fieldInfo.dispLoader;

      if (loader.enableFunc) {
        if (!loader.enableFunc()) {
          cb([]);
          return;
        }
      }

      var queryJson = {
        serviceName: loader.service,
        queryMethod: 'select',
        distinct: !!loader.distinct,
        // * is here to support redundant or img url expr etc...
        colNames: ["*"],
        condition: [],
        page: {
          pageNo: 1,
          rownumber: 20
        }
      };

      if (queryString) {
        queryJson.condition.push({
          colName: fieldInfo.dispCol,
          value: queryString,
          ruleType: 'like'
        });
      }

      if (loader && loader.conditions) {
        this.buildConditions(loader).forEach(function (c) {
          return queryJson.condition.push(c);
        });
      }

      if (loader && loader.orders) {
        queryJson.order = loader.orders;
      }

      var app = this.$srvApp && this.field.evalFormExpr(this.$srvApp, "");

      if (this.$srvApp && !app) {
        // 使用了动态srvApp，但是eval结果出错，取消查询
        cb([]);
        return;
      }

      return this.selectList(queryJson, app).then(function (response) {
        if (response && response.data && response.data.data) {
          var options = response.data.data;

          if (loader.dedup) {
            _this.dedupOptions(options);
          }

          options.forEach(function (item) {
            item.labelFunc = function (data) {
              return loader.showAsPair !== false ? "".concat(data[fieldInfo.dispCol], "/").concat(data[fieldInfo.valueCol]) : data[fieldInfo.dispCol];
            };
          });
          options.forEach(function (option) {
            option.imgUrlFunc = function (data) {
              return eval(loader.imgUrlExpr);
            };
          });
          cb(options);
        } else {
          cb([]);
          _this.$refs.autocomplete.$refs.input && _this.$refs.autocomplete.$refs.input.blur();
        }
      });
    },
    buildConditions: function buildConditions(dispLoader) {
      var ret = [];

      for (var i in dispLoader.conditions) {
        var cond = dispLoader.conditions[i];
        var condition = {};

        try {
          condition.colName = cond.colName;
          condition.ruleType = cond.ruleType;

          if (cond.disableExpr && eval(cond.disableExpr)) {
            continue;
          }

          var valueExpr = cond.valueExpr || cond.value;

          if (valueExpr) {
            // literal value or js expr
            if (cond.literalValue) {
              condition.value = valueExpr;
            } else {
              condition.value = this.evalExprOrFunc(valueExpr, this.field.form.srvValFormModel(), null);
            }
          } else if (cond.valueFunc) {
            condition.value = cond.valueFunc();
          }
        } catch (e) {
          console.warn("err when eval condition " + JSON.stringify(e));
          continue;
        }

        if (condition.value != null && condition.value != '') {
          if (Array.isArray(condition.value)) {
            if (condition.value.length == 0) {
              continue;
            }
          }

          ret.push(condition);
        }
      }

      return ret;
    },
    handleSelect: function handleSelect(item) {
      this.field.model = item;
      this.emitFieldValueChange();
    },
    emitFieldValueChange: function emitFieldValueChange() {
      this.$emit('field-value-changed', this.field.info.name, this.field);
    },
    handleBlur: function handleBlur() {
      try {
        if (this.field.getSrvVal()) {
          if (this.selected != this.field.getDispVal()) {
            console.debug("reset field value: " + this.field.info.name);
            this.field.reset();
          }
        }
      } finally {
        this.$emit('blur', this.field);
      }
    },
    setSrvVal: function setSrvVal(srvVal) {
      var _this2 = this;

      if (srvVal == null || srvVal == undefined) {
        this.selected = null;
        this.emitFieldValueChange();
        return;
      }

      var fieldInfo = this.field.info;
      var loader = fieldInfo.dispLoader;
      var queryJson = {
        serviceName: loader.service,
        queryMethod: 'select',
        colNames: ['*'],
        condition: [{
          colName: fieldInfo.valueCol,
          value: srvVal,
          ruleType: 'eq'
        }]
      };

      if (loader && loader.conditions) {
        this.buildConditions(loader).forEach(function (c) {
          return queryJson.condition.push(c);
        });
      }

      return this.selectList(queryJson).then(function (response) {
        if (response && response.data && response.data.data) {
          var item = response.data.data[0];
          _this2.selected = item[fieldInfo.dispCol];
          _this2.field.model = item;

          _this2.emitFieldValueChange();
        }
      });
    },

    /**
     * on row selected in finder's search popup
     * @param row
     * @param event
     */
    onRowSelected: function onRowSelected(row, event) {
      var item = row;
      this.selected = item[this.field.info.dispCol];
      this.field.model = item;
      this.$emit('blur', this.field);
      this.emitFieldValueChange();
      this.popup = false;
    },
    onPopupClicked: function onPopupClicked() {
      if (!this.field.info.editable) {
        return;
      }

      this.popup = true; // hide suggestions

      this.$refs.autocomplete.activated = false;
    }
  },
  created: function created() {},
  mounted: function mounted() {
    var vm = this;
    this.$refs.autocomplete.$refs.input.$on('clear', function () {
      vm.selected = null;
      vm.handleSelect(null);
      setTimeout(function (_) {
        return vm.$refs.autocomplete.getData("");
      }, 500);
    });

    if (this.field.model) {
      var value = this.field.model[this.field.info.valueCol];

      if (value == undefined || value == null) {
        this.setSrvVal(this.field.model);
      }
    }
  }
};

/* script */
const __vue_script__$1 = script$1;

/* template */
var __vue_render__$1 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-autocomplete',{ref:"autocomplete",staticStyle:{"width":"100%"},attrs:{"fetch-suggestions":_vm.loadOptions,"value-key":_vm.field.info.dispCol,"disabled":!_vm.field.info.editable,"placeholder":_vm.field.info.placeholder,"clearable":""},on:{"select":_vm.handleSelect,"blur":_vm.handleBlur},scopedSlots:_vm._u([{key:"default",fn:function(ref){
var item = ref.item;
return [_c('span',{staticStyle:{"float":"left"}},[_vm._v(_vm._s((item.labelFunc)(item)))]),_vm._v(" "),(item.imgUrlFunc)?_c('img',{staticStyle:{"float":"right","margin-top":"0.5rem"},attrs:{"src":(item.imgUrlFunc)(item)}}):_vm._e()]}}]),model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v;},expression:"selected"}},[(!_vm.field.info.noSearchIcon)?_c('el-button',{attrs:{"slot":"append","icon":"el-icon-search"},on:{"click":_vm.onPopupClicked},slot:"append"}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"查询选择","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.popup},on:{"close":function($event){_vm.popup = false;}}},[(_vm.popup)?_c('list',{ref:"popup",attrs:{"service":_vm.field.info.dispLoader.service,"mode":"finder","listType":"selectlist","grid-data-filter":this.dedupOptions,"default-condition":_vm.popupDefaultConditions()},on:{"row-dbclick":_vm.onRowSelected}}):_vm._e(),_vm._v(" "),_c('div',{staticStyle:{"text-align":"center","color":"red"}},[_vm._v("\n      请双击列表行进行选择\n    ")])],1)],1)};
var __vue_staticRenderFns__$1 = [];

  /* style */
  const __vue_inject_styles__$1 = undefined;
  /* scoped */
  const __vue_scope_id__$1 = undefined;
  /* module identifier */
  const __vue_module_identifier__$1 = undefined;
  /* functional template */
  const __vue_is_functional_template__$1 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Finder = normalizeComponent_1(
    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
    __vue_inject_styles__$1,
    __vue_script__$1,
    __vue_scope_id__$1,
    __vue_is_functional_template__$1,
    __vue_module_identifier__$1,
    undefined,
    undefined
  );

var promise$1 = promise;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    promise$1.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new promise$1(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

//
//
//
//
//
//
//
//
//
//
//
//
var script$2 = {
  props: {
    field: {
      type: Object,
      default: null
    }
  },
  data: function data() {
    return {
      selected: null,
      ue: null,
      eleId: null
    };
  },
  methods: {
    setSrvVal: function setSrvVal(srvVal) {
      if (this.ue) {
        srvVal = srvVal || "";
        this.ue.setContent(srvVal);
      } else {
        this.field.model = srvVal;
      }
    },
    getSrvVal: function getSrvVal() {
      return this.field.model;
    },
    initUeditor: function () {
      var _initUeditor = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var _this = this;

        var config, all, parser, self;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Promise.resolve().then(function () { return ueditor_config; });

              case 2:
                config = _context.sent;
                _context.next = 5;
                return Promise.resolve().then(function () { return ueditor_all; });

              case 5:
                all = _context.sent;
                _context.next = 8;
                return Promise.resolve().then(function () { return ueditor_parse; });

              case 8:
                parser = _context.sent;
                this.ue = UE.getEditor(this.eleId, {
                  BaseUrl: "/",
                  UEDITOR_HOME_URL: "static/ueditor/",
                  UEDITOR_PUBHOME_URL: "ueditor/",
                  toolbars: [["source", "|", "bold", "italic", "underline", "fontborder", "strikethrough", "removeformat", "formatmatch", "|", "forecolor", "backcolor", "insertorderedlist", "insertunorderedlist", "selectall", "|", "paragraph", "fontfamily", "fontsize", "|", "justifyleft", "justifycenter", "justifyright", "justifyjustify", "|", "simpleupload", "background", "|", "horizontal", "spechars", "|", "inserttable", "deletetable", "insertparagraphbeforetable", "insertrow", "deleterow", "insertcol", "deletecol", "mergecells", "mergeright", "mergedown", "splittocells", "splittorows", "splittocols", "|", "help"]],
                  theme: "default",
                  //皮肤
                  lang: "zh-cn",
                  //语言
                  initialFrameHeight: 300,
                  scaleEnabled: true,
                  //缩放
                  catchRemoteImageEnable: false
                });
                this.setSrvVal(this.field.model);
                self = this;
                this.ue.srvApp = this.resolveDefaultSrvApp();
                this.ue.addListener("blur", function (_) {
                  var currContent = self.ue.getContent();

                  if (currContent != self.field.model) {
                    console.info("ueditor blur event");
                    self.field.model = currContent;
                    self.$emit('field-value-changed', _this.field.info.name, _this.field);
                  }
                });

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function initUeditor() {
        return _initUeditor.apply(this, arguments);
      }

      return initUeditor;
    }()
  },
  created: function created() {
    this.eleId = "ueditor" + this._uid;
  },
  mounted: function mounted() {
    var _this2 = this;

    // path config
    window.pathConfig = window.pathConfig || {};
    window.pathConfig.fileServer = this.serviceApi().uploadFile.replace("upload", "");
    setTimeout(function (_) {
      if (_this2.field.info.editable) {
        _this2.initUeditor();
      }
    });
  }
};

/* script */
const __vue_script__$2 = script$2;

/* template */
var __vue_render__$2 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.field.info.editable)?_c('div',{attrs:{"id":_vm.eleId,"type":"text/plain"}}):_c('div',{staticStyle:{"border-radius":"4px","border":"1px solid #dcdfe6","overflow":"auto"},domProps:{"innerHTML":_vm._s(_vm.field.model)}})])};
var __vue_staticRenderFns__$2 = [];

  /* style */
  const __vue_inject_styles__$2 = function (inject) {
    if (!inject) return
    inject("data-v-10c27cee_0", { source: ".el-table th[data-v-10c27cee]{text-align:center}.el-table tbody tr td[data-v-10c27cee]:first-child{text-align:center}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$2 = "data-v-10c27cee";
  /* module identifier */
  const __vue_module_identifier__$2 = undefined;
  /* functional template */
  const __vue_is_functional_template__$2 = false;
  /* style inject SSR */
  

  
  var UEditor = normalizeComponent_1(
    { render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 },
    __vue_inject_styles__$2,
    __vue_script__$2,
    __vue_scope_id__$2,
    __vue_is_functional_template__$2,
    __vue_module_identifier__$2,
    browser,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$3 = {
  props: {
    field: {
      type: Object,
      default: null
    } // $srvApp: {
    //   type: String,
    //   default: "file",
    // },

  },
  data: function data() {
    return {
      fileLists: [],
      uploadFile: this.serviceApi().uploadFile,
      fileDesc: '请上传文件,大小不超过20MB',
      fileType: '',
      fileSize: 204800,
      uploadParams: {
        serviceName: "srv_bxfile_service",
        interfaceName: "add",
        app_no: this.resolveDefaultSrvApp()
      },
      isEdit: true
    };
  },
  created: function created() {
    // 获取数据，
    this.getData();
  },
  methods: {
    getHeaders: function getHeaders() {
      var bx_auth_ticket = sessionStorage.getItem("bx_auth_ticket");
      return {
        bx_auth_ticket: bx_auth_ticket
      };
    },
    getData: function getData() {
      this.fileLists = []; //初始化文件列表

      if (this.field.fileDesc != null) {
        this.fileDesc = this.field.fileDesc;
      }

      if (this.field.fileSize != null) {
        this.fileSize = this.field.fileSize;
      }

      if (this.field.fileType != null) {
        this.fileType = this.field.fileType;
      }

      if (this.field.info.editable) {
        //判断是否是编辑
        this.isEdit = true;

        if (this.field.model != null) {
          //如果有file_no则查询出相关的图片信息
          this.uploadParams.file_no = this.field.model;
          this.queryData();
        }
      } else {
        this.isEdit = false;
        this.queryData();
      }
    },
    queryData: function queryData() {
      var _this = this;

      this.selectFileList(this.field.model).then(function (response) {
        for (var i in response.body.data) {
          var file = response.body.data[i];
          file.name = response.body.data[i].src_name;
          file.url = _this.serviceApi().downloadFile + response.body.data[i].fileurl;

          _this.fileLists.push(file);
        }
      });
    },
    handleRemove: function handleRemove(file) {
      console.log(file);
    },
    handlePreview: function handlePreview(file) {
      //点击文件时触发
      if (file.url == null) {
        //如果是新上传的文件需要获取url
        file.url = this.serviceApi().downloadFile + file.response.fileurl;
      }

      if (file.url.toLowerCase().endsWith(".pdf")) {
        var currLocation = window.location.href;
        var hashIndex = currLocation.indexOf("#");

        if (hashIndex > 0) {
          var pdfPreviewUrl = currLocation.substring(0, hashIndex) + "#/viewpdf?pdfsrc=" + encodeURIComponent(file.url);
          this.addTabByUrl(pdfPreviewUrl, "文件预览");
          return;
        }
      }

      window.open(file.url);
    },
    beforeAvatarUpload: function beforeAvatarUpload(file) {
      if (file.size / 1024 > this.fileSize) {
        this.$message.error('文件大小不能超过' + this.fileSize + 'kb');
        return false;
      }

      if (this.fileType != '') {
        //默认支持所有类型上传
        var flag = false;

        for (var i in this.fileType.split('/')) {
          if (file.name.split('.')[1] === this.fileType.split('/')[i]) {
            flag = true;
            break;
          }
        }

        if (!flag) {
          this.$message.error('只能上传' + this.fileType + '文件!');
          return false;
        }
      }
    },
    beforeRemove: function () {
      var _beforeRemove = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(file, fileList) {
        var fileurl, params, response;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(file && file.status === "success")) {
                  _context.next = 13;
                  break;
                }

                //删除
                if (file.response) {
                  fileurl = file.response.fileurl;
                } else {
                  fileurl = file.url.split('filePath=')[1];
                }

                params = {
                  fileurl: fileurl
                };
                _context.next = 5;
                return this.deleteFile(params);

              case 5:
                response = _context.sent;

                if (!(response && response.body.resultCode === 'SUCCESS')) {
                  _context.next = 11;
                  break;
                }

                this.$message.info(response.body.state);
                return _context.abrupt("return", true);

              case 11:
                this.$message.info(response.body.state);
                return _context.abrupt("return", false);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeRemove(_x, _x2) {
        return _beforeRemove.apply(this, arguments);
      }

      return beforeRemove;
    }(),
    handleSuccess: function handleSuccess(response, file, fileList) {
      if (response.state === undefined) {
        this.$message.info('上传成功！');
        this.uploadParams.file_no = response.file_no;
        this.field.model = response.file_no;
      } else {
        this.$message.error('上传失败！');
        this.fileLists.splice(this.fileLists.length - 1, 1);
      }
    },
    setSrvVal: function setSrvVal(srvVal) {
      this.field.model = srvVal;
      this.getData();
    },
    getSrvVal: function getSrvVal() {
      return this.field.model;
    }
  }
};

/* script */
const __vue_script__$3 = script$3;

/* template */
var __vue_render__$3 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isEdit === false)?_vm._l((_vm.fileLists),function(file,index){return _c('a',{key:index,attrs:{"href":"javascript:void(0)"},on:{"click":function($event){return _vm.handlePreview(file)}}},[_c('div',[_vm._v(_vm._s(file.name))])])}):_vm._e(),_vm._v(" "),(_vm.isEdit)?_c('el-upload',{staticClass:"upload-demo",attrs:{"action":_vm.uploadFile,"with-credentials":true,"headers":_vm.getHeaders(),"on-preview":_vm.handlePreview,"before-remove":_vm.beforeRemove,"before-upload":_vm.beforeAvatarUpload,"on-remove":_vm.handleRemove,"on-success":_vm.handleSuccess,"file-list":_vm.fileLists,"data":_vm.uploadParams,"disabled":!_vm.field.info.editable}},[_c('el-button',{attrs:{"size":"small","type":"primary"}},[_vm._v("点击上传")]),_vm._v(" "),_c('div',{staticClass:"el-upload__tip",attrs:{"slot":"tip"},slot:"tip"},[_vm._v(_vm._s(_vm.fileDesc))])],1):_vm._e()],2)};
var __vue_staticRenderFns__$3 = [];

  /* style */
  const __vue_inject_styles__$3 = function (inject) {
    if (!inject) return
    inject("data-v-593e5b82_0", { source: ".el-table th[data-v-593e5b82]{text-align:center}.el-table tbody tr td[data-v-593e5b82]:first-child{text-align:center}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$3 = "data-v-593e5b82";
  /* module identifier */
  const __vue_module_identifier__$3 = undefined;
  /* functional template */
  const __vue_is_functional_template__$3 = false;
  /* style inject SSR */
  

  
  var UploadFile = normalizeComponent_1(
    { render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 },
    __vue_inject_styles__$3,
    __vue_script__$3,
    __vue_scope_id__$3,
    __vue_is_functional_template__$3,
    __vue_module_identifier__$3,
    browser,
    undefined
  );

var script$4 = {
  props: {
    field: {
      type: Object,
      default: null
    } // $srvApp: {
    //   type: String,
    //   default: "file",
    // },

  },
  data: function data() {
    return {
      fileLists: [],
      fileDesc: '请上传jpg/png格式的图片,大小不超过2Mb',
      fileType: 'jpg/png',
      fileSize: 2048,
      imageDialog: false,
      imageDialogUrl: '',
      uploadFile: this.serviceApi().uploadFile,
      uploadParams: {
        serviceName: "srv_bxfile_service",
        interfaceName: "add",
        app_no: this.resolveDefaultSrvApp()
      },
      isEdit: true
    };
  },
  created: function created() {
    // 获取数据，
    this.getData();
  },
  methods: {
    getHeaders: function getHeaders() {
      var bx_auth_ticket = sessionStorage.getItem("bx_auth_ticket");
      return {
        bx_auth_ticket: bx_auth_ticket
      };
    },
    getData: function getData() {
      this.fileLists = []; //初始化文件列表

      if (this.field.fileDesc != null) {
        this.fileDesc = this.field.fileDesc;
      }

      if (this.field.fileSize != null) {
        this.fileSize = this.field.fileSize;
      }

      if (this.field.fileType != null) {
        this.fileType = this.field.fileType;
      }

      if (this.field.info.editable) {
        //判断是否是编辑
        this.isEdit = true;

        if (this.field.model != null) {
          //如果有file_no则查询出相关的图片信息
          this.uploadParams.file_no = this.field.model;
          this.queryData();
        }
      } else {
        this.isEdit = false;
        this.queryData();
      }
    },
    queryData: function queryData() {
      var _this = this;

      this.selectFileList(this.field.model).then(function (response) {
        for (var i in response.body.data) {
          var file = response.body.data[i];
          file.name = response.body.data[i].src_name;
          file.url = _this.serviceApi().downloadFile + response.body.data[i].fileurl;

          _this.fileLists.push(file);
        }
      });
    },
    beforeAvatarUpload: function beforeAvatarUpload(file) {
      if (file.size / 1024 > this.fileSize) {
        this.$message.error('文件大小不能超过' + this.fileSize + 'kb');
        return false;
      }

      var flag = false;

      for (var i in this.fileType.split('/')) {
        if (file.name.split('.')[1] === this.fileType.split('/')[i]) {
          flag = true;
          break;
        }
      }

      if (!flag) {
        this.$message.error('只能上传' + this.fileType + '文件!');
        return false;
      }
    },
    handleRemove: function handleRemove(file, fileList) {
      console.log(file);
    },
    handlePreview: function handlePreview(file) {
      if (file.url == null) {
        //如果是新上传的文件需要获取url
        file.url = this.serviceApi().downloadFile + file.response.fileurl;
      }

      window.open(file.url);
      console.log(file);
    },
    beforeRemove: function () {
      var _beforeRemove = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(file, fileList) {
        var fileurl, params, response;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(file && file.status === "success")) {
                  _context.next = 13;
                  break;
                }

                //删除
                if (file.response) {
                  fileurl = file.response.fileurl;
                } else {
                  fileurl = file.url.split('filePath=')[1];
                }

                params = {
                  fileurl: fileurl
                };
                _context.next = 5;
                return this.deleteFile(params);

              case 5:
                response = _context.sent;

                if (!(response && response.body.resultCode === 'SUCCESS')) {
                  _context.next = 11;
                  break;
                }

                this.$message.info(response.body.state);
                return _context.abrupt("return", true);

              case 11:
                this.$message.info(response.body.state);
                return _context.abrupt("return", false);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeRemove(_x, _x2) {
        return _beforeRemove.apply(this, arguments);
      }

      return beforeRemove;
    }(),
    handleSuccess: function handleSuccess(response, file, fileList) {
      if (response.state === undefined) {
        this.$message.info('上传成功！');
        this.uploadParams.file_no = response.file_no;
        this.field.model = response.file_no;
      } else {
        this.$message.error('上传失败！');
        this.fileLists.splice(this.fileLists.length - 1, 1);
      }
    },
    setSrvVal: function setSrvVal(srvVal) {
      this.field.model = srvVal;
      this.getData();
    },
    getSrvVal: function getSrvVal() {
      return this.field.model;
    },
    dowmlaodUrl: function dowmlaodUrl() {
      window.open(this.imageDialogUrl);
    }
  }
};

/* script */
const __vue_script__$4 = script$4;

/* template */
var __vue_render__$4 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isEdit === false)?[_c('ul',{staticClass:"form-imgs"},_vm._l((_vm.fileLists),function(o,index){return _c('li',{key:index,staticClass:"imgs-item"},[_c('div',{on:{"click":function($event){_vm.imageDialogUrl=o.url;_vm.imageDialog = true;}}},[_c('img',{attrs:{"src":o.url,"min-width":"70","height":"70"}})])])}),0)]:_vm._e(),_vm._v(" "),_c('el-dialog',{staticStyle:{"text-align":"center"},attrs:{"title":"图片预览","visible":_vm.imageDialog,"width":"60%","height":"65%"},on:{"update:visible":function($event){_vm.imageDialog=$event;}}},[_c('img',{staticStyle:{"margin":"0 auto"},attrs:{"src":_vm.imageDialogUrl,"width":"80%","height":"70%"}}),_c('br'),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){_vm.imageDialog = false;}}},[_vm._v("确 定")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.dowmlaodUrl()}}},[_vm._v("下载")])],1),_vm._v(" "),(_vm.isEdit)?_c('el-upload',{staticClass:"upload-demo",attrs:{"action":_vm.uploadFile,"with-credentials":true,"headers":_vm.getHeaders(),"on-preview":_vm.handlePreview,"before-remove":_vm.beforeRemove,"before-upload":_vm.beforeAvatarUpload,"on-remove":_vm.handleRemove,"on-success":_vm.handleSuccess,"file-list":_vm.fileLists,"data":_vm.uploadParams,"clearable":"","disabled":!_vm.field.info.editable,"list-type":"picture-card"}},[_c('el-button',{attrs:{"size":"small","type":"primary"}},[_vm._v("点击上传")]),_vm._v(" "),_c('div',{staticClass:"el-upload__tip",attrs:{"slot":"tip"},slot:"tip"},[_vm._v(_vm._s(_vm.fileDesc))])],1):_vm._e()],2)};
var __vue_staticRenderFns__$4 = [];

  /* style */
  const __vue_inject_styles__$4 = function (inject) {
    if (!inject) return
    inject("data-v-24e67f02_0", { source: ".el-table th[data-v-24e67f02]{text-align:center}.el-table tbody tr td[data-v-24e67f02]:first-child{text-align:center}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$4 = "data-v-24e67f02";
  /* module identifier */
  const __vue_module_identifier__$4 = undefined;
  /* functional template */
  const __vue_is_functional_template__$4 = false;
  /* style inject SSR */
  

  
  var UploadImage = normalizeComponent_1(
    { render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 },
    __vue_inject_styles__$4,
    __vue_script__$4,
    __vue_scope_id__$4,
    __vue_is_functional_template__$4,
    __vue_module_identifier__$4,
    browser,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$5 = {
  props: ['field'],
  data: function data() {
    return {
      // value组成的路径数组
      selected: [],
      // 树形结构数据
      options: []
    };
  },
  computed: {
    props: function props() {
      var props = {
        value: this.field.info.valueCol,
        label: this.needRenameLabel() ? "valuezh" : this.field.info.dispCol
      };
      return props;
    }
  },
  methods: {
    needRenameLabel: function needRenameLabel() {
      return this.field.info.dispCol === "value";
    },
    loadOptions: function loadOptions() {
      var _this = this;

      var fieldInfo = this.field.info;
      var conditions = [];
      var loader = fieldInfo.dispLoader;
      return this.treeSelect(loader.service, conditions).then(function (response) {
        if (response && response.data && response.data.data) {
          var options = response.data.data;

          if (_this.needRenameLabel()) {
            options.forEach(function (option) {
              return _this.renameLable(option);
            });
          }

          _this.options = options;
        }
      });
    },
    renameLable: function renameLable(option) {
      var _this2 = this;

      if (!option) {
        return;
      }

      option.valuezh = option.value;

      if (option.children && option.children.length > 0) {
        option.children.forEach(function (child) {
          return _this2.renameLable(child);
        });
      }
    },
    onSelectChange: function onSelectChange(item) {
      console.info("onSelectChange to field ".concat(this.field.info.name, ", vm: ").concat(this._uid));

      if (this.selected && this.selected.length > 0) {
        this.field.model = this.findSelectedItem();
      } else {
        this.field.model = null;
      }

      this.$emit('field-value-changed', this.field.info.name, this.field);
    },
    findSelectedItem: function findSelectedItem() {
      var _this3 = this;

      var valueCol = this.field.info.valueCol;
      var targets = this.options;

      var _loop = function _loop(i) {
        targets = targets.filter(function (opt) {
          return opt[valueCol] == _this3.selected[i];
        });

        if (!targets || targets.length == 0) {
          return {
            v: null
          };
        }

        if (i < _this3.selected.length - 1) {
          targets = targets[0].children;
        }
      };

      for (var i in this.selected) {
        var _ret = _loop(i);

        if (_typeof(_ret) === "object") return _ret.v;
      }

      if (!targets || targets.length == 0) {
        return null;
      } else {
        return targets[0];
      }
    },
    setSrvVal: function setSrvVal(srvVal) {
      var _this4 = this;

      console.info("set srvval ".concat(srvVal, " to field ").concat(this.field.info.name, ", vm: ").concat(this._uid));

      if (srvVal == null || srvVal == undefined) {
        if (this.selected && this.selected.length > 0) this.selected = [];
        return;
      }

      var fieldInfo = this.field.info;
      var loader = fieldInfo.dispLoader;
      var queryJson = {
        serviceName: loader.service,
        queryMethod: 'select',
        colNames: ['*'],
        condition: [{
          colName: fieldInfo.valueCol,
          value: srvVal,
          ruleType: 'eq'
        }]
      };
      return this.selectList(queryJson).then(function (response) {
        if (response && response.data && response.data.data) {
          var item = response.data.data[0];
          var path = item.path;
          _this4.selected = path.split("/").filter(function (t) {
            return !!t;
          });
          _this4.field.model = item;
        }
      });
    }
  },
  created: function created() {
    console.debug("treefinder created to field ".concat(this.field.info.name, ", vm: ").concat(this._uid));
  },
  destroyed: function destroyed() {
    console.debug("treefinder destroyed to field ".concat(this.field.info.name, ", vm: ").concat(this._uid));
  },
  mounted: function mounted() {
    var _this5 = this;

    this.loadOptions().then(function (_) {
      if (_this5.selected.length == 0 && _this5.field.model) {
        var value = _this5.field.model[_this5.field.info.valueCol];

        if (value == undefined || value == null) {
          value = _this5.field.model;
        }

        _this5.setSrvVal(value);
      }
    });
  }
};

/* script */
const __vue_script__$5 = script$5;

/* template */
var __vue_render__$5 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-cascader',{attrs:{"placeholder":"搜索","options":_vm.options,"value":_vm.selected,"props":_vm.props,"change-on-select":"","filterable":"","clearable":"","disabled":!_vm.field.info.editable},on:{"change":function($event){return _vm.onSelectChange()}},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v;},expression:"selected"}})};
var __vue_staticRenderFns__$5 = [];

  /* style */
  const __vue_inject_styles__$5 = undefined;
  /* scoped */
  const __vue_scope_id__$5 = "data-v-64ef9f84";
  /* module identifier */
  const __vue_module_identifier__$5 = undefined;
  /* functional template */
  const __vue_is_functional_template__$5 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var TreeFinder = normalizeComponent_1(
    { render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 },
    __vue_inject_styles__$5,
    __vue_script__$5,
    __vue_scope_id__$5,
    __vue_is_functional_template__$5,
    __vue_module_identifier__$5,
    undefined,
    undefined
  );

var script$6 = {
  name: 'BxInputNumber',
  mixins: [Focus('input')],
  inject: {
    elForm: {
      default: ''
    },
    elFormItem: {
      default: ''
    }
  },
  directives: {
    repeatClick: RepeatClick
  },
  components: {
    ElInput: ElInput
  },
  props: {
    step: {
      type: Number,
      default: 1
    },
    max: {
      type: Number,
      default: Infinity
    },
    min: {
      type: Number,
      default: -Infinity
    },
    value: {},
    disabled: Boolean,
    size: String,
    controls: {
      type: Boolean,
      default: true
    },
    controlsPosition: {
      type: String,
      default: ''
    },
    name: String,
    label: String,
    precision: {
      type: Number,
      validator: function validator(val) {
        return val >= 0 && val === parseInt(val, 10);
      }
    }
  },
  data: function data() {
    return {
      // the raw value bind to input
      currentValue: null
    };
  },
  watch: {
    value: {
      immediate: true,
      handler: function handler(value) {
        var newVal = value === undefined || value === null ? value : Number(value);

        if (newVal !== undefined && value !== null) {
          if (isNaN(newVal)) {
            return;
          }

          if (this.precision !== undefined) {
            newVal = this.toPrecision(newVal, this.precision);
          }
        }

        if (newVal != null && newVal != undefined) {
          if (newVal >= this.max) newVal = this.max;
          if (newVal <= this.min) newVal = this.min;
        }

        this.currentValue = newVal;
        this.$emit('input', newVal);
      }
    }
  },
  computed: {
    minDisabled: function minDisabled() {
      return this._decrease(this.value, this.step) < this.min;
    },
    maxDisabled: function maxDisabled() {
      return this._increase(this.value, this.step) > this.max;
    },
    numPrecision: function numPrecision() {
      var value = this.value,
          step = this.step,
          getPrecision = this.getPrecision,
          precision = this.precision;
      var stepPrecision = getPrecision(step);

      if (precision !== undefined && precision !== null) {
        if (stepPrecision > precision) {
          console.warn('[Element Warn][InputNumber]precision should not be less than the decimal places of step');
        }

        return precision;
      } else {
        return Math.max(getPrecision(value), stepPrecision);
      }
    },
    controlsAtRight: function controlsAtRight() {
      return this.controlsPosition === 'right';
    },
    _elFormItemSize: function _elFormItemSize() {
      return (this.elFormItem || {}).elFormItemSize;
    },
    inputNumberSize: function inputNumberSize() {
      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
    },
    inputNumberDisabled: function inputNumberDisabled() {
      return this.disabled || (this.elForm || {}).disabled;
    },
    currentInputValue: function currentInputValue() {
      var currentValue = this.currentValue;

      if (typeof currentValue === 'number' && this.precision !== undefined && this.precision !== null) {
        return currentValue.toFixed(this.precision);
      } else {
        return currentValue;
      }
    }
  },
  methods: {
    toPrecision: function toPrecision(num, precision) {
      if (precision === undefined || precision === null) precision = this.numPrecision;
      return parseFloat(parseFloat(Number(num).toFixed(precision)));
    },
    getPrecision: function getPrecision(value) {
      if (value === undefined || value == null) return 0;
      var valueString = value.toString();
      var dotPosition = valueString.indexOf('.');
      var precision = 0;

      if (dotPosition !== -1) {
        precision = valueString.length - dotPosition - 1;
      }

      return precision;
    },
    _increase: function _increase(val, step) {
      if (typeof val !== 'number' && val !== undefined && val !== null) return this.currentValue;
      var precisionFactor = Math.pow(10, this.numPrecision); // Solve the accuracy problem of JS decimal calculation by converting the value to integer.

      return this.toPrecision((precisionFactor * val + precisionFactor * step) / precisionFactor);
    },
    _decrease: function _decrease(val, step) {
      if (typeof val !== 'number' && val !== undefined && val !== null) return this.currentValue;
      var precisionFactor = Math.pow(10, this.numPrecision);
      return this.toPrecision((precisionFactor * val - precisionFactor * step) / precisionFactor);
    },
    increase: function increase() {
      if (this.inputNumberDisabled || this.maxDisabled) return;
      var value = this.value || 0;

      var newVal = this._increase(value, this.step);

      this.setCurrentValue(newVal);
    },
    decrease: function decrease() {
      if (this.inputNumberDisabled || this.minDisabled) return;
      var value = this.value || 0;

      var newVal = this._decrease(value, this.step);

      this.setCurrentValue(newVal);
    },
    handleBlur: function handleBlur(event) {
      this.$emit('blur', event);
    },
    handleFocus: function handleFocus(event) {
      this.$emit('focus', event);
    },
    setCurrentValue: function setCurrentValue(newVal) {
      var oldVal = this.currentValue;

      if (typeof newVal === 'number' && this.precision !== undefined && this.precision !== null) {
        newVal = this.toPrecision(newVal, this.precision);
      }

      if (newVal != null && newVal != undefined) {
        if (newVal >= this.max) newVal = this.max;
        if (newVal <= this.min) newVal = this.min;
      }

      if (oldVal === newVal) {
        return;
      }

      this.$emit('input', newVal);
      this.$emit('change', newVal, oldVal);
      this.currentValue = newVal;
    },
    handleInputChange: function handleInputChange(value) {
      var newVal = value === '' ? undefined : Number(value);

      if (isNaN(newVal) && !(newVal === undefined || newVal === null)) {
        // reset to old value
        this.setCurrentValue(this.value);
      } else if (newVal === '' || newVal === undefined || newVal === null) {
        // empty
        this.currentValue = "";
        this.$emit('input', null);
      } else {
        // happy
        this.$emit('input', newVal);
      }

      this.$emit("change", newVal);
    }
  },
  mounted: function mounted() {
    var innerInput = this.$refs.input.$refs.input;
    innerInput.setAttribute('role', 'spinbutton');
    innerInput.setAttribute('aria-valuemax', this.max);
    innerInput.setAttribute('aria-valuemin', this.min);
    innerInput.setAttribute('aria-valuenow', this.currentValue);
    innerInput.setAttribute('aria-disabled', this.inputNumberDisabled);
  },
  updated: function updated() {
    if (!this.$refs || !this.$refs.input) return;
    var innerInput = this.$refs.input.$refs.input;
    innerInput.setAttribute('aria-valuenow', this.currentValue);
  }
};

/* script */
const __vue_script__$6 = script$6;

/* template */
var __vue_render__$6 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:[
    'el-input-number',
    _vm.inputNumberSize ? 'el-input-number--' + _vm.inputNumberSize : '',
    { 'is-disabled': _vm.inputNumberDisabled },
    { 'is-without-controls': !_vm.controls },
    { 'is-controls-right': _vm.controlsAtRight }
  ],on:{"dragstart":function($event){$event.preventDefault();}}},[_c('el-input',{ref:"input",attrs:{"disabled":_vm.inputNumberDisabled,"size":_vm.inputNumberSize,"max":_vm.max,"min":_vm.min,"name":_vm.name,"label":_vm.label,"clearable":""},on:{"blur":_vm.handleBlur,"focus":_vm.handleFocus,"change":_vm.handleInputChange},nativeOn:{"keydown":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"up",38,$event.key,["Up","ArrowUp"])){ return null; }$event.preventDefault();return _vm.increase($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"down",40,$event.key,["Down","ArrowDown"])){ return null; }$event.preventDefault();return _vm.decrease($event)}]},model:{value:(_vm.currentValue),callback:function ($$v) {_vm.currentValue=$$v;},expression:"currentValue"}})],1)};
var __vue_staticRenderFns__$6 = [];

  /* style */
  const __vue_inject_styles__$6 = undefined;
  /* scoped */
  const __vue_scope_id__$6 = undefined;
  /* module identifier */
  const __vue_module_identifier__$6 = undefined;
  /* functional template */
  const __vue_is_functional_template__$6 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var BxInputNumber = normalizeComponent_1(
    { render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 },
    __vue_inject_styles__$6,
    __vue_script__$6,
    __vue_scope_id__$6,
    __vue_is_functional_template__$6,
    __vue_module_identifier__$6,
    undefined,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$7 = {
  components: {},
  props: {
    field: Object,
    defaultConditions: Array
  },
  data: function data() {
    return {
      selected: null,
      options: []
    };
  },
  methods: {
    onValueChange: function onValueChange() {
      this.field.model = this.selected;
      this.$emit('field-value-changed', this.field.info.name, this.field);
    },
    loadOptions: function loadOptions(queryString) {
      var _this = this;

      var fieldInfo = this.field.info;
      var loader = fieldInfo.dispLoader;

      if (!loader) {
        return Promise.resolve(false);
      }

      if (loader.enableFunc) {
        if (!loader.enableFunc()) {
          return;
        }
      }

      var dispCol = fieldInfo.dispCol;
      queryString = queryString.trim();
      var queryJson = {
        serviceName: loader.service,
        queryMethod: 'select',
        colNames: ['*'],
        condition: [{
          colName: dispCol,
          value: queryString,
          ruleType: 'like'
        }],
        page: {
          pageNo: 1,
          rownumber: 20
        }
      };
      return this.selectList(queryJson).then(function (response) {
        if (response && response.data && response.data.data) {
          _this.options = response.data.data.map(function (item) {
            return {
              value: "".concat(item.type, "&&").concat(item.value, "&&").concat(item.disp),
              label: item.disp
            };
          });
        }
      });
    },
    getSrvVal: function getSrvVal() {
      if (!this.selected) {
        return null;
      }

      var items = this.selected.map(function (item) {
        var parts = item.split("&&");
        return {
          type: parts[0],
          value: parts[1],
          disp: parts[2]
        };
      });
      return JSON.stringify(items);
    },
    setSrvVal: function setSrvVal(srvVal) {
      var _this2 = this;

      if (srvVal == null || srvVal == undefined) {
        this.selected = null;
        return;
      }

      this.loadOptions("").then(function (_) {
        var arr = JSON.parse(srvVal);
        _this2.selected = arr.map(function (item) {
          return "".concat(item.type, "&&").concat(item.value, "&&").concat(item.disp);
        });
      });
    }
  },
  created: function created() {
    if (this.field.model) {
      this.setSrvVal(this.field.model);
    }
  }
};

/* script */
const __vue_script__$7 = script$7;

/* template */
var __vue_render__$7 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-select',{staticStyle:{"min-width":"100%"},attrs:{"clearable":"","multiple":"","filterable":"","remote":"","placeholder":"请选择","remote-method":_vm.loadOptions,"disabled":!_vm.field.info.editable},on:{"change":_vm.onValueChange},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v;},expression:"selected"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1)],1)};
var __vue_staticRenderFns__$7 = [];

  /* style */
  const __vue_inject_styles__$7 = undefined;
  /* scoped */
  const __vue_scope_id__$7 = undefined;
  /* module identifier */
  const __vue_module_identifier__$7 = undefined;
  /* functional template */
  const __vue_is_functional_template__$7 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Userlist = normalizeComponent_1(
    { render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 },
    __vue_inject_styles__$7,
    __vue_script__$7,
    __vue_scope_id__$7,
    __vue_is_functional_template__$7,
    __vue_module_identifier__$7,
    undefined,
    undefined
  );

//
//
//
//
var script$8 = {
  name: "barcode",
  props: {
    field: {
      type: Object
    },
    codeType: {
      type: String,
      default: "qrcode"
    }
  },
  computed: {
    imgUrl: function imgUrl() {
      var addr = this.serviceApi().qrcode;
      var content = encodeURIComponent(this.field.getSrvVal());
      return "".concat(addr, "?content=").concat(content);
    }
  }
};

/* script */
const __vue_script__$8 = script$8;

/* template */
var __vue_render__$8 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('img',{attrs:{"src":_vm.imgUrl,"alt":"qrcode not available"}})};
var __vue_staticRenderFns__$8 = [];

  /* style */
  const __vue_inject_styles__$8 = undefined;
  /* scoped */
  const __vue_scope_id__$8 = "data-v-6a9470d2";
  /* module identifier */
  const __vue_module_identifier__$8 = undefined;
  /* functional template */
  const __vue_is_functional_template__$8 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var QrCode = normalizeComponent_1(
    { render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 },
    __vue_inject_styles__$8,
    __vue_script__$8,
    __vue_scope_id__$8,
    __vue_is_functional_template__$8,
    __vue_module_identifier__$8,
    undefined,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
var script$9 = {
  name: "CodeEditor",
  components: {
    editor: function editor() {
      return Promise.resolve(require('vue2-ace-editor'));
    }
  },
  props: {
    field: {
      type: Object,
      default: null
    },
    width: {
      type: String,
      default: "100%"
    },
    height: {
      type: Number,
      default: 130
    },
    lang: {
      type: String
    }
  },
  data: function data() {
    return {
      options: {
        enableBasicAutocompletion: true,
        enableSnippets: true,
        enableLiveAutocompletion: true,
        fontFamily: "consolas",
        fontSize: "15pt"
      }
    };
  },
  methods: {
    supportAutoFormat: function supportAutoFormat() {
      return this.lang === "json";
    },
    formatCode: function formatCode() {
      var editor = this.$refs.ace.editor;
      var val = editor.session.getValue();

      if (this.lang === "json") {
        var o = JSON.parse(val);
        return JSON.stringify(o, null, '\t');
      } else {
        throw "not supported";
      }
    },
    editorInit: function editorInit(editor) {
      var language_tools = Promise.resolve(require('brace/ext/language_tools'));
      var html = Promise.resolve(require('brace/mode/html'));
      var javascript = Promise.resolve(require('brace/mode/javascript'));
      var json = Promise.resolve(require('brace/mode/json'));
      var mysql = Promise.resolve(require('brace/mode/mysql'));
      var chrome = Promise.resolve(require('brace/theme/chrome')); // add command to auto format code

      var vm = this;
      editor.commands.addCommand({
        name: "prettify",
        bindKey: {
          win: "Ctrl-Alt-l",
          mac: "Command-Alt-l"
        },
        exec: function exec(editor) {
          try {
            if (vm.supportAutoFormat()) {
              editor.session.setValue(vm.formatCode());
            }
          } catch (e) {
            console.error('something wrong with your code');
          }
        }
      }); // TODO: if need editable be reactive watch the evalEditable and sync

      editor.setReadOnly(!this.field.evalEditable()); // automatic adjust height when ace content changed

      var ace = this.$refs.ace;
      var initHeight = this.height;

      var heightUpdateFunction = function heightUpdateFunction() {
        var newHeight = editor.getSession().getScreenLength() * editor.renderer.lineHeight + editor.renderer.scrollBar.getWidth();
        newHeight = Math.min(Math.max(newHeight, initHeight), 500);
        ace.$el.style.height = newHeight.toString() + "px"; // This call is required for the editor to fix all of
        // its inner structure for adapting to a change in size

        editor.resize();
      }; // Set initial size to match initial content


      heightUpdateFunction(); // Whenever a change happens inside the ACE editor, update
      // the size again

      editor.getSession().on('change', heightUpdateFunction);
    }
  },
  created: function created() {
    this.field.model = this.field.model || "";
  },
  mounted: function mounted() {}
};

/* script */
const __vue_script__$9 = script$9;

/* template */
var __vue_render__$9 = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('editor',{ref:"ace",attrs:{"theme":"chrome","lang":_vm.lang,"width":_vm.width,"height":_vm.height,"options":_vm.options},on:{"init":_vm.editorInit},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}})],1)};
var __vue_staticRenderFns__$9 = [];

  /* style */
  const __vue_inject_styles__$9 = undefined;
  /* scoped */
  const __vue_scope_id__$9 = undefined;
  /* module identifier */
  const __vue_module_identifier__$9 = undefined;
  /* functional template */
  const __vue_is_functional_template__$9 = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var CodeEditor = normalizeComponent_1(
    { render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 },
    __vue_inject_styles__$9,
    __vue_script__$9,
    __vue_scope_id__$9,
    __vue_is_functional_template__$9,
    __vue_module_identifier__$9,
    undefined,
    undefined
  );

//
//
//
//
//
//
//
//
//
var script$a = {
  components: {},
  props: {
    field: Object
  },
  computed: {
    getOptions: function getOptions() {
      return this.field.info.srvCol.option_list_v2.options;
    }
  },
  data: function data() {
    return {};
  },
  methods: {},
  created: function created() {},
  mounted: function mounted() {}
};

/* script */
const __vue_script__$a = script$a;

/* template */
var __vue_render__$a = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-radio-group',{model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}},_vm._l((_vm.getOptions),function(option,index){return _c('el-radio',{key:option.value,attrs:{"label":option.value}},[_vm._v("\n    "+_vm._s(option.label)+"\n  ")])}),1)};
var __vue_staticRenderFns__$a = [];

  /* style */
  const __vue_inject_styles__$a = undefined;
  /* scoped */
  const __vue_scope_id__$a = undefined;
  /* module identifier */
  const __vue_module_identifier__$a = undefined;
  /* functional template */
  const __vue_is_functional_template__$a = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Radio = normalizeComponent_1(
    { render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a },
    __vue_inject_styles__$a,
    __vue_script__$a,
    __vue_scope_id__$a,
    __vue_is_functional_template__$a,
    __vue_module_identifier__$a,
    undefined,
    undefined
  );

var isArray$1 = isArray;

function _arrayWithoutHoles(arr) {
  if (isArray$1(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

var from_1 = from;

var isIterable$1 = isIterable;

function _iterableToArray(iter) {
  if (isIterable$1(Object(iter)) || Object.prototype.toString.call(iter) === "[object Arguments]") return from_1(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

//
//
//
//
//
//
//
//
//
var script$b = {
  components: {},
  props: {
    field: Object
  },
  computed: {
    getOptions: function getOptions() {
      return this.field.info.srvCol.option_list_v2.options;
    }
  },
  data: function data() {
    return {
      selected: []
    };
  },
  watch: {
    selected: function selected() {
      this.field.model = (this.selected || []).join(",");
    }
  },
  methods: {
    setSrvVal: function setSrvVal(srvVal) {
      this.field.model = srvVal;
      !!srvVal && (this.selected = _toConsumableArray(srvVal.split(",")));
    }
  },
  created: function created() {},
  mounted: function mounted() {}
};

/* script */
const __vue_script__$b = script$b;

/* template */
var __vue_render__$b = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-checkbox-group',{model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v;},expression:"selected"}},_vm._l((_vm.getOptions),function(option,index){return _c('el-checkbox',{key:option.value,attrs:{"label":option.value}},[_vm._v("\n    "+_vm._s(option.label)+"\n  ")])}),1)};
var __vue_staticRenderFns__$b = [];

  /* style */
  const __vue_inject_styles__$b = undefined;
  /* scoped */
  const __vue_scope_id__$b = undefined;
  /* module identifier */
  const __vue_module_identifier__$b = undefined;
  /* functional template */
  const __vue_is_functional_template__$b = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Checkbox = normalizeComponent_1(
    { render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b },
    __vue_inject_styles__$b,
    __vue_script__$b,
    __vue_scope_id__$b,
    __vue_is_functional_template__$b,
    __vue_module_identifier__$b,
    undefined,
    undefined
  );

var script$c = {
  components: {
    Checkbox: Checkbox,
    Radio: Radio,
    CodeEditor: CodeEditor,
    Userlist: Userlist,
    BxInputNumber: BxInputNumber,
    TreeFinder: TreeFinder,
    UploadImage: UploadImage,
    UploadFile: UploadFile,
    InputRange: InputRange,
    Finder: Finder,
    'ueditor': UEditor,
    QrCode: QrCode
  },
  props: {
    field: Object
  },
  data: function data() {
    return {
      key: null
    };
  },
  computed: {
    getDisabled: function getDisabled() {
      return !this.field.evalEditable();
    }
  },
  created: function created() {
    this.field.editor = this;
    console.debug("field ".concat(this.field.info.name, ", editor uid: ").concat(this._uid));
  },
  mounted: function mounted() {},
  methods: {
    onBlur: function onBlur() {
      console.info("field editor blur");
      this.$emit('blur', this.field);
      this.field.form && this.field.form.handleValidation(this.field.info.name);
    },

    /**
     * 是否使用控件而非简单html snippet
     * @returns {boolean}
     */
    ifUseRawFieldEditor: function ifUseRawFieldEditor() {
      var readonlySupportEditors = new Set(['upload-file', 'upload-image', 'ueditor', 'qrcode']);
      var editorSupportReadonly = readonlySupportEditors.has(this.field.info.editor);

      if (this.field.info.readonly) {
        return editorSupportReadonly;
      } else {
        if (this.field.info.editable) {
          return true;
        } else {
          // editable = false
          var hasNoLinkUrlFunc = !this.field.info.linkUrlFunc;
          var readonlyUnsupportEditors = new Set(['input-number']);

          var _editorSupportReadonly = !readonlyUnsupportEditors.has(this.field.info.editor);

          return hasNoLinkUrlFunc && _editorSupportReadonly;
        }
      }
    },
    getLinkUrl: function getLinkUrl() {
      var data = this.field && this.field.form && this.field.form.srvValFormModel();

      if (this.field.info.linkUrlFunc) {
        var url = this.field.info.linkUrlFunc(data, this);
        return url;
      }
    },
    onLinkClicked: function onLinkClicked() {
      var tabTitle = this.field.info.srvCol && this.field.info.srvCol.option_list_v2 && this.field.info.srvCol.option_list_v2.service_label || "详情";
      this.addTabByUrl(this.getLinkUrl(), tabTitle);
    },
    setSrvVal: function setSrvVal(srvVal) {
      if (this.isSpecial()) {
        this.$refs.editor.setSrvVal(srvVal);
      }
    },
    getSrvVal: function getSrvVal() {
      if (this.isSpecial()) {
        return this.$refs.editor.getSrvVal();
      }
    },
    isSpecial: function isSpecial() {
      return this.$refs.editor && !!this.$refs.editor.setSrvVal;
    }
  }
};

/* script */
const __vue_script__$c = script$c;

/* template */
var __vue_render__$c = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"raw_field_editor",on:{"blur":_vm.onBlur}},[_c('el-row',[_c('el-col',{attrs:{"span":_vm.field.hasHistoryData() ? 22 : 24}},[[(_vm.ifUseRawFieldEditor())?_c('div',[(_vm.field.info.editor === 'input-number' )?_c('bx-input-number',{attrs:{"controls-position":"right","disabled":_vm.getDisabled,"min":_vm.field.info.getMin(),"max":_vm.field.info.getMax(),"label":"描述文字"},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"blur":_vm.onBlur},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'textarea')?_c('el-input',{attrs:{"type":"textarea","rows":3,"placeholder":_vm.field.info.placeholder,"disabled":_vm.getDisabled,"show-word-limit":"","maxlength":_vm.field.info.getMaxLength()},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"blur":_vm.onBlur},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'switch')?_c('el-switch',{attrs:{"active-color":"#13ce66","inactive-color":"#777777"},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'select')?_c('el-select',{attrs:{"placeholder":_vm.field.info.placeholder,"clearable":"","disabled":_vm.getDisabled},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"blur":_vm.onBlur},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}},_vm._l((_vm.field.optionsFunc()),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1):(_vm.field.info.editor === 'finder')?_c('finder',{ref:"editor",attrs:{"field":_vm.field,"$srv-app":_vm.field.info.srvCol.option_list_v2 && _vm.field.info.srvCol.option_list_v2.srv_app},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"blur":_vm.onBlur}}):(_vm.field.info.editor === 'userlist')?_c('userlist',{ref:"editor",attrs:{"field":_vm.field},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}}}):(_vm.field.info.editor === 'ueditor')?_c('ueditor',{ref:"editor",attrs:{"field":_vm.field},on:{"field-changed":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}}}):(_vm.field.info.editor === 'date-picker')?_c('el-date-picker',{attrs:{"type":_vm.field.info.subtype,"clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'date-time-picker')?_c('el-date-picker',{attrs:{"type":"datetime","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'time-picker')?_c('el-time-picker',{attrs:{"picker-options":{format : 'HH:mm'},"value-format":"HH:mm","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'multiselect')?_c('el-select',{attrs:{"multiple":"","collapse-tags":"","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}},_vm._l((_vm.field.optionsFunc()),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1):(_vm.field.info.editor === 'date-range')?_c('el-date-picker',{attrs:{"type":"daterange","range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'time-range')?_c('el-time-picker',{attrs:{"is-range":"","picker-options":{format : 'HH:mm'},"value-format":"HH:mm","range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'date-time-range')?_c('el-date-picker',{attrs:{"type":"datetimerange","range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间","clearable":"","disabled":_vm.getDisabled,"placeholder":_vm.field.info.placeholder},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}}):(_vm.field.info.editor === 'input-range')?_c('input-range',{attrs:{"field":_vm.field},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}}}):(_vm.field.info.editor === 'upload-file')?_c('upload-file',{ref:"editor",attrs:{"field":_vm.field}}):(_vm.field.info.editor === 'upload-image')?_c('upload-image',{ref:"editor",attrs:{"field":_vm.field}}):(_vm.field.info.editor === 'tree-finder')?_c('tree-finder',{ref:"editor",attrs:{"field":_vm.field,"$srv-app":_vm.field.info.srvCol.option_list_v2.srv_app},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)}}}):(_vm.field.info.editor === 'qrcode')?_c('qr-code',{ref:"editor",attrs:{"field":_vm.field}}):(_vm.field.info.editor === 'code-editor')?_c('code-editor',{ref:"editor",attrs:{"field":_vm.field,"lang":_vm.field.info.lang}}):(_vm.field.info.editor === 'radio')?_c('radio',{ref:"editor",attrs:{"field":_vm.field}}):(_vm.field.info.editor === 'checkbox')?_c('checkbox',{ref:"editor",attrs:{"field":_vm.field}}):_c('el-input',{attrs:{"placeholder":_vm.field.info.placeholder,"disabled":_vm.getDisabled,"clearable":"","show-word-limit":"","maxlength":_vm.field.info.getMaxLength()},on:{"change":function($event){return _vm.$emit('field-value-changed', _vm.field.info.name, _vm.field)},"blur":_vm.onBlur},model:{value:(_vm.field.model),callback:function ($$v) {_vm.$set(_vm.field, "model", $$v);},expression:"field.model"}})],1):(_vm.field.info.editor == 'textarea')?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.info.bodyVisible),expression:"field.info.bodyVisible"}],staticStyle:{"border-radius":"4px","border":"1px solid #dcdfe6","overflow":"auto","white-space":"pre"}},[_vm._v(_vm._s(_vm.field.getDispVal())+"\n        ")]):[(_vm.field.info.linkUrlFunc)?_c('a',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.getSrvVal()),expression:"field.getSrvVal()"}],staticStyle:{"white-space":"normal","color":"dodgerblue","cursor":"pointer"},on:{"click":function($event){return _vm.onLinkClicked()}}},[_vm._v("\n            "+_vm._s(_vm.field.getDispVal4Read())+"\n          ")]):_c('el-input',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.info.bodyVisible),expression:"field.info.bodyVisible"}],attrs:{"readonly":"","value":_vm.field.getDispVal4Read()}})]]],2),_vm._v(" "),_c('el-col',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.hasHistoryData()),expression:"field.hasHistoryData()"}],attrs:{"span":2}},[_c('div',[_c('el-button',{attrs:{"icon":"el-icon-notebook-2"},on:{"click":function($event){return _vm.$emit('field-history-popup', _vm.field)}}})],1)])],1),_vm._v(" "),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.hasValidateError()),expression:"field.hasValidateError()"}],staticClass:"el-form-item__error"},[_vm._v("\n    "+_vm._s(_vm.field.getAnyValidateError())+"\n  ")])],1)};
var __vue_staticRenderFns__$c = [];

  /* style */
  const __vue_inject_styles__$c = function (inject) {
    if (!inject) return
    inject("data-v-34579750_0", { source: ".raw_field_editor[data-v-34579750]{position:relative}.el-button[data-v-34579750]{padding-left:8px;padding-right:8px;border-width:0}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$c = "data-v-34579750";
  /* module identifier */
  const __vue_module_identifier__$c = undefined;
  /* functional template */
  const __vue_is_functional_template__$c = false;
  /* style inject SSR */
  

  
  var RawFieldEditor = normalizeComponent_1(
    { render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c },
    __vue_inject_styles__$c,
    __vue_script__$c,
    __vue_scope_id__$c,
    __vue_is_functional_template__$c,
    __vue_module_identifier__$c,
    browser,
    undefined
  );

var script$d = {
  name: "field-editor",
  components: {
    RawFieldEditor: RawFieldEditor
  },
  props: {
    /**
     * 主字段，提供label、colspan等
     * */
    field: {
      type: Object,
      default: null
    },

    /**
     * 内容字段集合，包含主字段和其他字段
     * */
    contentFields: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    formHasInvalidError: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {};
  },
  computed: {
    fixHeight: function fixHeight() {
      var editor = this.field.info.editor;
      var flexEditors = new Set(['upload-file', 'upload-image', 'ueditor', 'qrcode', 'textarea', 'userlist', 'code-editor']);
      return !flexEditors.has(editor);
    }
  },
  methods: {
    getInnerFieldColspan: function getInnerFieldColspan(contentField) {
      if (this.contentFields.length === 1) {
        return 24;
      }

      var colSpan2 = contentField.info.srvCol.col_span2;

      if (!colSpan2) {
        console.warn(contentField.info.name + " colspan2 not set!!!");
        colSpan2 = contentField.info.srvCol.col_span;
      }

      var inner = Number.parseFloat(colSpan2);
      return _.toInteger(inner * 24);
    }
  }
};

/* script */
const __vue_script__$d = script$d;

/* template */
var __vue_render__$d = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.field.evalXIf())?_c('el-col',{directives:[{name:"show",rawName:"v-show",value:(_vm.field.evalVisible()),expression:"field.evalVisible()"}],attrs:{"xs":_vm.field.info.colspan.xs,"sm":_vm.field.info.colspan.sm,"md":_vm.field.info.colspan.md,"lg":_vm.field.info.colspan.lg,"xl":_vm.field.info.colspan.xl}},[_c('el-form-item',{key:_vm.field.info.name,class:{ fix_height_form_item: _vm.fixHeight, invalid_form_item : _vm.formHasInvalidError },attrs:{"prop":_vm.field.info.name},scopedSlots:_vm._u([{key:"label",fn:function(){return [_c('label',{staticClass:"el-form-item__label",class:{ required: _vm.field.info.isRequired() },staticStyle:{"width":"10rem","text-overflow":"ellipsis"},attrs:{"for":_vm.field.info.name}},[_vm._v("\n        "+_vm._s(_vm.field.info.label)+"\n      ")])]},proxy:true}],null,false,3795412601)},[_vm._v(" "),_c('el-row',_vm._l((this.contentFields),function(contentField){return _c('el-col',{key:contentField.info.name,attrs:{"span":_vm.getInnerFieldColspan(contentField)}},[_c('raw-field-editor',{directives:[{name:"show",rawName:"v-show",value:(contentField.info.bodyVisible),expression:"contentField.info.bodyVisible"}],ref:"inner",refInFor:true,attrs:{"field":contentField},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', $event)},"field-history-popup":function($event){return _vm.$emit('field-history-popup', $event)}}})],1)}),1)],1)],1):_vm._e()};
var __vue_staticRenderFns__$d = [];

  /* style */
  const __vue_inject_styles__$d = function (inject) {
    if (!inject) return
    inject("data-v-aa9325fe_0", { source: "label.required[data-v-aa9325fe]:before{content:\"*\";color:#f56c6c;margin-right:4px}div.el-form-item[data-v-aa9325fe]{margin-bottom:4px}div.invalid_form_item[data-v-aa9325fe]{margin-bottom:23px!important}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$d = "data-v-aa9325fe";
  /* module identifier */
  const __vue_module_identifier__$d = undefined;
  /* functional template */
  const __vue_is_functional_template__$d = false;
  /* style inject SSR */
  

  
  var FieldEditor = normalizeComponent_1(
    { render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d },
    __vue_inject_styles__$d,
    __vue_script__$d,
    __vue_scope_id__$d,
    __vue_is_functional_template__$d,
    __vue_module_identifier__$d,
    browser,
    undefined
  );

var ActionInfo = function ActionInfo() {
  _classCallCheck(this, ActionInfo);

  this.name = "xx";
  this.label = "xx";
  this.seq = 0;
  this.visible = "true";
  this.delay = 0;
  this.disableExpr = "false";
  this.formSubmit = false;
  this.skipPermission = false;
  this.permissionService = "unknown";
  this.confirm = null; // if null, use resultMessage from backend

  this.completeTip = null;
  this.loading = true; // action 完成后跳转的 router Location 对象

  this.nav2Location = null; // 主要组成

  this.precheckFunc = null;
  this.customPrecheckFunc = null;
  this.executor = null;
  this.invokeFunc = null;
  var self = this;

  this.visibleFunc = function () {
    if (_$1.isString(self.visible)) {
      try {
        return eval(self.visible);
      } catch (e) {
        return true;
      }
    } else {
      return !!self.visible;
    }
  };
};

var FormMixin = {
  created: function created() {
    window.forms = window.forms || {};
    window.forms[this.name] = this;
  },
  props: {
    name: {
      type: String,
      default: "main"
    },
    service: {
      type: String
    },
    // for update/detail/add, it is loader's condition
    // for filter, it is default condition
    defaultConditions: {
      type: Array
    },
    // for update/add, it is form fields default value
    defaultValues: {
      type: Object
    },
    navAfterSubmit: {
      type: Boolean,
      default: true
    },
    submit2Db: {
      type: Boolean,
      default: true
    },
    overrideData: {
      type: Object
    },
    overrideformType: {
      type: String
    },
    srvvalFormModelDecorator: {
      type: Function
    }
  },
  data: function data() {
    return {
      isMarker: true,
      // the visible fields
      fields: {},
      allFields: {},
      actions: {},
      // validators involved multiple fields,
      formValidators: [],
      mainTable: null,
      srvCols: null,
      formLoaded: false,
      visible: true,
      fieldHisotryPopup: false,
      fieldWithHistory: null
    };
  },
  computed: {
    loaderService: function loaderService() {
      if (this.mainTable) {
        var loaderService = this.mainTable.replace('bx', 'srv') + "_select";
        return loaderService;
      } else {
        return null;
      }
    },
    sortedFields: function sortedFields() {
      return this.sortFields(this.fields);
    },
    sortedAllFields: function sortedAllFields() {
      return this.sortFields(this.allFields);
    },
    sections: function sections() {
      var sections = {};
      var fields = null;
      var section = null;

      for (var key in this.sortedAllFields) {
        var field = this.sortedAllFields[key];

        if (field.info && field.info.sec && field.info.sec !== section) {
          // close last section,
          if (fields) {
            sections[section || "$"] = fields;
          } // start a new one


          section = field.info.sec;
          fields = [];
        } // add to curr section if field.vif = true


        fields = fields || [];
        field.vif && fields.push(field);
      }

      if (fields) {
        sections[section || "$"] = fields;
      } // hide section whose fields are all invisible


      var hideSections = new Set();

      for (var _key in sections) {
        var sectionFields = sections[_key];
        var visibleFields = sectionFields.filter(function (field) {
          return field && field.evalVisible();
        });

        if (visibleFields.length == 0) {
          hideSections.add(_key);
        }
      }

      hideSections.forEach(function (key) {
        return delete sections[key];
      }); // 把 field 组织成: majorField 和 contentFields， 服务一个form-item 包含多个fields

      var sectionsOfFormItems = {};

      var _loop = function _loop(_key2) {
        var fieldsInSection = sections[_key2];

        var isGroupedField = function isGroupedField(field) {
          return field.info.srvCol.group_field;
        };

        var groupedFields = fieldsInSection.filter(isGroupedField);

        _.remove(fieldsInSection, isGroupedField);

        var formItems = fieldsInSection.map(function (majorField) {
          var contentFields = [majorField].concat(groupedFields.filter(function (groupedField) {
            return groupedField.info.srvCol.group_field === majorField.info.name;
          }));
          return {
            field: majorField,
            contentFields: contentFields
          };
        });
        sectionsOfFormItems[_key2] = formItems;
      };

      for (var _key2 in sections) {
        _loop(_key2);
      }

      return sectionsOfFormItems;
    },
    formModel: function formModel() {
      var model = {};

      for (var key in this.fields) {
        model[key] = this.fields[key].model;
      }

      return model;
    }
  },
  methods: {
    onFieldHistoryPopup: function onFieldHistoryPopup(field) {
      console.debug("onFieldHistoryPopup field: " + field.info.name);
      this.fieldHisotryPopup = true;
      this.fieldWithHistory = field;
    },
    evalVisible: function evalVisible() {
      return this.evalVersatileFlagVar(this.visible);
    },
    formatSection: function formatSection(section) {
      return section && _.isString(section) && section.startsWith('$') ? "" : section;
    },
    srvValFormModel: function srvValFormModel() {
      var model = {};

      for (var key in this.fields) {
        model[key] = this.fields[key].getSrvVal();
      }

      if (this.srvvalFormModelDecorator) {
        var decorator = this.srvvalFormModelDecorator;
        decorator(model);
      }

      return model;
    },
    isLoaded: function isLoaded() {
      return this.formLoaded;
    },

    /**
     * 3 sources of conditions, order from priority high to low
     * query string, props.defaultConditions, pk/pkcol,
     * @returns {{colName: (default.props.pkCol|{type}|string), ruleType: string, valueFunc: (function(*): (default.props.pk|{type}|*))}}
     */
    buildConditions: function buildConditions() {
      var operateParams = this.getOperateParams();

      if (operateParams) {
        var params = JSON.parse(operateParams);

        if (params.condition && params.condition.length > 0) {
          return this.literalConditions2Conditions(params.condition);
        }
      }

      if (this.defaultConditions && this.defaultConditions.length > 0) {
        return this.literalConditions2Conditions(this.defaultConditions);
      } else if (this.pk) {
        var form = this;
        var onlyCondition = {
          colName: this.pkCol || 'id',
          ruleType: 'eq',
          required: true,
          valueFunc: function valueFunc(_) {
            return form.pk || form.$route.params.id;
          }
        };
        return [onlyCondition];
      } else {
        return null;
      }
    },
    literalConditions2Conditions: function literalConditions2Conditions(literalConditions) {
      var conditions = literalConditions.map(function (a) {
        return Object.assign({}, a);
      });

      for (var i in conditions) {
        conditions[i].valueExpr = "'".concat(conditions[i].value, "'");
      }

      return conditions;
    },

    /**
     * default values from 2 sources: querystr, props.defaultValues
     * use url params to change metadata
     */
    setFieldsDefaultValue: function setFieldsDefaultValue() {
      if (this.isTopComp() && this.getOperateParams()) {
        var params = JSON.parse(this.getOperateParams());

        if (params.data && params.data.length > 0) {
          var row = params.data[0];

          for (var key in row) {
            var field = this.fields[key];

            if (field) {
              field.setSrvVal(row[key]);
            }
          }
        }
      } else if (this.defaultValues) {
        var _row = this.defaultValues;

        for (var _key3 in _row) {
          var _field = this.fields[_key3];

          if (_field) {
            _field.setSrvVal(_row[_key3]);
          }
        }
      }
    },
    sortFields: function sortFields(fields) {
      var fieldList = [];

      for (var key in fields) {
        fieldList.push(fields[key]);
      }

      fieldList.sort(function (a, b) {
        return a.info.seq - b.info.seq;
      });
      return fieldList;
    },

    /**
     * 从后端获取service cols，转换为fields;
     * filter 为字段过滤器， 类型为(srvCol) => boolean
     */
    createFields: function createFields(filter, srvCols) {
      var _this = this;

      var srvColsProvided = !!srvCols;
      var useType = this.overrideformType == undefined ? this.formType : this.overrideformType;
      var srvColsP = srvCols ? Promise.resolve({
        body: {
          data: {
            srv_cols: srvCols
          }
        }
      }) : this.loadColsV2(this.service_name, useType);
      return srvColsP.then(function (response) {
        var data = response.body.data;
        _this.mainTable = data.main_table;

        if (!srvColsProvided && !_this.mainTable) {
          console.error("response missing main table");
        } else {
          console.info("main table is " + _this.mainTable);
        }

        var listData = data.srv_cols;
        _this.srvCols = listData;

        for (var i = 0; i < listData.length; i++) {
          var srvCol = listData[i];
          var fi = new FieldInfo(srvCol, _this.formType);
          var f = new Field(fi, _this);
          f.vif = !(filter && !filter(srvCol)); // hack

          if (fi.name == "id") {
            fi.visible = false;
          }

          if (fi.editor == 'multiselect') {
            f.model = [];
          }

          Vue.set(_this.allFields, fi.name, f);
          f.vif && Vue.set(_this.fields, fi.name, f);
        }

        if (data.validators) {
          for (var _i in data.validators) {
            _this.formValidators.push({
              name: "validator-".concat(_i),
              js: data.validators[_i].in_table_validate
            });
          }
        }

        if (_this.buildDependentFields) {
          _this.buildDependentFields(_this.fields);
        }

        return response.body;
      });
    },
    createActions: function createActions(formButtons) {
      var _this2 = this;

      var form = this;

      var _loop2 = function _loop2(i) {
        var button = formButtons[i];

        if (!button.permission) {
          return "continue";
        }

        var actionInfo = null;
        var buttonType = button.button_type;

        if (buttonType == "submit" && _this2.addSubmitAction) {
          actionInfo = _this2.addSubmitAction();
        } else if (buttonType == "reset" && _this2.addResetAction) {
          actionInfo = _this2.addResetAction();
        } else if (buttonType == "edit") {
          if (_this2.formType == "detail") {
            actionInfo = _this2.addNav2UpdateAction(button);
          } else if (_this2.formType === "update") {
            actionInfo = _this2.addSubmitAction();
          }
        } else if (buttonType == "customize") {
          var customAction = new ActionInfo();
          actionInfo = customAction;
          var actionName = "custom-" + button.button_name;
          Vue.set(_this2.actions, actionName, customAction);
          var _form = _this2;
          customAction.name = actionName;

          customAction.invokeFunc = function (_) {
            _form.customizeOperate(button, [_this2.srvValFormModel()]);
          };
        } else {
          console.error("unsupported button type: " + buttonType);
        } // common handle for  button attribute override


        if (button.action_validate) {
          console.debug("install precheck func");

          actionInfo.customPrecheckFunc = function () {
            return _this2.evalActionValidator(button.action_validate, form.srvValFormModel());
          };
        }

        if (button.disp_exps) {
          actionInfo.visibleFunc = function () {
            return _this2.evalBxExpr(button.disp_exps, form.srvValFormModel());
          };
        }

        if (button.visible === "否") {
          actionInfo.visibleFunc = function () {
            return false;
          };
        }

        actionInfo.seq = button.seq;
        actionInfo.label = button.button_name;

        if (actionInfo.executor) {
          actionInfo.executor.service = button.service_name;
        }
      };

      for (var i in formButtons) {
        var _ret = _loop2(i);

        if (_ret === "continue") continue;
      }
    },

    /**
     * 把表单字段绑定到executor.values
     */
    bindExecutorValues: function bindExecutorValues(executor) {
      var _this3 = this;

      // bind executor and field
      executor.service = this.service_name;
      var form = this;

      var _loop3 = function _loop3(i) {
        var valueItem = {};
        var field = _this3.fields[i];
        valueItem.colName = field.info.name;

        valueItem.valueFunc = function (_) {
          return form.fields[field.info.name].getSrvVal();
        }; // auto_gen field is not addable or updatable


        if (field.info && field.info.srvCol && field.info.srvCol.auto_generate) {
          valueItem.enableFunc = function (_) {
            return false;
          };
        }

        executor.values.push(valueItem);
      };

      for (var i in this.fields) {
        _loop3(i);
      }
    },
    onFieldValueChanged: function onFieldValueChanged(fieldName) {
      console.debug("field change event: value:" + this.fields[fieldName].model);
      this.handleValidation(fieldName);

      if (this.formLoaded) {
        // 处理下游游字段变化 field a -> b,  when a is null, and b is changed, set a
        var field = this.fields[fieldName];

        if (field.info.upstream) {
          var upstreamField = this.fields[field.info.upstream.field];

          if (!upstreamField.model) {
            var refCol = field.info.upstream.refCol;

            if (field.model && field.model[refCol]) {
              upstreamField.setSrvVal(field.model[refCol]);
            }
          }
        }

        this.handleFieldFkRedundant(field, this.fields);
      }
    },

    /**
     * 把 loader的返回结果填充到fields
     */
    onLoaderComplete: function onLoaderComplete(_ref) {
      var _this4 = this;

      var data = _ref.data,
          resp = _ref.resp;
      var listmap = data;

      if (!listmap || !listmap[0]) {
        this.$emit("form-load-nodata");
        console.warn("select returns no data");
        return;
      }

      var map = listmap[0];

      for (var key in map) {
        if (this.fields[key]) {
          this.fields[key].setSrvVal(map[key]);
        }
      } // 把历史数据放到 field


      if (resp.data.his_data && resp.data.his_data.length > 0) {
        var historyOfRow = resp.data.his_data[0];
        Object.values(this.fields).forEach(function (field) {
          var hisOfField = historyOfRow.filter(function (ver) {
            if (field.info.name === 'biz_path') ;

            var firstRow = historyOfRow.indexOf(ver) == 0;

            var changed = _.includes(ver._diff_cols, field.info.name);

            return firstRow || changed;
          }).map(function (ver) {
            var value = ver[field.info.name];

            if (field.info.isTemporal()) {
              value = formatDate(value, field.info.type.toLowerCase());
            }

            return {
              value: value,
              remark: ver._data_desc
            };
          });

          _this4.$set(field, "historyData", hisOfField);
        });
      } // 如果当前数据为敏感数据，因为值为******, 则不可编辑


      if (map._sensitive_data === true && this.encryptedCols && _.isArray(this.encryptedCols)) {
        this.encryptedCols.forEach(function (col) {
          return _this4.fields[col] && _this4.fields[col].setNoPerm4Sensi(true);
        });
      }

      var loader = this.$refs.loader;

      if (loader && loader.loadCount == 1) {
        this.setFieldsDefaultValue();
      }
    },
    watchFormModel: function watchFormModel() {
      var form = this;
      this.$watch(function () {
        return this.srvValFormModel();
      }, function (newVal, oldVal) {
        this.handleRedundantOnFormModelChange(newVal, oldVal, this.fields, function (_) {
          return form.srvValFormModel();
        });
        this.$emit("form-model-changed", this);
      }, {
        deep: true
      });
    }
  }
};

var FormValidateMixin = {
  computed: {
    formRules: function formRules() {
      var rulesMap = {};

      for (var key in this.fields) {
        var field = this.fields[key];

        if (field.evalEditable() && field.info.rules) {
          rulesMap[field.info.name] = field.info.rules;
        }
      }

      return rulesMap;
    }
  },
  methods: {
    hasInvalidField: function hasInvalidField() {
      return Object.values(this.allFields).filter(function (field) {
        return field.hasValidateError();
      }).length > 0;
    },

    /**
     * wrap the callback into a promise
     * @returns {Promise<any>}
     */
    validateForm: function validateForm() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        Object.keys(_this.allFields).forEach(function (fieldName) {
          return _this.handleValidation(fieldName);
        });
        var visibleBadFields = Object.values(_this.allFields).filter(function (field) {
          return field.evalVisible() && field.hasValidateError();
        });
        var ok = visibleBadFields.length === 0;
        console.info("validateForm result: " + ok);
        ok ? resolve(true) : resolve(false);
      });
    },
    handleValidation: function handleValidation(fieldName) {
      var _this2 = this;

      var fieldRules = this.formRules;

      if (fieldRules[fieldName]) {
        // has field level validate rule,
        var field = this.allFields[fieldName];
        var ruleArray = fieldRules[fieldName];
        ruleArray.forEach(function (rule) {
          var state = _this2.evalFieldRule(rule, field);

          state === true ? field.clearValidateError(rule.name) : field.putValidateError(rule.name, rule.message);
        });
      } // handle form level validators


      this.formValidators.forEach(function (validator) {
        _this2.handleFormRule(validator);
      });
    },
    handleFormRule: function handleFormRule(validator) {
      var _this3 = this;

      var ret = null;

      if (validator.js) {
        var row = this.srvValFormModel();
        ret = eval("var zz=" + validator.js + "(row, form); zz");
      } else if (validator.func) {
        var _row = this.srvValFormModel();

        ret = validator.func(_row, this);
      }

      if (ret && ret.message) {
        // add validator errors to returned cols
        ret.cols.forEach(function (col) {
          var field = _this3.allFields[col];
          field.putValidateError(validator.name, ret.message);
        });
      } else {
        // remove validator error of this rule name for all fields
        Object.values(this.allFields).forEach(function (field) {
          field.clearValidateError(validator.name);
        });
      }
    },

    /**
     *
     * @param rule
     * @param field
     * @returns {boolean} true for validate ok,
     */
    evalFieldRule: function evalFieldRule(rule, field) {
      var fieldSrvVal = field.getSrvVal();

      if (rule.hasOwnProperty("pattern")) {
        var text = fieldSrvVal;

        if (!text) {
          return true;
        }

        var regex = RegExp(rule.pattern, 'g');
        var test = regex.test(text);
        return test;
      } else if (rule.hasOwnProperty("required")) {
        return fieldSrvVal !== null && fieldSrvVal !== undefined && fieldSrvVal !== "";
      } else if (rule.hasOwnProperty("max")) {
        if (field.info.isNumeric()) {
          var number = Number.parseFloat(fieldSrvVal);
          return number <= rule.max;
        } else {
          var _text = fieldSrvVal;
          return !_text || _text.length <= rule.max;
        }
      } else {
        return true;
      }
    }
  }
};

var ExecutorMixin = {
  methods: {
    buildConditions: function buildConditions() {
      return this.buildConditionsFromConf(this);
    },
    buildConditionsFromConf: function buildConditionsFromConf(conf, item) {
      var ret = [];

      for (var i in conf.conditions) {
        var cond = conf.conditions[i];
        var queryCond = {};

        try {
          queryCond.colName = cond.colName;
          queryCond.ruleType = cond.ruleType;

          if (cond.disableExpr && eval(cond.disableExpr)) {
            return null;
          }

          var value = cond.valueExpr;

          if (value != "" && value != undefined && value != null) {
            // literal value or js expr
            if (cond.literalValue) {
              queryCond.value = value;
            } else {
              try {
                queryCond.value = eval(value);
              } catch (err) {
                queryCond.value = null;
              }
            }
          } else if (cond.valueFunc) {
            queryCond.value = cond.valueFunc();
          }
        } catch (e) {
          console.warn("err when eval condition " + JSON.stringify(e));
          continue;
        }

        if (cond.required && this.isEmptyCondition(queryCond)) {
          var message = "manditory condition missing: " + cond.fieldFullName;
          console.log(message);
          return null;
        }

        ret.push(queryCond);
      }

      return ret;
    },

    /**
     * return a row of data;
     * item is used by valueExpr!!!
     * @returns {null}
     */
    buildValuesFromConf: function buildValuesFromConf(conf, item) {
      var row = {
        _rtDataCtx: item
      };
      var valueList = conf.values;

      if (!valueList) {
        return row;
      }

      for (var i in valueList) {
        var confItem = valueList[i];
        var value = {};
        value.colName = confItem.colName;

        if (confItem.valueExpr) {
          // literal value or js expr
          if (confItem.literalValue) {
            value.value = confItem.valueExpr;
          } else {
            // eval in current ctx with target and params
            try {
              value.value = eval(confItem.valueExpr);
            } catch (err) {
              value.value = null;
            }
          }
        } else if (confItem.valueFunc) {
          value.value = confItem.valueFunc();
        }

        if (conf.ignoreNullValue && (value.value == null || value.value == undefined || value.value === "")) {
          console.debug("ignore null value in executor value: " + confItem.colName);
          continue;
        }

        if (confItem.enableFunc) {
          var func = confItem.enableFunc;

          if (!func(value, item)) {
            console.debug("executor value enable is false : " + confItem.colName);
            continue;
          }
        }

        row[value.colName] = value.value;
      }

      return row;
    }
  }
};

var ExecutorInfo = function ExecutorInfo() {
  _classCallCheck(this, ExecutorInfo);

  this.procMethod = 'approval';
  this.queryMethod = 'add';
  this.service = 'srvvx_task_submission_apply_add';
  this.values = [];
  this.conditions = [];
  this.ignoreNullValue = true;
};

var script$e = {
  mixins: [ExecutorMixin],
  props: {
    service: String,
    values: Array,
    conditions: Array,
    ignoreNullValue: Boolean,
    itemsFunc: null,
    itemsPolicy: "valuePerItem",
    // or servicePerItem
    dependKeys: []
  },
  data: function data() {
    return {
      children: []
    };
  },
  methods: {
    /**
     * return an query object
     * */
    buildSrvQuery: function buildSrvQuery(conf, item4Srv, rtDataCtx) {
      var _this = this;

      var query = {};
      query.serviceName = conf.service;
      query.condition = this.buildConditionsFromConf(conf, item4Srv);
      query.depend_keys = conf.dependKeys;

      if (conf.itemsFunc) {
        var validItems = conf.itemsFunc(rtDataCtx).filter(function (item) {
          return item._dirtyFlags !== "delete";
        });
        var evalItems = validItems.map(function (item) {
          return _this.buildValuesFromConf(conf, item);
        }).map(function (item) {
          if (conf.dependKeys) {
            conf.dependKeys.forEach(function (depend) {
              return delete item[depend.add_col];
            });
          }

          return item;
        });
        query.data = evalItems;
      } else {
        var data = this.buildValuesFromConf(conf);
        query.data = data ? [data] : [];
      }

      if (query.serviceName.endsWith("add") || query.serviceName.endsWith("update")) {
        if (!query.data || query.data.length == 0) {
          return null;
        }
      } else if (query.serviceName.endsWith("delete") || query.serviceName.endsWith("update")) {
        if (!query.condition || query.condition.length == 0) {
          return null;
        }
      }

      return query;
    },

    /**
     *
     * @param conf
     * @returns {*} an array of queries
     */
    buildQuery: function buildQuery(conf, rtDataCtx) {
      var _this2 = this;

      var queries = [];

      if (conf.itemsFunc && conf.itemsPolicy === "servicePerItem") {
        var clone = _.cloneDeep(conf);

        clone.itemsPolicy = "valuePerItem";
        queries = conf.itemsFunc(rtDataCtx).map(function (item) {
          clone.itemsFunc = function (_) {
            return [item];
          };

          return _this2.buildSrvQuery(clone, item, item);
        });
      } else {
        var query = this.buildSrvQuery(conf, null, rtDataCtx);
        queries = [query];
      }

      queries = queries.filter(function (e) {
        return !!e;
      });

      if (conf.children && conf.children.length > 0) {
        queries.forEach(function (query) {
          if (query) {
            query.data.forEach(function (item) {
              var subQueries = conf.children.map(function (child) {
                return _this2.buildQuery(child, item._rtDataCtx);
              }).filter(function (e) {
                return !!e;
              });
              subQueries = _.flatten(subQueries).filter(function (e) {
                return !!e;
              });

              if (subQueries && subQueries.length > 0) {
                item.child_data_list = subQueries;
              }
            });
          }
        });
      }

      return queries;
    },
    buildRunQuries: function buildRunQuries() {
      var queries = this.buildQuery(this);

      if (!queries || queries.length == 0) {
        return Promise.resolve(false);
      }

      this.santinizeQueries(queries);
      return queries;
    },
    run: function run() {
      var _this3 = this;

      var queries = this.buildQuery(this);

      if (!queries || queries.length == 0) {
        return Promise.resolve(false);
      }

      this.santinizeQueries(queries);
      return this.operate(queries).then(function (response) {
        if (response && response.data) {
          if (response.data.state == 'SUCCESS') {
            // only for local refresh of treegrid
            response.request = queries[0];

            _this3.$emit("executor-complete", response);

            return response;
          }
        }
      });
    }
  }
};

/* script */
const __vue_script__$e = script$e;

/* template */
var __vue_render__$e = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c("div")};
var __vue_staticRenderFns__$e = [];

  /* style */
  const __vue_inject_styles__$e = undefined;
  /* scoped */
  const __vue_scope_id__$e = undefined;
  /* module identifier */
  const __vue_module_identifier__$e = undefined;
  /* functional template */
  const __vue_is_functional_template__$e = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Executor = normalizeComponent_1(
    { render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e },
    __vue_inject_styles__$e,
    __vue_script__$e,
    __vue_scope_id__$e,
    __vue_is_functional_template__$e,
    __vue_module_identifier__$e,
    undefined,
    undefined
  );

var script$f = {
  name: "simple-filter",
  components: {
    FieldEditor: FieldEditor,
    executor: Executor
  },
  mixins: [FormMixin, FormValidateMixin],
  props: {
    formType: {
      type: String,
      default: "filter"
    },
    srv_cols: {
      type: Array
    },
    supportGroup: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      service_name: this.service || 'srvsys_menu_select',
      groupFields: {},
      reduceFields: {},
      fflagsField: null,
      gflagsField: null,
      rflagsField: null,
      groupName2Label: {
        "by": "按值汇总",
        "by_year": "按年汇总",
        "by_month_of_year": "按月汇总",
        "by_week": "按周汇总",
        "by_date": "按天汇总",
        "by_hour_of_date": "按小时汇总",
        "by_minute": "按分钟汇总",
        "max": "最大",
        "min": "最小",
        "sum": "总和",
        "avg": "平均",
        "distinct_count": "计数(去重去空)",
        "count": "计数(去空)"
      }
    };
  },
  computed: {},
  methods: {
    onSearchClicked: function onSearchClicked() {
      var groups = this.supportGroup ? this.buildGroups4Query() : null;
      var headers = this.supportGroup ? this.buildResultHeader() : null;
      this.$emit('search-clicked', this.buildConditions(), groups, headers);
    },
    noramlizeFieldName: function noramlizeFieldName(fieldName) {
      if (fieldName.startsWith("_") && fieldName.endsWith("_disp")) {
        var end = fieldName.indexOf("_disp");
        return fieldName.substring(1, end);
      } else {
        return fieldName;
      }
    },
    gotFlagsOptions: function gotFlagsOptions(fields, complementFlagsField) {
      var _this = this;

      var options = [];
      var flagsFields = ["fflags", "rflags", "gflags"];

      var _loop = function _loop(key) {
        var normalizedKey = _this.noramlizeFieldName(key);

        if (complementFlagsField && complementFlagsField.model && complementFlagsField.model.map(function (item) {
          return _this.noramlizeFieldName(item);
        }).filter(function (item) {
          return item == key;
        }).length > 0) {
          return "continue";
        }

        if (_.includes(flagsFields, key)) {
          return "continue";
        }

        var field = fields[key];
        options.push({
          value: key,
          label: field.info.label
        });
      };

      for (var key in fields) {
        var _ret = _loop(key);

        if (_ret === "continue") continue;
      }

      return options;
    },
    resetForm: function resetForm() {
      for (var key in this.fields) {
        this.fields[key].reset2Init();
      }

      this.resetFFlagsField();
    },
    buildGroups: function buildGroups(flagsField, fields) {
      var groups = [];

      for (var i in flagsField.model) {
        var fieldName = flagsField.model[i];
        var field = fields[fieldName];

        if (field.model && field.model.length > 0) {
          for (var j in field.model) {
            var type = field.model[j];
            var aliasName = fieldName + "_" + type;
            groups.push({
              colName: fieldName,
              type: type,
              aliasName: aliasName
            });
          }
        }
      }

      return groups;
    },
    buildResultHeader: function buildResultHeader() {
      var _this2 = this;

      var groups = this.buildGroups4Query();

      if (groups && groups.length > 0) {
        return groups.map(function (group) {
          var srvCol = _this2.srvCols.filter(function (srvCol) {
            return srvCol.columns == group.colName;
          })[0];

          var type = group.type;
          var description = _this2.groupName2Label[type];
          var label = "".concat(srvCol.label, "[").concat(description, "]");
          var colName = type == "by" ? group.colName : group.aliasName;
          return {
            label: label,
            colName: colName
          };
        });
      } else {
        // no group
        return this.srvCols.filter(function (srvCol) {
          return srvCol.in_list && srvCol.columns != "id";
        }).map(function (srvCol) {
          return {
            label: srvCol.label,
            colName: srvCol.columns
          };
        });
      }
    },
    buildGroups4Query: function buildGroups4Query() {
      var groups = this.buildGroups(this.gflagsField, this.groupFields).concat(this.buildGroups(this.rflagsField, this.reduceFields));
      return groups;
    },
    buildConditions: function buildConditions() {
      var _this3 = this;

      var conditions = [];

      var _loop2 = function _loop2(key) {
        var inSrvCols = _this3.srvCols.filter(function (item) {
          return item.columns === key;
        }).length > 0;
        var field = _this3.fields[key];

        if (!inSrvCols || !field.evalVisible()) {
          return "continue";
        }

        var condition = {
          colName: field.info.name,
          ruleType: field.ruleType,
          value: field.getSrvVal()
        };

        if (condition.value != null && condition.value != '') {
          if (Array.isArray(condition.value)) {
            if (condition.value.length == 0) {
              return "continue";
            }
          }

          conditions.push(condition);
        }
      };

      for (var key in this.fields) {
        var _ret2 = _loop2(key);

        if (_ret2 === "continue") continue;
      }

      return conditions;
    },

    /**
     * set editor and rule type
     */
    decorateFields: function decorateFields() {
      var _this4 = this;

      var toRemove = new Set();

      var _loop3 = function _loop3(key) {
        var field = _this4.fields[key];
        field.info.initValueExpr = null;

        if (field.info.srvCol.in_cond !== 1) {
          field.info.visible = false;
        }

        var fieldInfo = field.info;

        if (!fieldInfo.isFilterable()) {
          toRemove.add(key);
        } // if field is finder and also has dispcol field, then remove finder


        if (fieldInfo.isFinder()) {
          var fieldArr = Object.values(_this4.fields);
          var hasDispCol = fieldArr.filter(function (item) {
            return item.info.name === "_" + fieldInfo.name + "_disp";
          }).length > 0;

          if (hasDispCol) {
            toRemove.add(key);
          }
        }

        fieldInfo.editable = true;

        if (fieldInfo.isNumeric()) {
          field.ruleType = 'between';
        } else if (fieldInfo.type == 'Date') {
          field.ruleType = 'between';
        } else if (fieldInfo.type == 'Time') {
          field.ruleType = 'between';
        } else if (fieldInfo.type == 'DateTime') {
          field.ruleType = 'between';
        } else if (fieldInfo.type == 'Enum' || fieldInfo.type == 'Dict') {
          field.ruleType = 'in';
          field.model = [];
        } else if (fieldInfo.isJoinedDisp() || fieldInfo.isTextual() || fieldInfo.isFinder()) {
          field.ruleType = 'like';
        } else {
          field.ruleType = "eq";
        }
      };

      for (var key in this.fields) {
        _loop3(key);
      }

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = toRemove[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var key = _step.value;
          Vue.delete(this.fields, key);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      this.fflagsField = this.addFlagsField("fflags", this.fields);

      this.fflagsField.optionsFunc = function (_) {
        return _this4.gotFlagsOptions(_this4.fields);
      };

      this.resetFFlagsField();
    },
    resetFFlagsField: function resetFFlagsField() {
      var _this5 = this;

      var inCondFields = Object.keys(this.fields).filter(function (fieldName) {
        var srvCols = _this5.srvCols.filter(function (item) {
          return item.columns === fieldName;
        });

        return srvCols.length > 0 && srvCols[0].in_cond === 1;
      });
      this.fflagsField.setSrvVal(_.join(inCondFields, ","));
    },
    createReduceFields: function createReduceFields() {
      var _this6 = this;

      // create reduce fields
      var commonReduceOptions = [{
        label: "计数(去重去空)",
        value: "distinct_count"
      }, {
        label: "计数(去空)",
        value: "count"
      }];
      var comparableReduceOptions = [{
        label: "最大",
        value: "max"
      }, {
        label: "最小",
        value: "min"
      }];
      var numbericReduceOptions = [{
        label: "总和",
        value: "sum"
      }, {
        label: "平均",
        value: "avg"
      }];

      for (var i in this.srvCols) {
        var srvcol = this.srvCols[i];
        var fi = new FieldInfo(srvcol);

        if (fi.name == "id" || fi.name.startsWith("_") && fi.name.endsWith("_disp")) {
          continue;
        }

        var f = new Field(fi, this);
        fi.editor = "multiselect";
        f.model = [];

        if (fi.isTemporal()) {
          f.options = commonReduceOptions.concat(comparableReduceOptions);
          f.model.push("max");
        } else if (fi.isNumeric()) {
          f.options = commonReduceOptions.concat(comparableReduceOptions).concat(numbericReduceOptions);
          f.model.push("avg");
        } else {
          f.options = commonReduceOptions;
          f.model.push("count");
        }

        Vue.set(this.reduceFields, fi.name, f);
      }

      this.rflagsField = this.addFlagsField("rflags", this.reduceFields);

      this.rflagsField.optionsFunc = function (_) {
        return _this6.gotFlagsOptions(_this6.reduceFields, _this6.gflagsField);
      };
    },
    createGroupFields: function createGroupFields() {
      var _this7 = this;

      // create group fileds
      var dateGroupOptions = [{
        label: "按年汇总",
        value: "by_year"
      }, {
        label: "按月汇总",
        value: "by_month_of_year"
      }, {
        label: "按周汇总",
        value: "by_week"
      }, {
        label: "按天汇总",
        value: "by_date"
      }];
      var timeGroupOptions = [{
        label: "按小时汇总",
        value: "by_hour_of_date"
      }, {
        label: "按分钟汇总",
        value: "by_minute"
      }];

      for (var i in this.srvCols) {
        var srvcol = this.srvCols[i];
        var fi = new FieldInfo(srvcol);

        if (fi.name == "id" || fi.isFinder()) {
          continue;
        }

        var f = new Field(fi, this);
        fi.editor = "multiselect";
        f.model = [];

        if (fi.isDate()) {
          f.options = dateGroupOptions;
          f.model.push("by_date");
        } else if (fi.isTime()) {
          f.options = timeGroupOptions;
          f.model.push("by_minute");
        } else if (fi.isDateTime()) {
          f.options = dateGroupOptions.concat(timeGroupOptions);
          f.model.push("by_date");
        } else {
          f.options = [{
            label: "按值汇总",
            value: "by"
          }];
          f.model.push("by");
          f.info.bodyVisible = false;
        }

        Vue.set(this.groupFields, fi.name, f);
      }

      this.gflagsField = this.addFlagsField("gflags", this.groupFields);

      this.gflagsField.optionsFunc = function (_) {
        return _this7.gotFlagsOptions(_this7.groupFields, _this7.rflagsField);
      };
    },
    addFlagsField: function addFlagsField(name, fields) {
      var fakeSrvCol = {
        columns: name,
        label: "字段选择",
        col_span: 1,
        seq: -1000
      };
      var flagsFi = new FieldInfo(fakeSrvCol);
      var flagsField = new Field(flagsFi, this);

      var _loop4 = function _loop4(key) {
        var field = fields[key];

        field.info.visible = function () {
          return flagsField.model.filter(function (item) {
            return item == key;
          }).length > 0;
        };

        flagsField.options.push({
          value: key,
          label: field.info.label
        });
      };

      for (var key in fields) {
        _loop4(key);
      }

      flagsFi.editor = "multiselect";
      flagsField.model = [];
      Vue.set(fields, flagsFi.name, flagsField);
      return flagsField;
    }
  },
  mounted: function mounted() {
    var _this8 = this;

    var colFilter = function colFilter(srvCol) {
      return srvCol.columns !== 'id' && srvCol.in_cond > 0;
    };

    this.createFields(colFilter, this.srv_cols).then(function () {
      _this8.decorateFields();

      if (_this8.supportGroup) {
        _this8.createGroupFields();

        _this8.createReduceFields();
      }
    }).then(function (_) {
      _this8.formLoaded = true;
    }).then(function (_) {
      _this8.$emit('form-loaded');
    }).then(function (_) {
      if (!_this8.supportGroup) {
        return;
      }

      _this8.rflagsField.editor.$on('field-value-changed', function (_) {
        var selected = _this8.rflagsField.model;

        for (var i in selected) {
          var fieldName = selected[i];
          _this8.reduceFields[fieldName].info.seq = i * 100;
        }
      });

      _this8.gflagsField.editor.$on('field-value-changed', function (_) {
        var selected = _this8.gflagsField.model;

        for (var i in selected) {
          var fieldName = selected[i];
          _this8.groupFields[fieldName].info.seq = i * 100;
        }
      });
    });
  }
};

/* script */
const __vue_script__$f = script$f;

/* template */
var __vue_render__$f = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',[(_vm.formLoaded)?_c('el-form',{attrs:{"inline":false,"label-position":"right","label-width":"10rem"}},[(_vm.supportGroup)?_c('p',[_vm._v("过滤字段")]):_vm._e(),_vm._v(" "),_vm._l((_vm.sortedFields),function(field){return _c('field-editor',{key:field.info.name,attrs:{"field":field,"content-fields":[field]}})})],2):_vm._e()],1),_vm._v(" "),(_vm.supportGroup)?_c('el-row',[(_vm.formLoaded)?_c('el-form',{attrs:{"inline":false,"label-position":"right","label-width":"100px"}},[_c('p',[_vm._v("分组字段")]),_vm._v(" "),_vm._l((_vm.sortFields(_vm.groupFields)),function(field){return _c('field-editor',{key:field.info.name,attrs:{"field":field,"content-fields":[field]}})})],2):_vm._e()],1):_vm._e(),_vm._v(" "),(_vm.supportGroup)?_c('el-row',[(_vm.formLoaded)?_c('el-form',{attrs:{"inline":false,"label-position":"right","label-width":"100px"}},[_c('p',[_vm._v("聚合字段")]),_vm._v(" "),_vm._l((_vm.sortFields(_vm.reduceFields)),function(field){return _c('field-editor',{key:field.info.name,attrs:{"field":field,"content-fields":[field]}})})],2):_vm._e()],1):_vm._e(),_vm._v(" "),_c('el-row',[_c('el-col',{staticStyle:{"text-align":"center"},attrs:{"span":24}},[_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.onSearchClicked()}}},[_vm._v("\n        搜索\n      ")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.resetForm()}}},[_vm._v("重置")])],1)],1)],1)};
var __vue_staticRenderFns__$f = [];

  /* style */
  const __vue_inject_styles__$f = function (inject) {
    if (!inject) return
    inject("data-v-ad11a2b8_0", { source: ".el-table th[data-v-ad11a2b8]{text-align:center}.el-table tbody tr td[data-v-ad11a2b8]:first-child{text-align:center}.el-form-item__content[data-v-ad11a2b8]{line-height:initial;line-height:unset}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$f = "data-v-ad11a2b8";
  /* module identifier */
  const __vue_module_identifier__$f = undefined;
  /* functional template */
  const __vue_is_functional_template__$f = false;
  /* style inject SSR */
  

  
  var simpleFilter = normalizeComponent_1(
    { render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f },
    __vue_inject_styles__$f,
    __vue_script__$f,
    __vue_scope_id__$f,
    __vue_is_functional_template__$f,
    __vue_module_identifier__$f,
    browser,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$g = {
  data: function data() {
    return {
      cols_span: 24,
      card_data: [],
      gridData: [],
      row_card_num: null,
      property_col: {
        "header": "",
        "type": "",
        "title": "",
        "content_one": "",
        "content_two": "",
        "footer": "",
        "el_col": null
      }
    };
  },
  props: {
    card_cfg: {
      type: Object
    },
    row_button: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    data_list: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  methods: {
    setCardData: function setCardData(dataList) {
      this.gridData = dataList;
      this.buidlCardData();
    },
    getStateType: function getStateType(col, exps) {

      if (exps || exps !== null) {
        var exp = eval(exps);
        return exp;
      } else {
        return 'primary';
      }
    },
    cardButtonClick: function cardButtonClick(butinfo, row) {
      this.$emit("card-row-button", butinfo, row);
    },
    getDispExps: function getDispExps(item, data) {
      var result = true;

      try {
        var disp_exps = item.disp_exps;

        if (disp_exps != undefined && disp_exps != "" && disp_exps != null) {
          result = eval(disp_exps);
        }
      } catch (err) {
        console.error("按钮表达式执行错误");
      }

      return result;
    },
    buidlCardData: function buidlCardData() {
      if (this.row_card_num != undefined && this.row_card_num != "" && this.row_card_num != null) {
        this.cols_span = 24 / this.row_card_num;
        var rows = Math.ceil(this.gridData.length / this.row_card_num);
        this.card_data = [];
        var index = 0;

        for (var i = 0; i < rows; i++) {
          var data = [];

          for (var j = 0; j < this.row_card_num; j++) {
            if (index < this.gridData.length) {
              data[j] = this.gridData[index];
            } else {
              break;
            }

            index++;
          }

          this.card_data.push(data);
        }
      }
    }
  },
  created: function created() {
    var card_cfg_relation = JSON.parse(this.card_cfg.property_relation);

    for (var key in this.property_col) {
      this.property_col[key] = card_cfg_relation[key];
    } //构造二维数组数据


    this.row_card_num = this.card_cfg.row_card_num;
    this.gridData = this.data_list;
    this.$emit("card-loaded", this);
    this.buidlCardData();
  }
};

/* script */
const __vue_script__$g = script$g;

/* template */
var __vue_render__$g = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{attrs:{"gutter":10}},_vm._l((_vm.gridData),function(item,col_index){return _c('el-col',{key:col_index + 1,attrs:{"xs":_vm.property_col.el_col === null ? 24 : _vm.property_col.el_col.xs,"sm":_vm.property_col.el_col === null ? 12 : _vm.property_col.el_col.sm,"md":_vm.property_col.el_col === null ? 6 : _vm.property_col.el_col.md,"lg":_vm.property_col.el_col === null ? 4 : _vm.property_col.el_col.lg,"xl":_vm.property_col.el_col === null ? 3 : _vm.property_col.el_col.xl}},[_c('el-card',{attrs:{"shadow":"always","body-style":"{padding: '20px';padding-top:5px;}"}},[_c('div',{staticClass:"clearfix",staticStyle:{"color":"rgb(76, 128, 163)","font-size":"0.8rem"},attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v(_vm._s(item[_vm.property_col.header]))]),_vm._v(" "),_c('span',{staticClass:"right",attrs:{"type":_vm.getStateType(item[_vm.property_col.type.colName],_vm.property_col.type.dispExps)}},[_vm._v(_vm._s(item[_vm.property_col.type.colName]))])]),_vm._v(" "),_c('div',{staticClass:"title"},[_vm._v(_vm._s(item[_vm.property_col.title]))]),_vm._v(" "),_c('div',{staticClass:"text item"},[_vm._v(_vm._s(item[_vm.property_col.content_one]))]),_vm._v(" "),_c('div',{staticClass:"text item"},[_vm._v(" "+_vm._s(item[_vm.property_col.content_two]))]),_vm._v(" "),_c('div',{staticClass:"bottom clearfix"},[_c('time',{staticClass:"time"},[_vm._v(_vm._s(item[_vm.property_col.footer]))]),_vm._v(" "),_c('div',{staticClass:"footer-btn"},_vm._l((_vm.row_button),function(operate_item,operate_index){return (_vm.getDispExps(operate_item,item)&&operate_item.permission)?_c('el-button',{key:operate_index,attrs:{"type":"text","size":"small"},on:{"click":function($event){return _vm.cardButtonClick(operate_item,item)}}},[_vm._v("\n              "+_vm._s(operate_item.button_name)+"\n            ")]):_vm._e()}),1)])])],1)}),1)],1)};
var __vue_staticRenderFns__$g = [];

  /* style */
  const __vue_inject_styles__$g = function (inject) {
    if (!inject) return
    inject("data-v-2e799b2f_0", { source: ".el-card__header[data-v-2e799b2f]{color:#4c80a3}.el-badge[data-v-2e799b2f]{float:right}.right[data-v-2e799b2f]{background-color:#0f93eb;color:#fff;border-radius:9px;padding:2px 8px;float:right;line-height:1rem}span[type=success][data-v-2e799b2f]{background-color:#67c23a}span[type=primary][data-v-2e799b2f]{background-color:#0f93eb}span[type=danger][data-v-2e799b2f]{background-color:#f56c6c}span[type=warning][data-v-2e799b2f]{background-color:#e6a23c}.bottom[data-v-2e799b2f]{margin-top:13px;line-height:12px}.el-row[data-v-2e799b2f]{padding-bottom:12px}.el-row>div[data-v-2e799b2f]{margin-bottom:5px}.title[data-v-2e799b2f]{padding:6px 0;padding-bottom:10px}.footer-btn[data-v-2e799b2f]{padding:8px;float:right}.el-button[data-v-2e799b2f]{padding:0}.el-buttom[data-v-2e799b2f]:first-child,.el-button[data-v-2e799b2f]:last-child{margin-left:.5rem}.text[data-v-2e799b2f]{font-size:14px}.time[data-v-2e799b2f]{font-size:.8rem;color:#9e9e9e}.item[data-v-2e799b2f]{padding:2px 0;color:#4c80a3;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$g = "data-v-2e799b2f";
  /* module identifier */
  const __vue_module_identifier__$g = undefined;
  /* functional template */
  const __vue_is_functional_template__$g = false;
  /* style inject SSR */
  

  
  var simpleCard = normalizeComponent_1(
    { render: __vue_render__$g, staticRenderFns: __vue_staticRenderFns__$g },
    __vue_inject_styles__$g,
    __vue_script__$g,
    __vue_scope_id__$g,
    __vue_is_functional_template__$g,
    __vue_module_identifier__$g,
    browser,
    undefined
  );

var FieldRedundantMixin = {
  methods: {
    handleRedundantOnFormModelChange: function handleRedundantOnFormModelChange(newVal, oldVal, fields, formModelFunc) {
      if (!this.isLoaded()) {
        return;
      }

      for (var fieldName in fields) {
        var field = fields[fieldName];

        if (!field || !field.info) {
          continue;
        }

        var fieldInfo = field.info; // 处理上游字段变化

        if (fieldInfo.upstream) {
          var upstreamField = fields[fieldInfo.upstream.field];
          var upstreamFieldValue = upstreamField.model;

          if (upstreamFieldValue && upstreamFieldValue != fieldInfo.upstream.fieldValue) {
            fieldInfo.upstream.fieldValue = upstreamFieldValue; // if value changed,  reset curr field,

            var refCol = fieldInfo.upstream.refCol; /// field.hasOwnProperty(refCol)  is to rule out downstream field not a finder

            if (field.model && field.hasOwnProperty(refCol) && field.model[refCol] != upstreamField.getSrvVal()) {
              field.reset();
            }
          }
        } // 处理Js计算冗余字段


        var diffFields = new Set();

        for (var _fieldName in newVal) {
          if (newVal[_fieldName] != oldVal[_fieldName]) {
            diffFields.add(_fieldName);
          }
        }

        if (fieldInfo.redundant) {
          if (!(diffFields.size == 1 && diffFields.has(fieldName))) {
            var vm = this;
            this.handleRedundantViaJs(field, formModelFunc, vm);
          }
        }
      }
    },

    /**
     *
     * @param field
     * @param formModelFunc
     * @param vm used in func js
     */
    handleRedundantViaJs: function handleRedundantViaJs(field, formModelFunc, vm) {
      var fieldInfo = field.info;

      if (!fieldInfo.redundant || !fieldInfo.redundant.func) {
        return;
      }

      var func = fieldInfo.redundant.func;

      if (func) {
        var row = formModelFunc();
        var ret = eval("var zz=" + func + "(row, vm); zz");

        if (ret === 'Invalid date') {
          return;
        }

        var update = false;

        if (fieldInfo.redundant.trigger == 'isnull' && field.isEmpty()) {
          update = true;
        } else if (!fieldInfo.redundant.trigger || fieldInfo.redundant.trigger == 'always') {
          update = true;
        }

        if (update && field.getSrvVal() !== ret) {
          field.setSrvVal(ret);
        }
      }
    },
    buildDependentFields: function buildDependentFields(fields) {
      // construct redundant fields relations via fk
      for (var fieldName in fields) {
        var field = fields[fieldName];

        if (field && field.info && field.info.redundant && field.info.redundant.dependField) {
          var dependField = fields[field.info.redundant.dependField];

          if (dependField) {
            dependField.dependentFields = dependField.dependentFields || new Set();
            dependField.dependentFields.add(field.info.name);
          }
        }
      }
    },

    /**
     * 处理通过fk引用的冗余字段
     * @param field
     * @param fields
     */
    handleFieldFkRedundant: function handleFieldFkRedundant(field, fields) {
      if (field.dependentFields) {
        field.dependentFields.forEach(function (dependentFieldName) {
          var dependentField = fields[dependentFieldName];
          var sync = true;

          if (dependentField.info.redundant.trigger === 'isnull') {
            sync = dependentField.isEmpty();
          }

          if (sync) {
            if (field.model && field.model[dependentField.info.redundant.refedCol]) {
              dependentField.setSrvVal(field.model[dependentField.info.redundant.refedCol]);
            } else {
              dependentField.reset();
            }
          }
        });
      } // for user field xxx, try to set the _xxx_disp field


      var dispFieldName = "_".concat(field.info.name, "_disp");

      if (field.info.type === "User" && fields[dispFieldName]) {
        if (field.model) {
          fields[dispFieldName].setSrvVal(field.model.user_disp);
        }
      }
    }
  }
};

var script$h = {
  components: {
    executor: Executor
  },
  mixins: [ExecutorMixin],
  props: {
    info: {
      type: ActionInfo
    }
  },
  data: function data() {
    return {};
  },
  mounted: function mounted() {},
  methods: {
    onClicked: function onClicked() {
      var _this = this;

      var loading = null;
      var origin = Promise.resolve(true);
      origin.then(function (_) {
        if (_this.info.customPrecheckFunc) {
          console.warn("exec customPrecheckFunc");

          var checkResult = _this.info.customPrecheckFunc();

          if (checkResult !== true) {
            throw "custom precheck err";
          }
        }
      }).then(function (_) {
        if (_this.info.precheckFunc) {
          return _this.info.precheckFunc();
        }
      }).catch(function (err) {
        if (err !== "custom precheck err") {
          _this.$message.error("请检查输入数据信息");
        }

        throw "validate err";
      }).then(function (ret) {
        if (_this.info.confirm) {
          return _this.$confirm(_this.info.confirm, '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          });
        }
      }).then(function () {
        if (_this.info.loading) {
          loading = _this.$loading({
            lock: true,
            text: '加载中',
            spinner: 'el-icon-loading',
            background: 'rgba(0, 0, 0, 0.7)'
          });
        }

        if (_this.info.executor) {
          return _this.$refs.executor.run();
        } else if (_this.info.invokeFunc) {
          return Promise.resolve(_this.info.invokeFunc());
        }
      }).then(function (response) {
        if (_this.info.executor) {
          if (response && response.data && response.data.state == 'SUCCESS') {
            _this.$message({
              message: response.data.resultMessage || '提交成功！',
              type: 'success'
            });
          } else {
            _this.$message.error(response.data.resultMessage || '提交失败！');

            throw 'submit err';
          }
        }
      }).then(function (value) {
        if (_this.info.nav2Location && _this.$router) {
          _this.$router.push(_this.info.nav2Location);
        }
      }).then(function (_) {
        _this.$emit('action-complete', _this.info.name);
      }).catch(function (err) {
        if (err == 'validate err' || err == 'submit err') ; else {
          console.error(err);
        }
      }).finally(function () {
        if (loading) {
          loading.close();
        }
      });
    }
  }
};

/* script */
const __vue_script__$h = script$h;

/* template */
var __vue_render__$h = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(this.info.visible),expression:"this.info.visible"}],staticClass:"bx_action",staticStyle:{"display":"inline-block"}},[(_vm.info)?_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.onClicked()}}},[_vm._v(_vm._s(_vm.info.label)+"\n  ")]):_vm._e(),_vm._v(" "),(_vm.info && _vm.info.executor)?_c('executor',_vm._b({ref:"executor",on:{"executor-complete":function($event){return _vm.$emit('executor-complete', $event)}}},'executor',_vm.info.executor,false,true)):_vm._e()],1)};
var __vue_staticRenderFns__$h = [];

  /* style */
  const __vue_inject_styles__$h = function (inject) {
    if (!inject) return
    inject("data-v-0e533a78_0", { source: ".bx_action[data-v-0e533a78]{margin-left:3px;margin-right:3px}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$h = "data-v-0e533a78";
  /* module identifier */
  const __vue_module_identifier__$h = undefined;
  /* functional template */
  const __vue_is_functional_template__$h = false;
  /* style inject SSR */
  

  
  var Action = normalizeComponent_1(
    { render: __vue_render__$h, staticRenderFns: __vue_staticRenderFns__$h },
    __vue_inject_styles__$h,
    __vue_script__$h,
    __vue_scope_id__$h,
    __vue_is_functional_template__$h,
    __vue_module_identifier__$h,
    browser,
    undefined
  );

//
var script$i = {
  mixins: [ExecutorMixin],
  props: {
    service: {
      type: String,
      default: 'srvsso_user_select'
    }
  },
  data: function data() {
    return {
      enableFunc: null,
      colNames: [],
      conditions: [],
      ignoreNullValue: true,
      lastValidResp: null,
      loadCount: 0
    };
  },
  mounted: function mounted() {},
  methods: {
    run: function run() {
      var _this = this;

      if (this.enableFunc && !this.enableFunc()) {
        return Promise.resolve(false);
      }

      var query = {};
      query.serviceName = this.service;
      console.info("run loader " + this.service);
      query.condition = this.buildConditions();

      if (!query.condition) {
        return;
      }

      query.colNames = this.colNames;
      query.hisVer = true;
      return this.selectList(query).then(function (response) {
        if (response && response.data && response.data.data) {
          _this.lastValidResp = response.data.data;
          _this.loadCount++;
        }

        _this.$emit('loader-complete', {
          data: response.data.data,
          resp: response
        });
      });
    },
    watchCondition: function watchCondition() {
      this.unwatchCondition();
      this.unwatchCondFunc = this.$watch(function () {
        return this.buildConditions();
      }, function (newVal, oldVal) {
        console.info("loader condition dirty -> run()");
        this.run();
      });
    },
    unwatchCondition: function unwatchCondition() {
      if (this.unwatchCondFunc) {
        this.unwatchCondFunc();
        this.unwatchCondFunc = null;
      }
    }
  }
};

/* script */
const __vue_script__$i = script$i;

/* template */
var __vue_render__$i = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c("div")};
var __vue_staticRenderFns__$i = [];

  /* style */
  const __vue_inject_styles__$i = undefined;
  /* scoped */
  const __vue_scope_id__$i = undefined;
  /* module identifier */
  const __vue_module_identifier__$i = undefined;
  /* functional template */
  const __vue_is_functional_template__$i = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Loader = normalizeComponent_1(
    { render: __vue_render__$i, staticRenderFns: __vue_staticRenderFns__$i },
    __vue_inject_styles__$i,
    __vue_script__$i,
    __vue_scope_id__$i,
    __vue_is_functional_template__$i,
    __vue_module_identifier__$i,
    undefined,
    undefined
  );

var CustButtonMinx = {
  methods: {
    /**
     * 自定义操作1.0
     * @param {*} butinfo 
     * @param {*} operateData 
     */
    customizeOperate: function customizeOperate(butinfo, operateData) {
      var application = butinfo.application;
      var operate_type = butinfo.operate_type;

      if (operate_type == "操作") {
        this.customize_operate(butinfo, operateData);
      } else if (operate_type == "流程申请") {
        this.customize_apply(butinfo, operateData);
      } else if (operate_type == "修改") {
        this.customize_update(butinfo, operateData);
      } else if (operate_type == "删除") {
        this.customize_delete(butinfo, operateData);
      } else if (operate_type == "增加") {
        this.customize_add(butinfo, operateData);
      } else if (operate_type.endsWith("URL跳转")) {
        this.customizeurlFoward(butinfo, operateData);
      } else if (operate_type.endsWith("地址访问")) {
        this.addressRequest(butinfo, operateData);
      } else if (operate_type.endsWith("跳转")) {
        this.customize_forward(butinfo, operateData);
      } else if (operate_type.endsWith("弹出")) {
        this.customize_popup(butinfo, operateData);
      } else {
        alert("暂未实现");
      }
    },

    /**
     * 前置数据处理
     */
    pre_data_handle: function pre_data_handle(butinfo, operateData) {
      var pre_data_handle = butinfo.pre_data_handle;

      if (pre_data_handle != undefined && pre_data_handle != null && pre_data_handle != '') {
        if (operateData) {
          if (operateData.length == 0) {
            operateData = [{}];
          }
        }

        eval("var zz=" + pre_data_handle + "(operateData,me); zz");
      }

      return operateData;
    },

    /**
     * 后置动作
     * @param {*} butinfo 
     */
    suffix_actions: function suffix_actions(butinfo) {
      var page_type = butinfo.page_type;
      var suffix_actions = butinfo.suffix_actions;

      if (page_type.endsWith("列表")) {
        this.loadTableData();
      } else {
        if (suffix_actions == 'refresh') {
          window.location.reload();
        }
      }
    },

    /**
     * 组装参数数据
     * @param {*} butinfo 
     * @param {*} operateData 
     */
    getchildPackageData: function getchildPackageData(childRequests, operateData) {
      var bxRequests = [];

      if (childRequests != null && childRequests != '' && childRequests != undefined) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = childRequests[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var requestTtem = _step.value;
            var request = {};
            request.serviceName = requestTtem.serviceName;

            if (requestTtem["data"] != undefined) {
              request.data = requestTtem["data"];
            }

            if (requestTtem["condition"] != undefined) {
              request.condition = requestTtem["condition"];
            }

            var depend_keys = requestTtem["depend_keys"];

            if (depend_keys != undefined && depend_keys != "" && depend_keys != null) {
              request["depend_keys"] = depend_keys;
            }

            var depend_condition_keys = requestTtem["depend_condition_keys"];

            if (depend_condition_keys != undefined && depend_condition_keys != "" && depend_condition_keys != null) {
              request["depend_condition_keys"] = depend_condition_keys;
            }

            bxRequests.push(request);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      return bxRequests;
    },

    /**
     * 组装参数数据
     * @param {*} butinfo 
     * @param {*} operateData 
     */
    getPackageData: function getPackageData(butinfo, operateData) {
      var packagedata = {};
      var new_data = {};
      var new_conditions = []; //按钮操作参数

      var operate_params = JSON.parse(butinfo["operate_params"]);

      if (operate_params != '' && operate_params != null) {
        var data = operate_params["data"];

        if (data != undefined && data != null && data != null) {
          new_data = {};
          var _iteratorNormalCompletion2 = true;
          var _didIteratorError2 = false;
          var _iteratorError2 = undefined;

          try {
            for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
              var data_item = _step2.value;

              for (var col_key in data_item) {
                if (col_key == 'child_data_list') {
                  var childParams = data_item["child_data_list"];
                  var childRequests = this.getchildPackageData(childParams, operateData);

                  if (childRequests.length > 0) {
                    new_data["child_data_list"] = childRequests;
                  }
                } else {
                  var col_cfg = data_item[col_key];

                  if (col_cfg["value_type"] == "constant") {
                    new_data[col_key] = col_cfg["value"];
                  } else if (col_cfg["value_type"] == "sysvar") {
                    if (col_cfg["value"] == 'nowdate') {
                      new_data[col_key] = this.formatDateTime(new Date());
                    } else {
                      new_data[col_key] = eval("top." + col_cfg["value"]);
                    }
                  } else if (col_cfg["value_type"] == "rowData") {
                    if (operateData.length > 0) {
                      new_data[col_key] = operateData[0][col_cfg["value_key"]];
                    } else {
                      new_data[col_key] = null;
                    }
                  }
                }
              }
            }
          } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                _iterator2.return();
              }
            } finally {
              if (_didIteratorError2) {
                throw _iteratorError2;
              }
            }
          }
        }

        var condition = operate_params["condition"];

        if (condition != undefined && condition != null && condition != null) {
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;

          try {
            for (var _iterator3 = condition[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var condition_item = _step3.value;
              var newCondition = {};
              newCondition["colName"] = condition_item["colName"];
              newCondition["ruleType"] = condition_item["ruleType"];
              var valueCfg = condition_item["value"];
              var value_type = valueCfg["value_type"];

              if (value_type == "constant") {
                newCondition["value"] = valueCfg["value"];
              } else if (value_type == "sysvar") {
                if (valueCfg["value"] == 'nowdate') {
                  newCondition["value"] = this.formatDateTime(new Date());
                } else {
                  newCondition["value"] = eval("top." + valueCfg["value"]);
                }
              } else if (value_type == "rowData") {
                var value_key = valueCfg["value_key"];
                var value_str = "";
                var _iteratorNormalCompletion4 = true;
                var _didIteratorError4 = false;
                var _iteratorError4 = undefined;

                try {
                  for (var _iterator4 = operateData[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                    var rowMap = _step4.value;
                    value_str = value_str + "," + rowMap[value_key];
                  }
                } catch (err) {
                  _didIteratorError4 = true;
                  _iteratorError4 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                      _iterator4.return();
                    }
                  } finally {
                    if (_didIteratorError4) {
                      throw _iteratorError4;
                    }
                  }
                }

                value_str = value_str.substring(1);
                newCondition["value"] = value_str;
              }

              new_conditions.push(newCondition);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        }
      }

      packagedata.data = new_data;
      packagedata.conditions = new_conditions;
      return packagedata;
    },

    /**
     * 自定义模式操作2.0
     * @param {*} butinfo 
     * @param {*} operateData 
     */
    customize_operate: function customize_operate(butinfo, operateData) {
      var _this = this;

      this.pre_data_handle(butinfo, operateData);
      var operate_mode = butinfo.operate_mode;
      var operate_service = butinfo.operate_service;
      var packageData = this.getPackageData(butinfo, operateData);
      var new_data = packageData.data;
      var new_conditions = packageData.conditions;
      var page_type = "";

      if (new_conditions.length == 0 && operateData.length != 0) {
        var cMap = {
          "colName": "id",
          "value": "",
          "ruleType": "in"
        };
        var value_ids = "";
        var _iteratorNormalCompletion5 = true;
        var _didIteratorError5 = false;
        var _iteratorError5 = undefined;

        try {
          for (var _iterator5 = operateData[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
            var itemdata = _step5.value;
            value_ids = value_ids + "," + itemdata.id;
          }
        } catch (err) {
          _didIteratorError5 = true;
          _iteratorError5 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
              _iterator5.return();
            }
          } finally {
            if (_didIteratorError5) {
              throw _iteratorError5;
            }
          }
        }

        value_ids = value_ids.substring(1);
        cMap.value = value_ids;
        new_conditions.push(cMap);
      }

      if ("弹出" == operate_mode) {
        if (operateData.length == 0) {
          this.$alert("请选择操作数据", "提示", {
            confirmButtonText: "确定"
          });
        } else {
          page_type = "list_update";
          this.popuplistFormDialog(page_type, operate_service, butinfo.listservice, new_conditions, new_data);
        }
      } else if ("跳转" == operate_mode) ; else if ("静默操作" == operate_mode) {
        var operate_params_cfg = butinfo.operate_params;
        var bxRequests = [];

        if (operateData.length <= 0 && operate_params_cfg != undefined && operate_params_cfg != "" && operate_params_cfg != null) {
          this.$alert("请选择操作数据", "提示", {
            confirmButtonText: "确定"
          });
        } else {
          var pre_confirm_msg = butinfo["pre_confirm_msg"];

          if (pre_confirm_msg == "" || pre_confirm_msg == undefined || pre_confirm_msg == null) {
            pre_confirm_msg = "你确定要进行此操作?";
          }

          this.$confirm(pre_confirm_msg, "提示", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "info"
          }).then(function () {
            var request = {};
            request["serviceName"] = butinfo["operate_service"];
            request["data"] = [new_data];
            request["srvApp"] = butinfo["application"];
            request["condition"] = new_conditions;
            bxRequests.push(request);

            if (bxRequests.length > 0) {
              _this.operate(bxRequests).then(function (response) {
                var state = response.body.state;

                if ("SUCCESS" == state) {
                  var resultMessage = "操作成功!";

                  if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
                    resultMessage = response.body.resultMessage;
                  }

                  _this.$message({
                    type: "success",
                    message: resultMessage
                  });

                  _this.suffix_actions(butinfo); //me.loadTableData();

                } else {
                  _this.$message({
                    type: "error",
                    message: response.body.resultMessage
                  });
                }
              });
            }
          }).catch(function (e) {
            console.error(e);

            _this.$message({
              type: "info",
              message: "已取消"
            });
          });
        }
      }
    },

    /**
     * 申请
     * @param {*} butinfo 
     * @param {*} operateData 
     */
    customize_apply: function customize_apply(butinfo, operateData) {
      this.pre_data_handle(butinfo, operateData);
      var operate_service = butinfo.operate_service;
      var packageData = this.getPackageData(butinfo, operateData);
      var new_data = packageData.data;
      var new_conditions = packageData.conditions;
      var urlParams = "/" + new_data.proc_service;
      var operate_params_str = encodeURI(JSON.stringify(new_data));
      var application = butinfo.application;
      urlParams = urlParams + "?srvApp=" + application + "&operate_params=" + operate_params_str + "&time=" + new Date().getTime();
      this.custAddTab("start-proc", urlParams, "流程申请");
    },

    /**
     * 直接请求地址
     */
    addressRequest: function addressRequest(item, operateData) {
      var address = "";
      var back_url = this.url_pre_data_handle(item, operateData);

      if (back_url != '') {
        address = back_url;
      } else {
        var url = item["operate_params"];

        if (url != '' && url != null && url != undefined) {
          var urls = url.split("/");
          var index = 0;
          var _iteratorNormalCompletion6 = true;
          var _didIteratorError6 = false;
          var _iteratorError6 = undefined;

          try {
            for (var _iterator6 = urls[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
              var step = _step6.value;

              if (step.startsWith("{") && step.endsWith("}")) {
                var col_key = step.substring(1, step.length - 1);

                if (operateData.length > 0) {
                  urls[index] = operateData[0][col_key];
                }
              }

              index++;
            }
          } catch (err) {
            _didIteratorError6 = true;
            _iteratorError6 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
                _iterator6.return();
              }
            } finally {
              if (_didIteratorError6) {
                throw _iteratorError6;
              }
            }
          }
        }

        address = urls.join("/");
      }

      window.location.href = address;
    },

    /**
     * url跳转打开tab页签
     */
    customizeurlFoward: function customizeurlFoward(item, operateData) {
      var address = "";
      var back_url = this.url_pre_data_handle(item, operateData);

      if (back_url != '') {
        address = back_url;
      } else {
        var url = item["operate_params"];

        if (url != '' && url != null && url != undefined) {
          var urls = url.split("/");
          var index = 0;
          var _iteratorNormalCompletion7 = true;
          var _didIteratorError7 = false;
          var _iteratorError7 = undefined;

          try {
            for (var _iterator7 = urls[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
              var step = _step7.value;

              if (step.startsWith("{") && step.endsWith("}")) {
                var col_key = step.substring(1, step.length - 1);

                if (operateData.length > 0) {
                  urls[index] = operateData[0][col_key];
                }
              }

              index++;
            }
          } catch (err) {
            _didIteratorError7 = true;
            _iteratorError7 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
                _iterator7.return();
              }
            } finally {
              if (_didIteratorError7) {
                throw _iteratorError7;
              }
            }
          }
        }

        address = urls.join("/");
      }

      var _tab_title = item.service_view_name;

      if (_tab_title == null || _tab_title == "" || _tab_title == undefined) {
        _tab_title = item.button_name;
      }

      this.forwardAddTab(address, item.service_view_name);
    },

    /**
     * url跳转前置处理
     */
    url_pre_data_handle: function url_pre_data_handle(item, operateData) {
      var back_url = "";
      var pre_data_handle = item.pre_data_handle;

      if (pre_data_handle != undefined && pre_data_handle != null && pre_data_handle != '') {
        back_url = eval("var zz=" + pre_data_handle + "(operateData); zz");
      }

      return back_url;
    },

    /**
     * 自定义页面弹出
     * @param {*} item 
     * @param {*} operateData 
     */
    customize_popup: function customize_popup(item, operateData) {
      operateData = this.pre_data_handle(item, operateData);
      var service = item["operate_service"];
      var new_conditions = [];
      var new_data = {};
      var operate_type = item.operate_type;
      var load_old_data = true;
      var operate_params = JSON.parse(item["operate_params"]);

      if (operate_params != '' && operate_params != null) {
        var load_data = operate_params.load_data;

        if (load_data == false) {
          load_old_data = load_data;
        }

        var packageData = this.getPackageData(item, operateData);
        new_data = packageData["data"];
        new_conditions = packageData["conditions"];
      }

      var params = {};
      params["service"] = service;
      params["condition"] = new_conditions;
      params["data"] = new_data;
      params["btninfo"] = item;

      if ("列表弹出" == operate_type) {
        params.formType = "list";
        this.popupDialog(params);
      } else if ("详情弹出" == operate_type) {
        params.formType = "detail";
        this.popupDialog(params);
      } else if ("增加弹出" == operate_type) {
        params.formType = "simple-add";
        this.popupDialog(params);
      } else if ("更新弹出" == operate_type) {
        var otherParams = {};
        otherParams["load_old_data"] = load_old_data;
        params.formType = "simple-update";
        otherParams["buttonInfo"] = item;
        params["otherParams"] = otherParams;
        this.popupDialog(params);
      } else if ("编辑列表弹出" == operate_type) {
        params.formType = "editgrid";
        this.popupDialog(params);
      } else if ("树列表弹出" == operate_type) {
        params.formType = "treegrid";
        this.popupDialog(params);
      } else {
        alert(operate_type + ":暂未实现");
      }
    },
    addListpoup: function addListpoup(service, conditions, mapcondition) {
      var data = {};
      var params = {};
      params.formType = "selectlist";
      params["service"] = service;
      params["condition"] = conditions;
      params["data"] = data;
      params["mapcondition"] = mapcondition;
      this.popupDialog(params);
    },

    /**
     * 自定义跳转
     * @param {*} item 
     * @param {*} operateData 
     */
    customize_forward: function customize_forward(item, operateData) {
      this.pre_data_handle(item, operateData);
      var service = item["operate_service"];
      var operate_type = item["operate_type"];
      var page_type = "";
      var bxRequests = [];
      var operate_params = JSON.parse(item["operate_params"]);

      if (operate_params != '' && operate_params != null) {
        var request = {};
        request["serviceName"] = item["operate_service"];
        var colNames = operate_params["colNames"];

        if (colNames != undefined && colNames != null && colNames != null) {
          request["colNames"] = colNames;
        }

        var order = operate_params["order"];

        if (order != undefined && order != null && order != null) {
          request["order"] = order;
        }

        var page = operate_params["page"];

        if (page != undefined && page != null && page != null) {
          request["page"] = page;
        }

        var data = operate_params["data"];
        var packageData = this.getPackageData(item, operateData);
        var new_data = packageData["data"];
        var new_conditions = packageData["conditions"];
        var requestData = [];
        request["data"] = requestData;

        if (JSON.stringify(new_data) == "{}") ; else {
          requestData.push(new_data);
        }

        request["condition"] = new_conditions;
        bxRequests.push(request);
      }

      console.log(JSON.stringify(bxRequests));
      var operate_params_str = "";

      if (bxRequests.length > 0) {
        operate_params_str = encodeURI(JSON.stringify(bxRequests[0]));
      }

      var urlParams = "/" + service;

      if ("列表跳转" == operate_type) {
        page_type = "list";
      } else if ("详情跳转" == operate_type) {
        page_type = "detail";
        urlParams = urlParams + "/-1";
      } else if ("增加跳转" == operate_type) {
        page_type = "simple-add";
      } else if ("更新跳转" == operate_type) {
        urlParams = urlParams + "/-1";
        page_type = "simple-update";
      } else if ("编辑列表跳转" == operate_type) {
        page_type = "editgrid";
      }

      var application = item["application"];
      urlParams = urlParams + "?operate_params=" + operate_params_str + "&time=" + new Date().getTime();

      if (application) {
        urlParams = urlParams + "&srvApp=" + application;
      }

      this.custAddTab(page_type, urlParams, item.service_view_name);
    },

    /**
     * 自定义更新
     * @param {*} item 
     * @param {*} operateData 
     */
    customize_update: function customize_update(item, operateData) {
      var _this2 = this;

      this.pre_data_handle(item, operateData);
      var bxRequests = [];
      var operate_params_cfg = item.operate_params;

      if (operateData.length <= 0 && operate_params_cfg != undefined && operate_params_cfg != "" && operate_params_cfg != null) {
        this.$alert("请选择操作数据", "提示", {
          confirmButtonText: "确定"
        });
      } else {
        var pre_confirm_msg = item["pre_confirm_msg"];

        if (pre_confirm_msg == "" || pre_confirm_msg == undefined || pre_confirm_msg == null) {
          pre_confirm_msg = "你确定要进行此操作?";
        }

        this.$confirm(pre_confirm_msg, "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        }).then(function () {
          var request = {};
          var requestData = [];
          request["serviceName"] = item["operate_service"];
          request["data"] = requestData;
          var operate_params = JSON.parse(item["operate_params"]);

          var packageData = _this2.getPackageData(item, operateData);

          var new_data = packageData["data"];
          var new_conditions = packageData["conditions"];

          if (JSON.stringify(new_data) == "{}") ; else {
            requestData.push(new_data);
          }

          request["condition"] = new_conditions;
          request["srvApp"] = item["application"];
          bxRequests.push(request);

          if (bxRequests.length > 0) {
            _this2.operate(bxRequests).then(function (response) {
              var state = response.body.state;

              if ("SUCCESS" == state) {
                var resultMessage = "操作成功!";

                if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
                  resultMessage = response.body.resultMessage;
                }

                _this2.$message({
                  type: "success",
                  message: resultMessage
                });

                _this2.suffix_actions(item); //me.loadTableData();

              } else {
                _this2.$message({
                  type: "error",
                  message: response.body.resultMessage
                });
              }
            });
          }
        }).catch(function (e) {
          console.error(e);

          _this2.$message({
            type: "info",
            message: "已取消"
          });
        });
      }
    },

    /**
     * 自定义增加
     * @param {*} item 
     * @param {*} operateData 
     */
    customize_add: function customize_add(item, operateData) {
      var _this3 = this;

      this.pre_data_handle(item, operateData);
      var operate_params_cfg = item.operate_params;
      var bxRequests = [];

      if (operateData.length <= 0 && operate_params_cfg != undefined && operate_params_cfg != "" && operate_params_cfg != null) {
        this.$alert("请选择操作数据", "提示", {
          confirmButtonText: "确定"
        });
      } else {
        var pre_confirm_msg = item["pre_confirm_msg"];

        if (pre_confirm_msg == "" || pre_confirm_msg == undefined || pre_confirm_msg == null) {
          pre_confirm_msg = "你确定要进行此操作?";
        }

        this.$confirm(pre_confirm_msg, "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        }).then(function () {
          var request = {};
          var requestData = [];
          request["serviceName"] = item["operate_service"];
          request["data"] = requestData;
          var operate_params = JSON.parse(item["operate_params"]);

          var packageData = _this3.getPackageData(item, operateData);

          var new_data = packageData["data"];
          var new_conditions = packageData["conditions"];

          if (JSON.stringify(new_data) == "{}") ; else {
            requestData.push(new_data);
          }

          request["condition"] = new_conditions;
          request["srvApp"] = item["application"];
          bxRequests.push(request);

          if (bxRequests.length > 0) {
            _this3.operate(bxRequests).then(function (response) {
              var state = response.body.state;

              if ("SUCCESS" == state) {
                var resultMessage = "操作成功!";

                if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
                  resultMessage = response.body.resultMessage;
                }

                _this3.$message({
                  type: "success",
                  message: resultMessage
                });

                _this3.suffix_actions(item); //me.loadTableData();

              } else {
                _this3.$message({
                  type: "error",
                  message: response.body.resultMessage
                });
              }
            });
          }
        }).catch(function () {
          _this3.$message({
            type: "info",
            message: "已取消"
          });
        });
      }
    },

    /**
     * 自定义删除
     * @param {*} item 
     * @param {*} operateData 
     */
    customize_delete: function customize_delete(item, operateData) {
      var _this4 = this;

      this.pre_data_handle(item, operateData);
      var bxRequests = [];
      var operate_params_cfg = item.operate_params;

      if (operateData.length <= 0 && operate_params_cfg != undefined && operate_params_cfg != "" && operate_params_cfg != null) {
        this.$alert("请选择操作数据", "提示", {
          confirmButtonText: "确定"
        });
      } else {
        var pre_confirm_msg = item["pre_confirm_msg"];

        if (pre_confirm_msg == "" || pre_confirm_msg == undefined || pre_confirm_msg == null) {
          pre_confirm_msg = "你确定要进行此操作?";
        }

        this.$confirm(pre_confirm_msg, "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        }).then(function () {
          var request = {};
          request["serviceName"] = item["operate_service"];
          // var condition = operate_params["condition"];

          var packageData = _this4.getPackageData(item, operateData);

          var new_data = packageData["data"];
          var new_conditions = packageData["conditions"];

          if (JSON.stringify(new_data) == "{}") ; else {
            request["data"] = [new_data];
          }

          request["condition"] = new_conditions;
          request["srvApp"] = item["application"];
          bxRequests.push(request);

          if (bxRequests.length > 0) {
            _this4.operate(bxRequests).then(function (response) {
              var state = response.body.state;

              if ("SUCCESS" == state) {
                var resultMessage = "操作成功!";

                if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
                  resultMessage = response.body.resultMessage;
                }

                _this4.$message({
                  type: "success",
                  message: resultMessage
                });

                _this4.suffix_actions(item);
              } else {
                _this4.$message({
                  type: "error",
                  message: response.body.resultMessage
                });
              }
            });
          }
        }).catch(function (e) {
          console.error(e);

          _this4.$message({
            type: "info",
            message: "已取消"
          });
        });
      }
    }
  }
};

//
var script$j = {
  name: "simple-add",
  components: {
    Loader: Loader,
    'field-editor': FieldEditor,
    Action: Action
  },
  mixins: [FormMixin, CustButtonMinx, FieldRedundantMixin, FormValidateMixin],
  props: {
    formType: {
      type: String,
      default: "add"
    }
  },
  data: function data() {
    return {
      service_name: this.service || this.$route.params.service_name
    };
  },
  computed: {},
  methods: {
    addSubmitAction: function addSubmitAction() {
      var _this = this;

      var submitAction = new ActionInfo();
      Vue.set(this.actions, "submit", submitAction);
      submitAction.name = 'submit';
      submitAction.label = '提交';
      submitAction.confirm = '是否确认提交?';

      submitAction.precheckFunc = function (_) {
        return _this.validateForm();
      };

      if (this.navAfterSubmit) {
        submitAction.nav2Location = {
          name: 'list',
          params: {
            service_name: this.loaderService
          }
        };
      }

      if (this.submit2Db) {
        var executor = new ExecutorInfo();
        submitAction.executor = executor;
        executor.service = this.service_name;
        this.bindExecutorValues(executor);
      } else {
        submitAction.invokeFunc = function (_) {
          _this.$emit("submitted2mem", _this.srvValFormModel(), _this.fields);
        };
      }

      return submitAction;
    },
    addResetAction: function addResetAction() {
      var _this2 = this;

      var resetAction = new ActionInfo();
      Vue.set(this.actions, "reset", resetAction);
      resetAction.name = 'reset';
      resetAction.label = '重置';

      resetAction.invokeFunc = function (_) {
        return _this2.resetForm();
      };

      return resetAction;
    },
    confLoader: function confLoader() {
      var loader = this.$refs.loader;
      loader.colNames = ['*'];
      loader.conditions = this.defaultConditions;
    },

    /**
     * 重置字段为初始值
     */
    resetForm: function resetForm() {
      console.info("resetform called");

      for (var key in this.fields) {
        this.fields[key].reset2Init();
      }
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.createFields(function (srvCol) {
      return srvCol.in_add != 0;
    }).then(function (response) {
      // make all field editable
      for (var fieldName in _this3.fields) {
        var field = _this3.fields[fieldName];

        if (field.info.srvCol.in_add != 1) {
          field.info.visible = false;
        }
      }

      if (response && response.data && response.data.formButton) {
        var formButtons = response.data.formButton;

        _this3.createActions(formButtons);
      }
    }).then(function (_) {
      _this3.emitEvent("metadata-loaded", _this3);

      if (_this3.defaultConditions && _this3.defaultConditions.length > 0) {
        _this3.confLoader();

        return _this3.$refs.loader.run();
      } else {
        _this3.resetForm();
      }
    }).then(function () {
      _this3.watchFormModel();

      _this3.formLoaded = true;
    }).then(function () {
      _this3.setFieldsDefaultValue();
    }).then(function () {
      _this3.$emit('form-loaded', _this3);
    });
  }
};

/* script */
const __vue_script__$j = script$j;

/* template */
var __vue_render__$j = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',[(_vm.formLoaded)?_c('el-form',{ref:"elform",attrs:{"model":_vm.formModel,"inline":false,"label-position":"right","label-width":"10rem"}},_vm._l((_vm.sections),function(formItems,section){return _c('el-row',{key:section},[_c('div',{staticClass:"el-col el-col-24 el-col-xl-24"},[(!!section)?_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(_vm.formatSection(section)))])]):_vm._e()]),_vm._v(" "),_vm._t(section + '-begin'),_vm._v(" "),_vm._l((formItems),function(formItem){return _c('div',[_c('field-editor',{key:formItem.field.info.name,attrs:{"field":formItem.field,"content-fields":formItem.contentFields,"form-has-invalid-error":_vm.hasInvalidField()},on:{"field-value-changed":function($event){return _vm.onFieldValueChanged($event)}}}),_vm._v(" "),_vm._t(formItem.field.info.name + '-append')],2)})],2)}),1):_vm._e()],1),_vm._v(" "),_c('loader',{ref:"loader",attrs:{"service":_vm.loaderService},on:{"loader-complete":function($event){return _vm.onLoaderComplete($event)}}}),_vm._v(" "),_c('el-row',[_c('el-col',{staticStyle:{"text-align":"center","padding":"6px","padding-bottom":"20px"},attrs:{"span":24}},_vm._l((_vm.actions),function(item){return _c('action',{directives:[{name:"show",rawName:"v-show",value:((item.visibleFunc)()),expression:"(item.visibleFunc)()"}],key:item.name,ref:item.name,refInFor:true,attrs:{"info":item},on:{"action-complete":function($event){return _vm.$emit('action-complete', $event);},"executor-complete":function($event){return _vm.$emit('executor-complete', $event)}}})}),1)],1)],1)};
var __vue_staticRenderFns__$j = [];

  /* style */
  const __vue_inject_styles__$j = function (inject) {
    if (!inject) return
    inject("data-v-71c089d4_0", { source: ".el-form-item__content[data-v-71c089d4]{line-height:initial;line-height:unset}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$j = "data-v-71c089d4";
  /* module identifier */
  const __vue_module_identifier__$j = undefined;
  /* functional template */
  const __vue_is_functional_template__$j = false;
  /* style inject SSR */
  

  
  var SimpleAdd = normalizeComponent_1(
    { render: __vue_render__$j, staticRenderFns: __vue_staticRenderFns__$j },
    __vue_inject_styles__$j,
    __vue_script__$j,
    __vue_scope_id__$j,
    __vue_is_functional_template__$j,
    __vue_module_identifier__$j,
    browser,
    undefined
  );

var script$k = {
  name: "simple-update",
  components: {
    FieldEditor: FieldEditor,
    action: Action,
    loader: Loader
  },
  mixins: [FormMixin, CustButtonMinx, FieldRedundantMixin, FormValidateMixin],
  props: {
    formType: {
      type: String,
      default: "update"
    },
    pkCol: {
      type: String
    },
    pk: {
      type: String
    },
    initLoad: {
      type: Boolean,
      default: true
    }
  },
  computed: {
    srvValFormModel4Update: function srvValFormModel4Update() {
      var model = {};

      for (var key in this.fields) {
        var field = this.fields[key];

        if (field.info.srvCol.in_update != 0 || field.info.name == "id") {
          model[key] = field.getSrvVal();
        }
      }

      return model;
    }
  },
  data: function data() {
    return {
      service_name: this.service || this.$route.params.service_name,

      /**
       * 敏感字段名称数组
       */
      encryptedCols: null
    };
  },
  methods: {
    addSubmitAction: function addSubmitAction() {
      var _this = this;

      var submitAction = new ActionInfo();
      Vue.set(this.actions, "submit", submitAction);
      submitAction.name = 'submit';
      submitAction.label = '提交';
      submitAction.confirm = '是否确认提交?';

      submitAction.precheckFunc = function (_) {
        return _this.validateForm();
      };

      if (this.navAfterSubmit) {
        submitAction.nav2Location = {
          name: 'list',
          params: {
            service_name: this.loaderService
          }
        };
      }

      if (this.submit2Db) {
        var executor = new ExecutorInfo();
        submitAction.executor = executor;
        executor.service = this.service_name;
        executor.ignoreNullValue = false;
        this.bindExecutorValues(executor);

        for (var i in executor.values) {
          var valueItem = executor.values[i];
          valueItem.enableFunc = this.createExecutorValueEnableFunc(valueItem.colName);
        }

        executor.conditions = this.buildConditions();
      } else {
        submitAction.invokeFunc = function (_) {
          _this.$emit("submitted2mem", _this.srvValFormModel(), _this.fields);
        };
      }

      return submitAction;
    },
    createExecutorValueEnableFunc: function createExecutorValueEnableFunc(colName) {
      var _this2 = this;

      return function (value) {
        try {
          var rawRow = _this2.$refs.loader.lastValidResp[0];
          var noPerm4Sensi = _this2.allFields[colName] && _this2.allFields[colName].noPerm4Sensi;
          var isDiff = rawRow[colName] != value.value;
          return isDiff && !noPerm4Sensi;
        } catch (e) {
          return true;
        }
      };
    },
    confLoader: function confLoader() {
      var loader = this.$refs.loader;

      loader.enableFunc = function (_) {
        return loader.conditions && loader.conditions.length > 0;
      };

      loader.colNames = Object.values(this.fields).map(function (item) {
        return item.info.name;
      });
      loader.conditions = this.buildConditions();
    },
    addResetAction: function addResetAction() {
      var _this3 = this;

      var reset = new ActionInfo();
      Vue.set(this.actions, "reset", reset);
      reset.name = 'reset';
      reset.label = '重置';

      reset.invokeFunc = function (_) {
        return _this3.resetForm();
      };

      return reset;
    },
    resetForm: function resetForm() {
      this.$refs.loader.run();
    }
  },
  created: function created() {},
  mounted: function mounted() {
    var _this4 = this;

    this.createFields(function (srvCol) {
      return srvCol.in_update != 0 || srvCol.in_detail != 0;
    }).then(function (response) {
      for (var fieldName in _this4.fields) {
        var field = _this4.fields[fieldName];

        if (field.info.srvCol.in_update != 1) {
          field.info.visible = false;
        }
      }

      if (response && response.data) {
        if (response.data.encryptedCols) {
          _this4.encryptedCols = response.data.encryptedCols;
        }

        if (response.data.formButton) {
          var formButtons = response.data.formButton;

          _this4.createActions(formButtons);
        }
      }

      _this4.confLoader();
    }).then(function (_) {
      _this4.emitEvent("metadata-loaded", _this4);

      if (_this4.initLoad) {
        var loader = _this4.$refs.loader;
        return loader.run().then(function (_) {
          loader.watchCondition();

          _this4.watchFormModel();
        });
      } else {
        return Promise.resolve(true);
      }
    }).then(function () {
      _this4.setFieldsDefaultValue();

      if (_this4.overrideData) {
        for (var key in _this4.overrideData) {
          if (_this4.fields[key]) {
            _this4.fields[key].setSrvVal(_this4.overrideData[key]);
          } else if ("_guid" === key) {
            // add field _guid
            var fakeSrvCol = {
              columns: key,
              seq: -1000
            };
            var fi = new FieldInfo(fakeSrvCol);
            var dummy = new Field(fi, _this4);
            fi.visible = "false";
            dummy.model = _this4.overrideData[key];
            Vue.set(_this4.fields, key, dummy);
          }
        }
      }

      _this4.emitEvent("data-loaded", _this4);

      _this4.formLoaded = true;
    }).then(function () {
      _this4.$emit("form-loaded", _this4);
    });
  }
};

/* script */
const __vue_script__$k = script$k;

/* template */
var __vue_render__$k = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{directives:[{name:"show",rawName:"v-show",value:(_vm.evalVisible()),expression:"evalVisible()"}]},[(_vm.formLoaded)?_c('el-form',{ref:"elform",attrs:{"model":_vm.formModel,"inline":false,"label-position":"right","label-width":"10rem"}},_vm._l((_vm.sections),function(formItems,section){return _c('el-row',{key:section},[_c('div',{staticClass:"el-col el-col-24 el-col-xl-24"},[(!!section)?_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(_vm.formatSection(section)))])]):_vm._e()]),_vm._v(" "),_vm._t(section + '-begin'),_vm._v(" "),_vm._l((formItems),function(formItem){return _c('div',[_c('field-editor',{key:formItem.field.info.name,attrs:{"field":formItem.field,"content-fields":formItem.contentFields,"form-has-invalid-error":_vm.hasInvalidField()},on:{"field-value-changed":function($event){return _vm.onFieldValueChanged($event)},"field-history-popup":_vm.onFieldHistoryPopup}}),_vm._v(" "),_vm._t(formItem.field.info.name + '-append')],2)})],2)}),1):_vm._e(),_vm._v(" "),_c('loader',{ref:"loader",attrs:{"service":_vm.loaderService},on:{"loader-complete":function($event){return _vm.onLoaderComplete($event)}}})],1),_vm._v(" "),_c('el-row',[_c('el-col',{staticStyle:{"text-align":"center","padding":"6px","padding-bottom":"20px"},attrs:{"span":24}},_vm._l((_vm.actions),function(item){return _c('action',{directives:[{name:"show",rawName:"v-show",value:((item.visibleFunc)()),expression:"(item.visibleFunc)()"}],key:item.name,ref:item.name,refInFor:true,attrs:{"info":item},on:{"action-complete":function($event){return _vm.$emit('action-complete', $event);},"executor-complete":function($event){return _vm.$emit('executor-complete', $event)}}})}),1)],1),_vm._v(" "),_c('el-dialog',{attrs:{"append-to-body":"","visible":!!_vm.fieldHisotryPopup,"title":"历史版本","width":"90%","close-on-click-modal":1==2},on:{"close":function($event){_vm.fieldHisotryPopup = false;}}},[_c('el-table',{staticStyle:{"width":"100%"},attrs:{"data":_vm.fieldWithHistory && _vm.fieldWithHistory.historyData,"stripe":"","border":""}},[_c('el-table-column',{attrs:{"prop":"value","label":"值"}}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"remark","label":"说明"}})],1)],1)],1)};
var __vue_staticRenderFns__$k = [];

  /* style */
  const __vue_inject_styles__$k = function (inject) {
    if (!inject) return
    inject("data-v-6f38ff57_0", { source: "div.el-form-item__content[data-v-6f38ff57]{line-height:initial;line-height:unset}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$k = "data-v-6f38ff57";
  /* module identifier */
  const __vue_module_identifier__$k = undefined;
  /* functional template */
  const __vue_is_functional_template__$k = false;
  /* style inject SSR */
  

  
  var SimpleUpdate = normalizeComponent_1(
    { render: __vue_render__$k, staticRenderFns: __vue_staticRenderFns__$k },
    __vue_inject_styles__$k,
    __vue_script__$k,
    __vue_scope_id__$k,
    __vue_is_functional_template__$k,
    __vue_module_identifier__$k,
    browser,
    undefined
  );

var ListPopupMixin = {
  props: {
    mode: {
      type: String
    }
  },
  data: function data() {
    return {
      activeForm: null,
      clickedRow: {}
    };
  },
  computed: {
    getAddService: function getAddService() {
      var addButton = this.gridButton.filter(function (item) {
        return item.button_type === "add";
      });

      if (addButton && addButton.length > 0) {
        return addButton[0].service_name;
      } else {
        return this.mainTable && this.mainTable.replace("bx", "srv") + "_add";
      }
    },
    getUpdateService: function getUpdateService() {
      var upateButton = this.rowButton.filter(function (item) {
        return item.button_type === "edit";
      });

      if (upateButton && upateButton.length > 0) {
        return upateButton[0].service_name;
      } else {
        return this.mainTable && this.mainTable.replace("bx", "srv") + "_update";
      }
    },
    getDefaultCondition4Duplicate: function getDefaultCondition4Duplicate() {
      var list = this;
      var condition = {
        colName: "id",
        ruleType: "eq",
        valueFunc: function valueFunc(_) {
          return list.clickedRow["duplicate"].id;
        }
      };
      return [condition];
    },
    getDefaultCondition4DuplicateDeep: function getDefaultCondition4DuplicateDeep() {
      var list = this;
      var condition = {
        colName: "id",
        ruleType: "eq",
        valueFunc: function valueFunc(_) {
          return list.clickedRow["duplicatedeep"].id;
        }
      };
      return [condition];
    }
  },
  methods: {
    onFilterFormLoaded: function onFilterFormLoaded(form) {
      console.info("onFilterFormLoaded" + form.name);
      this.$emit('filter-form-loaded', form);
    },
    onAddFormLoaded: function onAddFormLoaded(form) {
      console.info("onAddFormLoaded" + form.name);

      if (form.actions.submit) {
        form.actions.submit.nav2Location = null;
      }

      this.$emit('add-form-loaded', this.$refs['add-form']);
    },
    onUpdateFormLoaded: function onUpdateFormLoaded(form) {
      console.info("onUpdateFormLoaded" + form.name);

      if (form.actions.submit) {
        form.actions.submit.nav2Location = null;
      }

      this.$emit('update-form-loaded', this.$refs['update-form']);
    },
    onAddChildFormLoaded: function onAddChildFormLoaded() {
      var form = this.$refs['add-child-form'];
      form.actions.submit.nav2Location = null;
      var row = this.clickedRow["add-child"];

      if (row) {
        var parentNoField = form.fields[this.parentCol];
        parentNoField.setSrvVal(row[this.noCol]);
      }

      this.$emit('add-child-form-loaded', this.$refs['add-child-form']);
    },
    onDuplicateFormLoaded: function onDuplicateFormLoaded(form) {
      form.actions.submit.nav2Location = null; // mask special fields like password:

      Object.values(form.fields).filter(function (field) {
        return field.info.type === "Password";
      }).forEach(function (field) {
        return field.setSrvVal(null);
      });
      this.$emit('duplicate-form-loaded', form);
    },
    onAddFormActionComplete: function onAddFormActionComplete(action) {
      if (action == 'submit') {
        this.activeForm = null;
      }

      if (!this.isMem()) {
        this.loadTableData();
      }
    },
    onUpdateFormActionComplete: function onUpdateFormActionComplete(action) {
      if (action == 'submit') {
        this.activeForm = null;
      }

      if (!this.isMem()) {
        this.loadTableData();
      }
    },
    onAddChildFormActionComplete: function onAddChildFormActionComplete(action) {
      if (action == 'submit') {
        this.activeForm = null;
      }

      if (!this.isMem()) {
        this.loadTableData();
      }
    },
    getClickedRowPk: function getClickedRowPk(type) {
      if (this.clickedRow && this.clickedRow[type] && this.clickedRow[type].id) {
        return this.clickedRow[type].id.toString();
      } else {
        return null;
      }
    },
    onAddClicked: function onAddClicked() {
      this.activeForm = "add";
    },
    onAddListClicked: function onAddListClicked() {
      this.activeForm = "addlist";
    },
    onUpdateClicked: function onUpdateClicked(row) {
      var _this = this;

      var type = 'update';
      this.$set(this.clickedRow, type, row);
      this.$nextTick(function (_) {
        _this.activeForm = 'update';
      });
    },
    onAddChildClicked: function onAddChildClicked(row) {
      this.$set(this.clickedRow, 'add-child', row);
      this.activeForm = "add-child";
    },
    onDuplicateClicked: function onDuplicateClicked(row) {
      this.$set(this.clickedRow, 'duplicate', row);

      if (this.inplaceEditMode) {
        this.duplicateRowInplace(row);
      } else {
        this.activeForm = "duplicate";
      }
    },
    onDuplicateDeepClicked: function onDuplicateDeepClicked(row) {
      this.$set(this.clickedRow, 'duplicatedeep', row);
      this.activeForm = "duplicatedeep";
    },
    onRowDbClicked: function onRowDbClicked(row, event) {
      this.$emit('row-dbclick', row, event);
    },
    toggleFilters: function toggleFilters(item) {
      if (this.selectFormShow === true) {
        this.selectFormShow = false;
        item.button_cls = null;
      } else {
        this.selectFormShow = true;
        item.button_cls = 'success';
      }
    }
  }
};

var InlineForm =
/*#__PURE__*/
function () {
  function InlineForm(fieldsMap, modelDecorator) {
    _classCallCheck(this, InlineForm);

    this.fields = fieldsMap;
    this.modelDecorator = modelDecorator;
  }

  _createClass(InlineForm, [{
    key: "srvValFormModel",
    value: function srvValFormModel() {
      var model = {};

      for (var key in this.fields) {
        model[key] = this.fields[key].getSrvVal();
      }

      if (this.modelDecorator) {
        var decorator = this.modelDecorator;
        decorator(model);
      }

      return model;
    }
  }]);

  return InlineForm;
}();

var MemListMixin = {
  props: {
    storageType: {
      type: String,
      default: "db"
    },
    inplaceEdit: {
      type: Boolean,
      default: true
    },
    defaultInplaceEditMode: {
      type: Boolean,
      default: false
    },
    defaultDirtyFlags: {
      type: String,
      default: "pristine"
    }
  },
  data: function data() {
    return {
      listLoaded: false,
      inplaceEditMode: false,
      // array item is Object, whose key is select srvcol.columns, value is field
      inplaceEditData: [],
      addSrvCols: [],
      updateSrvCols: [],
      mainTable: null,
      unmodifiedGridData: []
    };
  },
  methods: {
    isMem: function isMem() {
      return 'mem' === this.storageType || this.inplaceEditMode;
    },
    deleteData: function deleteData(deleteRows, exeservice) {
      if (this.isMem()) {
        this.onDeleteSubmitted(deleteRows);
        return Promise.resolve(true);
      } else {
        return this.deleteDataAndSave(deleteRows, exeservice);
      }
    },
    hasDirtyData: function hasDirtyData() {
      return this.gridData.filter(function (item) {
        return item._dirtyFlags;
      }).length > 0;
    },
    refresh: function refresh() {
      var _this = this;

      if (this.isMem() && this.hasDirtyData()) {
        this.$confirm("此操作将丢失所有修改, 是否继续?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        }).then(function () {
          _this.inplaceEditMode = false;

          try {
            _this.loadTableData();
          } catch (e) {
            console.warn("err when load table data: " + e);
            _this.gridData = [];
          }
        });
      } else {
        this.loadTableData();
      }
    },
    addFinderDispCol: function addFinderDispCol(fields, srvvalRow) {
      for (var fieldName in fields) {
        var field = fields[fieldName];

        if (field.info && field.info.isFinder()) {
          srvvalRow["_" + fieldName + "_disp"] = field.getDispVal();
        }
      }
    },
    onAdd2MemSubmitted: function onAdd2MemSubmitted(srvvalRow, fields) {
      console.debug("onAddSubmitted");

      if (!this.isMem()) {
        return;
      }

      this.addFinderDispCol(fields, srvvalRow);
      srvvalRow._dirtyFlags = "add";
      srvvalRow._guid = this.guid();
      console.debug("add row to grid data");

      if (this.isTreeGrid()) {
        srvvalRow.is_leaf = "是";
        this.mergeAdd(null, null, srvvalRow);
      } else {
        if (this.inplaceEditMode) {
          // set the returned row to gridData standby row
          var standbyRow = this.gridData[this.gridData.length - 1];

          for (var key in srvvalRow) {
            if (key && (!key.startsWith("_") || key.endsWith("_disp"))) {
              standbyRow[key] = srvvalRow[key];
            }
          }

          standbyRow._dirtyFlags = "add";
          this.syncRow2Fields(standbyRow);
          this.addStandbyRow();
        } else {
          this.gridData.push(srvvalRow);
        }
      }

      this.syncRow2Fields(srvvalRow);
    },
    onUpdate2MemSubmitted: function onUpdate2MemSubmitted(srvvalRow, fields) {
      if (!this.isMem()) {
        return;
      }

      console.debug("update row to grid data");
      this.addFinderDispCol(fields, srvvalRow);

      var target = _.find(this.gridData, function (item) {
        return srvvalRow.id && item.id == srvvalRow.id;
      });

      target = target || _.find(this.gridData, function (item) {
        return item._guid == srvvalRow._guid;
      });

      _.assign(target, srvvalRow);

      this.syncRow2Fields(target);
      this.updateDirtyFlags(target, "update");
    },
    onDeleteSubmitted: function onDeleteSubmitted(deleteRows) {
      var _this2 = this;

      deleteRows.forEach(function (item) {
        var target = _.find(_this2.gridData, function (i) {
          return item.id && i.id == item.id;
        });

        if (target) {
          _this2.updateDirtyFlags(target, "delete");
        } else {
          // to delete an mem-added item, but left standby row
          if ("standby" !== item._dirtyFlags) {
            var index = _.findIndex(_this2.gridData, function (i) {
              return item._guid && i._guid == item._guid;
            });

            _this2.gridData.splice(index, 1);
          }
        }
      });
    },
    syncRow2Fields: function syncRow2Fields(targetRow) {
      // sync dbrow to fields
      if (this.inplaceEditData) {
        var fieldMap = _.find(this.inplaceEditData, function (item) {
          return item.id && item.id === targetRow.id;
        });

        fieldMap = fieldMap || _.find(this.inplaceEditData, function (item) {
          return item._guid == targetRow._guid;
        });

        if (fieldMap) {
          for (var key in targetRow) {
            if (fieldMap[key] && fieldMap[key].setSrvVal) {
              console.debug("set ".concat(targetRow[key], " to field ").concat(key));
              fieldMap[key].setSrvVal(targetRow[key]);
            }
          }
        }
      }
    },
    duplicateRowInplace: function duplicateRowInplace(row) {
      var copy = _.cloneDeep(row);

      this.$set(copy, "_dirtyFlags", "add");
      delete copy.id;
      delete copy._guid;

      var standbyRow = _.find(this.gridData, function (item) {
        return item._dirtyFlags === "standby";
      });

      _.assign(standbyRow, copy);

      this.syncRow2Fields(standbyRow);
      this.addStandbyRow();
    },
    onUndoSubmitted: function onUndoSubmitted(row) {
      var _this3 = this;

      if (!row._dirtyFlags) {
        return;
      }

      if (row._dirtyFlags === "add") {
        var posi = _.findIndex(this.gridData, function (i) {
          return i._guid == row._guid;
        });

        this.gridData.splice(posi, 1);
        this.$forceUpdate();
      } else if (row._dirtyFlags === "delete") {
        this.$set(row, "_dirtyFlags", null);
      } else if (row._dirtyFlags === "update") {
        var conditions = [{
          colName: "id",
          ruleType: "eq",
          value: row.id
        }];
        this.select(this.service_name, conditions).then(function (response) {
          var dbRow = response.data.data[0];

          var targetRow = _.find(_this3.gridData, function (i) {
            return row.id && i.id == row.id;
          });

          _.assign(targetRow, dbRow);

          _this3.syncRow2Fields(targetRow);

          _this3.$set(row, "_dirtyFlags", null);
        });
      } else {
        console.error("unsupported dirty flag ".concat(row._dirtyFlags));
      }
    },

    /**
     *
     * @param row
     * @param action: add, delete, update
     * @returns {string}
     */
    updateDirtyFlags: function updateDirtyFlags(row, action) {
      if (!row._dirtyFlags) {
        this.$set(row, "_dirtyFlags", action);
      } else {
        if ("add" === row._dirtyFlags) ; else if ("delete" === row._dirtyFlags) ; else if ("update" === row._dirtyFlags) {
          if ("delete" === action) {
            this.$set(row, "_dirtyFlags", action);
          }
        } else if ("pristine" === row._dirtyFlags) {
          this.$set(row, "_dirtyFlags", action);
        }
      }
    },
    tableRowClassName: function tableRowClassName(_ref) {
      var row = _ref.row,
          rowIndex = _ref.rowIndex;

      if ("add" === row._dirtyFlags) {
        return 'add-row';
      } else if ("delete" === row._dirtyFlags) {
        return 'delete-row';
      } else if ("update" === row._dirtyFlags) {
        return 'update-row';
      }

      return '';
    },
    isTreeGrid: function isTreeGrid() {
      return this.hasOwnProperty("noCol") && this.hasOwnProperty("parentCol");
    },
    isInplaceEdit: function isInplaceEdit() {
      return this.inplaceEdit && this.inplaceEditMode;
    },
    addStandbyRow: function addStandbyRow() {
      // add a blank row to griddata:
      var newRow = {
        _dirtyFlags: "standby",
        _guid: this.guid()
      };
      this.gridData.push(newRow);
      console.debug("add standby row, uid: ".concat(this._uid, ", row count: ").concat(this.gridData.length));

      for (var i in this.srv_cols) {
        var srvCol = this.srv_cols[i];

        if (srvCol.in_list !== 0) {
          this.$set(newRow, srvCol.columns, null);
        }
      }

      this.buildEditData(newRow);
      this.$emit("standby-row-added", newRow);
    },
    buildEditData: function buildEditData(row) {
      var _this4 = this;

      var isAdd = row._dirtyFlags === "standby" || row._dirtyFlags === "add";
      var editSrvCols = isAdd ? this.addSrvCols : this.updateSrvCols;
      var srvcolInFlag = isAdd ? "in_add" : "in_update";
      var fields = editSrvCols.filter(function (item) {
        var editable = item[srvcolInFlag] === 1 && item.table_column !== "id";
        var inListCols = !!_.find(_this4.srv_cols, function (listcol) {
          return listcol.table_name === item.table_name && listcol.table_column === item.table_column;
        });

        if (editable && inListCols) {
          console.debug("to create edit srvcol ".concat(item.columns, ": ").concat(editable, ", ").concat(inListCols));
        }

        return editable && inListCols;
      }).map(function (item) {
        var fi = new FieldInfo(item, "update");

        var listCol = _.find(_this4.srv_cols, function (col) {
          return col.table_name === item.table_name && col.table_column === item.table_column;
        });

        var field = new Field(fi, null);
        field.key = listCol.columns;
        field.setSrvVal(row[field.key]);
        return field;
      });
      var _fieldMap = {
        id: row.id,
        _guid: row._guid
      };
      var list = this;

      var formModelDecorator = function formModelDecorator(formModel) {
        if (formModel) {
          formModel._gridData = list.gridData;
        }
      }; // create an virtual form for this row


      var inlineForm = new InlineForm(fields, formModelDecorator);
      fields.forEach(function (field) {
        field.form = inlineForm;
        _fieldMap[field.key] = field;
      });
      this.buildDependentFields(_fieldMap);
      this.inplaceEditData.push(_fieldMap); // watch the row

      this.$watch(function () {
        return row;
      }, function (newVal, oldVal) {
        var formModelFunc = function formModelFunc(_) {
          return row;
        };

        this.handleRedundantOnFormModelChange(newVal, oldVal, _fieldMap, formModelFunc);
      }, {
        deep: true
      });
    },
    onSaveAllClicked: function onSaveAllClicked() {
      var _this5 = this;

      this.$confirm("是否继续提交?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "info"
      }).then(function () {
        return _this5.buildExecutors4Edit();
      }).then(function (executors) {
        var queriesArr = executors.map(function (executor) {
          var ComponentClass = Vue.extend(Executor);
          var executorComp = new ComponentClass({});
          var queries = executorComp.buildQuery(executor);
          console.info("build query: " + executor.service);
          return queries;
        });

        var flatQuries = _.flatten(queriesArr).filter(function (item) {
          return !!item;
        });

        var submitP = Promise.resolve(true);

        if (flatQuries.length > 0) {
          _this5.santinizeQueries(flatQuries);

          submitP = _this5.operate(flatQuries);
        }

        return submitP.then(function (response) {
          var ok = response === true || response && response.data && response.data.state == 'SUCCESS';

          if (ok) {
            _this5.inplaceEditMode = false;

            _this5.loadTableData();
          }
        });
      });
    },
    loadAddUpdateSrvCols: function loadAddUpdateSrvCols() {
      var _this6 = this;

      var addServiceP = !this.addService || this.addSrvCols.length > 0 ? Promise.resolve(false) : this.loadColsV2(this.addService, "add");
      return addServiceP.then(function (response) {
        if (response && response.body) {
          var data = response.body.data;
          _this6.addSrvCols = data.srv_cols;
        }

        return !_this6.updateService || _this6.updateSrvCols.length > 0 ? Promise.resolve(false) : _this6.loadColsV2(_this6.updateService, "update");
      }).then(function (response) {
        if (response && response.body) {
          var data = response.body.data;
          _this6.updateSrvCols = data.srv_cols;
        }
      });
    },
    onInplaceEditClicked: function onInplaceEditClicked() {
      var _this7 = this;

      if (!this.inplaceEditMode === true) {
        console.warn("onInplaceEditClicked, uid: " + this._uid);
        this.loadAddUpdateSrvCols().then(function (_) {
          console.warn("onInplaceEditClicked, end uid: ".concat(_this7._uid, ", row count: ").concat(_this7.gridData.length)); // clear old data

          _this7.inplaceEditData.splice(0, _this7.inplaceEditData.length);

          _this7.gridData.forEach(function (row) {
            _this7.$set(row, "_dirtyFlags", _this7.defaultDirtyFlags);

            if (_this7.defaultDirtyFlags === "add") {
              _this7.$set(row, "_guid", _this7.guid());

              _this7.$set(row, "id", null);
            }

            _this7.buildEditData(row);
          });

          _this7.addStandbyRow();

          _this7.$nextTick(function (_) {
            _this7.inplaceEditMode = true;
            console.warn("cascade call onInplaceEditClicked for inlinelist, uid: " + _this7._uid);

            if (_this7.$refs.inlineList) {
              _this7.$refs.inlineList.filter(function (item) {
                return item.listLoaded;
              }).forEach(function (item) {
                return item.onInplaceEditClicked();
              });
            }
          });
        });
      }
    },
    findEditField: function findEditField(row, listSrvColName) {
      // for disp col, find the real fk col
      if (listSrvColName.startsWith("_") && listSrvColName.endsWith("_disp")) {
        listSrvColName = listSrvColName.substring(1).substring(0, listSrvColName.length - 6);
      }

      var fieldMap = _.find(this.inplaceEditData, function (item) {
        return item.id && item.id === row.id || item._guid && item._guid === row._guid;
      });

      var field = fieldMap ? fieldMap[listSrvColName] : null;
      return field;
    },
    syncField2Row: function syncField2Row(field, row, key) {
      // sync data from fields to row
      if (field && field.getSrvVal && field.editor) {
        if (field.info.isFinder()) {
          var valueCol = key;

          if (key.startsWith("_") && key.endsWith("_disp")) {
            valueCol = key.substring(1, key.length - "_disp".length);
          }

          row[valueCol] = field.getSrvVal();
          var dispCol = "_".concat(valueCol, "_disp");
          row[dispCol] = field.getDispVal();
        } else {
          row[key] = field.getSrvVal();
        }
      }
    },
    onCellBlur: function onCellBlur(row, column) {
      if (!row) {
        return;
      }

      if ("standby" === row._dirtyFlags) {
        this.$set(row, "_dirtyFlags", "add");
        this.addStandbyRow();
      } else if (!row._dirtyFlags || "pristine" === row._dirtyFlags) {
        this.$set(row, "_dirtyFlags", "update");
      }
    },
    onCellValueChanged: function onCellValueChanged(row, column) {
      if (!row) {
        return;
      }

      var field = this.findEditField(row, column);

      if (field) {
        var fieldMap = _.find(this.inplaceEditData, function (item) {
          return item.id && item.id === row.id || item._guid && item._guid === row._guid;
        });

        this.handleFieldFkRedundant(field, fieldMap);
      }

      this.syncField2Row(field, row, column);
    },
    addInlineListExecutors: function addInlineListExecutors(executor) {
      if (!_.isEmpty(this.$refs.inlineList)) {
        executor.children = [];
        var addedInlineLists = new Set();
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          var _loop = function _loop() {
            var inlineList = _step.value;
            var fk = inlineList.foreignKey;
            var fkName = fk.constraint_name;

            if (addedInlineLists.has(fkName)) {
              return "continue";
            }

            addedInlineLists.add(fkName);

            var inlineListDataFunc = function inlineListDataFunc(rtDataCtx) {
              return rtDataCtx._inlineLists[fkName];
            };

            inlineList.buildExecutors4Edit(inlineListDataFunc).then(function (subexecutors) {
              subexecutors.forEach(function (item) {
                // add depend key
                var dependKey = {
                  type: "column",
                  add_col: fk.column_name,
                  depend_key: fk.referenced_column_name
                };
                item.dependKeys = [dependKey];
                executor.children.push(item);
              });
            });
          };

          for (var _iterator = this.$refs.inlineList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var _ret = _loop();

            if (_ret === "continue") continue;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    },
    buildAddExecutor: function buildAddExecutor(listDataFunc) {
      var vm = this;
      var values = this.addSrvCols.filter(function (srvcol) {
        return srvcol.in_add !== 0;
      }).map(function (srvcol) {
        return {
          colName: srvcol.columns,
          valueExpr: "item.".concat(srvcol.columns)
        };
      });

      var itemsFunc = function itemsFunc(rtDataCtx) {
        var listData = listDataFunc && listDataFunc(rtDataCtx) || vm.gridData;
        return listData.filter(function (item) {
          return item._dirtyFlags === "add";
        });
      };

      var executor = {
        service: this.addService,
        values: values,
        itemsFunc: itemsFunc,
        ignoreNullValue: true
      };
      this.addInlineListExecutors(executor);
      return executor;
    },
    buildUpdateExecutor: function buildUpdateExecutor() {
      var vm = this;
      var values = this.updateSrvCols.filter(function (srvcol) {
        return srvcol.in_update !== 0;
      }).map(function (srvcol) {
        return {
          colName: srvcol.columns,
          valueExpr: "item.".concat(srvcol.columns),
          enableFunc: function enableFunc(value, item) {
            var newValue = item[srvcol.columns];

            var oldRow = _.find(vm.unmodifiedGridData, function (unmodified) {
              return unmodified.id === item.id;
            });

            if (!oldRow) {
              return false;
            } else {
              var oldValue = oldRow[srvcol.columns];
              console.debug("old: ".concat(oldValue, ", new: ").concat(newValue));
              return oldValue != newValue;
            }
          }
        };
      });
      var conditions = [{
        colName: "id",
        ruleType: "eq",
        valueExpr: "item.id"
      }];

      var itemsFunc = function itemsFunc(_) {
        return vm.gridData.filter(function (item) {
          return item._dirtyFlags === "update";
        });
      };

      var executor = {
        service: this.updateService,
        values: values,
        conditions: conditions,
        itemsFunc: itemsFunc,
        itemsPolicy: "servicePerItem",
        ignoreNullValue: true
      };
      this.addInlineListExecutors(executor);
      return executor;
    },
    buildDeleteExecutor: function buildDeleteExecutor() {
      var vm = this;
      return {
        service: this.deleteService,
        conditions: [{
          colName: "id",
          ruleType: "in",
          required: true,
          valueFunc: function valueFunc() {
            var ids = vm.gridData.filter(function (item) {
              return item._dirtyFlags === "delete";
            }).map(function (item) {
              return item.id;
            });
            return _.join(ids, ",");
          }
        }]
      };
    },
    buildExecutors4Edit: function buildExecutors4Edit(listDataFunc) {
      var _this8 = this;

      return this.loadAddUpdateSrvCols().then(function (_) {
        var executors = [];
        executors.push(_this8.buildAddExecutor(listDataFunc));
        executors.push(_this8.buildUpdateExecutor(listDataFunc));
        executors.push(_this8.buildDeleteExecutor(listDataFunc));
        return executors;
      });
    },
    isFkWithDispCol: function isFkWithDispCol(srvcol) {
      var dispCol = "_".concat(srvcol, "_disp");
      return !!_.find(this.srv_cols, function (item) {
        return item.columns === dispCol;
      });
    },
    isDirtyRow: function isDirtyRow(row) {
      return row._dirtyFlags && row._dirtyFlags !== 'pristine' && row._dirtyFlags !== 'standby';
    },
    getDirtyRowTagType: function getDirtyRowTagType(row) {
      if (this.isDirtyRow(row)) {
        var map = {
          add: "success",
          update: "warning",
          delete: "danger"
        };
        return map[row._dirtyFlags];
      }
    },
    getDirtyRowTagText: function getDirtyRowTagText(row) {
      if (this.isDirtyRow(row)) {
        var map = {
          add: "添加",
          update: "编辑",
          delete: "删除"
        };
        return map[row._dirtyFlags];
      }
    }
  },
  mounted: function mounted() {
    this.$watch(function () {
      return this.gridData;
    }, function (newVal, oldVal) {
      if (!this.listLoaded) {
        return;
      }

      console.info("grid data changed");
      this.$emit("grid-data-changed", this);
    }, {
      deep: true
    });
  }
};

function dispCol2ValCol(dispColName) {
  var colName = dispColName.substring(1, dispColName.length);
  colName = colName.substring(0, colName.indexOf("_disp"));
  return colName;
}

var GridInfo = function GridInfo() {
  _classCallCheck(this, GridInfo);

  this.pageSizes = [2, 5, 10, 15, 20, 50, 100];
  this.selection = true;
  this.gridHeader = [{
    "column": "date",
    //列字段
    "label": "日期",
    //列中文名称
    "width": 180,
    //表格宽度
    "show": true,
    //显示隐藏
    "sortable": true,
    //是否排序
    "filters": [{
      text: '2016-05-01',
      value: '2016-05-01'
    }] //过滤

  }, {
    "column": "name",
    "label": "姓名",
    "sortable": true,
    "show": true
  }, {
    "column": "address",
    "label": "地址",
    "show": true
  }, {
    "column": "tag",
    "label": "家",
    "show": true
  }];
  this.gridData = [{
    id: 1,
    date: '2016-05-02',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1518 弄',
    tag: '家'
  }, {
    id: 2,
    date: '2016-05-04',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1517 弄',
    tag: '公司'
  }, {
    id: 3,
    date: '2016-05-01',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1519 弄',
    tag: '家'
  }, {
    date: '2016-05-03',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1516 弄',
    tag: '公司'
  }, {
    date: '2016-05-02',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1518 弄',
    tag: '家'
  }, {
    date: '2016-05-04',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1517 弄',
    tag: '公司'
  }, {
    date: '2016-05-01',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1519 弄',
    tag: '家'
  }, {
    date: '2016-05-03',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1516 弄',
    tag: '公司'
  }, {
    date: '2016-05-02',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1518 弄',
    tag: '家'
  }, {
    date: '2016-05-04',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1517 弄',
    tag: '公司'
  }, {
    date: '2016-05-01',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1519 弄',
    tag: '家'
  }, {
    date: '2016-05-03',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1516 弄',
    tag: '公司'
  }, {
    date: '2016-05-02',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1518 弄',
    tag: '家'
  }, {
    date: '2016-05-04',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1517 弄',
    tag: '公司'
  }, {
    date: '2016-05-01',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1519 弄',
    tag: '家'
  }, {
    date: '2016-05-03',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1516 弄',
    tag: '公司'
  }, {
    date: '2016-05-02',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1518 弄',
    tag: '家'
  }, {
    date: '2016-05-04',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1517 弄',
    tag: '公司'
  }, {
    date: '2016-05-01',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1519 弄',
    tag: '家'
  }, {
    date: '2016-05-03',
    name: '王小虎',
    address: '上海市普陀区金沙江路 1516 弄',
    tag: '公司'
  }];
  this.gridButton = [{
    "name": "刷新",
    "type": "refresh",
    "show": true //显示隐藏

  }, {
    "name": "查询",
    "type": "select",
    "show": true
  }, {
    "name": "添加",
    "type": "add",
    "show": true
  }, {
    "name": "批量删除",
    "type": "delete",
    "show": true
  }, {
    "name": "导入",
    "type": "import",
    "show": true
  }, {
    "name": "导出",
    "type": "export",
    "show": true
  }, {
    "name": "申请",
    "type": "apply",
    "show": false
  }, {
    "name": "收缩表单",
    "type": "shrink",
    "show": true
  }];
  this.rowButton = [{
    "name": "删除",
    "show": true,
    "type": "delete"
  }, {
    "name": "编辑",
    "show": true,
    "type": "edit"
  }, {
    "name": "查看",
    "show": true,
    "type": "detail"
  }];
};

var ActionWrapper4Button =
/*#__PURE__*/
function () {
  function ActionWrapper4Button() {
    _classCallCheck(this, ActionWrapper4Button);

    this.visible = true;
    this.disable = false;
    this.handlerFunc = null;
  }

  _createClass(ActionWrapper4Button, [{
    key: "setVisible",
    value: function setVisible(value) {
      this.visible = value;
    }
  }, {
    key: "evalVisible",
    value: function evalVisible(rowData) {
      return this.evalVersatileFlagVar(this.visible, rowData);
    }
  }, {
    key: "setDisable",
    value: function setDisable(value) {
      this.disable = value;
    }
  }, {
    key: "evalDisable",
    value: function evalDisable(rowData) {
      return this.evalVersatileFlagVar(this.disable, rowData);
    }
  }, {
    key: "setLabel",
    value: function setLabel(value) {
      this.button_name = value;
    }
  }, {
    key: "setSeq",
    value: function setSeq(value) {
      this.seq = value;
    }
  }, {
    key: "evalVersatileFlagVar",
    value: function evalVersatileFlagVar(flagVar, rowData) {
      if (_$1.isBoolean(flagVar)) {
        return flagVar;
      } else if (_$1.isFunction(flagVar)) {
        return flagVar(rowData);
      } else {
        return !!flagVar;
      }
    }
  }]);

  return ActionWrapper4Button;
}();
function wrapButton(button) {
  var extend = _$1.extend(new ActionWrapper4Button(), button);

  return extend;
}
var Wrapper4Header =
/*#__PURE__*/
function () {
  function Wrapper4Header() {
    _classCallCheck(this, Wrapper4Header);

    this.visible = true;
  }

  _createClass(Wrapper4Header, [{
    key: "setVisible",
    value: function setVisible(value) {
      this.visible = value;
    }
  }, {
    key: "evalVisible",
    value: function evalVisible(rowData) {
      return this.evalVersatileFlagVar(this.visible, rowData);
    }
  }, {
    key: "setLabel",
    value: function setLabel(value) {
      this.button_name = value;
    }
  }, {
    key: "setSeq",
    value: function setSeq(value) {
      this.seq = value;
    }
  }, {
    key: "evalVersatileFlagVar",
    value: function evalVersatileFlagVar(flagVar) {
      if (_$1.isBoolean(flagVar)) {
        return flagVar;
      } else if (_$1.isFunction(flagVar)) {
        return flagVar();
      } else {
        return !!flagVar;
      }
    }
  }]);

  return Wrapper4Header;
}();
function wrapHeader(header) {
  var extend = _$1.extend(new Wrapper4Header(), header);

  return extend;
}

function MissRequiredConditionError() {}
var ListMixin = {
  data: function data() {
    return {
      visible: true,
      isMarker: true,
      service_name: this.service,
      //||this.$route.params.service_name,
      addService: null,
      updateService: null,
      deleteService: null,
      card_no: this.card,
      //||this.$route.params.card_no,
      card_cfg: null,
      cardInstance: null,
      init_card_data: false,
      selectFormShow: false,
      defaultapi: "select",
      gridHeader: [],
      groupHeaders: [],
      noramlHeaders: [],
      header_view_model: 'group',
      groupHeaderCols: {},
      selection: true,
      gridData: [],
      defGridData: [],
      gridButton: [],
      rowButton: [],
      multipleSelection: [],
      condition: [],
      searchFormCondition: [],
      srv_cols: null,
      order: [],
      moneyCols: [],
      keyValueData: {},
      filterCondition: [],
      custCondition: [],
      gridPage: {
        pageSizes: [],
        pageSize: 10,
        currentPage: 1,
        total: 0
      },
      activeForm: null,
      clickedRow: {},
      ifFlexTableHeader: false,
      inlineLists: [],
      uid: null,
      list_inner_add: false,
      scroll: 0
    };
  },
  props: {
    name: {
      type: String,
      default: 'main'
    },
    service: {
      type: String
    },
    card: {
      type: String
    },
    pageSize: {
      type: Number,
      default: null
    },
    searchForm: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    defDataPara: {
      type: Object,
      default: function _default() {
        return null;
      }
    },
    readOnly: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    listType: {
      type: String,
      default: function _default() {
        return "list";
      }
    },
    existsGridButton: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    existsRowButton: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    defaultCondition: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    defaultOrder: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    operate_params: {
      type: Object,
      default: function _default() {
        return null;
      }
    },
    hideButtons: {
      type: Boolean,
      default: false
    },
    hidePagination: {
      type: Boolean,
      default: false
    },
    mapcondition: {
      type: Object
    },
    childforeignkey: {
      type: Object
    },
    childforeignvalue: {
      type: String
    },
    mergeCol: {
      type: Boolean,
      default: true
    },
    gridDataFilter: {
      type: Function,
      default: null
    },
    tableHeight: {
      type: Number,
      default: null
    }
  },
  computed: {
    sortedGridButtons: function sortedGridButtons() {
      var sorted = this.gridButton.slice();
      sorted.sort(function (a, b) {
        return a.seq - b.seq;
      });
      return sorted;
    },
    sortedRowButtons: function sortedRowButtons() {
      var sorted = this.rowButton.slice();
      sorted.sort(function (a, b) {
        return a.seq - b.seq;
      });
      return sorted;
    },
    columnHeaders: function columnHeaders() {
      return this.gridHeader.filter(function (item) {
        return item.col_type !== "InlineList";
      });
    },
    inlineListHeaders: function inlineListHeaders() {
      var inlineLists = this.gridHeader.filter(function (item) {
        return item.col_type === "InlineList";
      });
      return inlineLists.length > 0 && inlineLists;
    },
    maxTableHeight: function maxTableHeight() {
      var ratio = 0.8;
      var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
      h = h <= 1 ? 800 : h;
      console.info("max table height: " + h);
      return this.tableHeight || h * ratio;
    }
  },
  methods: {
    setVisible: function setVisible(value) {
      this.visible = value;
    },
    evalVisible: function evalVisible() {
      return this.evalVersatileFlagVar(this.visible);
    },
    getButtonName: function getButtonName(button, row) {
      return button.button_name_expr && this.evalBxExpr(button.button_name_expr, row, this) || button.button_name;
    },
    getRows: function getRows() {
      return this.gridData;
    },
    getSelectedRows: function getSelectedRows() {
      return this.multipleSelection;
    },
    formModelDecorator: function formModelDecorator(formModel) {
      this.$set(formModel, "_gridData", this.gridData);
    },
    filterChange: function filterChange(filters) {
      this.filterCondition = [];

      for (var key in filters) {
        var cMap = {};

        if (filters[key].length > 0) {
          cMap["colName"] = key;
          cMap["value"] = filters[key].toString();
          cMap["ruleType"] = "in";
          this.filterCondition.push(cMap);
        }
      }

      this.gridPage.currentPage = 1;
      this.loadTableData();
    },
    cardLoadinit: function cardLoadinit(card) {
      this.cardInstance = card;
    },
    getshowAlign: function getshowAlign(item) {
      if (item.col_type == "Money") {
        return "right";
      } else {
        return "left";
      }
    },
    formatValue: function formatValue(row, header) {
      var key_col = header.column;
      var value = row[key_col];

      if (this.header_view_model == 'group' && this.groupHeaderCols[key_col]) {
        var str = "";
        var gheaders = this.groupHeaderCols[key_col];

        if (gheaders.length == 1) {
          str = value;
        } else {
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = gheaders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var gHeader = _step.value;

              if (gHeader["in_list"] === 1) {
                var gcol = gHeader["columns"];
                var gvalue = row[gcol];
                var label = gHeader["label"];
                gvalue = this.singleFormatValue(gvalue, gHeader, key_col);

                if (str == '') {
                  str = label + ": " + gvalue;
                } else {
                  str = str + "\n" + label + ": " + gvalue;
                }
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return != null) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        }

        return str;
      } else {
        return this.singleFormatValue(value, header, null, row);
      }
    },
    singleFormatValue: function singleFormatValue(value, header, key_col, row) {
      var userDeptTypes = ["User", "Dept", "bxsys_user", "bxsys_dept"];

      if (this.moneyCols.indexOf(key_col) != -1) {
        return this.formartMoney(value + "");
      } else {
        var type = header.col_type;

        if (type === "UserList") {
          var items = JSON.parse(value);

          if (items && items.length) {
            return _.join(items.map(function (item) {
              return item.disp;
            }), ",");
          }
        } else if (type === "Boolean") {
          return !!value ? "是" : "否";
        } else if (_.includes(userDeptTypes, type)) {
          // 尝试从row 寻找 _disp
          var dispColName = "_".concat(header.column, "_disp");

          if (row.hasOwnProperty(dispColName)) {
            return row[dispColName];
          }
        } else if (hotTableMetadata[type] && this.$store) {
          // 尝试从hottable 寻找 _disp
          var table = hotTableMetadata[type].table;
          var valueCol = hotTableMetadata[type].valueCol;
          var dispCol = hotTableMetadata[type].dispCol;
          var tableData = this.$store.getters.getTableData(table);

          if (tableData && tableData.length > 0) {
            var target = tableData.filter(function (item) {
              return item[valueCol] === value;
            });
            return target && target.length && target[0][dispCol];
          } else {
            console.warn("not find target for hot table ");
            return value;
          }
        }

        return value;
      }
    },
    getDispExps: function getDispExps(item, data) {
      var result = true;

      try {
        var disp_exps = item.disp_exps;

        if (disp_exps != undefined && disp_exps != "" && disp_exps != null) {
          result = eval(disp_exps);
        }
      } catch (err) {
        console.error("按钮表达式执行错误");
      }

      return result;
    },
    handleSortChange: function handleSortChange(column) {
      this.order = [];

      if (column["column"] != null) {
        if ("ascending" == column["order"]) {
          this.order.push({
            colName: column["prop"],
            orderType: "asc"
          });
        } else {
          this.order.push({
            colName: column["prop"],
            orderType: "desc"
          });
        }
      }

      this.loadTableData();
    },
    deleteRowData: function deleteRowData(rowData, exeservice) {
      var dataArray = [rowData];
      this.deleteData(dataArray, exeservice);
    },
    batchDeleteData: function batchDeleteData(exeservice) {
      if (this.multipleSelection.length == 0) {
        this.$alert("请选择删除数据", "提示", {
          confirmButtonText: "确定"
        });
      } else {
        this.deleteData(this.multipleSelection, exeservice);
      }
    },
    deleteDataAndSave: function deleteDataAndSave(deleteRowData, exeservice) {
      var _this = this;

      this.$confirm("此操作将永久删除该数据, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "info"
      }).then(function () {
        var deleteRequests = [];
        var request = {};
        request["serviceName"] = exeservice;
        var cMap = {
          colName: "id",
          ruleType: "in"
        };
        var cVule = [];
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;

        try {
          for (var _iterator2 = deleteRowData[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var item = _step2.value;
            cVule.push(item.id);
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
              _iterator2.return();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }

        cMap["value"] = cVule.toString();
        request["condition"] = [cMap];
        deleteRequests.push(request);

        _this.operate(deleteRequests).then(function (response) {
          var state = response.body.state;

          if ("SUCCESS" == state) {
            _this.$message({
              type: "success",
              message: "删除成功!"
            });

            if (_this.gridData.length == cVule.length) {
              if (_this.gridPage.currentPage > 1) {
                _this.gridPage.currentPage = _this.gridPage.currentPage - 1;
              }
            }

            _this.loadTableData();
          } else {
            _this.$message({
              type: "error",
              message: response.body.resultMessage
            });
          }
        });
      }).catch(function () {
        _this.$message({
          type: "info",
          message: "已取消删除"
        });
      });
    },
    gridButtonClick: function gridButtonClick(button) {
      var _this2 = this;

      var type = button.button_type;
      var exeservice = button.service_name;
      var tab_title = button.service_view_name;
      var operate_type = button.operate_type;

      if (button.action_validate && this.evalActionValidator(button.action_validate, this.gridData) !== true) {
        return;
      }

      if ("select" == type) {
        this.toggleFilters(button);
      } else if ("extjs" === type) {
        button.handlerFunc && button.handlerFunc();
      } else if ("shrink" == type) {
        this.selectFormShow = false;
      } else if ("refresh" == type) {
        this.refresh();
      } else if ("batch_delete" == type) {
        this.batchDeleteData(exeservice);
      } else if ("add" == type) {
        if (operate_type == '页内添加') {
          if (this.list_inner_add) {
            this.list_inner_add = false;
          } else {
            this.list_inner_add = true;
          }
        } else {
          this.onAddClicked();
        }
      } else if ("confirmadd" == type) {
        if (this.multipleSelection.length == 0) {
          this.$alert("请选择需要添加的数据", "提示", {
            confirmButtonText: "确定"
          });
        } else {
          var relation_col = "";
          var referenced_column_name = "";
          var map_table = this.mapcondition.map_table;
          var table_col_realtion = button.table_col_realtion;
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;

          try {
            for (var _iterator3 = table_col_realtion[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var item = _step3.value;

              if (item.table_name == map_table) {
                relation_col = item["column_name"];
                referenced_column_name = item["referenced_column_name"];
                break;
              }
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }

          if (relation_col != "") {
            var bxRequests = [];
            var bxRequest = {};
            bxRequests.push(bxRequest);
            bxRequest.serviceName = this.mapcondition.addservice;
            bxRequest.data = [];
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
              for (var _iterator4 = this.multipleSelection[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                var item = _step4.value;
                var dataMap = {};
                dataMap[this.mapcondition.input_col_name] = this.mapcondition.input_col_value;
                dataMap[relation_col] = item[referenced_column_name];
                bxRequest.data.push(dataMap);
              }
            } catch (err) {
              _didIteratorError4 = true;
              _iteratorError4 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                  _iterator4.return();
                }
              } finally {
                if (_didIteratorError4) {
                  throw _iteratorError4;
                }
              }
            }

            this.operate(bxRequests).then(function (response) {
              var state = response.body.state;

              if ("SUCCESS" == state) {
                _this2.$message({
                  type: "success",
                  message: "添加成功!"
                });

                _this2.$emit('action-complete');
              } else {
                _this2.$message({
                  type: "error",
                  message: response.body.resultMessage
                });
              }
            });
          }
        }
      } else if ("batchadd" == type) {
        var select_optionlist = "";
        var child_column_name = this.childforeignkey.column_name;
        var map_table_name = "";
        var _iteratorNormalCompletion5 = true;
        var _didIteratorError5 = false;
        var _iteratorError5 = undefined;

        try {
          for (var _iterator5 = this.srv_cols[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
            var item = _step5.value;
            var columns = item.columns;
            var option_list_v2 = item.option_list_v2;

            if (option_list_v2 != undefined && option_list_v2 != null && option_list_v2 != '') {
              if (columns != child_column_name) {
                select_optionlist = option_list_v2;
                map_table_name = item.table_name;
              }
            }
          }
        } catch (err) {
          _didIteratorError5 = true;
          _iteratorError5 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
              _iterator5.return();
            }
          } finally {
            if (_didIteratorError5) {
              throw _iteratorError5;
            }
          }
        }

        if (select_optionlist != '') {
          var mapcondition = {};
          mapcondition.map_table = map_table_name;
          mapcondition.input_col_name = child_column_name;
          mapcondition.input_col_value = this.childforeignvalue;
          mapcondition.addservice = exeservice;
          var service = select_optionlist.serviceName;
          var condition = [];
          this.addListpoup(service, condition, mapcondition);
        } //批量添加

      } else if ("batchupdate" == type) {
        if (this.header_view_model != 'normal') {
          this.header_view_model = "normal";
          this.gridHeader = this.noramlHeaders;
        }

        this.onInplaceEditClicked();
      } else if ("saveall" == type) {
        this.onSaveAllClicked();
      } else if ("apply" == type) {
        var urlParams = "/" + exeservice + "?time=" + new Date().getTime();
        this.addTab("start-proc", urlParams, tab_title);
      } else if ("export" == type) {
        this.onExportClicked();
      } else if ("import" == type) {
        this.onImportClicked();
      } else if ("customize" == type) {
        var operate_params_cfg = button.operate_params;
        var select_data = button.select_data;

        if (this.multipleSelection <= 0 && operate_params_cfg != undefined && operate_params_cfg != "" && operate_params_cfg != null && (select_data == null || select_data == undefined || select_data == '是')) {
          this.$alert("请选择操作数据", "提示", {
            confirmButtonText: "确定"
          });
        } else {

          if (button.operate_type == "修改") {
            this.customize_update(button, this.multipleSelection);
          } else if (button.operate_type == "删除") {
            this.customize_delete(operate_item, this.multipleSelection);
          } else if (button.operate_type == "增加") {
            this.customize_add(button, this.multipleSelection);
          } else {
            button.listservice = this.service;
            this.customizeOperate(button, this.multipleSelection);
          }
        }
      }
    },
    rowButtonClick: function rowButtonClick(operate_item, row) {
      var button = operate_item;
      var type = operate_item.button_type;
      var exeservice = operate_item.service_name;
      var tab_title = operate_item.service_view_name;

      if (button.action_validate && this.evalActionValidator(button.action_validate, row) !== true) {
        return;
      }

      var operate_service = operate_item.operate_service;

      if (operate_service) {
        exeservice = operate_service;
      }

      if ("delete" == type) {
        this.deleteRowData(row, exeservice);
      } else if ("edit" == type) {
        this.onUpdateClicked(row);
      } else if ("detail" == type) {
        var urlParams = "/" + exeservice + "/" + row.id + "?srvApp=" + this.resolveDefaultSrvApp();
        var disp_col = operate_item._disp_col;
        var disp_value = row[disp_col];
        tab_title = tab_title.replace('查询', '');

        if (disp_value != null && disp_value != undefined && disp_value != '') {
          tab_title = disp_value + "(" + tab_title + "详情)";
        } else {
          tab_title = tab_title + "详情";
        }

        this.addTab("detail", urlParams, tab_title);
      } else if ("procdetail" == type) {
        var urlParams = "/" + row["proc_instance_no"];
        this.addTab("procdetail", urlParams, tab_title);
      } else if ("duplicate" == type) {
        this.onDuplicateClicked(row);
      } else if ("duplicatedeep" == type) {
        this.onDuplicateDeepClicked(row);
      } else if ("closeproc" == type) {
        this.procOperate(row, operate_item);
      } else if ("proccancel" == type) {
        this.procOperate(row, operate_item);
      } else if ("deleteproc" == type) {
        this.procOperate(row, operate_item);
      } else if ("startproc" == type) {
        //开启数据流程
        this.start_dataproc(row, operate_item);
      } else if ("deletedraft" == type) {
        this.procOperate(row, operate_item);
      } else if ("extjs" === type) {
        operate_item.handlerFunc && operate_item.handlerFunc(row);
      } else if ("customize" == type) {
        var data = [row];

        if (operate_item.operate_type == "修改") {
          this.customize_update(operate_item, data);
        } else if (operate_item.operate_type == "删除") {
          this.customize_delete(operate_item, data);
        } else if (operate_item.operate_type == "增加") {
          this.customize_add(operate_item, data);
        } else {
          operate_item.listservice = this.service;
          this.customizeOperate(operate_item, data);
        }
      }
    },
    //开启数据流程
    start_dataproc: function start_dataproc(row, buttinfo) {
      var _this3 = this;

      var me = this;
      this.$confirm("您确定要执行此操作?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "info"
      }).then(function () {
        var requests = [];
        var request = {};
        requests.push(request);
        var parent_proc_instance_no = row.parent_proc_instance_no;

        if (parent_proc_instance_no) {
          request["parent_proc_instance_no"] = parent_proc_instance_no;
          request["proc_no"] = JSON.parse(buttinfo.operate_params).proc_no;
          var condition = [{
            "colName": "id",
            "value": row.id,
            "ruleType": "eq"
          }];
          request["condition"] = condition;
        }

        _this3.startDataProc(requests).then(function (response) {
          var state = response.body.state;

          if ("SUCCESS" == state) {
            var resultMessage = "操作成功!";

            if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
              resultMessage = response.body.resultMessage;
            }

            _this3.$message({
              type: "success",
              message: resultMessage
            });

            me.loadTableData();
          } else {
            _this3.$message({
              type: "error",
              message: response.body.resultMessage
            });
          }
        });
      }).catch(function () {
        _this3.$message({
          type: "info",
          message: "已取消"
        });
      });
    },
    procOperate: function procOperate(row, buttinfo) {
      var _this4 = this;

      var me = this;
      var type = buttinfo.button_type;

      if ("closeproc" == type) {
        this.$prompt('', '请输入关闭原因', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          inputValidator: function inputValidator(value) {
            if (value == "" || value == undefined && value == null) {
              return "请输入关闭原因";
            }
          }
        }).then(function (_ref) {
          var value = _ref.value;

          if (value == "" || value == undefined && value == null) {
            _this4.$message({
              type: 'info',
              message: '请输入关闭原因'
            });
          } else {
            me.procRelateOperate(row, buttinfo, value);
          }
        }).catch(function () {
          _this4.$message({
            type: 'info',
            message: '取消操作'
          });
        });
      } else if ("proccancel" == type) {
        this.$prompt('', '请输入撤销原因', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          inputValidator: function inputValidator(value) {
            if (value == "" || value == undefined && value == null) {
              return "请输入撤销原因";
            }
          }
        }).then(function (_ref2) {
          var value = _ref2.value;

          if (value == "" || value == undefined && value == null) {
            _this4.$message({
              type: 'info',
              message: '请输入撤销原因'
            });
          } else {
            me.procRelateOperate(row, buttinfo, value);
          }
        }).catch(function () {
          _this4.$message({
            type: 'info',
            message: '取消操作'
          });
        });
      } else {
        this.$confirm("您确定要执行此操作?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "info"
        }).then(function () {
          me.procRelateOperate(row, buttinfo);
        }).catch(function () {
          _this4.$message({
            type: "info",
            message: "已取消"
          });
        });
      }
    },
    procRelateOperate: function procRelateOperate(row, buttinfo, remark) {
      var _this5 = this;

      var me = this;
      var type = buttinfo.button_type;
      var requests = [];
      var request = {};
      request["serviceName"] = buttinfo.service_name;
      var cMap = {
        colName: "proc_instance_no",
        ruleType: "eq",
        value: row.proc_instance_no
      };
      request["condition"] = [cMap];

      if (remark != undefined && remark != null && remark != '') {
        var dataMap = {
          "remark": remark
        };
        request["data"] = [dataMap];
      }

      requests.push(request);
      this.operate(requests).then(function (response) {
        var state = response.body.state;

        if ("SUCCESS" == state) {
          var resultMessage = "操作成功!";

          if (resultMessage != '' && resultMessage != null && resultMessage != undefined) {
            resultMessage = response.body.resultMessage;
          }

          _this5.$message({
            type: "success",
            message: resultMessage
          });

          me.loadTableData();
        } else {
          _this5.$message({
            type: "error",
            message: response.body.resultMessage
          });
        }
      });
    },
    handleSelectionChange: function handleSelectionChange(val) {
      this.multipleSelection = val;
    },
    handleCurrentChange: function handleCurrentChange(val) {
      this.gridPage.currentPage = val;
      this.loadTableData();
    },
    handleSizeChange: function handleSizeChange(val) {
      this.gridPage.pageSize = val;
      this.pageSize = val;
      this.loadTableData();
    },
    query: function query(condtion) {
      this.searchFormCondition = condtion;
      this.gridPage.currentPage = 1;
      this.condition = [];
      this.loadTableData();
    },
    buildQueryConditions: function buildQueryConditions() {
      var _this6 = this;

      this.condition = [];
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = this.custCondition[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var cMap = _step6.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
            _iterator6.return();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = this.filterCondition[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var cMap = _step7.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
            _iterator7.return();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }

      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = this.searchFormCondition[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var cMap = _step8.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
            _iterator8.return();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }

      var _iteratorNormalCompletion9 = true;
      var _didIteratorError9 = false;
      var _iteratorError9 = undefined;

      try {
        for (var _iterator9 = this.defaultCondition[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
          var cMap = _step9.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError9 = true;
        _iteratorError9 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {
            _iterator9.return();
          }
        } finally {
          if (_didIteratorError9) {
            throw _iteratorError9;
          }
        }
      }

      this.condition.filter(function (item) {
        return item.dynamic === true;
      }).forEach(function (item) {
        item.value = eval(item.value);
      });
      this.condition.filter(function (item) {
        return item.valueFunc && _.isFunction(item.valueFunc);
      }).forEach(function (item) {
        return item.value = item.valueFunc();
      });
      var hasEmptyRequiredCondition = this.condition.filter(function (item) {
        return item.required === true && _this6.isEmptyCondition(item);
      }).length > 0;

      if (hasEmptyRequiredCondition) {
        throw new MissRequiredConditionError();
      }

      return this.condition;
    },
    loadTableData: function loadTableData() {
      var _this7 = this;

      var loading = this.$loading({
        lock: true,
        text: '加载中',
        spinner: 'el-icon-loading',
        background: 'rgba(0, 0, 0, 0.7)'
      });

      try {
        this.buildQueryConditions();
        var pageSize = this.pageSize || this.gridPage.pageSize;
        var page = this.isMem() || this.gridPage && pageSize < 0 ? null : {
          pageNo: this.gridPage.currentPage,
          rownumber: pageSize
        };

        if (this.listType == "wait" || this.listType == "mine" || this.listType == "myall" || this.listType == "processed") {
          //加载表格数据
          return this.selectproc(this.service_name, this.condition, page, this.order, this.listType).then(function (response) {
            var listData = response.body.data;
            var _iteratorNormalCompletion10 = true;
            var _didIteratorError10 = false;
            var _iteratorError10 = undefined;

            try {
              for (var _iterator10 = listData[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
                var row = _step10.value;

                for (var key in _this7.keyValueData) {
                  var listdata = _this7.keyValueData[key];
                  var _iteratorNormalCompletion11 = true;
                  var _didIteratorError11 = false;
                  var _iteratorError11 = undefined;

                  try {
                    for (var _iterator11 = listdata[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
                      var map = _step11.value;

                      if (row[key] == map["value"]) {
                        row[key] = map["text"];
                        break;
                      }
                    }
                  } catch (err) {
                    _didIteratorError11 = true;
                    _iteratorError11 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {
                        _iterator11.return();
                      }
                    } finally {
                      if (_didIteratorError11) {
                        throw _iteratorError11;
                      }
                    }
                  }
                }
              }
            } catch (err) {
              _didIteratorError10 = true;
              _iteratorError10 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion10 && _iterator10.return != null) {
                  _iterator10.return();
                }
              } finally {
                if (_didIteratorError10) {
                  throw _iteratorError10;
                }
              }
            }

            _this7.gridData = listData;

            if (response.body["page"] != undefined) {
              _this7.gridPage.currentPage = response.body["page"]["pageNo"];
              _this7.gridPage.total = response.body["page"]["total"];
            }

            _this7.init_card_data = true;

            if (_this7.cardInstance != null) {
              _this7.cardInstance.setCardData(_this7.gridData);
            }

            _this7.$emit("gridData-change", response.body, _this7.listType);

            loading.close();
          });
        } else {
          //加载表格数据
          if (this.defaultapi == "select") {
            return this.select(this.service_name, this.condition, page, this.order, null, this.mapcondition).then(function (response) {
              console.info("list data loaded: uid: " + _this7.uid);
              _this7.gridData = response.body.data;
              _this7.unmodifiedGridData = _.cloneDeep(_this7.gridData); // this.gridData.splice(0, this.gridData.length - 1)

              var listData = response.body.data;

              if (_this7.gridDataFilter) {
                var filter = _this7.gridDataFilter;
                filter(listData);
              }

              var _iteratorNormalCompletion12 = true;
              var _didIteratorError12 = false;
              var _iteratorError12 = undefined;

              try {
                for (var _iterator12 = listData[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
                  var row = _step12.value;

                  for (var key in _this7.keyValueData) {
                    var listdata = _this7.keyValueData[key];
                    var _iteratorNormalCompletion13 = true;
                    var _didIteratorError13 = false;
                    var _iteratorError13 = undefined;

                    try {
                      for (var _iterator13 = listdata[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
                        var map = _step13.value;

                        if (row[key] == map["value"]) {
                          row[key] = map["text"];
                          break;
                        }
                      }
                    } catch (err) {
                      _didIteratorError13 = true;
                      _iteratorError13 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion13 && _iterator13.return != null) {
                          _iterator13.return();
                        }
                      } finally {
                        if (_didIteratorError13) {
                          throw _iteratorError13;
                        }
                      }
                    }
                  }
                }
              } catch (err) {
                _didIteratorError12 = true;
                _iteratorError12 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion12 && _iterator12.return != null) {
                    _iterator12.return();
                  }
                } finally {
                  if (_didIteratorError12) {
                    throw _iteratorError12;
                  }
                }
              }

              if (response.body["page"]) {
                _this7.gridPage.currentPage = response.body["page"]["pageNo"];
                _this7.gridPage.total = response.body["page"]["total"];
              }

              _this7.init_card_data = true;

              if (_this7.cardInstance != null) {
                _this7.cardInstance.setCardData(_this7.gridData);
              }

              _this7.$emit("list-data-loaded", _this7);

              loading.close();
            });
          } else {
            return this.selectByUser(this.service_name, this.condition, page, this.order, null, this.mapcondition).then(function (response) {
              _this7.gridData = response.body.data;
              _this7.unmodifiedGridData = _.cloneDeep(_this7.gridData); // this.gridData.splice(0, this.gridData.length - 1)

              var listData = response.body.data;
              var _iteratorNormalCompletion14 = true;
              var _didIteratorError14 = false;
              var _iteratorError14 = undefined;

              try {
                for (var _iterator14 = listData[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
                  var row = _step14.value;

                  for (var key in _this7.keyValueData) {
                    var listdata = _this7.keyValueData[key];
                    var _iteratorNormalCompletion15 = true;
                    var _didIteratorError15 = false;
                    var _iteratorError15 = undefined;

                    try {
                      for (var _iterator15 = listdata[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
                        var map = _step15.value;

                        if (row[key] == map["value"]) {
                          row[key] = map["text"];
                          break;
                        }
                      }
                    } catch (err) {
                      _didIteratorError15 = true;
                      _iteratorError15 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion15 && _iterator15.return != null) {
                          _iterator15.return();
                        }
                      } finally {
                        if (_didIteratorError15) {
                          throw _iteratorError15;
                        }
                      }
                    }
                  }
                }
              } catch (err) {
                _didIteratorError14 = true;
                _iteratorError14 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion14 && _iterator14.return != null) {
                    _iterator14.return();
                  }
                } finally {
                  if (_didIteratorError14) {
                    throw _iteratorError14;
                  }
                }
              }

              if (response.body["page"]) {
                _this7.gridPage.currentPage = response.body["page"]["pageNo"];
                _this7.gridPage.total = response.body["page"]["total"];
              }

              _this7.init_card_data = true;

              if (_this7.cardInstance != null) {
                _this7.cardInstance.setCardData(_this7.gridData);
              }

              _this7.$emit("list-data-loaded", _this7);

              loading.close();
            });
          }
        }
      } catch (e) {
        loading.close();
        throw e;
      }
    },
    createCustomLinkUrlFunc: function createCustomLinkUrlFunc(linkUrlFunc) {

      return function (data) {
        var ret = eval("var zz=" + linkUrlFunc + "(data, vm); zz");
        return ret;
      };
    },
    addInlineListHeader: function addInlineListHeader(srvcol) {
      // add grid header for inline-list
      var header = {};
      header.column = "inline_list";
      header.label = srvcol.label;
      header.width = "";
      header.show = true;
      header.sortable = false;
      header.list_min_width = "600";
      header.col_type = srvcol.col_type;
      header.service_name = srvcol.service_name;
      header.foreign_key = srvcol.foreign_key;
      header.inline_list_select_service = srvcol.inline_list_select_service;
      var fk = header.foreign_key;

      header.defaultCondition = function (row) {
        return [{
          colName: fk.column_name,
          ruleType: "eq",
          valueFunc: function valueFunc(_) {
            return row[fk.referenced_column_name];
          }
        }];
      };

      this.gridHeader.push(header);
      this.inlineLists.push(header);
      console.warn("add inline list header" + srvcol.label);
    },
    buildGridHeaders: function buildGridHeaders(srv_cols) {
      //sectionlist分组
      this.gridHeader = [];
      var cur_section_list = "";
      var exist_section_list = false;
      var _iteratorNormalCompletion16 = true;
      var _didIteratorError16 = false;
      var _iteratorError16 = undefined;

      try {
        for (var _iterator16 = srv_cols[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {
          var serviceCol = _step16.value;
          var colName = serviceCol["columns"];

          if (colName == "id") {
            continue;
          }

          if (serviceCol.col_type === "InlineList") {
            this.addInlineListHeader(serviceCol);
            continue;
          }

          var header = {};
          header.srvcol = serviceCol;
          var colType = serviceCol["col_type"];
          header["column"] = colName;
          header["label"] = serviceCol["label"];
          header["width"] = "";
          header["show"] = serviceCol["in_list"] === 1;
          header["sortable"] = true;
          header["col_type"] = colType;
          header["list_min_width"] = serviceCol["list_min_width"];

          if (serviceCol["col_type"] == "Enum" || serviceCol["col_type"] == "Dict") {
            var filters = [];
            var option_list_v2 = serviceCol["option_list_v2"];

            if (option_list_v2 && _.isArray(option_list_v2)) {
              var _iteratorNormalCompletion17 = true;
              var _didIteratorError17 = false;
              var _iteratorError17 = undefined;

              try {
                for (var _iterator17 = option_list_v2[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
                  var item = _step17.value;
                  filters.push({
                    text: item["label"],
                    value: item["value"]
                  });
                }
              } catch (err) {
                _didIteratorError17 = true;
                _iteratorError17 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion17 && _iterator17.return != null) {
                    _iterator17.return();
                  }
                } finally {
                  if (_didIteratorError17) {
                    throw _iteratorError17;
                  }
                }
              }
            }

            this.keyValueData[header["column"]] = filters;
            header["filters"] = filters;
          } else if (serviceCol["col_type"] == "Money") {
            this.moneyCols.push(colName);
          } else if (hotTableMetadata[colType]) {
            this.loadHotTableData(hotTableMetadata[colType]);
          }

          var isBuiltinFinder = hotTableMetadata[colType];

          if (!!isBuiltinFinder) {
            serviceCol.option_list_v2 = {
              serviceName: hotTableMetadata[colType].selectService,
              refed_col: hotTableMetadata[colType].valueCol,
              srv_app: hotTableMetadata[colType].srvApp
            };
          } // make link url func


          var isFinder = colType && (colType.startsWith("bx") || isBuiltinFinder);
          var isDisp = colType && colType.startsWith("_") && colType.endsWith("_disp");
          var linkUrlFunc = serviceCol.link_url_func;

          if (linkUrlFunc) {
            console.warn("create custom url func");
            header.linkUrlFunc = this.createCustomLinkUrlFunc(linkUrlFunc);
          } else if (isFinder || isDisp) {
            var dataColName = isDisp ? dispCol2ValCol(colName) : colName;
            header.linkUrlFunc = createLinkUrlFunc(serviceCol.option_list_v2, dataColName);
          }

          var section_list = serviceCol["section_list"];

          if (section_list != undefined && section_list != null && section_list != '' && this.mergeCol) {
            exist_section_list = true;
            var groupHeadr = {};
            cur_section_list = section_list;
            groupHeadr["column"] = section_list;
            groupHeadr["label"] = section_list;
            groupHeadr["width"] = "";
            groupHeadr["show"] = true;
            groupHeadr["sortable"] = false;
            groupHeadr["col_type"] = String;
            var gheaders = this.groupHeaderCols[section_list];

            if (gheaders == undefined || gheaders == null && gheaders == '') {
              this.groupHeaders.push(groupHeadr);
            }

            if (gheaders != undefined && gheaders != null && gheaders != '') {
              this.groupHeaderCols[section_list].push(serviceCol);
            } else {
              this.groupHeaderCols[section_list] = [];
              this.groupHeaderCols[section_list].push(serviceCol);
            }
          } else {
            var gheaders = this.groupHeaderCols[cur_section_list];

            if (gheaders != undefined && gheaders != null && gheaders != '') {
              this.groupHeaderCols[cur_section_list].push(serviceCol);
            } else {
              this.groupHeaders.push(header);
              this.groupHeaderCols[header["column"]] = [];
              this.groupHeaderCols[header["column"]].push(serviceCol);
            }
          }

          this.gridHeader.push(wrapHeader(header));
        }
      } catch (err) {
        _didIteratorError16 = true;
        _iteratorError16 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion16 && _iterator16.return != null) {
            _iterator16.return();
          }
        } finally {
          if (_didIteratorError16) {
            throw _iteratorError16;
          }
        }
      }

      this.noramlHeaders = this.bxDeepClone(this.gridHeader);

      if (exist_section_list) {
        this.gridHeader = this.groupHeaders;
      } else {
        this.header_view_model = 'normal';
      }
    },
    initGridData: function () {
      var _initGridData = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var _this9 = this;

        var gidInfo, use_type, tar_cfg, tar_srv, col_rel, query_srv, query_condition;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                gidInfo = new GridInfo();
                this.gridPage.pageSizes = gidInfo.pageSizes;
                this.selection = gidInfo.selection;
                use_type = this.listType;

                if (this.listType == "wait" || this.listType == "mine" || this.listType == "myall" || this.listType == "processed") {
                  use_type = "proclist";
                } //加载serviceCols


                _context.next = 7;
                return this.loadColsV2(this.service_name, use_type).then(function (response) {
                  var respData = response.body.data;
                  var card_cfg_list = respData["card_cfg"];

                  if (card_cfg_list != null && card_cfg_list != undefined && card_cfg_list != "" && _this9.card_no != null && _this9.card_no != undefined) {
                    var _iteratorNormalCompletion18 = true;
                    var _didIteratorError18 = false;
                    var _iteratorError18 = undefined;

                    try {
                      for (var _iterator18 = card_cfg_list[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {
                        var card_item = _step18.value;
                        var card_no = card_item["card_no"];

                        if (card_no == _this9.card_no) {
                          _this9.card_cfg = card_item;
                          break;
                        }
                      }
                    } catch (err) {
                      _didIteratorError18 = true;
                      _iteratorError18 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion18 && _iterator18.return != null) {
                          _iterator18.return();
                        }
                      } finally {
                        if (_didIteratorError18) {
                          throw _iteratorError18;
                        }
                      }
                    }
                  }

                  var listData = respData["srv_cols"];
                  _this9.mainTable = respData.main_table;
                  _this9.gridButton = respData.gridButton.map(function (button) {
                    return wrapButton(button);
                  });
                  _this9.rowButton = respData.rowButton.map(function (button) {
                    return wrapButton(button);
                  }); // !!! mock for test !!!
                  // this.rowButton.filter(item => item.button_type === "delete").forEach(item => {
                  //   item.action_validate = "data.user_no === 'songxm2'"
                  // })
                  // this.gridButton.filter(item => item.button_type === "batch_delete").forEach(item => {
                  //   item.action_validate = "data.filter( item =>  item && item.user_no === 'songxm' && item._selected).length > 0"
                  // })

                  var addButton = _.find(_this9.gridButton, function (item) {
                    return item.button_type === "add";
                  });

                  if (addButton) {
                    _this9.addService = addButton.service_name;
                  }

                  var updateButton = _.find(_this9.rowButton, function (item) {
                    return item.button_type === "edit";
                  });

                  if (updateButton) {
                    _this9.updateService = updateButton.service_name;
                  }

                  var deleteButton = _.find(_this9.rowButton, function (item) {
                    return item.button_type === "delete";
                  });

                  if (deleteButton) {
                    _this9.deleteService = deleteButton.service_name;
                  }

                  _this9.srv_cols = listData;

                  _this9.buildGridHeaders(listData);

                  if (_this9.mode === "finder") {
                    _this9.gridButton.filter(function (button) {
                      return button.name != "查询";
                    }).forEach(function (button) {
                      return button.show = false;
                    });

                    _this9.rowButton.forEach(function (button) {
                      return button.show = false;
                    });
                  }
                }).then(function (_) {
                  _this9.listLoaded = true;

                  _this9.emitEvent("metadata-loaded", _this9);
                });

              case 7:
                try {
                  if (this.defaultOrder.length > 0) {
                    this.order = this.order.concat(this.defaultOrder);
                  }

                  this.loadTableData().finally(function (_) {
                    if (_this9.defaultInplaceEditMode) {
                      _this9.onInplaceEditClicked();
                    }

                    _this9.$emit("list-loaded", _this9);
                  });
                } catch (e) {
                  // handle case in add child list
                  console.error("err:" + e);
                  this.$emit("list-loaded", this);

                  if (this.defaultInplaceEditMode) {
                    this.onInplaceEditClicked();
                  }
                } //默认数据参数填充


                if (!(this.defDataPara != null)) {
                  _context.next = 18;
                  break;
                }

                tar_cfg = this.defDataPara.tar_cfg;

                if (!(tar_cfg != undefined && tar_cfg != null)) {
                  _context.next = 18;
                  break;
                }

                tar_srv = tar_cfg.tar_srv;
                col_rel = tar_cfg.col_rel;

                if (!(tar_srv == this.service)) {
                  _context.next = 18;
                  break;
                }

                query_srv = this.defDataPara.serviceName;
                query_condition = this.defDataPara.condition;
                _context.next = 18;
                return this.select(query_srv, query_condition, null, null, null, null).then(function (response) {
                  var dataResult = response.body.data;

                  if (dataResult.length > 0) {
                    var dataArray = [];
                    var _iteratorNormalCompletion19 = true;
                    var _didIteratorError19 = false;
                    var _iteratorError19 = undefined;

                    try {
                      for (var _iterator19 = dataResult[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {
                        var itemMap = _step19.value;
                        var temMap = {};

                        for (var key in itemMap) {
                          var tar_col = col_rel[key];

                          if (tar_col != undefined) {
                            temMap[tar_col] = itemMap[key];
                          }
                        }

                        dataArray.push(temMap);
                      }
                    } catch (err) {
                      _didIteratorError19 = true;
                      _iteratorError19 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion19 && _iterator19.return != null) {
                          _iterator19.return();
                        }
                      } finally {
                        if (_didIteratorError19) {
                          throw _iteratorError19;
                        }
                      }
                    }

                    _this9.gridData = _this9.gridData.concat(dataArray);
                  }

                  _this9.$emit("list-data-loaded", _this9);
                });

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function initGridData() {
        return _initGridData.apply(this, arguments);
      }

      return initGridData;
    }(),
    isLoaded: function isLoaded() {
      return this.listLoaded;
    },
    getLinkUrl: function getLinkUrl(row, header) {
      var data = row;
      var url = "";

      if (header.linkUrlFunc) {
        url = header.linkUrlFunc(data);
      }

      return url;
    },
    onLinkClicked: function onLinkClicked(row, header) {
      var tabTitle = header.srvcol && header.srvcol.option_list_v2 && header.srvcol.option_list_v2.service_label || "详情";
      this.addTabByUrl(this.getLinkUrl(row, header), tabTitle);
    },
    onInlineListLoaded: function onInlineListLoaded(row, inlineList) {
      if (this.isInplaceEdit()) {
        console.warn("set inline list to inplace edit mode");
        inlineList.onInplaceEditClicked();
      } // inline lists as map, key as inlinelist.fk, value inlineList.gridData


      var propName = "_inlineLists";

      if (!row.hasOwnProperty(propName)) {
        this.$set(row, propName, {});
      }

      var inlineListsData = row[propName];
      console.warn("inline-list loaded, uid: " + inlineList._uid);
      inlineListsData[inlineList.foreignKey.constraint_name] = inlineList.gridData;
      this.$emit('inline-list-loaded', inlineList, this);
    },
    onInlineListaDataChanged: function onInlineListaDataChanged(row, inlineList) {
      // sync inline list into row data
      var propName = "_inlineLists";

      if (!row.hasOwnProperty(propName)) {
        this.$set(row, propName, {});
      }

      var inlineListsData = row[propName];
      this.$set(inlineListsData, inlineList.foreignKey.constraint_name, inlineList.gridData); // set row data dirty flags = update

      if (!row._dirtyFlags || row._dirtyFlags === "pristine") {
        this.$set(row, "_dirtyFlags", "update");
      }
    },
    handleScroll: function handleScroll() {
      var scrollTop = document.documentElement.scrollTop;
      this.scroll = scrollTop;
      console.log("scroll:" + this.scroll);
    },
    onImportClicked: function onImportClicked() {
      this.activeForm = "import";
    },
    onExportClicked: function onExportClicked() {
      var _this10 = this;

      // send req to generate excel
      this.genExportExcel(this.service_name, this.buildQueryConditions(), null, this.order).then(function (response) {
        var uuid = response.body.data.uuid;

        _this10.downloadexport(uuid);
      });
    },
    onImportDialogClosed: function onImportDialogClosed() {
      this.activeForm = 'xx';
      this.loadTableData();
    },
    isRowButtonVisible: function isRowButtonVisible(button, row) {
      var notDeleteOnStandby = !('standby' === row._dirtyFlags && 'delete' === button.button_type);
      return notDeleteOnStandby && button.evalVisible(row);
    }
  },
  created: function created() {
    // alert(this.getVersionNo());
    console.info("list-mixin created  , uid:" + this._uid);

    if (this.$route && this.$route.params) {
      if (this.isTopComp() && this.$route.params.service_name) {
        this.service_name = this.$route.params.service_name;
      }

      if (this.isTopComp() && this.$route.params.card_no) {
        this.card_no = this.$route.params.card_no;
      }
    }

    if (this.isTopComp() && this.$route && this.$route.query) {
      var operate_params = this.getOperateParams();

      if (operate_params != "" && operate_params != null) {
        var operate_Object = JSON.parse(operate_params);
        this.service_name = operate_Object["serviceName"];

        if (operate_Object["condition"] != undefined && operate_Object["condition"] != null) {
          this.custCondition = operate_Object["condition"];
        }
      }

      var selectType = this.$route.query.selectType;

      if (selectType != undefined && selectType != "" && selectType != null) {
        this.defaultapi = "selectByUser";
      }
    }

    this.initGridData();

    if (this.card_no != undefined) {
      this.gridPage.pageSize = 12;
      this.gridPage.pageSizes.push(12);
    }

    if (this.pageSize != undefined) {
      this.gridPage.pageSize = this.pageSize;
    }

    this.uid = this._uid;
    window.list = window.list || {};
    window.list[this.service_name] = this;
  }
};

var ChildListMixin = {
  methods: {
    onListLoaded: function onListLoaded(innerList) {
      var refCol = this.foreignKey.column_name;
      var refTable = this.foreignKey.table_name;
      var refedCol = this.foreignKey.referenced_column_name;
      var refedTable = this.foreignKey.referenced_table_name;

      if (innerList != undefined) {
        // hide headers if srvcol comes from main table
        innerList.gridHeader.filter(function (header) {
          var srvcol = header.srvcol;

          if (!srvcol) {
            return false;
          }

          var isRefCol = srvcol.table_name == refTable && srvcol.columns == refCol;
          var isRefedDispCol = srvcol.table_name == refedTable && srvcol.columns == "_" + refCol + "_disp";
          var hide = isRefCol || isRefedDispCol;

          if (hide) {
            console.info("hide col: " + srvcol.columns);
          }

          return hide;
        }).forEach(function (header) {
          header.show = false;
        });
      }

      if (this !== innerList) {
        console.info("fire list-load for childlist");
        this.$emit("list-loaded", this);
      }
    },
    onStandbyRowAdded: function onStandbyRowAdded(newRow) {
      var refCol = this.foreignKey.column_name;
      newRow[refCol] = this.getRefColValue; // hide extra fk condition cols and set values

      if (this.foreignKey.conditions) {
        this.foreignKey.conditions.forEach(function (item) {
          var refCol = item.colName;
          newRow[refCol] = item.value;
          console.info("set field ".concat(refCol, " value to ").concat(item.value, " "));
        });
      }
    },
    hiddRefColFieldInForm: function hiddRefColFieldInForm(form) {
      var refCol = this.foreignKey.column_name;
      var refColField = form.fields[refCol];
      refColField.info.visible = false;
    }
  }
};

//
var script$l = {
  components: {
    SimpleUpdate: SimpleUpdate,
    SimpleAdd: SimpleAdd,
    simpleFilter: simpleFilter,
    simpleCard: simpleCard,
    RawFieldEditor: RawFieldEditor,
    Add: function Add() {
      return Promise.resolve().then(function () { return add$1; });
    }
  },
  mixins: [ListPopupMixin, CustButtonMinx, MemListMixin, FieldRedundantMixin, ListMixin, ChildListMixin],
  props: {
    foreignKey: {
      type: Object
    }
  },
  data: function data() {
    return {
      gridPage: {
        pageSizes: [],
        pageSize: -1,
        currentPage: 1,
        total: 0
      }
    };
  },
  created: function created() {
    var _this = this;

    console.warn("inline-list created, uid: " + this._uid);
    this.uid = this._uid;
    this.$on("list-loaded", function (list) {
      return _this.onListLoaded(list);
    });
    this.$on("duplicate-form-loaded", function (form) {
      return _this.onAddFormLoaded(form);
    });
    this.$on("standby-row-added", function (newRow) {
      return _this.onStandbyRowAdded(newRow);
    });
  }
};

/* script */
const __vue_script__$l = script$l;

/* template */
var __vue_render__$l = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-table',{staticStyle:{"width":"100%"},attrs:{"data":_vm.gridData,"stripe":"","border":"","row-class-name":_vm.tableRowClassName},on:{"selection-change":_vm.handleSelectionChange,"filter-change":_vm.filterChange,"sort-change":_vm.handleSortChange,"row-dblclick":_vm.onRowDbClicked}},[_vm._l((_vm.gridHeader),function(item,index){return (item.show)?_c('el-table-column',{key:index,attrs:{"header-align":"left","align":_vm.getshowAlign(item),"width":item.width,"prop":item.column,"label":item.label,"min-width":item.list_min_width,"filters":item.filters,"column-key":item.column,"sortable":item.sortable && !_vm.isMem() ? 'custom' :false},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(_vm.isInplaceEdit()  && _vm.findEditField(scope.row, item.column))?_c('div',[_c('raw-field-editor',{attrs:{"field":_vm.findEditField(scope.row, item.column)},on:{"field-value-changed":function($event){return _vm.onCellValueChanged(scope.row, item.column)},"blur":function($event){return _vm.onCellBlur(scope.row, item.column)}}})],1):(item.col_type === 'inline_list')?_c('div',[_c('child-list',{ref:"inlineList",refInFor:true,attrs:{"list-type":"detaillist","name":"inlinelist","service":"srvsys_menu_select"}})],1):[(item.linkUrlFunc)?_c('el-button',{directives:[{name:"show",rawName:"v-show",value:(scope.row[item.column]),expression:"scope.row[item.column]"}],attrs:{"type":"text"},on:{"click":function($event){return _vm.onLinkClicked(scope.row, item)}}},[_vm._v("\n              "+_vm._s(_vm.formatValue(scope.row, item))+"\n            ")]):_c('span',[_vm._v(_vm._s(_vm.formatValue(scope.row, item)))])]]}}],null,true)}):_vm._e()}),_vm._v(" "),(!_vm.readOnly && _vm.listType!='selectlist')?_c('el-table-column',{attrs:{"fixed":"right","label":"操作","header-align":"left","width":"250"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(_vm.isMem() && _vm.isDirtyRow(scope.row))?_c('el-tag',{attrs:{"type":_vm.getDirtyRowTagType(scope.row)}},[_vm._v("\n            "+_vm._s(_vm.getDirtyRowTagText(scope.row))+"\n          ")]):_vm._e(),_vm._v(" "),_vm._l((_vm.rowButton),function(operate_item,operate_index){return (_vm.getDispExps(operate_item,scope.row)&&operate_item.permission)?_c('el-button',{key:operate_index,attrs:{"type":"text","size":"small"},on:{"click":function($event){return _vm.rowButtonClick(operate_item,scope.row)}}},[_vm._v("\n            "+_vm._s(operate_item.button_name)+"\n          ")]):_vm._e()})]}}],null,false,3379911187)}):_vm._e()],2)],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"添加","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'add'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'add')?_c('add',{ref:"add-form",attrs:{"name":"list-add","service":_vm.getAddService,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onAddFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"复制","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'duplicate'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'duplicate')?_c('simple-add',{ref:"duplicate-form",attrs:{"name":"list-duplicate","service":_vm.getAddService,"default-conditions":_vm.getDefaultCondition4Duplicate,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onDuplicateFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"深度复制","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'duplicatedeep'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'duplicatedeep')?_c('add',{ref:"duplicatedeep-form",attrs:{"name":"list-duplicatedeep","service":_vm.getAddService,"default-conditions":_vm.getDefaultCondition4DuplicateDeep,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onDuplicateFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑","width":"90%","visible":_vm.activeForm == 'update',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'update' )?_c('simple-update',{ref:"update-form",attrs:{"name":"list-update","service":_vm.getUpdateService,"pk":_vm.getClickedRowPk('update'),"submit2-db":_vm.storageType == 'db',"override-data":_vm.clickedRow.update._dirtyFlags ? _vm.clickedRow.update : null},on:{"action-complete":function($event){return _vm.onUpdateFormActionComplete($event)},"form-loaded":function($event){return _vm.onUpdateFormLoaded(_vm.$refs['update-form'])},"submitted2mem":_vm.onUpdate2MemSubmitted}}):_vm._e()],1)],1)};
var __vue_staticRenderFns__$l = [];

  /* style */
  const __vue_inject_styles__$l = function (inject) {
    if (!inject) return
    inject("data-v-65285bd7_0", { source: "#app>div>.el-row>.isFixed.el-table>.el-table__header-wrapper[data-v-65285bd7]{position:fixed;top:0;z-index:3}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper[data-v-65285bd7]{top:0;position:fixed;z-index:4;right:.5rem}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr[data-v-65285bd7]{background-color:transparent}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr th[data-v-65285bd7]{background-color:transparent;opacity:0}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr th[data-v-65285bd7]:last-child{background-color:#fff;opacity:1;padding:12px 0}.el-input-number[data-v-65285bd7]{width:100%}.cell[data-v-65285bd7]{padding-left:5px!important;padding-right:5px!important}.el-table .update-row>td[data-v-65285bd7]{color:#9acd32!important}.el-table .delete-row>td[data-v-65285bd7]{color:#a9a9a9!important}.el-table .add-row>td[data-v-65285bd7]{color:#00bfff!important}.el-table th.gutter[data-v-65285bd7]{display:table-cell!important}.el-input--suffix .el-input__inner[data-v-65285bd7]{padding-right:5px!important;padding-left:5px!important;text-align:left!important}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$l = "data-v-65285bd7";
  /* module identifier */
  const __vue_module_identifier__$l = undefined;
  /* functional template */
  const __vue_is_functional_template__$l = false;
  /* style inject SSR */
  

  
  var InlineList = normalizeComponent_1(
    { render: __vue_render__$l, staticRenderFns: __vue_staticRenderFns__$l },
    __vue_inject_styles__$l,
    __vue_script__$l,
    __vue_scope_id__$l,
    __vue_is_functional_template__$l,
    __vue_module_identifier__$l,
    browser,
    undefined
  );

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var script$m = {
  props: {
    service: {
      type: String
    }
  },
  data: function data() {
    return {
      message: "",
      field: null,
      uploadFile: this.serviceApi().importExcel + "/" + this.service,
      fileLists: [],
      fileDesc: "请上传文件,大小不超过20MB"
    };
  },
  created: function created() {},
  computed: {
    uploadParams: function uploadParams() {
      return {
        serviceName: this.service
      };
    }
  },
  methods: {
    getHeaders: function getHeaders() {
      var bx_auth_ticket = sessionStorage.getItem("bx_auth_ticket");
      return {
        bx_auth_ticket: bx_auth_ticket
      };
    },
    onImportExcelClose: function onImportExcelClose() {
      this.$emit("close");
    },
    handleSuccess: function handleSuccess(response, file, fileList) {
      var state = response.state;
      var resultMessage = response.resultMessage;

      if (state == "SUCCESS") {
        this.$message.success("导入文件保存成功");
        this.message = "";
      } else {
        this.fileLists = _.remove(this.fileLists, function (item) {
          return item.name === file.name;
        });
        this.$message.error(resultMessage);
        this.message = resultMessage + "--点击下载错误文件";
      }
    },
    downloadImportFail: function downloadImportFail() {
      this.downloadFailimport();
    },
    handleError: function handleError(error, file, fileList) {
      this.$message.error("导入文件失败！");
    }
  }
};

/* script */
const __vue_script__$m = script$m;

/* template */
var __vue_render__$m = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',{staticStyle:{"border":"1px solid darkgray","padding":"5px"}},[_c('el-upload',{staticClass:"upload-demo",attrs:{"headers":_vm.getHeaders(),"action":_vm.uploadFile,"with-credentials":true,"file-list":_vm.fileLists,"data":_vm.uploadParams,"on-success":_vm.handleSuccess,"on-error":_vm.handleError}},[_c('el-button',{staticStyle:{"text-align":"right"},attrs:{"size":"small","type":"primary"}},[_vm._v("\n        选择文件\n      ")]),_vm._v(" "),_c('div',{staticClass:"el-upload__tip",attrs:{"slot":"tip"},slot:"tip"},[_vm._v(_vm._s(_vm.fileDesc))])],1)],1),_vm._v(" "),_c('el-row',{staticStyle:{"margin-top":"10px","text-align":"left"}},[_c('el-button',{staticStyle:{"color":"red"},attrs:{"type":"text"},on:{"click":_vm.downloadImportFail}},[_vm._v(_vm._s(_vm.message))])],1),_vm._v(" "),_c('el-row',{staticStyle:{"margin-top":"10px","text-align":"center"}},[_c('el-button',{attrs:{"size":"small","type":"primary"},on:{"click":_vm.onImportExcelClose}},[_vm._v("\n      关闭\n    ")])],1)],1)};
var __vue_staticRenderFns__$m = [];

  /* style */
  const __vue_inject_styles__$m = undefined;
  /* scoped */
  const __vue_scope_id__$m = undefined;
  /* module identifier */
  const __vue_module_identifier__$m = undefined;
  /* functional template */
  const __vue_is_functional_template__$m = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var ImportDialog = normalizeComponent_1(
    { render: __vue_render__$m, staticRenderFns: __vue_staticRenderFns__$m },
    __vue_inject_styles__$m,
    __vue_script__$m,
    __vue_scope_id__$m,
    __vue_is_functional_template__$m,
    __vue_module_identifier__$m,
    undefined,
    undefined
  );

//
var script$n = {
  name: "list",
  components: {
    UploadFile: UploadFile,
    ImportDialog: ImportDialog,
    SimpleUpdate: SimpleUpdate,
    SimpleAdd: SimpleAdd,
    simpleFilter: simpleFilter,
    simpleCard: simpleCard,
    RawFieldEditor: RawFieldEditor,
    InlineList: InlineList,
    Add: function Add() {
      return Promise.resolve().then(function () { return add$1; });
    }
  },
  mixins: [ListPopupMixin, CustButtonMinx, MemListMixin, FieldRedundantMixin, ListMixin],
  methods: {
    wrapCellIntoField: function wrapCellIntoField(column, value) {
      var info = {
        editable: false
      };
      return {
        model: value,
        info: info
      };
    }
  }
};

/* script */
const __vue_script__$n = script$n;

/* template */
var __vue_render__$n = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.evalVisible()),expression:"evalVisible()"}]},[(_vm.searchForm)?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.selectFormShow),expression:"selectFormShow"}]},[(_vm.srv_cols)?_c('simple-filter',{ref:"filter-form",attrs:{"srv_cols":_vm.srv_cols},on:{"search-clicked":_vm.query,"form-loaded":function($event){return _vm.onFilterFormLoaded(_vm.$refs['filter-form'])}}}):_vm._e()],1):_vm._e(),_vm._v(" "),(_vm.list_inner_add)?_c('div',[_c('add',{ref:"add-form",attrs:{"name":"list-inner-add","service":_vm.getAddService,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onAddFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}})],1):_vm._e(),_vm._v(" "),_c('el-row',{directives:[{name:"show",rawName:"v-show",value:(!_vm.hideButtons),expression:"!hideButtons"}],staticClass:"row-bg",attrs:{"type":"flex","justify":"end"}},[_c('div',{staticClass:"table-head-btns"},[_vm._l((_vm.sortedGridButtons),function(item,index){return [(!_vm.readOnly && _vm.existsGridButton && item.permission)?_c('el-button',{directives:[{name:"show",rawName:"v-show",value:(item.evalVisible()),expression:"item.evalVisible()"}],key:index,attrs:{"type":!item.button_cls ? 'primary' : item.button_cls,"disabled":item.evalDisable()},on:{"click":function($event){return _vm.gridButtonClick(item)}}},[_vm._v("\n          "+_vm._s(item.button_name)+"\n        ")]):_vm._e()]})],2)]),_vm._v(" "),(_vm.card_no!=undefined)?_c('div',[(_vm.init_card_data)?_c('simple-card',{ref:"cardlist",attrs:{"name":"cardlist","card_cfg":_vm.card_cfg,"row_button":_vm.rowButton,"data_list":_vm.gridData},on:{"card-loaded":_vm.cardLoadinit,"card-row-button":_vm.rowButtonClick}}):_vm._e()],1):_c('div',[_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-table',{staticStyle:{"width":"100%"},attrs:{"data":_vm.gridData,"stripe":"","border":"","row-class-name":_vm.tableRowClassName},on:{"selection-change":_vm.handleSelectionChange,"filter-change":_vm.filterChange,"sort-change":_vm.handleSortChange,"row-dblclick":_vm.onRowDbClicked}},[(_vm.selection && !_vm.readOnly)?_c('el-table-column',{attrs:{"type":"selection","label":"全选","header-align":"left","width":"50px"}}):_vm._e(),_vm._v(" "),_vm._l((_vm.gridHeader),function(item,index){return (item.show && (!item.evalVisible || item.evalVisible()))?_c('el-table-column',{key:index,attrs:{"header-align":"left","align":_vm.getshowAlign(item),"width":item.width,"prop":item.column,"label":item.label,"min-width":item.list_min_width,"filters":item.filters,"column-key":item.column,"sortable":item.sortable && !_vm.isMem() ? 'custom' :false},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(_vm.isInplaceEdit()  && _vm.findEditField(scope.row, item.column))?_c('div',[_c('raw-field-editor',{attrs:{"field":_vm.findEditField(scope.row, item.column)},on:{"field-value-changed":function($event){return _vm.onCellValueChanged(scope.row, item.column)},"blur":function($event){return _vm.onCellBlur(scope.row, item.column)}}})],1):(item.col_type === 'InlineList')?_c('div',[_c('inline-list',{ref:"inlineList",refInFor:true,attrs:{"list-type":"detaillist","name":"inlinelist","service":item.inline_list_select_service,"foreign-key":item.foreign_key,"read-only":item.foreign_key.child_table_readonly === '是',"default-condition":item.defaultCondition(scope.row),"search-form":false,"is-tree":false,"inplace-edit":true},on:{"list-loaded":function($event){return _vm.onInlineListLoaded(scope.row, $event)},"update-form-loaded":function($event){return _vm.$emit('update-form-loaded', $event)},"add-form-loaded":function($event){return _vm.$emit('add-form-loaded', $event)},"grid-data-changed":function($event){return _vm.onInlineListaDataChanged(scope.row, $event)}}})],1):(item.col_type === 'progress')?_c('div',[_c('el-progress',{attrs:{"text-inside":true,"stroke-width":18,"percentage":scope.row[item.column]}})],1):(item.col_type === 'FileList')?_c('div',[_c('upload-file',{attrs:{"field":_vm.wrapCellIntoField(item.column, scope.row[item.column])}})],1):[(_vm.header_view_model=='group')?_c('div',[_c('pre',[_vm._v(_vm._s(_vm.formatValue(scope.row, item)))])]):_c('div',[(item.linkUrlFunc)?_c('a',{directives:[{name:"show",rawName:"v-show",value:(scope.row[item.column]),expression:"scope.row[item.column]"}],staticStyle:{"white-space":"normal","color":"dodgerblue","cursor":"pointer"},on:{"click":function($event){return _vm.onLinkClicked(scope.row, item)}}},[_vm._v("\n                  "+_vm._s(_vm.formatValue(scope.row, item))+"\n                ")]):_c('span',[_vm._v(_vm._s(_vm.formatValue(scope.row, item)))])])]]}}],null,true)}):_vm._e()}),_vm._v(" "),(!_vm.readOnly && _vm.listType!='selectlist' && !_vm.hideButtons)?_c('el-table-column',{attrs:{"label":"操作","header-align":"left","width":"200"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(_vm.isMem() && _vm.isDirtyRow(scope.row))?_c('el-tag',{attrs:{"type":_vm.getDirtyRowTagType(scope.row)}},[_vm._v("\n              "+_vm._s(_vm.getDirtyRowTagText(scope.row))+"\n            ")]):_vm._e(),_vm._v(" "),_vm._l((_vm.sortedRowButtons),function(button,index){return (_vm.getDispExps(button, scope.row) && button.permission)?_c('el-button',{directives:[{name:"show",rawName:"v-show",value:(_vm.isRowButtonVisible(button, scope.row)),expression:"isRowButtonVisible(button, scope.row)"}],key:index,attrs:{"type":"text","size":"small","disabled":button.evalDisable()},on:{"click":function($event){return _vm.rowButtonClick(button,scope.row)}}},[_vm._v("\n              "+_vm._s(_vm.getButtonName(button, scope.row))+"\n            ")]):_vm._e()})]}}],null,false,794986455)}):_vm._e()],2)],1)],1),_vm._v(" "),(!_vm.isMem())?_c('el-row',{directives:[{name:"show",rawName:"v-show",value:(!_vm.hidePagination && _vm.gridPage.total>0),expression:"!hidePagination && gridPage.total>0"}],staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-pagination',{attrs:{"current-page":_vm.gridPage.currentPage,"page-sizes":_vm.gridPage.pageSizes,"page-size":_vm.gridPage.pageSize,"layout":"total, sizes, prev, pager, next, jumper","total":_vm.gridPage.total},on:{"current-change":_vm.handleCurrentChange,"size-change":_vm.handleSizeChange}})],1):_vm._e(),_vm._v(" "),_c('el-dialog',{attrs:{"title":"添加","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'add'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'add')?_c('add',{ref:"add-form",attrs:{"name":"list-add","service":_vm.getAddService,"submit2-db":_vm.storageType == 'db',"form-model-decorator":_vm.formModelDecorator},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onAddFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"复制","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'duplicate'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'duplicate')?_c('simple-add',{ref:"duplicate-form",attrs:{"name":"list-duplicate","service":_vm.getAddService,"default-conditions":_vm.getDefaultCondition4Duplicate,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onDuplicateFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"深度复制","width":"90%","close-on-click-modal":1==2,"append-to-body":"","visible":_vm.activeForm == 'duplicatedeep'},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'duplicatedeep')?_c('add',{ref:"duplicatedeep-form",attrs:{"name":"list-duplicatedeep","service":_vm.getAddService,"default-conditions":_vm.getDefaultCondition4DuplicateDeep,"submit2-db":_vm.storageType == 'db'},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":_vm.onDuplicateFormLoaded,"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑","width":"90%","visible":_vm.activeForm == 'update',"close-on-click-modal":1==2,"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'update' )?_c('simple-update',{ref:"update-form",attrs:{"name":"list-update","service":_vm.getUpdateService,"pk":_vm.getClickedRowPk('update'),"submit2-db":_vm.storageType == 'db',"override-data":_vm.clickedRow.update._dirtyFlags ? _vm.clickedRow.update : null},on:{"action-complete":function($event){return _vm.onUpdateFormActionComplete($event)},"form-loaded":function($event){return _vm.onUpdateFormLoaded(_vm.$refs['update-form'])},"submitted2mem":_vm.onUpdate2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"导入","width":"90%","visible":_vm.activeForm == 'import',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'import')?_c('import-dialog',{attrs:{"service":_vm.addService,"sign-service-name":_vm.addService},on:{"close":_vm.onImportDialogClosed}}):_vm._e()],1)],1)};
var __vue_staticRenderFns__$n = [];

  /* style */
  const __vue_inject_styles__$n = function (inject) {
    if (!inject) return
    inject("data-v-76e58671_0", { source: "#app>div>.el-row>.isFixed.el-table>.el-table__header-wrapper{position:fixed;top:0;z-index:3}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper{top:0;position:fixed;z-index:4;right:.5rem}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr{background-color:transparent}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr th{background-color:transparent;opacity:0}#app>div>.el-row>.isFixed.el-table .el-table__fixed-header-wrapper>table>thead tr th:last-child{background-color:#fff;opacity:1;padding:12px 0}.el-table th.gutter{display:table-cell!important}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$n = undefined;
  /* module identifier */
  const __vue_module_identifier__$n = undefined;
  /* functional template */
  const __vue_is_functional_template__$n = false;
  /* style inject SSR */
  

  
  var List = normalizeComponent_1(
    { render: __vue_render__$n, staticRenderFns: __vue_staticRenderFns__$n },
    __vue_inject_styles__$n,
    __vue_script__$n,
    __vue_scope_id__$n,
    __vue_is_functional_template__$n,
    __vue_module_identifier__$n,
    browser,
    undefined
  );

var list = /*#__PURE__*/Object.freeze({
  default: List
});

var script$o = {
  name: "simple-detail",
  components: {
    SimpleUpdate: SimpleUpdate,
    FieldEditor: FieldEditor,
    action: Action,
    loader: Loader
  },
  mixins: [FormMixin, CustButtonMinx, FormValidateMixin],
  props: {
    formType: {
      type: String,
      default: "detail"
    },
    pkCol: {
      type: String
    },
    pk: {
      type: String
    }
  },
  computed: {
    srvValFormModeldetail: function srvValFormModeldetail() {
      var model = {};

      for (var key in this.fields) {
        var field = this.fields[key];

        if (field.info.srvCol.in_detail != 0 || field.info.name == "id") {
          model[key] = field.getSrvVal();
        }
      }

      return model;
    }
  },
  data: function data() {
    return {
      service_name: this.service || this.$route.params.service_name,
      activeForm: null,
      updateService: null
    };
  },
  methods: {
    createExecutorValueEnableFunc: function createExecutorValueEnableFunc(colName) {
      var _this = this;

      return function (value) {
        try {
          var rawRow = _this.$refs.loader.lastValidResp[0];
          var isDiff = rawRow[colName] != value.value;
          return isDiff;
        } catch (e) {
          return true;
        }
      };
    },
    confLoader: function confLoader() {
      var loader = this.$refs.loader;
      loader.colNames = [];

      for (var key in this.fields) {
        loader.colNames.push(this.fields[key].info.name);
      }

      loader.conditions = this.buildConditions();
    },
    addNav2UpdateAction: function addNav2UpdateAction(button) {
      var _this2 = this;

      var nav = new ActionInfo();
      Vue.set(this.actions, "nav2update", nav);
      this.updateService = button.service_name;
      nav.name = 'nav2update';
      nav.label = '编辑';

      nav.invokeFunc = function (_) {
        _this2.activeForm = "update";
      };

      return nav;
    },
    onUpdateFormActionComplete: function onUpdateFormActionComplete() {
      this.activeForm = null;
      this.$refs.loader.run();
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.createFields(function (srvCol) {
      return srvCol.in_detail != 0;
    }).then(function (response) {
      var fields = _this3.fields;

      for (var fieldName in fields) {
        var field = fields[fieldName];
        field.info.readonly = true;
        field.info.editable = false;

        if (field.info.srvCol.in_detail != 1) {
          field.info.visible = false;
        }

        var type = field.info.type;

        if (hotTableMetadata[type]) {
          _this3.loadHotTableData(hotTableMetadata[type]);
        }
      }

      if (response && response.data && response.data.formButton) {
        var formButtons = response.data.formButton;

        _this3.createActions(formButtons);
      }

      _this3.confLoader();

      _this3.emitEvent("metadata-loaded", _this3);
    }).then(function () {
      // init load and watch conditions
      var loader = _this3.$refs.loader;
      return loader.run();
    }).then(function () {
      _this3.formLoaded = true;

      _this3.$emit("form-loaded");
    });
  }
};

/* script */
const __vue_script__$o = script$o;

/* template */
var __vue_render__$o = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-row',[(_vm.formLoaded)?_c('el-form',{ref:"elform",attrs:{"model":_vm.formModel,"inline":false,"label-position":"right","label-width":"10rem","label-suffix":":"}},_vm._l((_vm.sections),function(formItems,section){return _c('el-row',{key:section},[_c('div',{staticClass:"el-col el-col-24 el-col-xl-24"},[(!!section)?_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(_vm.formatSection(section)))])]):_vm._e()]),_vm._v(" "),_vm._t(section + '-begin'),_vm._v(" "),_vm._l((formItems),function(formItem){return _c('div',[_c('field-editor',{key:formItem.field.info.name,attrs:{"field":formItem.field,"content-fields":formItem.contentFields},on:{"field-value-changed":function($event){return _vm.onFieldValueChanged($event)},"field-history-popup":_vm.onFieldHistoryPopup}}),_vm._v(" "),_vm._t(formItem.field.info.name + '-append')],2)})],2)}),1):_vm._e(),_vm._v(" "),_c('loader',{ref:"loader",attrs:{"service":_vm.service_name},on:{"loader-complete":function($event){return _vm.onLoaderComplete($event)}}})],1),_vm._v(" "),_c('el-row',[_c('el-col',{staticStyle:{"text-align":"center","padding":"6px","padding-bottom":"20px"},attrs:{"span":24}},_vm._l((_vm.actions),function(item){return _c('action',{directives:[{name:"show",rawName:"v-show",value:((item.visibleFunc)()),expression:"(item.visibleFunc)()"}],key:item.name,ref:item.name,refInFor:true,attrs:{"info":item},on:{"action-complete":function($event){return _vm.$emit('action-complete', $event);}}})}),1)],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'update',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'update')?_c('simple-update',{ref:"update-form",attrs:{"name":"update-form","service":_vm.updateService,"pk":_vm.pk,"nav-after-submit":false},on:{"action-complete":_vm.onUpdateFormActionComplete}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"append-to-body":"","visible":!!_vm.fieldHisotryPopup,"title":"历史版本","width":"90%","close-on-click-modal":1==2},on:{"close":function($event){_vm.fieldHisotryPopup = false;}}},[_c('el-table',{staticStyle:{"width":"100%"},attrs:{"data":_vm.fieldWithHistory && _vm.fieldWithHistory.historyData,"stripe":"","border":""}},[_c('el-table-column',{attrs:{"prop":"value","label":"值"}}),_vm._v(" "),_c('el-table-column',{attrs:{"prop":"remark","label":"说明"}})],1)],1)],1)};
var __vue_staticRenderFns__$o = [];

  /* style */
  const __vue_inject_styles__$o = function (inject) {
    if (!inject) return
    inject("data-v-07ece940_0", { source: ".el-form-item__content[data-v-07ece940]{line-height:initial;line-height:unset}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$o = "data-v-07ece940";
  /* module identifier */
  const __vue_module_identifier__$o = undefined;
  /* functional template */
  const __vue_is_functional_template__$o = false;
  /* style inject SSR */
  

  
  var SimpleDetail = normalizeComponent_1(
    { render: __vue_render__$o, staticRenderFns: __vue_staticRenderFns__$o },
    __vue_inject_styles__$o,
    __vue_script__$o,
    __vue_scope_id__$o,
    __vue_is_functional_template__$o,
    __vue_module_identifier__$o,
    browser,
    undefined
  );

var script$p = {
  components: {
    List: List
  },
  mixins: [],
  data: function data() {
    return {
      listInstance: null
    };
  },
  props: {
    service: {
      type: String
    },
    listType: {
      type: String,
      default: function _default() {
        return "addchildlist";
      }
    },
    defaultOrder: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    foreignKey: {
      type: Object
    },
    defaultCondition: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    name: {
      type: String
    },
    inplaceEdit: {
      type: Boolean,
      default: false
    },
    storageType: {
      type: String,
      default: 'mem'
    }
  },
  methods: {
    getListData: function getListData() {
      var operateData = [];
      var listData = this.listInstance.gridData;
      var serviceCols = this.listInstance.serviceCols;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = listData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var itemData = _step.value;

          if (itemData._dirtyFlags == "add" || itemData._dirtyFlags == "update" || itemData._dirtyFlags == "delete") {
            delete itemData.is_leaf;
            operateData.push(itemData);
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return operateData;
    },
    onListLoaded: function onListLoaded(listIns) {
      this.listInstance = listIns;
      this.$emit("proc-simple-list-loaded", this);

      if (this.foreignKey != undefined) {
        var refCol = this.foreignKey.column_name;
        var refTable = this.foreignKey.table_name;
        var refedCol = this.foreignKey.referenced_column_name;
        var refedTable = this.foreignKey.referenced_table_name; // hide headers if srvcol comes from main table

        var list = this.$refs.list;
        list.gridHeader.filter(function (header) {
          var srvcol = header.srvcol;
          var isRefCol = srvcol.table_name == refTable && srvcol.columns == refCol;
          var isRefedDispCol = srvcol.table_name == refedTable && srvcol.columns == "_" + refCol + "_disp";
          var hide = isRefCol || isRefedDispCol;

          if (hide) {
            console.info("hide col: " + srvcol.columns);
          }

          return hide;
        }).forEach(function (header) {
          header.show = false;
        });
      }
    },

    /**
     * hide ref column and set a vaue
     * @param form
     */
    onAddFormLoaded: function onAddFormLoaded(form) {
      console.info("on add form loaded in child-list");

      if (this.foreignKey) {
        var refCol = this.foreignKey.column_name;
        var refColField = form.fields[refCol];

        if (refColField) {
          refColField.info.visible = false;
          refColField.setSrvVal(this.getRefColValue);
        }
      }

      form.actions.submit.nav2Location = null;
      this.$emit("add-form-loaded", form);
    },

    /**
     * hide ref column
     * @param form
     */
    onUpdateFormLoaded: function onUpdateFormLoaded(form) {
      console.info("on update form loaded in child-list");
      this.hiddRefColFieldInForm(form);
      form.actions.submit.nav2Location = null;
      this.$emit("update-form-loaded", form);
    },
    onFilterFormLoaded: function onFilterFormLoaded(form) {
      var refCol = this.foreignKey.column_name;
      refCol = "_" + refCol + "_disp";
      var refColField = form.fields[refCol];

      if (refColField) {
        refColField.info.visible = false;
      }
    },
    hiddRefColFieldInForm: function hiddRefColFieldInForm(form) {
      var refCol = this.foreignKey.column_name;
      var refColField = form.fields[refCol];
      refColField.info.visible = false;
    }
  }
};

/* script */
const __vue_script__$p = script$p;

/* template */
var __vue_render__$p = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('list',{ref:"list",attrs:{"list-type":_vm.listType,"storage-type":_vm.storageType,"default-order":_vm.defaultOrder,"service":_vm.service,"foreign-key":_vm.foreignKey,"name":_vm.name,"default-condition":_vm.defaultCondition,"inplace-edit":_vm.inplaceEdit},on:{"list-loaded":function($event){return _vm.onListLoaded($event)},"add-form-loaded":function($event){return _vm.onAddFormLoaded($event)},"update-form-loaded":function($event){return _vm.onUpdateFormLoaded($event)}}})],1)};
var __vue_staticRenderFns__$p = [];

  /* style */
  const __vue_inject_styles__$p = undefined;
  /* scoped */
  const __vue_scope_id__$p = undefined;
  /* module identifier */
  const __vue_module_identifier__$p = undefined;
  /* functional template */
  const __vue_is_functional_template__$p = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var procSimpleList = normalizeComponent_1(
    { render: __vue_render__$p, staticRenderFns: __vue_staticRenderFns__$p },
    __vue_inject_styles__$p,
    __vue_script__$p,
    __vue_scope_id__$p,
    __vue_is_functional_template__$p,
    __vue_module_identifier__$p,
    undefined,
    undefined
  );

function _defineProperty(obj, key, value) {
  if (key in obj) {
    defineProperty$1(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function deepClone(obj) {
  if (obj == null) return null;
  var newObj = obj instanceof Array ? [] : {};

  for (var i in obj) {
    newObj[i] = _typeof(obj[i]) == "object" ? deepClone(obj[i]) : obj[i];
  }

  return newObj;
}

var removeByValue = function removeByValue(sourceData, val) {
  //对数组原型添加删除指定项的方法
  for (var i = 0; i < sourceData.length; i++) {
    if (sourceData[i] == val) {
      sourceData.splice(i, 1);
      break;
    }
  }
};

var script$q = {
  name: "treegrid",
  components: {
    simpleFilter: simpleFilter,
    SimpleAdd: SimpleAdd,
    SimpleUpdate: SimpleUpdate
  },
  mixins: [ListPopupMixin, CustButtonMinx, MemListMixin, ListMixin],
  props: {
    service: {
      type: String
    },
    searchForm: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    listType: {
      type: String,
      default: function _default() {
        return "treelist";
      }
    },
    pageSize: {
      type: Number
    },
    defaultCondition: {
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  data: function data() {
    return {
      noCol: "",
      parentCol: "",
      firstColumn: null,
      selectFormShow: false,
      gridHeaderRender: false,
      multipleSelection: [],
      gridHeader: [],
      gridData: [],
      gridButton: [],
      rowButton: [],
      srv_cols: null,
      order: [],
      searchFormCondition: [],
      filterCondition: [],
      service_name: this.service || this.$route.params.service_name,
      gridPage: {
        pageSizes: [],
        pageSize: 10,
        currentPage: 1,
        total: 0
      }
    };
  },
  methods: {
    toggleIconShow: function toggleIconShow(record) {
      if (record.is_leaf == "是") {
        return false;
      } else {
        return true;
      }
    },
    getDispExps: function getDispExps(item, data) {
      var result = true;

      try {
        var disp_exps = item.disp_exps;

        if (disp_exps != undefined && disp_exps != "" && disp_exps != null) {
          result = eval(disp_exps);
        }
      } catch (err) {
        console.error("按钮表达式执行错误");
      }

      return result;
    },
    removeChildVaule: function removeChildVaule(rowData) {
      var _this = this;

      //递归删除自数据
      var me = this;
      var dataArr = [];
      var childLen = rowData._children.length;
      dataArr.push(rowData);
      var arr = me.getChildFlowId(dataArr, []);

      for (var i = 0; i < childLen; i++) {
        if (rowData._children[i]._children != undefined) {
          var _len = rowData._children[i]._children.length;

          if (_len > 0) {
            this.removeChildVaule(rowData._children[i]);
          }
        }

        me.gridData.map(function (value) {
          if (arr.indexOf(value[_this.parentCol]) > -1 && !value["_level_node"]) {
            removeByValue(me.gridData, value);
          }
        });
      }
    },
    toggle: function () {
      var _toggle = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(rowData) {
        var _this2 = this;

        var me, childLen, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, childData, childCondition, data, i, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                me = this; //展开下级

                childLen = !rowData._children ? 0 : rowData._children.length; //let childLen = 0;

                if (!rowData._expanded) {
                  _context.next = 6;
                  break;
                }

                this.removeChildVaule(rowData);
                /**
                 let dataArr = [];
                 dataArr.push(rowData);
                 let arr = me.getChildFlowId(dataArr, []);
                 for (let i = 0; i < childLen; i++) {
                  me.gridData.map(value => {
                    if (
                      arr.indexOf(value[this.parentCol]) > -1 &&
                      !value["_level_node"]
                    ) {
                      removeByValue(me.gridData, value);
                    }
                  });
                }*/

                _context.next = 54;
                break;

              case 6:
                if (!(rowData._children && rowData._children.length > 0)) {
                  _context.next = 28;
                  break;
                }

                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context.prev = 10;

                for (_iterator = rowData._children[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  item = _step.value;

                  if (!rowData["_checked"]) {
                    item["_checked"] = false;
                    item["_indeterminate"] = false;

                    if (item.is_leaf == "否") {
                      item._expanded = false;
                    }
                  }

                  me.gridData.splice(me.gridData.indexOf(rowData) + 1, 0, item);
                }

                _context.next = 18;
                break;

              case 14:
                _context.prev = 14;
                _context.t0 = _context["catch"](10);
                _didIteratorError = true;
                _iteratorError = _context.t0;

              case 18:
                _context.prev = 18;
                _context.prev = 19;

                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }

              case 21:
                _context.prev = 21;

                if (!_didIteratorError) {
                  _context.next = 24;
                  break;
                }

                throw _iteratorError;

              case 24:
                return _context.finish(21);

              case 25:
                return _context.finish(18);

              case 26:
                _context.next = 54;
                break;

              case 28:
                childData = [];
                childCondition = [{
                  colName: this.parentCol,
                  value: rowData[this.noCol],
                  ruleType: "eq"
                }]; //加载表格数据

                _context.next = 32;
                return this.select(this.service_name, childCondition, null, this.order).then(function (response) {
                  _this2.buildData(response.body.data, false);

                  childData = response.body.data;
                });

              case 32:
                data = me.setSpaceIcon(childData, rowData._level);
                rowData._children = deepClone(data);
                i = 0;
                _iteratorNormalCompletion2 = true;
                _didIteratorError2 = false;
                _iteratorError2 = undefined;
                _context.prev = 38;

                for (_iterator2 = rowData._children[Symbol.iterator](); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                  item = _step2.value;

                  if (rowData["_checked"]) {
                    item["_checked"] = true;
                  }

                  me.gridData.splice(me.gridData.indexOf(rowData) + i + 1, 0, item);
                  i++;
                }

                _context.next = 46;
                break;

              case 42:
                _context.prev = 42;
                _context.t1 = _context["catch"](38);
                _didIteratorError2 = true;
                _iteratorError2 = _context.t1;

              case 46:
                _context.prev = 46;
                _context.prev = 47;

                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
                  _iterator2.return();
                }

              case 49:
                _context.prev = 49;

                if (!_didIteratorError2) {
                  _context.next = 52;
                  break;
                }

                throw _iteratorError2;

              case 52:
                return _context.finish(49);

              case 53:
                return _context.finish(46);

              case 54:
                rowData._expanded = !rowData._expanded;

              case 55:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[10, 14, 18, 26], [19,, 21, 25], [38, 42, 46, 54], [47,, 49, 53]]);
      }));

      function toggle(_x) {
        return _toggle.apply(this, arguments);
      }

      return toggle;
    }(),
    getChildFlowId: function getChildFlowId(data, emptyArr) {
      var _this3 = this;

      // 获取子级的flowId
      var me = this;
      Array.from(data).forEach(function (record) {
        emptyArr.push(record[_this3.noCol]);

        if (record._children && record._children.length > 0) {
          var childFlowIdArr = me.getChildFlowId(record._children, emptyArr);
          emptyArr.concat(childFlowIdArr);
        }
      });
      return emptyArr;
    },
    setSpaceIcon: function setSpaceIcon(data, level) {
      // 设置第一列的空格和方向按钮
      var me = this;
      var _level = 0;
      data.forEach(function (value) {
        value._expanded = false;

        if (level !== undefined && level !== null) {
          _level = level + 1;
        } else {
          _level = 1;
        }

        value._level = _level;

        if (value._children && value._children.length > 0) {
          me.setSpaceIcon(value._children, _level);
        }
      });
      return data;
    },
    filterChange: function filterChange(filters) {
      this.filterCondition = [];

      for (var key in filters) {
        var cMap = {};

        if (filters[key].length > 0) {
          cMap["colName"] = key;
          cMap["value"] = filters[key].toString();
          cMap["ruleType"] = "in";
          this.filterCondition.push(cMap);
        }
      }

      this.gridPage.currentPage = 1;
      this.loadTableData();
    },
    handleSortChange: function handleSortChange(column) {
      this.order = [];

      if (column["column"] != null) {
        if ("ascending" == column["order"]) {
          this.order.push({
            colName: column["prop"],
            orderType: "asc"
          });
        } else {
          this.order.push({
            colName: column["prop"],
            orderType: "desc"
          });
        }
      }

      this.loadTableData();
    },
    gridButtonClick: function gridButtonClick(item) {
      var type = item.button_type;
      var exeservice = item.service_name;
      var tab_title = item.service_view_name;

      if ("select" == type) {
        this.toggleFilters(item);
      } else if ("shrink" == type) {
        this.selectFormShow = false;
      } else if ("refresh" == type) {
        this.refresh();
      } else if ("batch_delete" == type) {
        this.batchDeleteData(exeservice);
      } else if ("add" == type) {
        this.onAddClicked();
      } else if ("customize" == type) {
        var operate_params_cfg = item.operate_params;

        if (this.multipleSelection <= 0 && operate_params_cfg != undefined && operate_params_cfg != '' && operate_params_cfg != null) {
          this.$alert("请选择操作数据", "提示", {
            confirmButtonText: "确定"
          });
        } else {

          if (item.operate_type == "修改") {
            this.customize_update(item, this.multipleSelection);
          } else if (operate_item.operate_type == "删除") {
            this.customize_delete(operate_item, this.multipleSelection);
          } else if (operate_item.operate_type == "增加") {
            this.customize_add(operate_item, this.multipleSelection);
          } else {
            this.customizeOperate(item, this.multipleSelection);
          }
        }
      }
    },
    batchDeleteData: function batchDeleteData(exeservice) {
      this.multipleSelection = [];
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.gridData[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var item = _step3.value;

          if (item["_checked"] && !item["_indeterminate"]) {
            this.multipleSelection.push({
              id: item["id"]
            });
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      if (this.multipleSelection.length == 0) {
        this.$alert("请选择删除数据", "提示", {
          confirmButtonText: "确定"
        });
      } else {
        this.deleteData(this.multipleSelection, exeservice);
      }
    },
    rowButtonClick: function rowButtonClick(operate_item, row) {
      console.info("rowButtonClick called");
      var type = operate_item.button_type;
      var exeservice = operate_item.service_name;
      var tab_name = operate_item.service_view_name;

      if ("delete" == type) {
        this.deleteRowData(row, exeservice);
      } else if ("edit" == type) {
        this.onUpdateClicked(row);
      } else if ("detail" == type) {
        var urlParams = "/" + exeservice + "/" + row.id + "?srvApp=" + this.resolveDefaultSrvApp();
        var disp_col = operate_item._disp_col;
        var disp_value = row[disp_col];
        var tab_title = tab_name.replace('查询', '');

        if (disp_value != null && disp_value != undefined && disp_value != '') {
          tab_title = disp_value + "(" + tab_title + "详情)";
        } else {
          tab_title = tab_title + "详情";
        }

        this.addTab("detail", urlParams, tab_title);
      } else if ("addchild" == type) {
        this.onAddChildClicked(row);
      } else if ("duplicate" == type || "duplicatedeep" == type) {
        this.onDuplicateClicked(row);
      } else if ("customize" == type) {
        var data = [row];

        if (operate_item.operate_type == "修改") {
          this.customize_update(operate_item, data);
        } else if (operate_item.operate_type == "删除") {
          this.customize_delete(operate_item, data);
        } else if (operate_item.operate_type == "增加") {
          this.customize_add(operate_item, data);
        } else {
          this.customizeOperate(operate_item, data);
        }
      }
    },
    deleteRowData: function deleteRowData(rowData, exeservice) {
      var _this4 = this;

      var dataArray = [rowData];
      this.deleteData(dataArray, exeservice).then(function () {
        var parentKeyVal = rowData[_this4.parentCol];
        var keyVal = rowData[_this4.noCol];

        _this4.mergeDelete(parentKeyVal, keyVal);
      });
    },
    deleteDataAndSave: function deleteDataAndSave(deleteRowData, exeservice) {
      var _this5 = this;

      return this.$confirm("此操作将永久删除该数据, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "info"
      }).then(function () {
        var deleteRequests = [];
        var request = {};
        request["serviceName"] = exeservice;
        var cMap = {
          colName: "id",
          ruleType: "in"
        };
        var cVule = [];
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = deleteRowData[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var item = _step4.value;
            cVule.push(item.id);
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
              _iterator4.return();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }

        cMap["value"] = cVule.toString();
        request["condition"] = [cMap];
        deleteRequests.push(request);
        return _this5.operate(deleteRequests).then(function (response) {
          var state = response.body.state;

          if ("SUCCESS" == state) {
            _this5.$message({
              type: "success",
              message: "删除成功!"
            });

            if (_this5.gridData.length == cVule.length) {
              if (_this5.gridPage.currentPage > 1) {
                _this5.gridPage.currentPage = _this5.gridPage.currentPage - 1;
              }
            }
          } else {
            _this5.$message({
              type: "error",
              message: response.body.resultMessage
            });
          }
        });
      }).catch(function () {
        _this5.$message({
          type: "info",
          message: "已取消删除"
        });
      });
    },
    initGridData: function () {
      var _initGridData = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2() {
        var _this6 = this;

        var gidInfo;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                //加载serviceCols
                //加载serviceCols
                gidInfo = new GridInfo();
                this.gridPage.pageSizes = gidInfo.pageSizes;
                _context2.next = 4;
                return this.loadColsV2(this.service_name, this.listType).then(function (response) {
                  var listData = response.body.data["srv_cols"];
                  _this6.gridButton = response.body.data["gridButton"];
                  _this6.rowButton = response.body.data["rowButton"];
                  _this6.srv_cols = listData;
                  _this6.noCol = response.body.data["no_col"];
                  _this6.parentCol = response.body.data["parent_no_col"];
                  _this6.gridHeader = [];
                  var column_index = 0;
                  var _iteratorNormalCompletion5 = true;
                  var _didIteratorError5 = false;
                  var _iteratorError5 = undefined;

                  try {
                    for (var _iterator5 = listData[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                      var serviceCol = _step5.value;

                      if (serviceCol["columns"] == "id") {
                        continue;
                      }

                      var header = {};
                      header.srvcol = serviceCol;
                      var colType = serviceCol["col_type"];
                      header["column"] = serviceCol["columns"];
                      header["label"] = serviceCol["label"];
                      header["width"] = "";
                      header["show"] = serviceCol["in_list"] == 1;
                      header["sortable"] = true;
                      header["list_min_width"] = serviceCol["list_min_width"];
                      header["col_type"] = colType;

                      if (header["sortable"] && column_index == 0) {
                        _this6.firstColumn = serviceCol["columns"];
                        column_index++;
                      }

                      if (serviceCol["col_type"] == "Enum" || serviceCol["col_type"] == "Dict") {
                        var filters = []; // throw err, comment
                        // for (var item of serviceCol["option_list_v2"]) {
                        //   filters.push({text: item["label"], value: item["value"]});
                        // }

                        header["filters"] = filters;
                      }

                      _this6.gridHeader.push(header);
                    }
                  } catch (err) {
                    _didIteratorError5 = true;
                    _iteratorError5 = err;
                  } finally {
                    try {
                      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
                        _iterator5.return();
                      }
                    } finally {
                      if (_didIteratorError5) {
                        throw _iteratorError5;
                      }
                    }
                  }
                }).then(function (_) {
                  _this6.listLoaded = true;

                  _this6.$emit("list-loaded", _this6);
                });

              case 4:
                this.loadTableData();

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function initGridData() {
        return _initGridData.apply(this, arguments);
      }

      return initGridData;
    }(),
    loadTableData: function loadTableData() {
      var _this7 = this;

      this.condition = [];
      var page = this.isMem() ? null : {
        pageNo: this.gridPage.currentPage,
        rownumber: this.gridPage.pageSize
      };
      var _iteratorNormalCompletion6 = true;
      var _didIteratorError6 = false;
      var _iteratorError6 = undefined;

      try {
        for (var _iterator6 = this.filterCondition[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
          var cMap = _step6.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError6 = true;
        _iteratorError6 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
            _iterator6.return();
          }
        } finally {
          if (_didIteratorError6) {
            throw _iteratorError6;
          }
        }
      }

      var _iteratorNormalCompletion7 = true;
      var _didIteratorError7 = false;
      var _iteratorError7 = undefined;

      try {
        for (var _iterator7 = this.searchFormCondition[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
          var cMap = _step7.value;
          this.condition.push(cMap);
        }
      } catch (err) {
        _didIteratorError7 = true;
        _iteratorError7 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
            _iterator7.return();
          }
        } finally {
          if (_didIteratorError7) {
            throw _iteratorError7;
          }
        }
      }

      var _iteratorNormalCompletion8 = true;
      var _didIteratorError8 = false;
      var _iteratorError8 = undefined;

      try {
        for (var _iterator8 = this.defaultCondition[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
          var cMap = _step8.value;
          this.condition.push(cMap);
        } //没有条件的时候初始化只查找父节点

      } catch (err) {
        _didIteratorError8 = true;
        _iteratorError8 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
            _iterator8.return();
          }
        } finally {
          if (_didIteratorError8) {
            throw _iteratorError8;
          }
        }
      }

      if (this.condition.length == 0) {
        var initCondition = {
          colName: this.parentCol,
          ruleType: "isnull"
        };
        this.condition.push(initCondition);
      }

      this.condition.filter(function (item) {
        return item.dynamic === true;
      }).forEach(function (item) {
        item.value = eval(item.value);
      });
      var hasEmptyRequiredCondition = this.condition.filter(function (item) {
        return item.required === true && _this7.isEmptyCondition(item);
      }).length > 0;

      if (hasEmptyRequiredCondition) {
        throw "hasEmptyRequiredCondition";
      } //加载表格数据


      this.select(this.service_name, this.condition, page, this.order).then(function (response) {
        // rename for element stupid bug of using children as bulitin
        response.body.data && response.body.data.forEach(function (item) {
          item._children = item.children;
          delete item.children;
        });

        _this7.buildData(response.body.data, true);

        _this7.gridData = response.body.data;

        if (response.body.page) {
          _this7.gridPage.currentPage = response.body["page"]["pageNo"];
          _this7.gridPage.total = response.body["page"]["total"];
        }
      });
    },
    query: function query(condtion) {
      this.searchFormCondition = condtion;
      this.gridPage.currentPage = 1;
      this.condition = [];
      this.loadTableData();
    },
    buildData: function buildData(data, _level_node) {
      var _iteratorNormalCompletion9 = true;
      var _didIteratorError9 = false;
      var _iteratorError9 = undefined;

      try {
        for (var _iterator9 = data[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
          var item = _step9.value;
          item._checked = false;
          item._indeterminate = false;
          item._level_node = _level_node;

          if (item.is_leaf == "否") {
            item._children = [];
          }

          if (item._children && item._children.length > 0) {
            this.buildData(item._children, false);
          }
        }
      } catch (err) {
        _didIteratorError9 = true;
        _iteratorError9 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {
            _iterator9.return();
          }
        } finally {
          if (_didIteratorError9) {
            throw _iteratorError9;
          }
        }
      }
    },
    handleSelectChange: function handleSelectChange(row) {
      var is_select = row["_checked"];
      var no_value = row[this.noCol];
      row["_indeterminate"] = false; //查找子节点 设置和父节点状态一致

      var _iteratorNormalCompletion10 = true;
      var _didIteratorError10 = false;
      var _iteratorError10 = undefined;

      try {
        for (var _iterator10 = this.gridData[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
          var item = _step10.value;

          if (item[this.parentCol] == no_value) {
            item["_checked"] = is_select;
          }
        }
      } catch (err) {
        _didIteratorError10 = true;
        _iteratorError10 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {
            _iterator10.return();
          }
        } finally {
          if (_didIteratorError10) {
            throw _iteratorError10;
          }
        }
      }

      this.setFatherCheck(row);
    },
    setFatherCheck: function setFatherCheck(row) {
      var is_select = row["_checked"]; //检查同级节点的选中状态

      var same = this.checkSelectState(row); //操作父节点

      var parent_value = row[this.parentCol];

      if (is_select) {
        if (!row["_level_node"]) {
          var _iteratorNormalCompletion11 = true;
          var _didIteratorError11 = false;
          var _iteratorError11 = undefined;

          try {
            for (var _iterator11 = this.gridData[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
              var item = _step11.value;

              if (item[this.noCol] == parent_value) {
                if (same) {
                  item["_indeterminate"] = false;
                } else {
                  item["_indeterminate"] = true;
                }

                item["_checked"] = is_select;

                if (!item["_level_node"]) {
                  this.setFatherCheck(item);
                }
              }
            }
          } catch (err) {
            _didIteratorError11 = true;
            _iteratorError11 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion11 && _iterator11.return != null) {
                _iterator11.return();
              }
            } finally {
              if (_didIteratorError11) {
                throw _iteratorError11;
              }
            }
          }
        }
      } else {
        var _iteratorNormalCompletion12 = true;
        var _didIteratorError12 = false;
        var _iteratorError12 = undefined;

        try {
          for (var _iterator12 = this.gridData[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
            var item = _step12.value;

            if (item[this.noCol] == parent_value) {
              if (same) {
                item["_checked"] = false;
                item["_indeterminate"] = false;
              } else {
                item["_checked"] = true;
                item["_indeterminate"] = true;
              }

              this.setFatherCheck(item);
            }
          }
        } catch (err) {
          _didIteratorError12 = true;
          _iteratorError12 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {
              _iterator12.return();
            }
          } finally {
            if (_didIteratorError12) {
              throw _iteratorError12;
            }
          }
        }
      }
    },
    checkSelectState: function checkSelectState(row) {
      //检查同级状态是否一致
      var is_same = true;
      var parent_value = row[this.parentCol];
      var is_select = row["_checked"];
      var _iteratorNormalCompletion13 = true;
      var _didIteratorError13 = false;
      var _iteratorError13 = undefined;

      try {
        for (var _iterator13 = this.gridData[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
          var item = _step13.value;

          if (item[this.parentCol] == parent_value && (is_select != item["_checked"] || item["_indeterminate"] != row["_indeterminate"])) {
            is_same = false;
            break;
          }
        }
      } catch (err) {
        _didIteratorError13 = true;
        _iteratorError13 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {
            _iterator13.return();
          }
        } finally {
          if (_didIteratorError13) {
            throw _iteratorError13;
          }
        }
      }

      return is_same;
    },
    handleCurrentChange: function handleCurrentChange(val) {
      this.gridPage.currentPage = val;
      this.loadTableData();
    },
    handleSizeChange: function handleSizeChange(val) {
      this.gridPage.pageSize = val;
      this.loadTableData();
    },
    onAddExecutorComplete: function onAddExecutorComplete(response) {
      console.debug("onAddExecutorComplete");

      if (response.request.data && response.request.data.length > 0) {
        console.log("response: ".concat(JSON.stringify(response)));
        var list = response.request.data;
        var parentKeyVal = list[0][this.parentCol];
        var keyVal = list[0][this.noCol];
        this.mergeAdd(parentKeyVal, keyVal);
      }
    },
    mergeAdd: function mergeAdd(parentKeyVal, keyVal, addedRow) {
      var _this9 = this;

      function innerAddFunc(addedNode) {
        var _this8 = this;

        addedNode._level = 0;
        addedNode._expanded = false; // loop over list find its parent by match node.no == added.parentno

        var insertPosi = this.gridData.length;
        var parents = this.gridData.filter(function (item) {
          return item[_this8.noCol] == parentKeyVal;
        });

        if (parents.length > 0) {
          var parent = parents[0];
          addedNode._level = (parent._level || 0) + 1;

          if (parent._children && parent._children.length > 0) {
            // insert item into parent._children if any
            // add as first child
            parent._children.splice(0, 0, addedNode);
          } // change to non_leaf if is leaf


          if (parent.is_leaf == '是') {
            parent.is_leaf = '否';
          }

          if (parent._expanded) {
            var start = this.findPosi(parent);

            for (var i = start; i < this.gridData.length; i++) {
              if (!this.gridData[i].path.startsWith(parent.path)) {
                insertPosi = i;
                break;
              }
            }

            this.gridData.splice(insertPosi, 0, addedNode);
          } else {
            parent._expanded = false;
          }
        } else {
          // insert the item into top list
          this.gridData.splice(insertPosi, 0, addedNode);
        }
      }

      if (addedRow) {
        innerAddFunc.call(this, addedRow);
      } else {
        var conditions = [{
          colName: this.noCol,
          ruleType: "eq",
          value: keyVal
        }];
        return this.select(this.service_name, conditions).then(function (response) {
          if (response && response.data && response.data.data && response.data.data.length > 0) {
            var addedNode = response.data.data[0];
            innerAddFunc.call(_this9, addedNode);
          }
        });
      }
    },
    mergeDelete: function mergeDelete(parentKeyVal, keyVal) {
      var _this10 = this;

      // get the deleted node
      var targets = this.gridData.filter(function (item) {
        return item[_this10.noCol] == keyVal;
      });

      if (targets.length == 0) {
        return;
      } // loop over list find it, delete its subtree


      var target = targets[0];

      _.remove(this.gridData, function (item) {
        return item.path.startsWith(target.path);
      }); // hack to fix the _.remove not play nice with vue


      this.gridData = _toConsumableArray(this.gridData); // loop over list find its parent by match node.no == added.parentno

      var parents = this.gridData.filter(function (item) {
        return item[_this10.noCol] == parentKeyVal;
      });

      if (parents.length > 0) {
        var parent = parents[0]; // remove it from parent._children

        if (parent._children && parent._children.length > 0) {
          // remove from parent._children
          _.remove(parent._children, function (item) {
            return item[_this10.noCol] == target[_this10.noCol];
          }); // change to leaf is children is null
          // since parent of delete node is surelly expanded


          if (parent._children.length == 0) {
            parent.is_leaf = '是';
          }
        }
      }
    },
    onUpdateExecutorComplete: function onUpdateExecutorComplete(response) {
      if (response.request.data && response.request.data.length > 0) {
        console.log("response: ".concat(JSON.stringify(response))); // condition is always id = x

        var targetId = response.request.condition[0].value;
        var oldRow = this.gridData.filter(function (row) {
          return row.id == targetId;
        })[0];
        var newRow = response.request.data[0];
        this.mergeUpdate(oldRow, newRow);
      }
    },
    mergeUpdate: function mergeUpdate(oldRow, newRow) {
      if (newRow.hasOwnProperty(this.parentCol) && newRow[this.parentCol] != oldRow[this.parentCol]) {
        // parent changed
        var oldParent = oldRow[this.parentCol];
        var newParent = newRow[this.parentCol];
        var keyVal = oldRow[this.noCol];
        this.mergeDelete(oldParent, keyVal);
        this.mergeAdd(newParent, keyVal);
      } else {
        this.mergeRow(oldRow, newRow);
      }
    },
    findPosi: function findPosi(node) {
      for (var i in this.gridData) {
        if (this.gridData[i][this.noCol] == node[this.noCol]) {
          return parseInt(i);
        }
      }

      return Number.NEGATIVE_INFINITY;
    },
    mergeRow: function mergeRow(base, ext) {
      for (var key in ext) {
        base[key] = ext[key];
      }
    },
    onAddFormActionComplete: function onAddFormActionComplete(action) {
      if (action == "submit") {
        this.activeForm = null;
      }
    },
    onUpdateFormActionComplete: function onUpdateFormActionComplete(action) {
      if (action == "submit") {
        this.activeForm = null;
      }
    },
    onAddChildFormActionComplete: function onAddChildFormActionComplete(action) {
      if (action == "submit") {
        this.activeForm = null;
      }
    }
  },
  computed: {
    maxTableHeight: function maxTableHeight() {
      var ratio = 0.8;
      var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
      return h * ratio;
    }
  },
  created: function created() {
    this.initGridData();

    if (this.pageSize != undefined) {
      this.gridPage.pageSize = this.pageSize;
    }
  }
};

/* script */
const __vue_script__$q = script$q;

/* template */
var __vue_render__$q = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.searchForm)?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.selectFormShow),expression:"selectFormShow"}]},[(_vm.srv_cols)?_c('simple-filter',{attrs:{"srv_cols":_vm.srv_cols},on:{"search-clicked":_vm.query}}):_vm._e()],1):_vm._e(),_vm._v(" "),_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"end"}},[_c('div',{staticClass:"table-head-btns"},[_vm._l((_vm.gridButton),function(item,index){return [(item.permission)?_c('el-button',{key:index,attrs:{"type":!item.button_cls ? 'primary' : item.button_cls},on:{"click":function($event){return _vm.gridButtonClick(item)}}},[_vm._v("\n          "+_vm._s(item.button_name)+"\n        ")]):_vm._e()]})],2)]),_vm._v(" "),_c('el-table',{ref:"treegrid",attrs:{"data":_vm.gridData,"stripe":"","border":"","row-class-name":_vm.tableRowClassName},on:{"filter-change":_vm.filterChange,"sort-change":_vm.handleSortChange}},[_c('el-table-column',{attrs:{"width":"50"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-checkbox',{attrs:{"indeterminate":scope.row._indeterminate},on:{"change":function($event){return _vm.handleSelectChange(scope.row)}},model:{value:(scope.row._checked),callback:function ($$v) {_vm.$set(scope.row, "_checked", $$v);},expression:"scope.row._checked"}})]}}])}),_vm._v(" "),_vm._l((_vm.gridHeader),function(item,index){return (item.column==_vm.firstColumn)?_c('el-table-column',{key:index,attrs:{"width":"300","label":item.label,"min-width":item.list_min_width,"show-overflow-tooltip":""},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._l((scope.row._level),function(space,levelIndex){return _c('span',{key:levelIndex,staticClass:"ms-tree-space"},[_vm._v("        ")])}),_vm._v(" "),(_vm.toggleIconShow(scope.row))?_c('span',{staticClass:"button is-outlined is-primary is-small",on:{"click":function($event){return _vm.toggle(scope.row)}}},[(!scope.row._expanded)?_c('i',{staticClass:"el-icon-plus",attrs:{"aria-hidden":"true"}}):_vm._e(),_vm._v(" "),(scope.row._expanded)?_c('i',{staticClass:"el-icon-minus",attrs:{"aria-hidden":"true"}}):_vm._e()]):_c('span',{staticClass:"ms-tree-space"},[_vm._v("    ")]),_vm._v(" "),_c('span',{attrs:{"title":scope.row[_vm.firstColumn]}},[_vm._v("\n          "+_vm._s(scope.row[_vm.firstColumn])+"\n        ")])]}}],null,true)}):_vm._e()}),_vm._v(" "),_vm._l((_vm.gridHeader),function(item,index){return (item.show&&item.column!=_vm.firstColumn)?_c('el-table-column',{key:index,attrs:{"width":item.width,"prop":item.column,"min-width":item.list_min_width,"label":item.label,"filters":item.filters,"column-key":item.column,"sortable":item.sortable && !_vm.isMem() ? 'custom' : false},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('span',[_vm._v(_vm._s(_vm.formatValue(scope.row, item)))])]}}],null,true)}):_vm._e()}),_vm._v(" "),_c('el-table-column',{attrs:{"fixed":"right","label":"操作","width":"250"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_vm._l((_vm.rowButton),function(operate_item,operate_index){return (_vm.getDispExps(operate_item,scope.row)&&operate_item.permission)?_c('el-button',{key:operate_index,attrs:{"type":"text","size":"small"},on:{"click":function($event){return _vm.rowButtonClick(operate_item,scope.row)}}},[_vm._v("\n          "+_vm._s(operate_item.button_name)+"\n        ")]):_vm._e()}),_vm._v(" "),(_vm.isMem() && scope.row._dirtyFlags)?_c('el-button',{attrs:{"type":"text","size":"small"},on:{"click":function($event){return _vm.onUndoSubmitted(scope.row)}}},[_vm._v("\n          取消\n        ")]):_vm._e()]}}])})],2),_vm._v(" "),(!_vm.isMem())?_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-pagination',{attrs:{"current-page":_vm.gridPage.currentPage,"page-sizes":_vm.gridPage.pageSizes,"page-size":_vm.gridPage.pageSize,"layout":"total, sizes, prev, pager, next, jumper","total":_vm.gridPage.total},on:{"current-change":_vm.handleCurrentChange,"size-change":_vm.handleSizeChange}})],1):_vm._e(),_vm._v(" "),_c('el-dialog',{attrs:{"title":"添加","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'add',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'add')?_c('simple-add',{ref:"add-form",attrs:{"name":"list-add","service":_vm.getAddService,"submit2-db":!_vm.isMem()},on:{"form-loaded":function($event){return _vm.onAddFormLoaded(_vm.$refs['add-form'])},"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"executor-complete":function($event){return _vm.onAddExecutorComplete($event)},"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"复制","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'duplicate' || _vm.activeForm == 'duplicatedeep',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'duplicate' || _vm.activeForm == 'duplicatedeep' )?_c('simple-add',{ref:"duplicate-form",attrs:{"name":"list-add","service":_vm.getAddService,"submit2-db":!_vm.isMem(),"default-conditions":_vm.getDefaultCondition4Duplicate},on:{"action-complete":function($event){return _vm.onAddFormActionComplete($event)},"form-loaded":function($event){return _vm.onDuplicateFormLoaded(_vm.$refs['duplicate-form'])},"executor-complete":function($event){return _vm.onAddExecutorComplete($event)},"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'update',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'update')?_c('simple-update',{ref:"update-form",attrs:{"name":"list-update","submit2-db":!_vm.isMem(),"service":_vm.getUpdateService,"pk":_vm.getClickedRowPk('update')},on:{"form-loaded":function($event){return _vm.onUpdateFormLoaded(_vm.$refs['update-form'])},"action-complete":function($event){return _vm.onUpdateFormActionComplete($event)},"executor-complete":function($event){return _vm.onUpdateExecutorComplete($event)},"submitted2mem":_vm.onUpdate2MemSubmitted}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"添加下级节点","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'add-child',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'add-child')?_c('simple-add',{ref:"add-child-form",attrs:{"name":"list-add-child","submit2-db":!_vm.isMem(),"service":_vm.getAddService},on:{"form-loaded":function($event){return _vm.onAddChildFormLoaded()},"action-complete":function($event){return _vm.onAddChildFormActionComplete($event)},"executor-complete":function($event){return _vm.onAddExecutorComplete($event)},"submitted2mem":_vm.onAdd2MemSubmitted}}):_vm._e()],1)],1)};
var __vue_staticRenderFns__$q = [];

  /* style */
  const __vue_inject_styles__$q = undefined;
  /* scoped */
  const __vue_scope_id__$q = undefined;
  /* module identifier */
  const __vue_module_identifier__$q = undefined;
  /* functional template */
  const __vue_is_functional_template__$q = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var Treegrid = normalizeComponent_1(
    { render: __vue_render__$q, staticRenderFns: __vue_staticRenderFns__$q },
    __vue_inject_styles__$q,
    __vue_script__$q,
    __vue_scope_id__$q,
    __vue_is_functional_template__$q,
    __vue_module_identifier__$q,
    undefined,
    undefined
  );

var script$r = {
  components: {
    Treegrid: Treegrid,
    SimpleUpdate: SimpleUpdate,
    SimpleAdd: SimpleAdd,
    List: List
  },
  mixins: [ChildListMixin],
  data: function data() {
    return {
      pageSize: 5
    };
  },
  props: {
    name: {
      type: String,
      default: 'child'
    },
    service: {
      type: String
    },
    foreignKey: {
      type: Object
    },
    isTree: {
      type: Boolean,
      default: false
    },
    defDataPara: {
      type: Object,
      default: function _default() {
        return null;
      }
    },
    readOnly: {
      type: Boolean,
      default: function _default() {
        return false;
      }
    },
    defaultCondition: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    searchForm: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    storageType: {
      type: String,
      default: "db"
    },
    inplaceEdit: {
      type: Boolean,
      default: false
    },
    listType: {
      type: String,
      default: "detaillist"
    },
    defaultInplaceEditMode: {
      type: Boolean,
      default: false
    },
    defaultDirtyFlags: {
      type: String,
      default: "pristine"
    },
    mergeCol: {
      type: Boolean,
      default: true
    }
  },
  computed: {
    getRefColValue: function getRefColValue() {
      if (this.defaultCondition && this.defaultCondition.length > 0) {
        return this.defaultCondition[0].value;
      }

      return null;
    },
    innerList: function innerList() {
      return this.$refs && this.$refs.list;
    },
    gridData: function gridData() {
      return this.innerList && this.innerList.gridData;
    },
    inlineLists: function inlineLists() {
      return this.innerList && this.innerList.inlineLists;
    },
    getDefaultConditions: function getDefaultConditions() {
      if (this.foreignKey.conditions && this.foreignKey.conditions.length > 0) {
        return _.concat(this.defaultCondition, this.foreignKey.conditions);
      } else {
        return this.defaultCondition;
      }
    }
  },
  created: function created() {
    console.info("child-list created, uid:" + this._uid);
  },
  methods: {
    isInplaceEdit: function isInplaceEdit() {
      return this.innerList && this.innerList.isInplaceEdit();
    },
    isMem: function isMem() {
      var list = this.$refs.list;
      return list.isMem();
    },
    buildExecutors4Edit: function buildExecutors4Edit() {
      var list = this.$refs.list;
      return list.buildExecutors4Edit();
    },
    listrefresh: function listrefresh() {
      var list = this.$refs["list"];
      list.loadTableData();
    },

    /**
     * hide ref column and set a vaue
     * @param form
     */
    onAddFormLoaded: function onAddFormLoaded(form) {
      console.info("on add form loaded in child-list"); // hide ref cols

      var refCol = this.foreignKey.column_name || this.foreignKey.ref_service_column;
      var refColField = form.fields[refCol];
      refColField.info.visible = false;
      refColField.setSrvVal(this.getRefColValue); // hide extra fk condition cols and set values

      if (this.foreignKey.conditions) {
        this.foreignKey.conditions.forEach(function (item) {
          var refCol = item.colName;
          var refColField = form.fields[refCol];
          refColField.info.visible = false;
          refColField.setSrvVal(item.value);
          console.info("set field ".concat(refCol, " value to ").concat(item.value, " "));
        });
      }

      form.actions.submit.nav2Location = null;
      this.$emit("add-form-loaded", form);
    },

    /**
     * hide ref column
     * @param form
     */
    onUpdateFormLoaded: function onUpdateFormLoaded(form) {
      console.info("on update form loaded in child-list");
      this.hiddRefColFieldInForm(form);
      form.actions.submit.nav2Location = null;
      this.$emit("update-form-loaded", form);
    },
    onFilterFormLoaded: function onFilterFormLoaded(form) {
      var refCol = this.foreignKey.column_name;
      refCol = "_" + refCol + "_disp";
      var refColField = form.fields[refCol];

      if (refColField) {
        refColField.info.visible = false;
      }
    },
    onInlineListLoaded: function onInlineListLoaded(inlineList) {
      this.$emit('inline-list-loaded', inlineList, this);
    }
  }
};

/* script */
const __vue_script__$r = script$r;

/* template */
var __vue_render__$r = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.isTree && _vm.storageType === 'db')?_c('treegrid',{ref:"list",attrs:{"name":_vm.name,"list-type":"detaillist","storage-type":_vm.storageType,"service":_vm.service,"page-size":_vm.pageSize,"default-condition":_vm.getDefaultConditions},on:{"list-loaded":function($event){return _vm.onListLoaded()},"add-form-loaded":function($event){return _vm.onAddFormLoaded($event)},"update-form-loaded":function($event){return _vm.onUpdateFormLoaded($event)}}}):_c('list',{ref:"list",attrs:{"name":_vm.name,"page-size":_vm.pageSize,"list-type":_vm.listType,"storage-type":_vm.storageType,"service":_vm.service,"def-data-para":_vm.defDataPara,"read-only":_vm.readOnly,"childforeignkey":_vm.foreignKey,"childforeignvalue":_vm.getRefColValue,"default-condition":_vm.getDefaultConditions,"inplace-edit":_vm.inplaceEdit,"default-inplace-edit-mode":_vm.defaultInplaceEditMode,"default-dirty-flags":_vm.defaultDirtyFlags,"merge-col":_vm.mergeCol},on:{"list-loaded":_vm.onListLoaded,"inline-list-loaded":_vm.onInlineListLoaded,"add-form-loaded":function($event){return _vm.onAddFormLoaded($event)},"update-form-loaded":function($event){return _vm.onUpdateFormLoaded($event)},"duplicate-form-loaded":function($event){return _vm.onAddFormLoaded($event)},"filter-form-loaded":_vm.onFilterFormLoaded,"grid-data-changed":function($event){return _vm.$emit('grid-data-changed', $event)},"standby-row-added":_vm.onStandbyRowAdded}})],1)};
var __vue_staticRenderFns__$r = [];

  /* style */
  const __vue_inject_styles__$r = undefined;
  /* scoped */
  const __vue_scope_id__$r = undefined;
  /* module identifier */
  const __vue_module_identifier__$r = undefined;
  /* functional template */
  const __vue_is_functional_template__$r = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var ChildList = normalizeComponent_1(
    { render: __vue_render__$r, staticRenderFns: __vue_staticRenderFns__$r },
    __vue_inject_styles__$r,
    __vue_script__$r,
    __vue_scope_id__$r,
    __vue_is_functional_template__$r,
    __vue_module_identifier__$r,
    undefined,
    undefined
  );

var ParentChildMixin = {
  data: function data() {
    return {
      isMarker: true,
      childrenList: [],
      childrenListLoaded: false,
      hideChildrenLists: false
    };
  },
  props: {
    name: {
      type: String,
      default: 'main'
    },
    formModelDecorator: {
      type: Function,
      default: null
    }
  },
  computed: {
    selectServiceName: function selectServiceName() {
      var basicForm = this.$refs.basicForm;
      return basicForm ? basicForm.loaderService : null;
    },
    fields: function fields() {
      return this.getBasicForm().fields;
    },
    actions: function actions() {
      return this.getBasicForm().actions;
    }
  },
  methods: {
    hasVisibleChildList: function hasVisibleChildList() {
      var _this = this;

      return this.child_service && this.child_service.filter(function (child) {
        return _this.showChildList(child);
      }).length > 0;
    },
    srvValFormModel: function srvValFormModel() {
      var basicForm = this.$refs.basicForm;
      return basicForm ? basicForm.srvValFormModel() : null;
    },
    getBasicForm: function getBasicForm() {
      return this.$refs.basicForm;
    },
    onSubmitted2mem: function onSubmitted2mem(srvvalFormMode, fields) {
      this.$emit('submitted2mem', srvvalFormMode, fields);
    },
    validateForm: function validateForm() {
      return this.getBasicForm().validateForm();
    },

    /**
     * action type is crud
     * @param form
     * @param actionType
     */
    buildChildrenList: function buildChildrenList(form, actionType) {
      this.loadChildrenList();
    },
    loadChildrenList: function loadChildrenList() {
      var _this2 = this;

      return this.loadColsV2(this.selectServiceName, "detail").then(function (response) {
        var childrenServices = response.body.data["child_service"];
        var basicForm = _this2.$refs.basicForm;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          var _loop = function _loop() {
            item = _step.value;
            var foreign_key = item["foreign_key"];

            if (foreign_key.foreign_key_type !== '主子表') {
              return "continue";
            }

            var refedCol = foreign_key["referenced_column_name"];

            var refedColValGetter = function refedColValGetter() {
              return basicForm.fields[refedCol].getSrvVal();
            };

            item.defaultCondition = [{
              colName: foreign_key["column_name"],
              ruleType: "eq",
              valueFunc: refedColValGetter,
              required: true
            }];

            _this2.childrenList.push(item);
          };

          for (var _iterator = childrenServices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var item;

            var _ret = _loop();

            if (_ret === "continue") continue;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }).then(function (_) {
        _this2.$nextTick(function (_) {
          _this2.childrenListLoaded = true;
        });
      });
    },
    srvvalFormModelDecorator: function srvvalFormModelDecorator(formModel) {
      if (this.$refs && this.$refs.childrenList) {
        var childrenList = {}; // index and fk constraint name key-value pair

        for (var i in this.$refs.childrenList) {
          var child = this.$refs.childrenList[i];
          childrenList[i] = child.gridData;
          childrenList[child.foreignKey.constraint_name] = child.gridData;
        }

        this.$set(formModel, "_children", childrenList);
      }

      if (this.formModelDecorator) {
        this.formModelDecorator(formModel);
      }
    },
    onChildListDataChanged: function onChildListDataChanged() {
      // trigger the js redundant computation
      var form = this;
      this.getBasicForm().handleRedundantOnFormModelChange(null, null, this.fields, function (_) {
        return form.srvValFormModel();
      });
    },
    onChildListLoaded: function onChildListLoaded(childList) {
      var basicForm = this.getBasicForm();
      var submitAction = basicForm.actions.submit;

      if (!submitAction || !submitAction.executor) {
        return;
      }

      var executor = basicForm.$refs.submit[0].$refs.executor;

      if (executor && childList.isMem()) {
        childList.buildExecutors4Edit().then(function (subexecutors) {
          var fk = childList.foreignKey;
          var dependKey = {
            type: "column",
            add_col: fk.column_name,
            depend_key: fk.referenced_column_name
          };
          subexecutors.forEach(function (subexecutor) {
            subexecutor.dependKeys = [dependKey];
            subexecutor.fk = fk;
            executor.children.unshift(subexecutor);
          });
        });
      }
    },
    onChildInlineListLoaded: function onChildInlineListLoaded(inlineList, childList) {
      var basicForm = this.getBasicForm();
      var submitAction = basicForm.actions.submit;

      if (!submitAction || !submitAction.executor) {
        return;
      }

      var executor = basicForm.$refs.submit[0].$refs.executor;

      if (executor && childList.isMem()) {
        var fk = childList.foreignKey; // remove previous added

        _.remove(executor.children, function (item) {
          return _.isEqual(item.fk, fk);
        }); // readd


        childList.buildExecutors4Edit().then(function (subexecutors) {
          var dependKey = {
            type: "column",
            add_col: fk.column_name,
            depend_key: fk.referenced_column_name
          };
          subexecutors.forEach(function (subexecutor) {
            subexecutor.dependKeys = [dependKey];
            subexecutor.fk = fk;
            executor.children.unshift(subexecutor);
          });
        });
      }
    },
    showChildList: function showChildList(childList) {
      var fk = childList.foreign_key;
      var expr = fk.show_ui_child_table;

      if (fk && expr) {
        if (_.isString(expr)) {
          if (expr === "否") {
            return false;
          } else {
            if (expr.trim().startsWith("{{") && expr.trim().endsWith("}}")) {
              // for expr
              expr = expr.replace("{{", "").replace("}}", "");
              var data = this.srvValFormModel();

              try {
                return eval(expr);
              } catch (e) {}
            }
          }
        }
      }

      return true;
    }
  }
};

var script$s = {
  name: "detail",
  components: {
    ChildList: ChildList,
    SimpleDetail: SimpleDetail
  },
  mixins: [ParentChildMixin],
  props: {
    service: {
      type: String
    },
    formType: {
      type: String,
      default: function _default() {
        return "detail";
      }
    },
    is_view_title: {
      type: Boolean,
      default: function _default() {
        return true;
      }
    },
    pkid: {
      type: String
    },
    defaultConditions: {
      type: Array
    }
  },
  data: function data() {
    var _ref;

    return _ref = {
      activeName: 1,
      id: this.pkid || this.$route.params.id,
      service_name: this.service || this.$route.params.service_name,
      detailData: {}
    }, _defineProperty(_ref, "detailData", {}), _defineProperty(_ref, "custService", ""), _defineProperty(_ref, "custCondition", []), _defineProperty(_ref, "detail_srv_cols", []), _defineProperty(_ref, "child_service", []), _defineProperty(_ref, "tab_view_name", ""), _defineProperty(_ref, "searchForm", false), _defineProperty(_ref, "initLoad", false), _ref;
  },
  methods: {
    hasVisibleChildListTab: function hasVisibleChildListTab() {
      var _this = this;

      return this.child_service && !this.hideChildrenLists && this.child_service.filter(function (child) {
        return _this.showChildList(child) && _this.isTabsModel(child);
      }).length > 0;
    },
    hasVisibleChildListCollapse: function hasVisibleChildListCollapse() {
      var _this2 = this;

      return this.child_service && !this.hideChildrenLists && this.child_service.filter(function (child) {
        return _this2.showChildList(child) && !_this2.isTabsModel(child);
      }).length > 0;
    },
    noDataHand: function noDataHand(item) {
      item.show = false;
    },

    /**
       * DO NOT REMOVE THIS !!! ref name is diff
       * @returns {*}
       */
    srvValFormModel: function srvValFormModel() {
      var basicForm = this.$refs["simple-detail"];
      return basicForm ? basicForm.srvValFormModel() : null;
    },
    initGridData: function () {
      var _initGridData = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var _this3 = this;

        var condition, detailData, childList, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, item, foreign_key, referenced_column_name, _referenced_column_name;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                condition = [];

                if (this.custService != "") {
                  this.service_name = this.custService;
                  condition = this.custCondition;
                } else {
                  if (this.id != undefined) {
                    condition = [{
                      colName: "id",
                      value: this.id,
                      ruleType: "eq"
                    }];
                  }

                  if (this.custCondition.length > 0) {
                    condition = condition.concat(this.custCondition);
                  }
                }

                detailData = null;
                _context.next = 6;
                return this.selectOne(this.service_name, condition).then(function (response) {
                  detailData = response.body;
                });

              case 6:
                childList = [];
                _context.next = 9;
                return this.loadColsV2(this.service_name, "detail").then(function (response) {
                  _this3.detail_srv_cols = response.body.data["srv_cols"];
                  childList = response.body.data["child_service"];
                  var temp = response.body.data["service_view_name"];

                  if (temp.endsWith("查询")) {
                    _this3.tab_view_name = temp.substr(0, temp.length - 2) + "详情";
                  } else {
                    _this3.tab_view_name = response.body.data["service_view_name"] + "详情";
                  }
                });

              case 9:
                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _iteratorError = undefined;
                _context.prev = 12;

                for (_iterator = childList[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                  item = _step.value;
                  item.show = true;
                  foreign_key = item.foreign_key;

                  if (item.srv_cols) {
                    // intra-app fk
                    referenced_column_name = foreign_key.referenced_column_name;
                    item.defaultCondition = [{
                      colName: foreign_key.column_name,
                      ruleType: "eq",
                      value: detailData[referenced_column_name]
                    }];
                  } else {
                    // inter-app fk
                    _referenced_column_name = foreign_key.refed_service_column;
                    item.defaultCondition = [{
                      colName: foreign_key.ref_service_column,
                      ruleType: "eq",
                      value: detailData[_referenced_column_name]
                    }];
                  }

                  this.child_service.push(item);
                }

                _context.next = 20;
                break;

              case 16:
                _context.prev = 16;
                _context.t0 = _context["catch"](12);
                _didIteratorError = true;
                _iteratorError = _context.t0;

              case 20:
                _context.prev = 20;
                _context.prev = 21;

                if (!_iteratorNormalCompletion && _iterator.return != null) {
                  _iterator.return();
                }

              case 23:
                _context.prev = 23;

                if (!_didIteratorError) {
                  _context.next = 26;
                  break;
                }

                throw _iteratorError;

              case 26:
                return _context.finish(23);

              case 27:
                return _context.finish(20);

              case 28:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[12, 16, 20, 28], [21,, 23, 27]]);
      }));

      function initGridData() {
        return _initGridData.apply(this, arguments);
      }

      return initGridData;
    }(),
    isTabsModel: function isTabsModel(item) {
      if ("tabs" == item.foreign_key.show_ui_model) {
        return true;
      } else {
        return false;
      }
    }
  },
  created: function created() {
    var operate_params = this.getOperateParams();

    if (operate_params) {
      var operate_Object = JSON.parse(operate_params);
      this.custService = operate_Object["serviceName"];

      if (operate_Object["condition"]) {
        this.custCondition = operate_Object["condition"];
      }
    }

    if (this.defaultConditions != undefined) {
      this.custCondition = this.custCondition.concat(this.defaultConditions);
    }

    this.initLoad = true;
    this.emitEvent("initLoad", this);
    this.initGridData();
  }
};

/* script */
const __vue_script__$s = script$s;

/* template */
var __vue_render__$s = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-card',{staticClass:"box-card"},[(!_vm.hasVisibleChildListTab())?_c('div',[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.is_view_title),expression:"is_view_title"}],staticClass:"clearfix",attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v(_vm._s(_vm.tab_view_name))])]),_vm._v(" "),(_vm.initLoad)?_c('div',{staticClass:"text item"},[_c('simple-detail',{ref:"simple-detail",attrs:{"form-type":_vm.formType,"service":_vm.service,"default-conditions":_vm.custCondition,"srvval-form-model-decorator":_vm.srvvalFormModelDecorator,"pk-col":"id","pk":_vm.id},on:{"form-loaded":function($event){return _vm.$emit('form-loaded', $event)}}})],1):_vm._e()]):_vm._e(),_vm._v(" "),_c('div',[(_vm.hasVisibleChildListTab())?_c('el-tabs',[_c('el-tab-pane',{attrs:{"label":_vm.tab_view_name}},[_c('simple-detail',{ref:"simple-detail",attrs:{"form-type":_vm.formType,"service":_vm.service,"default-conditions":_vm.custCondition,"srvval-form-model-decorator":_vm.srvvalFormModelDecorator,"pk-col":"id","pk":_vm.id},on:{"form-loaded":function($event){return _vm.$emit('form-loaded', $event)}}})],1),_vm._v(" "),_vm._l((_vm.child_service),function(item,index){return [(_vm.showChildList(item) && _vm.isTabsModel(item)&&item.show)?_c('el-tab-pane',{key:index,attrs:{"label":item.foreign_key.section_name}},[(item.foreign_key.view_model=='detail')?_c('simple-detail',{ref:"child-simple-detail",refInFor:true,attrs:{"form-type":"detail","service":item.service_name,"default-conditions":item.defaultCondition},on:{"form-load-nodata":function($event){return _vm.noDataHand(item)}}}):_c('child-list',{key:index,ref:"childrenList",refInFor:true,attrs:{"list-type":_vm.formType=='procdetail'?'procdetaillist':'detaillist',"name":item.service_name,"$srv-app":item.srv_app,"service":item.service_name,"foreign-key":item.foreign_key,"read-only":item.foreign_key.child_table_readonly=='是',"default-condition":item.defaultCondition,"search-form":_vm.searchForm,"is-tree":!!item.parent_no_col,"inplace-edit":true},on:{"list-loaded":function($event){return _vm.$emit('list-loaded', $event)},"update-form-loaded":function($event){return _vm.$emit('update-form-loaded', $event)},"add-form-loaded":function($event){return _vm.$emit('add-form-loaded', $event)}}})],1):_vm._e()]})],2):_vm._e(),_vm._v(" "),(_vm.hasVisibleChildListCollapse())?_c('el-collapse',{attrs:{"accordion":""},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v;},expression:"activeName"}},[_vm._l((_vm.child_service),function(item,index){return [_c('el-collapse-item',{directives:[{name:"show",rawName:"v-show",value:(_vm.showChildList(item) && !_vm.isTabsModel(item)),expression:"showChildList(item) && !isTabsModel(item)"}],key:index,attrs:{"title":item.foreign_key.section_name,"name":index+1}},[(item.foreign_key.view_model=='detail')?_c('simple-detail',{ref:"child-simple-detail",refInFor:true,attrs:{"form-type":"detail","service":item.service_name,"default-condition":item.defaultCondition}}):_c('child-list',{key:index,ref:"childrenList",refInFor:true,attrs:{"name":item.service_name,"list-type":_vm.formType=='procdetail'?'procdetaillist':'detaillist',"$srv-app":item.srv_app,"service":item.service_name,"foreign-key":item.foreign_key,"read-only":item.foreign_key.child_table_readonly=='是',"default-condition":item.defaultCondition,"search-form":_vm.searchForm,"is-tree":!!item.parent_no_col,"inplace-edit":true},on:{"list-loaded":function($event){return _vm.$emit('list-loaded', $event)},"update-form-loaded":function($event){return _vm.$emit('update-form-loaded', $event)},"add-form-loaded":function($event){return _vm.$emit('add-form-loaded', $event)}}})],1)]})],2):_vm._e()],1)])],1)};
var __vue_staticRenderFns__$s = [];

  /* style */
  const __vue_inject_styles__$s = undefined;
  /* scoped */
  const __vue_scope_id__$s = undefined;
  /* module identifier */
  const __vue_module_identifier__$s = undefined;
  /* functional template */
  const __vue_is_functional_template__$s = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var detail = normalizeComponent_1(
    { render: __vue_render__$s, staticRenderFns: __vue_staticRenderFns__$s },
    __vue_inject_styles__$s,
    __vue_script__$s,
    __vue_scope_id__$s,
    __vue_is_functional_template__$s,
    __vue_module_identifier__$s,
    undefined,
    undefined
  );

var script$t = {
  name: "add",
  components: {
    SimpleAdd: SimpleAdd,
    ChildList: ChildList
  },
  mixins: [ParentChildMixin, FieldRedundantMixin],
  props: {
    service: {
      type: String
    },
    defDataPara: {
      type: Object,
      default: function _default() {
        return null;
      }
    },
    // for update/detail/add, it is loader's condition
    // for filter, it is default condition
    defaultConditions: {
      type: Array
    },
    // for update/add, it is form fields default value
    defaultValues: {
      type: Object
    },
    navAfterSubmit: {
      type: Boolean,
      default: true
    },
    label: {
      type: String,
      default: "添加"
    },
    submit2Db: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      service_name: this.service || this.$route.params.service_name,
      activeName: 0
    };
  },
  computed: {},
  methods: {
    onAddFormLoaded: function onAddFormLoaded(form) {
      this.$emit("form-loaded", this); // if itself is submit2mem, no childlist

      if (this.submit2Db) {
        this.buildChildrenList(form);
      }
    },
    onInnerFormModelChanged: function onInnerFormModelChanged() {
      var _this = this;

      // notify child list inplace edit redundant via js
      if (this.$refs && this.$refs.childrenList) {
        this.$refs.childrenList.filter(function (item) {
          return item.isInplaceEdit();
        }).forEach(function (childlist) {
          var realList = childlist.$refs.list;
          realList.inplaceEditData.forEach(function (fieldsMap) {
            var row = {};

            for (var key in fieldsMap) {
              var field = fieldsMap[key];

              if (field && field.getSrvVal) {
                row[key] = field.getSrvVal();
              }
            }

            for (var _key in fieldsMap) {
              var _field = fieldsMap[_key];

              if (_field && _field.getSrvVal) {
                var vm = _this;

                _this.handleRedundantViaJs(_field, function (_) {
                  return row;
                }, vm);
              }
            }
          });
        });
      }
    }
  }
};

/* script */
const __vue_script__$t = script$t;

/* template */
var __vue_render__$t = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-card',{staticClass:"box-card"},[_c('div',{staticClass:"clearfix",attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v(_vm._s(_vm.label))])]),_vm._v(" "),_c('div',{staticClass:"text item"},[_c('simple-add',{ref:"basicForm",attrs:{"service":_vm.service,"default-conditions":_vm.defaultConditions,"submit2-db":_vm.submit2Db,"default-values":_vm.defaultValues,"srvval-form-model-decorator":_vm.srvvalFormModelDecorator},on:{"form-loaded":_vm.onAddFormLoaded,"form-model-changed":_vm.onInnerFormModelChanged,"action-complete":function($event){return _vm.$emit('action-complete', $event)},"submitted2mem":_vm.onSubmitted2mem}})],1),_vm._v(" "),(_vm.childrenListLoaded)?_c('div',{staticClass:"text item"},[_c('el-collapse',{model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v;},expression:"activeName"}},[_vm._l((_vm.childrenList),function(item,index){return [_c('el-collapse-item',{directives:[{name:"show",rawName:"v-show",value:(_vm.showChildList(item)),expression:"showChildList(item)"}],key:index,attrs:{"title":item.foreign_key.section_name || item.foreign_key.table_name,"name":index}},[_c('child-list',{key:index,ref:"childrenList",refInFor:true,attrs:{"name":item.service_name,"storage-type":"mem","def-data-para":_vm.defDataPara,"inplace-edit":true,"list-type":"addchildlist","service":item.service_name,"foreign-key":item.foreign_key,"default-condition":item.defaultCondition,"is-tree":!!item.parent_no_col,"default-inplace-edit-mode":true,"default-dirty-flags":"add","merge-col":false},on:{"update-form-loaded":function($event){return _vm.$emit('update-form-loaded', $event)},"add-form-loaded":function($event){return _vm.$emit('add-form-loaded', $event)},"grid-data-changed":_vm.onChildListDataChanged,"list-loaded":_vm.onChildListLoaded,"inline-list-loaded":_vm.onChildInlineListLoaded}})],1)]})],2)],1):_vm._e()])],1)};
var __vue_staticRenderFns__$t = [];

  /* style */
  const __vue_inject_styles__$t = undefined;
  /* scoped */
  const __vue_scope_id__$t = undefined;
  /* module identifier */
  const __vue_module_identifier__$t = undefined;
  /* functional template */
  const __vue_is_functional_template__$t = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var add = normalizeComponent_1(
    { render: __vue_render__$t, staticRenderFns: __vue_staticRenderFns__$t },
    __vue_inject_styles__$t,
    __vue_script__$t,
    __vue_scope_id__$t,
    __vue_is_functional_template__$t,
    __vue_module_identifier__$t,
    undefined,
    undefined
  );

var add$1 = /*#__PURE__*/Object.freeze({
  default: add
});

//
var script$u = {
  name: "update",
  components: {
    SimpleUpdate: SimpleUpdate,
    ChildList: ChildList
  },
  mixins: [ParentChildMixin],
  props: {
    service: {
      type: String
    },
    // for update/detail/add, it is loader's condition
    // for filter, it is default condition
    defaultConditions: {
      type: Array
    },
    // for update/add, it is form fields default value
    defaultValues: {
      type: Object
    },
    navAfterSubmit: {
      type: Boolean,
      default: true
    },
    label: {
      type: String,
      default: "编辑"
    },
    submit2Db: {
      type: Boolean,
      default: true
    },
    pkCol: {
      type: String
    },
    pk: {
      type: String
    },
    initLoad: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      service_name: this.service || this.$route.params.service_name,
      activeName: 0
    };
  },
  methods: {
    gotPk: function gotPk() {
      return this.pk || this.$route.params.id;
    },
    onBasicFormLoaded: function onBasicFormLoaded(form) {
      this.$emit("form-loaded", this); // if itself is submit2mem, no childlist

      if (this.submit2Db) {
        this.buildChildrenList(form);
      }
    }
  },
  created: function created() {
    window.forms = window.forms || {};
    window.forms.update = this;
  }
};

/* script */
const __vue_script__$u = script$u;

/* template */
var __vue_render__$u = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-card',{staticClass:"box-card"},[_c('div',{staticClass:"clearfix",attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v(_vm._s(_vm.label))])]),_vm._v(" "),_c('div',{staticClass:"text item"},[_c('simple-update',{ref:"basicForm",attrs:{"service":_vm.service,"default-conditions":_vm.defaultConditions,"submit2-db":_vm.submit2Db,"srvval-form-model-decorator":_vm.srvvalFormModelDecorator,"pk":_vm.gotPk(),"pk-col":_vm.pkCol,"init-load":_vm.initLoad},on:{"form-loaded":_vm.onBasicFormLoaded,"action-complete":function($event){return _vm.$emit('action-complete', $event)},"submitted2mem":_vm.onSubmitted2mem}})],1),_vm._v(" "),(_vm.childrenListLoaded)?_c('div',{staticClass:"text item"},[_c('el-collapse',{model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v;},expression:"activeName"}},[_vm._l((_vm.childrenList),function(item,index){return [_c('el-collapse-item',{directives:[{name:"show",rawName:"v-show",value:(_vm.showChildList(item)),expression:"showChildList(item)"}],key:index,attrs:{"title":item.foreign_key.section_name || item.foreign_key.table_name,"name":index}},[_c('child-list',{key:index,ref:"childrenList",refInFor:true,attrs:{"name":item.service_name,"storage-type":"mem","service":item.service_name,"foreign-key":item.foreign_key,"default-condition":item.defaultCondition,"is-tree":!!item.parent_no_col,"inplace-edit":true,"list-type":"updatechildlist","default-inplace-edit-mode":true,"merge-col":false},on:{"update-form-loaded":function($event){return _vm.$emit('update-form-loaded', $event)},"add-form-loaded":function($event){return _vm.$emit('add-form-loaded', $event)},"grid-data-changed":_vm.onChildListDataChanged,"list-loaded":_vm.onChildListLoaded}})],1)]})],2)],1):_vm._e()])],1)};
var __vue_staticRenderFns__$u = [];

  /* style */
  const __vue_inject_styles__$u = undefined;
  /* scoped */
  const __vue_scope_id__$u = undefined;
  /* module identifier */
  const __vue_module_identifier__$u = undefined;
  /* functional template */
  const __vue_is_functional_template__$u = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var update = normalizeComponent_1(
    { render: __vue_render__$u, staticRenderFns: __vue_staticRenderFns__$u },
    __vue_inject_styles__$u,
    __vue_script__$u,
    __vue_scope_id__$u,
    __vue_is_functional_template__$u,
    __vue_module_identifier__$u,
    undefined,
    undefined
  );

var init_page_index = 0;
var script$v = {
  name: "procdetail",
  components: {
    procSimpleList: procSimpleList,
    simpleDetail: SimpleDetail,
    SimpleAdd: SimpleAdd,
    SimpleUpdate: SimpleUpdate,
    UploadFile: UploadFile,
    add: add,
    update: update,
    detail: detail
  },
  props: {
    name: {
      type: String,
      default: 'main'
    },
    serviceProp: {
      type: String
    },
    procInstanceNoProp: {
      type: String
    },
    navigateHandler: {
      type: Function
    }
  },
  watch: {
    proHanleData: function proHanleData(data) {
      if (data != undefined && data.approval_options != undefined && data.approval_options.length == 1) {
        this.approval_form.proc_result = data.approval_options[0]["value"];

        if (this.approval_form.proc_result == "return" && data.return_options.length == 1) {
          this.approval_form.step_no = data.return_options[0]["value"];
        }
      }
    },
    approval_form: {
      handler: function handler(data) {
        if (data.proc_result == "return" && this.proHanleData.return_options.length == 1) {
          data.step_no = this.proHanleData.return_options[0]["value"];
        }
      },
      deep: true
    }
  },
  data: function data() {
    return {
      // true：当审核不通过时，不带业务数据
      noBizDataWhenNoPass: false,
      noAuthorityErrorMessage: null,
      apvTurnUserOtionsFunc: null,
      bizDataStepReadVisible: {},
      hideOnlyApvOption: false,
      timeId: null,
      interval: null,
      save_data_str: "",
      proc_instance_no: null,
      mainData: {},
      startProcDefaultValue: {},
      initload: false,
      service_name: null,
      record_activeNames: ["1"],
      record_default_condition: [],
      existsGridButton: false,
      handle_active_step_name: "",
      handle_active_step_no: "",
      proCharData: [],
      proHanleData: {},
      proc_basic: {},
      stepForm: [],
      startFrom: null,
      recordShow: false,
      defDataPara: null,
      uplaodFiled: {
        info: {
          editable: true
        },
        fileDesc: "请上传文件,大小不超过50MB",
        fileSize: 6200,
        fileType: "",
        model: ""
      },
      approval_form: {
        proc_result: "",
        remark: "",
        file_no: "",
        turn_user_no: "",
        turn_step_no: "",
        step_no: "",
        userOptions: []
      },
      button_info: null,
      page_type: "approval"
    };
  },
  methods: {
    getNoAuthorityMessage: function getNoAuthorityMessage() {
      var defaultMsg = "\u60A8\u65E0\u6743\u9650\u5904\u7406......\u5F53\u524D\u8D23\u4EFB\u4EBA\u3010".concat(this.proHanleData._approval_user, "\u3011\u6B63\u5728\u5904\u7406\u8BF7\u7B49\u5F85......");
      return this.noAuthorityErrorMessage ? this.noAuthorityErrorMessage : defaultMsg;
    },
    isStepDataReady: function isStepDataReady() {
      return !_.isEmpty(this.proHanleData) && !_.isEmpty(this.proCharData);
    },
    isFinished: function isFinished() {
      return !_.isUndefined(this.proHanleData.finishStatus) && !_.isNull(this.proHanleData.finishStatus);
    },
    isInApplyStep: function isInApplyStep() {
      return !this.isFinished() && this.proHanleData.step_no === this.proc_basic.init_step_no;
    },
    isApplyWithDraft: function isApplyWithDraft() {
      return this.isInApplyStep() && !!this.proc_instance_no;
    },
    isInApproveStep: function isInApproveStep() {
      return !this.isFinished() && !this.isInApplyStep();
    },
    prevalidate: function prevalidate(data) {

      if (this.button_info != null) {
        var action_validate = this.button_info.action_validate;

        if (action_validate != null && action_validate != "" && action_validate != undefined) {
          return eval("var zz=" + action_validate + "(vm,data); zz");
        } else {
          return true;
        }
      } else {
        return true;
      }
    },
    onProcSimpleListLoad: function onProcSimpleListLoad(simpleList) {
      var gridService = simpleList.service;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.proHanleData.biz_cfg_data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var item_biz = _step.value;

          if (item_biz["select_service"] == gridService) {
            item_biz._simpleListInstance = simpleList;
            break;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    },
    isallowclick: function isallowclick(item) {
      var view_rule = this.proc_basic.view_rules;

      if (top.user != undefined) {
        var login_user = top.user.user_no;

        if (view_rule != "" && view_rule != null && view_rule != undefined) {
          view_rule = JSON.parse(view_rule); //申请人查看逻辑判断

          var applicant = view_rule.applicant;

          if (applicant == "all") {
            var applyuser = this.mainData.create_user;

            if (login_user == applyuser) {
              return true;
            }
          } //审核人查看逻辑判断


          var reviewer = view_rule.reviewer;

          if (reviewer == "all_review_step") {
            var handUser = item._approval_user_no;

            if (handUser == "" || handUser == undefined || handUser == null) {
              return false;
            } else {
              var handUsers = handUser.split(",");
              return handUsers.includes(login_user);
            }
          }

          return false;
        } else {
          return true;
        }
      } else {
        return true;
      }
    },
    getstatus: function getstatus(item) {
      if (item.state == "未开始") {
        return "wait";
      } else if (item.state == "已处理" && item._approval_user == null) {
        return "wait";
      } else if (item.state == "已处理") {
        return "success";
      } else {
        return "finish";
      } // return item.state === '未开始' ? 'wait': item.state === '已处理' ? 'success' : 'finish';

    },
    geticon: function geticon(item) {
      var icon = "";

      if (item.state == "已处理" && item._approval_user == null) {
        icon = "el-icon-remove-outline";
      }

      return icon;
    },
    showRecord: function showRecord() {
      this.handle_active_step_no = "_approval_record_";
    },
    getRemarkFileShow: function getRemarkFileShow(type) {
      var selectResult = this.approval_form.proc_result;

      if (selectResult == "") {
        return false;
      }

      var isShow = true;
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.proHanleData.approval_options[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var item = _step2.value;

          if (item.value == selectResult) {
            var type_value = item[type];

            if (type_value == undefined || type_value == null) {
              isShow = true;
            } else if (!type_value) {
              isShow = false;
            }

            break;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return isShow;
    },
    getRemarkRules: function getRemarkRules() {
      if (this.approval_form.proc_result == "pass") {
        return {};
      } else {
        return {
          required: true,
          message: "说明不能为空",
          trigger: "blur"
        };
      }
    },
    step_switch: function step_switch(stepItem, index) {
      if (this.isallowclick(stepItem)) {
        if (stepItem["state"] != "未开始") {
          if (!(stepItem["state"] == "已处理" && stepItem["_approval_user"] == null)) {
            this.handle_active_step_name = stepItem.step_name;
            this.handle_active_step_no = stepItem.step_no;
          }
        }
      }
    },
    findTurnUser: function findTurnUser(query) {
      var _this = this;

      var service_name = "srvsso_user_select";
      var condition = [{
        colName: "user_disp",
        value: query,
        ruleType: "like"
      }];
      var page = {
        pageNo: 1,
        rownumber: 50
      };
      setTimeout(function () {
        var url = window.backendIpAddr + "/sso/select/" + service_name;

        var selectPromise = _this.doSelect(url, service_name, condition, page);

        if (_this.apvTurnUserOtionsFunc) {
          selectPromise = _this.apvTurnUserOtionsFunc.bind(_this)();
        }

        selectPromise.then(function (response) {
          _this.approval_form.userOptions = [];
          var dataList = response.body.data;
          var _iteratorNormalCompletion3 = true;
          var _didIteratorError3 = false;
          var _iteratorError3 = undefined;

          try {
            for (var _iterator3 = dataList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
              var item = _step3.value;
              var option = {
                label: item.user_disp,
                value: item.user_no
              };

              _this.approval_form.userOptions.push(option);
            }
          } catch (err) {
            _didIteratorError3 = true;
            _iteratorError3 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
                _iterator3.return();
              }
            } finally {
              if (_didIteratorError3) {
                throw _iteratorError3;
              }
            }
          }
        });
      }, 200);
    },
    timedSave: function timedSave() {
      var me = this;

      if (this.proc_basic.init_step_no == this.proHanleData.step_no && this.proHanleData.authority == true && this.interval != null) {
        this.timeId = setInterval(function () {
          if (me.proc_instance_no != undefined && me.proc_instance_no != null && me.proc_instance_no != "") {
            me.start("update", "save", true);
          } else {
            me.start("add", "save", true);
          }

          console.log("-------------------");
        }, this.interval * 1000);
      }
    },
    onStartProcFormLoaded: function onStartProcFormLoaded(operate_type) {
      var form = null;

      if (operate_type == "add") {
        form = this.$refs["proc-add-form-submit"][0];
      } else {
        form = this.$refs["proc-update-form-submit"][0];
      }

      if (form.actions.submit != undefined) {
        form.actions.submit.visible = false;
      }

      if (form.actions.reset != undefined) {
        form.actions.reset.visible = false;
      }

      this.startFrom = form;
      var formData = this.startFrom.srvValFormModel();
      delete formData["id"];
      this.save_data_str = JSON.stringify(formData);
    },
    submitProc: function () {
      var _submitProc = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee(operate_type, procState) {
        var validate_result;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                validate_result = false;

                if (!(procState == "submit")) {
                  _context.next = 7;
                  break;
                }

                _context.next = 5;
                return this.startFrom.validateForm().then(function () {
                  validate_result = true;
                }).catch(function () {
                  validate_result = false;
                });

              case 5:
                if (validate_result) {
                  _context.next = 7;
                  break;
                }

                return _context.abrupt("return");

              case 7:
                this.start(operate_type, procState);

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function submitProc(_x, _x2) {
        return _submitProc.apply(this, arguments);
      }

      return submitProc;
    }(),
    onStepFormLoaded: function onStepFormLoaded(operate_type, uuid) {
      var me = this;

      if (operate_type == "add") {
        var _form = null;
        _form = this.$refs["proc-add-form-approval"][0];
        _form.actions.submit.visible = false;
        _form.actions.reset.visible = false;

        if (_form == null) {
          return;
        }

        var stepInstance = {};
        stepInstance[uuid] = _form;
        this.stepForm.push(stepInstance);
        var i = 0;

        _form.$watch(function () {
          _form.formModel;
        }, function (newData, oldData) {
          if (i == 0) {
            var _iteratorNormalCompletion4 = true;
            var _didIteratorError4 = false;
            var _iteratorError4 = undefined;

            try {
              for (var _iterator4 = me.proHanleData.biz_cfg_data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                var item = _step4.value;
                var addData = _form.formModel;

                if (item._uuid == uuid) {
                  for (var key in addData) {
                    item._data_form[key] = addData[key];
                    item._old_data_form[key] = addData[key];
                  }
                }
              }
            } catch (err) {
              _didIteratorError4 = true;
              _iteratorError4 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {
                  _iterator4.return();
                }
              } finally {
                if (_didIteratorError4) {
                  throw _iteratorError4;
                }
              }
            }
          } else {
            var _iteratorNormalCompletion5 = true;
            var _didIteratorError5 = false;
            var _iteratorError5 = undefined;

            try {
              for (var _iterator5 = me.proHanleData.biz_cfg_data[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {
                var item = _step5.value;
                var addData = _form.formModel;

                if (item._uuid == uuid) {
                  for (var key in addData) {
                    item._data_form[key] = addData[key];
                  }
                }
              }
            } catch (err) {
              _didIteratorError5 = true;
              _iteratorError5 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {
                  _iterator5.return();
                }
              } finally {
                if (_didIteratorError5) {
                  throw _iteratorError5;
                }
              }
            }
          }

          i++;
        }, {
          deep: true
        });
      } else if (operate_type == "update") {
        var forms = this.$refs["proc-update-form-approval"];
        var _iteratorNormalCompletion6 = true;
        var _didIteratorError6 = false;
        var _iteratorError6 = undefined;

        try {
          for (var _iterator6 = forms[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {
            var form = _step6.value;

            //form = this.$refs["proc-update-form-approval"][0];
            if (form.actions.submit != undefined) {
              form.actions.submit.visible = false;
            }

            form.actions.reset.visible = false;

            if (form == null) {
              return;
            }

            var stepInstance = {};
            stepInstance[uuid] = form;
            this.stepForm.push(stepInstance); //初始化数据值

            var _iteratorNormalCompletion7 = true;
            var _didIteratorError7 = false;
            var _iteratorError7 = undefined;

            try {
              for (var _iterator7 = me.proHanleData.biz_cfg_data[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {
                var item = _step7.value;
                var updateFromData = form.srvValFormModel4Update;

                if (item._uuid == uuid) {
                  for (var key in updateFromData) {
                    item._data_form[key] = updateFromData[key];
                    item._old_data_form[key] = updateFromData[key];
                  }
                }
              }
            } catch (err) {
              _didIteratorError7 = true;
              _iteratorError7 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion7 && _iterator7.return != null) {
                  _iterator7.return();
                }
              } finally {
                if (_didIteratorError7) {
                  throw _iteratorError7;
                }
              }
            }

            var i = 0;
            form.$watch(function () {
              form.srvValFormModel4Update;
            }, function (newData, oldData) {
              var _iteratorNormalCompletion8 = true;
              var _didIteratorError8 = false;
              var _iteratorError8 = undefined;

              try {
                for (var _iterator8 = me.proHanleData.biz_cfg_data[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {
                  var item = _step8.value;
                  var updateFromData = form.srvValFormModel4Update;

                  if (item._uuid == uuid) {
                    for (var key in updateFromData) {
                      item._data_form[key] = updateFromData[key];
                    }
                  }
                }
              } catch (err) {
                _didIteratorError8 = true;
                _iteratorError8 = err;
              } finally {
                try {
                  if (!_iteratorNormalCompletion8 && _iterator8.return != null) {
                    _iterator8.return();
                  }
                } finally {
                  if (_didIteratorError8) {
                    throw _iteratorError8;
                  }
                }
              }

              i++;
            }, {
              deep: true
            });
          }
        } catch (err) {
          _didIteratorError6 = true;
          _iteratorError6 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {
              _iterator6.return();
            }
          } finally {
            if (_didIteratorError6) {
              throw _iteratorError6;
            }
          }
        }
      }
    },
    getFormViewCondition: function getFormViewCondition(item, step_no) {
      var conditions = [];
      var condition = null;

      if (item.biz_type == "child") {
        condition = {
          colName: "parent_proc_instance_no",
          ruleType: "eq",
          value: this.proc_instance_no
        };
      } else {
        condition = {
          colName: "proc_instance_no",
          ruleType: "eq",
          value: this.proc_instance_no
        };
      }

      conditions.push(condition);

      if (item["select_service"] == "srvprocess_record_select") {
        var condition = {
          colName: "step_no",
          ruleType: "eq",
          value: step_no
        };
        conditions.push(condition);
      }

      return conditions;
    },
    getStepDesprition: function getStepDesprition(item) {
      var desc = item.state;

      if (item.state == "已处理" && item["_approval_user"] == null) {
        desc = "跳过";
      } else if (item["_approval_user"] != "" && item["_approval_user"] != undefined) {
        desc = desc + "(" + item["_approval_user"] + ")";
      }

      return desc;
    },
    getStepHandleTime: function getStepHandleTime(item) {
      var desc = "";

      if (item._record_data != undefined) {
        desc = item._record_data.create_time;
      }

      return desc;
    },
    initProcData: function () {
      var _initProcData = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2() {
        var _this2 = this;

        var proc_basic_srv, condition, _proc_basic_srv, _condition;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(this.service_name != "" && this.service_name != undefined)) {
                  _context2.next = 8;
                  break;
                }

                this.page_type = "approval";
                proc_basic_srv = "srvprocess_basic_cfg_select";
                condition = [{
                  colName: "service_name",
                  ruleType: "eq",
                  value: this.service_name
                }]; //

                _context2.next = 6;
                return this.select(proc_basic_srv, condition).then(function (response) {
                  var respData = response.body;

                  if (respData.state == "SUCCESS") {
                    _this2.proCharData = response.body.proCharData;
                    _this2.proHanleData = response.body.proHanleData;
                    _this2.button_info = response.body.button;

                    if (_this2.proHanleData.approval_options != undefined) {
                      var _iteratorNormalCompletion9 = true;
                      var _didIteratorError9 = false;
                      var _iteratorError9 = undefined;

                      try {
                        for (var _iterator9 = _this2.proHanleData.approval_options[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {
                          var item = _step9.value;
                          var key = item.key;

                          if (key == undefined) {
                            var key_value = item["value"];
                            item["key"] = key_value;
                            item["key_value"] = key_value;
                          } else {
                            var key_value = item["value"];
                            item["value"] = key;
                            item["key_value"] = key_value;
                          }
                        }
                      } catch (err) {
                        _didIteratorError9 = true;
                        _iteratorError9 = err;
                      } finally {
                        try {
                          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {
                            _iterator9.return();
                          }
                        } finally {
                          if (_didIteratorError9) {
                            throw _iteratorError9;
                          }
                        }
                      }
                    }

                    _this2.handle_active_step_name = _this2.proHanleData.step_name;
                    _this2.handle_active_step_no = _this2.proHanleData.step_no;
                    _this2.proc_basic = response.body.proc_basic;
                    _this2.mainData = response.body.mainData;

                    if (_this2.proc_basic.save_period == undefined || _this2.proc_basic.save_period == null || _this2.proc_basic.save_period == "") {
                      _this2.interval == null;
                    } else {
                      _this2.interval = _this2.proc_basic.save_period;

                      _this2.timedSave();
                    }
                  }

                  _this2.emitEvent("metadata-loaded", _this2);
                });

              case 6:
                _context2.next = 14;
                break;

              case 8:
                this.page_type = "detail"; //流程详情页面

                this.record_default_condition = [{
                  colName: "proc_instance_no",
                  value: this.proc_instance_no,
                  ruleType: "eq"
                }];
                _proc_basic_srv = "srvprocess_basic_cfg_select";
                _condition = [{
                  colName: "proc_instance_no",
                  ruleType: "eq",
                  value: this.proc_instance_no
                }]; //

                _context2.next = 14;
                return this.select(_proc_basic_srv, _condition).then(function (response) {
                  _this2.proCharData = response.body.proCharData;
                  _this2.proHanleData = response.body.proHanleData;

                  if (_this2.proHanleData.approval_options != undefined) {
                    var _iteratorNormalCompletion10 = true;
                    var _didIteratorError10 = false;
                    var _iteratorError10 = undefined;

                    try {
                      for (var _iterator10 = _this2.proHanleData.approval_options[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {
                        var item = _step10.value;
                        var key = item.key;

                        if (key == undefined) {
                          var key_value = item["value"];
                          item["key"] = key_value;
                          item["key_value"] = key_value;
                        } else {
                          var key_value = item["value"];
                          item["value"] = key;
                          item["key_value"] = key_value;
                        }
                      }
                    } catch (err) {
                      _didIteratorError10 = true;
                      _iteratorError10 = err;
                    } finally {
                      try {
                        if (!_iteratorNormalCompletion10 && _iterator10.return != null) {
                          _iterator10.return();
                        }
                      } finally {
                        if (_didIteratorError10) {
                          throw _iteratorError10;
                        }
                      }
                    }
                  }

                  _this2.proc_basic = response.body.proc_basic;
                  _this2.handle_active_step_name = _this2.proHanleData.step_name;
                  _this2.handle_active_step_no = _this2.proHanleData.step_no;
                  _this2.mainData = response.body.mainData;

                  if (_this2.proc_basic.save_period == undefined || _this2.proc_basic.save_period == null || _this2.proc_basic.save_period == "") {
                    _this2.interval == null;
                  } else {
                    _this2.interval = _this2.proc_basic.save_period;

                    _this2.timedSave();
                  }

                  _this2.emitEvent("metadata-loaded", _this2);
                });

              case 14:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function initProcData() {
        return _initProcData.apply(this, arguments);
      }

      return initProcData;
    }(),
    getMainChildCfg: function getMainChildCfg(constraint_name) {
      var relationCfg = "";

      if (this.startFrom.childrenList != undefined && this.startFrom.childrenList.length > 0) {
        var childrenList = this.startFrom.childrenList;
        var _iteratorNormalCompletion11 = true;
        var _didIteratorError11 = false;
        var _iteratorError11 = undefined;

        try {
          for (var _iterator11 = childrenList[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {
            var item = _step11.value;
            var foreign_key = item.foreign_key;

            if (foreign_key["constraint_name"] == constraint_name) {
              relationCfg = item;
              break;
            }
          }
        } catch (err) {
          _didIteratorError11 = true;
          _iteratorError11 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {
              _iterator11.return();
            }
          } finally {
            if (_didIteratorError11) {
              throw _iteratorError11;
            }
          }
        }
      }

      return relationCfg;
    },
    getRowButtonService: function getRowButtonService(type, rowButton) {
      var serviceName = "";
      var _iteratorNormalCompletion12 = true;
      var _didIteratorError12 = false;
      var _iteratorError12 = undefined;

      try {
        for (var _iterator12 = rowButton[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {
          var item = _step12.value;

          if (type == item.button_type) {
            serviceName = item["service_name"];
            break;
          }
        }
      } catch (err) {
        _didIteratorError12 = true;
        _iteratorError12 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {
            _iterator12.return();
          }
        } finally {
          if (_didIteratorError12) {
            throw _iteratorError12;
          }
        }
      }

      return serviceName;
    },
    start: function start(operate_type, procState, timerSave) {
      var _this3 = this;

      var bxRequests = [];
      var bxRequest = {};
      bxRequests.push(bxRequest);

      if ("add" == operate_type) {
        bxRequest["serviceName"] = this.proc_basic.add_service;
      } else {
        bxRequest["serviceName"] = this.proc_basic.update_service;
        bxRequest["condition"] = [{
          colName: "proc_instance_no",
          ruleType: "eq",
          value: this.proc_instance_no
        }];
        bxRequest["proc_instance_no"] = this.proc_instance_no;
      }

      bxRequest["data"] = [];
      var formData = this.startFrom.srvValFormModel(); //构建主表数据

      var mainData = {};

      for (var key in formData) {
        if (key != "id" && key !== "_children") {
          mainData[key] = formData[key];
        }
      }

      bxRequest["data"].push(mainData);
      var _children = formData._children;

      if (_children != undefined && _children != "" && _children != null) {
        var formBxRequestData = this.startFrom.$refs.basicForm.$refs.submit[0].$refs.executor.buildRunQuries();
        mainData["child_data_list"] = formBxRequestData[0].data[0].child_data_list;
      } else {
        mainData["child_data_list"] = []; //查询看是否存在相关子表数据

        var biz_cfg_data = this.proHanleData.biz_cfg_data;
        var _iteratorNormalCompletion13 = true;
        var _didIteratorError13 = false;
        var _iteratorError13 = undefined;

        try {
          for (var _iterator13 = biz_cfg_data[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {
            var item = _step13.value;

            if (item["biz_type"] == "child") {
              var simpleList = item._simpleListInstance;

              if (simpleList != undefined) {
                var childDataList = simpleList.getListData();
                var _iteratorNormalCompletion14 = true;
                var _didIteratorError14 = false;
                var _iteratorError14 = undefined;

                try {
                  for (var _iterator14 = childDataList[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {
                    var itemData = _step14.value;
                    var childRequest = {};

                    if ("add" == itemData._dirtyFlags) {
                      childRequest["serviceName"] = item["add_service"];
                      var dataArray = [];
                      var dataMap = {};

                      for (var datakey in itemData) {
                        if (!datakey.startsWith("_") && datakey != "id") {
                          dataMap[datakey] = itemData[datakey];
                        }
                      }

                      dataArray.push(dataMap);
                      childRequest.data = dataArray;
                      var depend_keys = this.getDependKey(item["_foreign_key"]);
                      childRequest["depend_keys"] = depend_keys;
                    } else if ("update" == itemData._dirtyFlags) {
                      childRequest["serviceName"] = item["update_service"];
                      var dataArray = [];
                      var dataMap = {};

                      for (var datakey in itemData) {
                        if (!datakey.startsWith("_") && datakey != "id") {
                          dataMap[datakey] = itemData[datakey];
                        }
                      }

                      dataArray.push(dataMap);
                      childRequest.data = dataArray;

                      var _depend_keys = this.getDependKey(item["_foreign_key"]);

                      childRequest["depend_keys"] = _depend_keys;
                      childRequest["condition"] = [{
                        colName: "id",
                        ruleType: "in",
                        value: itemData.id
                      }];
                    } else if ("delete" == itemData._dirtyFlags) {
                      childRequest["serviceName"] = item["delete_service"];
                      childRequest["condition"] = [{
                        colName: "id",
                        ruleType: "in",
                        value: itemData.id
                      }];
                    }

                    if (JSON.stringify(childRequest) != "{}") {
                      mainData.child_data_list.push(childRequest);
                    }
                  }
                } catch (err) {
                  _didIteratorError14 = true;
                  _iteratorError14 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion14 && _iterator14.return != null) {
                      _iterator14.return();
                    }
                  } finally {
                    if (_didIteratorError14) {
                      throw _iteratorError14;
                    }
                  }
                }
              }
            }
          }
        } catch (err) {
          _didIteratorError13 = true;
          _iteratorError13 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {
              _iterator13.return();
            }
          } finally {
            if (_didIteratorError13) {
              throw _iteratorError13;
            }
          }
        }
      } //提交数据


      if (procState == "submit") {
        if (this.button_info != null) {
          var result = this.prevalidate(bxRequests);

          if (typeof result == "boolean") ; else {
            this.$message({
              type: "error",
              message: result
            });
            return;
          }
        }

        if (this.timeId != null) {
          clearInterval(this.timeId);
        }

        this.startProc(bxRequests).then(function (response) {
          var state = response.body.state;

          if ("SUCCESS" == state) {
            _this3.$message({
              type: "success",
              message: "提交成功!"
            });

            var response = response.body["data"];
            var proc_instance_no = response[0]["proc_instance_no"];

            if (_this3.navigateHandler) {
              _this3.navigateHandler("submit", proc_instance_no);
            } else {
              _this3.$router.push({
                name: "procdetail",
                params: {
                  proc_instance_no: proc_instance_no
                }
              });

              window.location.reload();
            }
          } else {
            _this3.$message({
              type: "error",
              message: response.body.resultMessage
            });
          }
        });
      } else {
        if (timerSave) {
          var str = "";
          var data = bxRequests[0].data[0];

          if (data.child_data_list && data.child_data_list.length == 0) {
            delete data["child_data_list"];
            str = JSON.stringify(data);
          }

          if (this.save_data_str == str) {
            return;
          } else {
            this.save_data_str = str;
          }
        }

        this.saveDraft(bxRequests).then(function (response) {
          var state = response.body.state;

          if ("SUCCESS" == state) {
            _this3.$message({
              type: "success",
              message: "保存成功!"
            });

            var response = response.body["data"];
            var proc_instance_no = response[0]["proc_instance_no"];
            _this3.proc_instance_no = proc_instance_no;

            _this3.$router.push({
              name: "procdetail",
              params: {
                proc_instance_no: proc_instance_no
              }
            });

            if (timerSave) ; else {
              setTimeout(function () {
                if (_this3.navigateHandler) {
                  _this3.navigateHandler("savedraft", proc_instance_no);
                } else {
                  window.location.reload();
                }
              }, 500);
            }
          } else {
            _this3.$message({
              type: "error",
              message: response.body.resultMessage
            });
          }
        });
      }
    },
    getChildDataForm: function getChildDataForm(item, fill_type) {
      var childRequests = [];
      var childRequest = {};

      if (item["_type_form"] == "update") {
        var olddata = item._old_data_form;
        var newData = item._data_form;

        if (JSON.stringify(olddata) != JSON.stringify(newData)) {
          var updateData = {};

          for (var key in newData) {
            if (newData[key] != olddata[key]) {
              updateData[key] = newData[key];
            }
          }

          childRequest["serviceName"] = item["update_service"];
          childRequest.data = [updateData];
          childRequest["condition"] = [{
            colName: "id",
            ruleType: "in",
            value: newData.id
          }];
          childRequests.push(childRequest);
        }
      } else if (item["_type_form"] == "add") {
        childRequest["serviceName"] = item["add_service"];
        var newData = item._data_form;
        var addData = {};

        for (var key in newData) {
          if (newData[key] != null) {
            addData[key] = newData[key];
          }
        }

        if (fill_type == "relation") {
          if (item["_foreign_key"] != undefined && item["_foreign_key"].length > 0) {
            var depend_keys = this.getDependKey(item["_foreign_key"]);

            if (depend_keys.length > 0) {
              childRequest["depend_keys"] = depend_keys;
            }
          }
        } else {
          if (item["_foreign_key"] != undefined && item["_foreign_key"].length > 0) {
            this.fillOperateData(addData, item["_foreign_key"]);
          }
        }

        childRequest.data = [addData];
        childRequests.push(childRequest);
      }

      return childRequests; // console.log(JSON.stringify(item._old_data_form));
      // console.log(JSON.stringify(item._data_form));
    },
    getDependKey: function getDependKey(foreignKeyList) {
      var depend_keys = [];
      var _iteratorNormalCompletion15 = true;
      var _didIteratorError15 = false;
      var _iteratorError15 = undefined;

      try {
        for (var _iterator15 = foreignKeyList[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {
          var foreign_item = _step15.value;
          var depend = {};
          depend["type"] = "column";
          depend["depend_key"] = foreign_item["referenced_column_name"];
          depend["add_col"] = foreign_item["column_name"];
          depend_keys.push(depend);
        }
      } catch (err) {
        _didIteratorError15 = true;
        _iteratorError15 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {
            _iterator15.return();
          }
        } finally {
          if (_didIteratorError15) {
            throw _iteratorError15;
          }
        }
      }

      return depend_keys;
    },
    fillOperateData: function fillOperateData(data, foreignKeyList) {
      var _iteratorNormalCompletion16 = true;
      var _didIteratorError16 = false;
      var _iteratorError16 = undefined;

      try {
        for (var _iterator16 = data[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {
          var item = _step16.value;
          var _iteratorNormalCompletion17 = true;
          var _didIteratorError17 = false;
          var _iteratorError17 = undefined;

          try {
            for (var _iterator17 = foreignKeyList[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {
              var foreign_item = _step17.value;
              item[foreign_item["column_name"]] = this.mainData[foreign_item["referenced_column_name"]];
            }
          } catch (err) {
            _didIteratorError17 = true;
            _iteratorError17 = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion17 && _iterator17.return != null) {
                _iterator17.return();
              }
            } finally {
              if (_didIteratorError17) {
                throw _iteratorError17;
              }
            }
          }
        }
      } catch (err) {
        _didIteratorError16 = true;
        _iteratorError16 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion16 && _iterator16.return != null) {
            _iterator16.return();
          }
        } finally {
          if (_didIteratorError16) {
            throw _iteratorError16;
          }
        }
      }
    },
    submitApprovalForm: function () {
      var _submitApprovalForm = _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee3(formName) {
        var _this4 = this;

        var me, proc_result, result_key, _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step18, item_result, i, key, step_form_instance, step_validate_result;

        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                me = this;
                proc_result = "";
                result_key = "";
                _iteratorNormalCompletion18 = true;
                _didIteratorError18 = false;
                _iteratorError18 = undefined;
                _context3.prev = 6;

                for (_iterator18 = this.proHanleData.approval_options[Symbol.iterator](); !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {
                  item_result = _step18.value;

                  if (item_result["value"] == me.approval_form.proc_result) {
                    proc_result = item_result["key_value"];
                    result_key = item_result["key"];
                  }
                }

                _context3.next = 14;
                break;

              case 10:
                _context3.prev = 10;
                _context3.t0 = _context3["catch"](6);
                _didIteratorError18 = true;
                _iteratorError18 = _context3.t0;

              case 14:
                _context3.prev = 14;
                _context3.prev = 15;

                if (!_iteratorNormalCompletion18 && _iterator18.return != null) {
                  _iterator18.return();
                }

              case 17:
                _context3.prev = 17;

                if (!_didIteratorError18) {
                  _context3.next = 20;
                  break;
                }

                throw _iteratorError18;

              case 20:
                return _context3.finish(17);

              case 21:
                return _context3.finish(14);

              case 22:
                if (!(proc_result === "pass")) {
                  _context3.next = 45;
                  break;
                }

                console.info("proc_result == pass, validate the biz step form");
                i = 0;

              case 25:
                if (!(i < this.stepForm.length)) {
                  _context3.next = 45;
                  break;
                }

                _context3.t1 = regeneratorRuntime.keys(this.stepForm[i]);

              case 27:
                if ((_context3.t2 = _context3.t1()).done) {
                  _context3.next = 42;
                  break;
                }

                key = _context3.t2.value;
                step_form_instance = this.stepForm[i][key];
                _context3.prev = 30;
                _context3.next = 33;
                return step_form_instance.validateForm();

              case 33:
                step_validate_result = _context3.sent;
                _context3.next = 40;
                break;

              case 36:
                _context3.prev = 36;
                _context3.t3 = _context3["catch"](30);
                this.$message({
                  type: "error",
                  message: "请检查输入！"
                });
                return _context3.abrupt("return");

              case 40:
                _context3.next = 27;
                break;

              case 42:
                i++;
                _context3.next = 25;
                break;

              case 45:
                this.$refs[formName][0].validate(function (valid) {
                  if (valid) {
                    var data = [{
                      proc_instance_no: _this4.proc_instance_no,
                      step_no: _this4.proHanleData.step_no,
                      data: [_this4.approval_form]
                    }];
                    var bxRequests = [];
                    var bxRequest = {
                      proc_instance_no: me.proc_instance_no,
                      step_no: me.proHanleData.step_no
                    };
                    bxRequest["data"] = [];
                    var data = {
                      remark: me.approval_form.remark,
                      proc_result: proc_result,
                      key: result_key,
                      file_no: _this4.uplaodFiled.model
                    };

                    if (data.proc_result == "turn") {
                      data["turn_user_no"] = me.approval_form.turn_user_no;
                    }

                    if (data.proc_result == "return") {
                      data["step_no"] = me.approval_form.step_no;
                    } //看是否存在相关业务数据


                    if (proc_result === "pass" || !_this4.noBizDataWhenNoPass) {
                      data["child_data_list"] = [];
                      var biz_cfg_data = _this4.proHanleData.biz_cfg_data;
                      var _iteratorNormalCompletion19 = true;
                      var _didIteratorError19 = false;
                      var _iteratorError19 = undefined;

                      try {
                        for (var _iterator19 = biz_cfg_data[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {
                          var item = _step19.value;

                          if (item["type"] == "grid" && item["biz_type"] == "child") {
                            var simpleList = item._simpleListInstance;

                            if (simpleList != undefined) {
                              var childDataList = simpleList.getListData();
                              var _iteratorNormalCompletion20 = true;
                              var _didIteratorError20 = false;
                              var _iteratorError20 = undefined;

                              try {
                                for (var _iterator20 = childDataList[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {
                                  var itemData = _step20.value;
                                  var childRequest = {};

                                  if ("add" == itemData._dirtyFlags) {
                                    childRequest["serviceName"] = item["add_service"];
                                    var dataArray = [];
                                    var dataMap = {};

                                    for (var datakey in itemData) {
                                      if (!datakey.startsWith("_") && datakey != "id") {
                                        dataMap[datakey] = itemData[datakey];
                                      }
                                    }

                                    dataArray.push(dataMap);
                                    childRequest.data = dataArray;

                                    var depend_keys = _this4.getDependKey(item["_foreign_key"]);

                                    childRequest["depend_keys"] = depend_keys;
                                  } else if ("update" == itemData._dirtyFlags) {
                                    childRequest["serviceName"] = item["update_service"];
                                    var dataArray = [];
                                    var dataMap = {};

                                    for (var datakey in itemData) {
                                      if (!datakey.startsWith("_") && datakey != "id") {
                                        dataMap[datakey] = itemData[datakey];
                                      }
                                    }

                                    dataArray.push(dataMap);
                                    childRequest.data = dataArray;

                                    var _depend_keys2 = _this4.getDependKey(item["_foreign_key"]);

                                    childRequest["depend_keys"] = _depend_keys2;
                                    childRequest["condition"] = [{
                                      colName: "id",
                                      ruleType: "in",
                                      value: itemData.id
                                    }];
                                  } else if ("delete" == itemData._dirtyFlags) {
                                    childRequest["serviceName"] = item["delete_service"];
                                    childRequest["condition"] = [{
                                      colName: "id",
                                      ruleType: "in",
                                      value: itemData.id
                                    }];
                                  }

                                  if (JSON.stringify(childRequest) != "{}") {
                                    data["child_data_list"].push(childRequest);
                                  }
                                }
                              } catch (err) {
                                _didIteratorError20 = true;
                                _iteratorError20 = err;
                              } finally {
                                try {
                                  if (!_iteratorNormalCompletion20 && _iterator20.return != null) {
                                    _iterator20.return();
                                  }
                                } finally {
                                  if (_didIteratorError20) {
                                    throw _iteratorError20;
                                  }
                                }
                              }
                            }
                          } else if (item["type"] == "form" && item["_type_form"] == "update" && (item["biz_type"] == "child" || item["biz_type"] == "main")) {
                            var childDataFrom = _this4.getChildDataForm(item, "data");

                            if (JSON.stringify(childDataFrom) != "[]") {
                              data["child_data_list"] = data["child_data_list"].concat(childDataFrom);
                            }
                          } else if (item["type"] == "form" && item["_type_form"] == "add" && item["biz_type"] == "child") {
                            var childDataFrom = _this4.getChildDataForm(item, "data");

                            if (JSON.stringify(childDataFrom) != "[]") {
                              data["child_data_list"] = data["child_data_list"].concat(childDataFrom);
                            }
                          }
                        }
                      } catch (err) {
                        _didIteratorError19 = true;
                        _iteratorError19 = err;
                      } finally {
                        try {
                          if (!_iteratorNormalCompletion19 && _iterator19.return != null) {
                            _iterator19.return();
                          }
                        } finally {
                          if (_didIteratorError19) {
                            throw _iteratorError19;
                          }
                        }
                      }
                    }

                    bxRequest["data"].push(data);
                    bxRequests.push(bxRequest);
                    console.log(JSON.stringify(bxRequests));

                    if (_this4.button_info != null) {
                      var result = _this4.prevalidate(bxRequests);

                      if (typeof result == "boolean") ; else {
                        _this4.$message({
                          type: "error",
                          message: result
                        });

                        return;
                      }
                    }

                    _this4.approval(bxRequests).then(function (response) {
                      var state = response.body.state;

                      if ("SUCCESS" == state) {
                        _this4.$message({
                          type: "success",
                          message: "审批成功!"
                        });

                        if (_this4.navigateHandler) {
                          _this4.navigateHandler("approve", _this4.proc_instance_no);
                        } else {
                          window.location.reload();
                        }
                      } else {
                        _this4.$message({
                          type: "error",
                          message: response.body.resultMessage
                        });
                      }
                    });
                  }
                });

              case 46:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[6, 10, 14, 22], [15,, 17, 21], [30, 36]]);
      }));

      function submitApprovalForm(_x3) {
        return _submitApprovalForm.apply(this, arguments);
      }

      return submitApprovalForm;
    }(),
    resetForm: function resetForm(formName) {
      this.$refs[formName][0].resetFields();
      this.uplaodFiled.model = "";
    },
    setHandleGridData: function setHandleGridData(gridData, service_name) {
      var _iteratorNormalCompletion21 = true;
      var _didIteratorError21 = false;
      var _iteratorError21 = undefined;

      try {
        for (var _iterator21 = this.proHanleData.biz_cfg_data[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {
          var item_biz = _step21.value;

          if (item_biz["select_service"] == service_name) {
            if (init_page_index == 0) {
              item_biz.old_data_list = this.bxDeepClone(gridData);
            }

            init_page_index++;
            item_biz.data_list = gridData;

            if (item_biz.data_list.length == 0) {
              item_biz.view_data_list = "";
            } else {
              item_biz.view_data_list = JSON.stringify(gridData);
            }

            break;
          }
        }
      } catch (err) {
        _didIteratorError21 = true;
        _iteratorError21 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion21 && _iterator21.return != null) {
            _iterator21.return();
          }
        } finally {
          if (_didIteratorError21) {
            throw _iteratorError21;
          }
        }
      }
    }
  },
  created: function created() {
    if (this.$route && this.$route.query) {
      this.startProcDefaultValue = {};
      var operate_params = this.getOperateParams();

      if (operate_params != "" && operate_params != null) {
        var operate_Object = JSON.parse(operate_params);
        this.startProcDefaultValue = operate_Object;
      }

      var temp_str = this.getVueUrlParams("defDataPara");

      if (temp_str != null && temp_str != "") {
        this.defDataPara = JSON.parse(temp_str);
      }
    } // service, proc_instance_no 设定默认值优先级:  props > router.params


    if (this.$route.params) {
      this.proc_instance_no = this.$route.params.proc_instance_no;
      this.service_name = this.$route.params.service_name;
    }

    if (this.serviceProp) {
      this.service_name = this.serviceProp;
    }

    if (this.procInstanceNoProp) {
      this.proc_instance_no = this.procInstanceNoProp;
    }

    this.initload = true;
    this.initProcData();
  }
};

/* script */
const __vue_script__$v = script$v;

/* template */
var __vue_render__$v = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"proc_detail"}},[_c('el-card',{staticClass:"box-card"},[_c('div',{staticClass:"text item"},[_c('el-row',[(_vm.isStepDataReady())?_c('el-steps',{ref:"stepsChart",attrs:{"finish-status":_vm.proHanleData.finishStatus,"process-status":_vm.proHanleData.processStatus,"active":_vm.proHanleData.activeStep,"align-center":""}},[_vm._l((_vm.proCharData),function(item,index){return _c('el-step',{key:index+1,class:{ div_click_class: item.step_no==_vm.handle_active_step_no },attrs:{"status":_vm.getstatus(item),"icon":_vm.geticon(item)},nativeOn:{"click":function($event){return _vm.step_switch(item,index)}}},[_c('template',{slot:"title"},[(item.state!='未开始')?_c('div',{class:_vm.isallowclick(item) ? 'step_handle_css' : ''},[_vm._v("\n                "+_vm._s(item.step_name)+"\n              ")]):_c('div',[_vm._v("\n                "+_vm._s(item.step_name)+"\n              ")])]),_vm._v(" "),_c('template',{slot:"description"},[_vm._v("\n              "+_vm._s(_vm.getStepDesprition(item))),_c('br'),_vm._v(_vm._s(_vm.getStepHandleTime(item))+"\n            ")])],2)}),_vm._v(" "),_c('el-step',{key:_vm.proCharData.length + 1,class:{ div_click_class: _vm.handle_active_step_no == '_approval_record_' },attrs:{"icon":"el-icon-tickets","description":"","status":"finish"},nativeOn:{"click":function($event){return _vm.showRecord()}}},[_c('template',{slot:"title"},[_c('div',{staticStyle:{"cursor":"pointer"}},[_vm._v("流程审批记录")])])],2)],2):_vm._e()],1)],1)]),_vm._v(" "),_c('el-card',{directives:[{name:"show",rawName:"v-show",value:(_vm.handle_active_step_no != '_approval_record_'),expression:"handle_active_step_no != '_approval_record_'"}],staticClass:"box-card"},[_c('div',{staticClass:"clearfix",attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v(_vm._s(_vm.handle_active_step_name))])]),_vm._v(" "),_vm._l((_vm.proCharData),function(step_item,index){return [_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.handle_active_step_no==step_item.step_no),expression:"handle_active_step_no==step_item.step_no"}],key:index,staticClass:"text item"},[(_vm.handle_active_step_no==step_item.step_no)?_c('div',[_vm._l((step_item.biz_cfg_data),function(biz_item,index){return [((step_item.step_no!=_vm.proHanleData.step_no||_vm.proc_basic.is_finsh) && biz_item.type=='grid')?_c('el-form',{directives:[{name:"show",rawName:"v-show",value:(_vm.bizDataStepReadVisible[step_item.step_no] !== false),expression:"bizDataStepReadVisible[step_item.step_no] !== false"}],key:step_item.step_no+index+'_list',attrs:{"label-width":"130px","label-suffix":":"}},[_c('el-row',[_c('div',{key:step_item.step_no+index+'_list',staticClass:"el-col el-col-24 el-col-xl-24"},[_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(biz_item["_section_name"]))])])]),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('proc-simple-list',{attrs:{"name":'stepr' +step_item.step_no + 'i' + index,"foreign-key":biz_item._foreign_key[0],"service":biz_item.select_service,"list-type":"procdetaillist","default-condition":[{'colName':'parent_proc_instance_no','ruleType':'eq','value':_vm.proc_instance_no}]},on:{"proc-simple-list-loaded":_vm.onProcSimpleListLoad}})],1)],1)],1):_vm._e(),_vm._v(" "),((step_item.step_no!=_vm.proHanleData.step_no||_vm.proc_basic.is_finsh)&&biz_item.type=='form' &&biz_item.select_service=='srvprocess_record_select')?_c('div',{key:step_item.step_no+index+'_record_result'},[_c('el-form',{attrs:{"label-width":"130px","label-suffix":":"}},[_c('el-row',[_c('div',{key:step_item.step_no+index+'_list_section',staticClass:"el-col el-col-24 el-col-xl-24"},[_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v("审批说明")])])]),_vm._v(" "),_c('el-col',{attrs:{"span":6}},[_c('el-form-item',{attrs:{"label":"意见","prop":"proc_result"}},[_c('el-input',{attrs:{"readonly":1==1,"value":step_item.proc_result[step_item._record_data.proc_result]}})],1)],1),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('el-form-item',{attrs:{"label":"说明","prop":"remark"}},[_c('el-input',{attrs:{"type":"textarea","value":step_item._record_data.remark,"readonly":1==1,"autosize":{ minRows: 6, maxRows: 8}}})],1)],1),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('el-form-item',{attrs:{"label":"附件","prop":"remark"}},_vm._l((step_item._record_data._fileList),function(file,index){return _c('a',{key:index+'_file',attrs:{"href":_vm.serviceApi().downloadFile+file.fileurl}},[_vm._v("\n                        "+_vm._s(file.src_name))])}),0)],1)],1)],1)],1):((step_item.step_no!=_vm.proHanleData.step_no||_vm.proc_basic.is_finsh)&&biz_item.type=='form')?_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.bizDataStepReadVisible[step_item.step_no] !== false),expression:"bizDataStepReadVisible[step_item.step_no] !== false"}],key:step_item.step_no+index+'_detail'},[_c('detail',{ref:"proc-simple-detail",refInFor:true,attrs:{"form-type":"procdetail","name":'stepr' +step_item.step_no + 'i' + index,"service":biz_item.select_service,"default-conditions":_vm.getFormViewCondition(biz_item,step_item.step_no)}})],1):_vm._e()]})],2):_vm._e(),_vm._v(" "),(step_item.step_no==_vm.proHanleData.step_no&&_vm.proHanleData._handle_type=='start_proc'&&_vm.initload)?_c('el-form',{attrs:{"label-width":"100px","label-suffix":":"}},[_c('el-row',[_vm._l((_vm.proHanleData.biz_cfg_data),function(biz_item,index){return [(biz_item.type=='grid')?_c('el-col',{key:step_item.step_no+index+'_list',attrs:{"span":24}},[_c('div',{key:step_item.step_no+index+'_list_section',staticClass:"el-col el-col-24 el-col-xl-24"},[_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(biz_item["_section_name"]))])])]),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('proc-simple-list',{attrs:{"name":'apply_list' + index,"foreign-key":biz_item._foreign_key[0],"service":biz_item.select_service,"list-type":biz_item['_type_grid']=='readGrid'?'procdetaillist':'prochandlelist',"default-condition":[{'colName':'parent_proc_instance_no','ruleType':'eq','value':_vm.proc_instance_no}]},on:{"proc-simple-list-loaded":_vm.onProcSimpleListLoad}})],1)],1):_vm._e(),_vm._v(" "),(biz_item.type=='form')?_c('el-col',{key:step_item.step_no+index+'_list',attrs:{"span":24}},[(biz_item._type_form=='update')?_c('update',{ref:"proc-update-form-submit",refInFor:true,attrs:{"name":'apply_update' + index,"service":biz_item.update_service,"pk-col":"proc_instance_no","pk":_vm.proc_instance_no},on:{"form-loaded":function($event){return _vm.onStartProcFormLoaded('update')}}}):_c('add',{ref:"proc-add-form-submit",refInFor:true,attrs:{"name":'apply_add' + index,"def-data-para":_vm.defDataPara,"default-values":_vm.startProcDefaultValue,"service":biz_item.add_service},on:{"form-loaded":function($event){return _vm.onStartProcFormLoaded('add')}}})],1):_vm._e()]})],2),_vm._v(" "),_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){_vm.submitProc((_vm.proc_instance_no==''||_vm.proc_instance_no==undefined)?'add':'update','submit');}}},[_vm._v("\n              提交\n            ")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){_vm.submitProc((_vm.proc_instance_no==''||_vm.proc_instance_no==undefined)?'add':'update','save');}}},[_vm._v("\n              保存草稿\n            ")])],1)],1):_vm._e(),_vm._v(" "),(step_item.step_no==_vm.proHanleData.step_no&&_vm.proHanleData._handle_type=='approval_proc')?_c('el-form',{ref:"approval_form",refInFor:true,attrs:{"label-width":"10rem","label-suffix":":","model":_vm.approval_form}},[(_vm.proHanleData.authority)?_c('el-row',[_vm._l((_vm.proHanleData.biz_cfg_data),function(biz_item,index){return [_c('div',{key:step_item.step_no+index+'_list_section',staticClass:"el-col el-col-24 el-col-xl-24"},[_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v(_vm._s(biz_item['_section_name']))])])]),_vm._v(" "),(biz_item.type=='grid')?_c('el-col',{key:step_item.step_no+index+'_list',attrs:{"span":24}},[_c('proc-simple-list',{attrs:{"name":'apv' + step_item.step_no + 'i'+ index,"foreign-key":biz_item._foreign_key[0],"list-type":biz_item['_type_grid']=='readGrid'?'procdetaillist':'prochandlelist',"storage-type":step_item.list_storage_type || 'mem',"service":biz_item.select_service,"default-condition":[{'colName':'parent_proc_instance_no','ruleType':'eq','value':_vm.proc_instance_no}]},on:{"proc-simple-list-loaded":_vm.onProcSimpleListLoad}})],1):_vm._e(),_vm._v(" "),(biz_item.type=='form')?_c('el-col',{key:step_item.step_no+index+'_list',attrs:{"span":24}},[(biz_item._type_form=='update')?_c('simple-update',{ref:"proc-update-form-approval",refInFor:true,attrs:{"name":'apv' + step_item.step_no + 'i' + index,"service":biz_item.update_service,"pk-col":biz_item.biz_type=='main'?'proc_instance_no':'parent_proc_instance_no',"pk":_vm.proc_instance_no},on:{"form-loaded":function($event){return _vm.onStepFormLoaded('update',biz_item._uuid)}}}):_vm._e(),_vm._v(" "),(biz_item._type_form=='add')?_c('simple-add',{ref:"proc-add-form-approval",refInFor:true,attrs:{"name":'apv' + step_item.step_no + 'i'+ index,"service":biz_item.add_service},on:{"form-loaded":function($event){return _vm.onStepFormLoaded('add',biz_item._uuid)}}}):_vm._e(),_vm._v(" "),(biz_item._type_form=='select')?_c('detail',{attrs:{"is_view_title":1==2,"name":'apv' + step_item.step_no + 'i'+ index,"form-type":"procdetail","name":"proc-simple-detail","service":biz_item.select_service,"default-conditions":_vm.getFormViewCondition(biz_item,step_item.step_no)}}):_vm._e()],1):_vm._e()]})],2):_vm._e(),_vm._v(" "),(_vm.proHanleData.authority&&_vm.proHanleData.approval_options.length>0)?_c('el-row',[_c('div',{key:step_item.step_no+index+'_list_section',staticClass:"el-col el-col-24 el-col-xl-24"},[_c('div',{staticClass:"el-form-item"},[_c('span',{staticClass:"section-title"},[_vm._v("审批操作")])])]),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('el-form-item',{directives:[{name:"show",rawName:"v-show",value:(!_vm.hideOnlyApvOption || _vm.proHanleData.approval_options.length > 1),expression:"!hideOnlyApvOption || proHanleData.approval_options.length > 1"}],attrs:{"label":"意见","prop":"proc_result","rules":{required: true, message: '审批意见不能为空', trigger: 'change'}}},_vm._l((_vm.proHanleData.approval_options),function(item){return _c('el-radio',{key:item.value,attrs:{"border":"","label":item.value},model:{value:(_vm.approval_form.proc_result),callback:function ($$v) {_vm.$set(_vm.approval_form, "proc_result", $$v);},expression:"approval_form.proc_result"}},[_vm._v(_vm._s(item.disp)+"\n                ")])}),1)],1),_vm._v(" "),(_vm.approval_form.proc_result=='turn')?_c('el-col',{attrs:{"span":6}},[_c('el-form-item',{attrs:{"label":"转派用户","prop":"turn_user_no","rules":{required: true, message: '用户不能为空', trigger: 'change'}}},[_c('el-select',{attrs:{"filterable":"","remote":"","placeholder":"请选择转派用户","remote-method":_vm.findTurnUser},on:{"focus":function($event){return _vm.findTurnUser('')}},model:{value:(_vm.approval_form.turn_user_no),callback:function ($$v) {_vm.$set(_vm.approval_form, "turn_user_no", $$v);},expression:"approval_form.turn_user_no"}},_vm._l((_vm.approval_form.userOptions),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.label,"value":item.value}})}),1)],1)],1):_vm._e(),_vm._v(" "),(_vm.approval_form.proc_result=='return')?_c('el-col',{attrs:{"span":24}},[_c('el-form-item',{attrs:{"label":"返回步骤","prop":"step_no","rules":{required: true, message: '步骤不能为空', trigger: 'change'}}},_vm._l((_vm.proHanleData.return_options),function(item){return _c('el-radio',{key:item.value,attrs:{"border":"","label":item.value},model:{value:(_vm.approval_form.step_no),callback:function ($$v) {_vm.$set(_vm.approval_form, "step_no", $$v);},expression:"approval_form.step_no"}},[_vm._v(_vm._s(item.disp)+"\n                ")])}),1)],1):_vm._e(),_vm._v(" "),(_vm.getRemarkFileShow('remark'))?_c('el-col',{attrs:{"span":24}},[_c('el-form-item',{attrs:{"label":"说明","prop":"remark","rules":_vm.getRemarkRules()}},[_c('el-input',{attrs:{"type":"textarea","autosize":{ minRows: 4, maxRows: 6}},model:{value:(_vm.approval_form.remark),callback:function ($$v) {_vm.$set(_vm.approval_form, "remark", $$v);},expression:"approval_form.remark"}})],1)],1):_vm._e(),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[(_vm.getRemarkFileShow('files'))?_c('el-form-item',{attrs:{"label":"附件","prop":"file_no"}},[_c('upload-file',{attrs:{"field":_vm.uplaodFiled}})],1):_vm._e()],1),_vm._v(" "),_c('el-col',{attrs:{"span":24}},[_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_c('el-form-item',[_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.submitApprovalForm('approval_form')}}},[_vm._v("提交\n                  ")]),_vm._v(" "),_c('el-button',{on:{"click":function($event){return _vm.resetForm('approval_form')}}},[_vm._v("重置\n                  ")])],1)],1)],1)],1):(!_vm.proHanleData.authority&&!_vm.proc_basic.is_finsh)?_c('el-row',{staticClass:"row-bg",attrs:{"type":"flex","justify":"center"}},[_vm._v("\n            "+_vm._s(_vm.getNoAuthorityMessage())+"\n          ")]):_vm._e()],1):_vm._e()],1)]})],2),_vm._v(" "),(_vm.page_type!='approval'&&_vm.handle_active_step_no == '_approval_record_')?_c('el-card',{staticClass:"box-card"},[_c('div',{staticClass:"clearfix",attrs:{"slot":"header"},slot:"header"},[_c('span',[_vm._v("流程审批记录")])]),_vm._v(" "),_c('div',{staticClass:"text item"},[_c('proc-simple-list',{attrs:{"service":"srvprocess_record_select","list-type":"procdetaillist","default-order":[{'colName':'id','orderType':'desc'}],"default-condition":_vm.record_default_condition}})],1)]):_vm._e()],1)};
var __vue_staticRenderFns__$v = [];

  /* style */
  const __vue_inject_styles__$v = function (inject) {
    if (!inject) return
    inject("data-v-1b906d3f_0", { source: ".step_handle_css[data-v-1b906d3f]{cursor:pointer}", map: undefined, media: undefined })
,inject("data-v-1b906d3f_1", { source: ".div_click_class{border-bottom:2px solid #66b1ff}.el-row>.el-steps div.el-step:nth-last-of-type(2) .el-step__head .el-step__line{height:0}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$v = "data-v-1b906d3f";
  /* module identifier */
  const __vue_module_identifier__$v = undefined;
  /* functional template */
  const __vue_is_functional_template__$v = false;
  /* style inject SSR */
  

  
  var ProcDetail = normalizeComponent_1(
    { render: __vue_render__$v, staticRenderFns: __vue_staticRenderFns__$v },
    __vue_inject_styles__$v,
    __vue_script__$v,
    __vue_scope_id__$v,
    __vue_is_functional_template__$v,
    __vue_module_identifier__$v,
    browser,
    undefined
  );

var script$w = {
  components: {
    Finder: Finder,
    TreeFinder: TreeFinder,
    RawFieldEditor: RawFieldEditor
  },
  props: {
    service: {
      type: String
    }
  },
  data: function data() {
    return {
      tableHeadr: [],
      tableData: [],
      old_tableData: [],
      //原始数据
      service_name: this.service || this.$route.params.service_name,
      operate_params: {},
      is_edit: false //是否编辑

    };
  },
  created: function created() {
    // 组件创建完后获取数据，
    this.getData();
  },
  methods: {
    getData: function getData() {
      var _this = this;

      var condition;
      var page;
      var order;

      if (this.$route && this.$route.query && this.$route.query.operate_params) {
        this.operate_params = JSON.parse(this.$route.query.operate_params);
        condition = this.operate_params.condition;
        page = this.operate_params.page;
        order = this.operate_params.order;
      }

      this.tableHeadr = [];
      this.tableData = [];
      this.old_tableData = [];
      this.loadColsV2(this.service_name, 'list').then(function (response) {
        var srv_cols = response.body.data.srv_cols;

        for (var i in srv_cols) {
          var fieldInfo = new FieldInfo(srv_cols[i], null);
          var field = new Field(fieldInfo); //只显示列表 或者将外键的使用in_add

          if (srv_cols[i].in_list == '1' && srv_cols[i].columns.indexOf('_disp') == -1 || field.info.editor == 'finder' || field.info.editor == 'tree-finder') {
            _this.tableHeadr.push(srv_cols[i]);
          }
        }

        _this.select(_this.service_name, condition, page, order).then(function (response) {
          var list = response.body.data;
          _this.old_tableData = _this.onExtend(list);

          for (var key in list) {
            for (var key1 in _this.tableHeadr) {
              var fieldInfo1 = new FieldInfo(_this.tableHeadr[key1], null);
              var field1 = new Field(fieldInfo1);
              var column = _this.tableHeadr[key1].columns;
              var value = list[key][column];
              list[key][column] = {};
              list[key][column].value = value;

              if (fieldInfo1.isFinder()) {
                //判断是否是外键finder，如果是则要显示_disp的值
                list[key][column].value = list[key]['_' + column + '_disp'];
              }

              Vue.set(list[key][column], "field", field1);
              list[key][column].field.setSrvVal(value);
            }

            var val = list[key].id;
            list[key].id = {};
            list[key].id.value = val;
          }

          for (var key2 in list) {
            //将不是列表中的数据去掉
            for (var key3 in list[key2]) {
              if (key3 != 'id' && (list[key2][key3] == null || list[key2][key3].field == null)) {
                delete list[key2][key3];
              }
            }
          }

          _this.tableData = list;
        });
      });
    },
    handleCurrentChange: function handleCurrentChange(row, event, column) {//console.log(row, event, column, event.currentTarget);
    },
    handleEdit: function handleEdit(index, row) {
      var slef = this;

      if (index + 1 == slef.tableData.length) {
        //如果当前行是空行的话那么就追加一个空行到列表中
        var map = {
          id: {
            value: ''
          }
        };

        for (var i in slef.tableHeadr) {
          var fieldInfo1 = new FieldInfo(this.tableHeadr[i], null);
          var field1 = new Field(fieldInfo1);
          map[slef.tableHeadr[i].columns] = {};
          Vue.set(map[slef.tableHeadr[i].columns], "field", field1);
          map[slef.tableHeadr[i].columns].value = '';
        }

        slef.tableData.push(map);
      }

      console.log(index, row);
    },
    handleDelete: function handleDelete(index, row) {
      this.tableData.splice(index, 1);
      console.log(index, row);
    },
    onSubmit: function onSubmit() {
      var _this2 = this;

      //比较数据 将需要删除、更新、新增的数据单独提出来
      var deleteLits = [];
      var addList = [];
      var updateList = [];
      var list = this.onExtend(this.tableData);
      var old_list = this.onExtend(this.old_tableData);

      for (var i in list) {
        if (list[i].id == null || list[i].id.value == '') {
          //如果id为空说明是新增的列表
          var isEmpty = true;

          for (var item in list[i]) {
            //判断是否只是空行
            if (list[i][item].value != '') {
              isEmpty = false;
              break;
            }
          }

          if (!isEmpty) {
            addList.push(this.tableData[i]);
            list.splice(i, 1);
            i--;
            continue;
          }
        }

        for (var j in old_list) {
          if (list[i].id.value == old_list[j].id) {
            //如果id相等则比较对象是否不同
            var map = this.compareO(list[i], old_list[j]);

            if (Object.getOwnPropertyNames(map).length > 1) {
              //如果对象中有除了ID以外的值则为需要更新的值
              updateList.push(list[i]);
            }

            old_list.splice(j, 1); //如果相等就移除该对象则最后剩下的就是要删除的

            j--;
            continue;
          }
        }
      }

      deleteLits = old_list;
      console.log('deleteLits', deleteLits);
      console.log('addList', addList);
      console.log('updateList', updateList);
      var params = [];
      var add_obj = {
        'serviceName': this.service_name.replace('select', 'add'),
        'data': []
      };

      if (addList.length > 0) {
        for (var _i in addList) {
          var add_obj_data = {};
          delete addList[_i].id; //删除id 对象

          delete addList[_i].create_user; //删除create_user 对象

          delete addList[_i].create_time; //删除create_time 对象

          delete addList[_i].modify_user; //删除modify_user 对象

          delete addList[_i].modify_time; //删除modify_time 对象

          delete addList[_i].create_user_disp; //删除create_user_disp 对象

          delete addList[_i].modify_user_disp; //删除modify_user_disp 对象

          for (var key in addList[_i]) {
            if (addList[_i][key].field != null && (addList[_i][key].field.info.editor === 'finder' || addList[_i][key].field.info.editor === 'tree-finder')) {
              add_obj_data[key] = addList[_i][key].field.getSrvVal();
            } else {
              add_obj_data[key] = addList[_i][key].value;
            }
          }

          add_obj.data.push(add_obj_data);
        }

        params.push(add_obj);
      }

      if (updateList.length > 0) {
        for (var _i2 in updateList) {
          var update_obj = {
            'serviceName': this.service_name.replace('select', 'update'),
            'data': [],
            'condition': []
          };
          var update_obj_data = {};
          delete updateList[_i2].create_user; //删除create_user 对象

          delete updateList[_i2].create_time; //删除create_time 对象

          delete updateList[_i2].modify_user; //删除modify_user 对象

          delete updateList[_i2].modify_time; //删除modify_time 对象

          delete updateList[_i2].create_user_disp; //删除create_user_disp 对象

          delete updateList[_i2].modify_user_disp; //删除modify_user_disp 对象

          for (var _key in updateList[_i2]) {
            if (updateList[_i2][_key].field != null && (updateList[_i2][_key].field.info.editor === 'finder' || updateList[_i2][_key].field.info.editor === 'tree-finder')) {
              update_obj_data[_key] = updateList[_i2][_key].field.getSrvVal();
            } else {
              update_obj_data[_key] = updateList[_i2][_key].value;
            }
          }

          var update_obj_condition = {
            "colName": "id",
            "value": update_obj_data.id,
            "ruleType": "eq"
          };
          update_obj.data.push(update_obj_data);
          update_obj.condition.push(update_obj_condition);
          params.push(update_obj);
        }
      }

      if (deleteLits.length > 0) {
        for (var _i3 in deleteLits) {
          var delete_obj = {
            'serviceName': this.service_name.replace('select', 'delete'),
            'condition': []
          };
          var delete_obj_condition = {
            "colName": "id",
            "value": deleteLits[_i3].id,
            "ruleType": "eq"
          };
          delete_obj.condition.push(delete_obj_condition);
          params.push(delete_obj);
        }
      }

      console.log('params', params);

      if (params.length == 0) {
        this.$message.error('没有修改的数据');
      } else {
        this.operate(params).then(function (response) {
          if (response.body.state === 'SUCCESS') {
            _this2.is_edit = false;

            _this2.getData();

            _this2.$message.info(response.body.resultCode);
          } else {
            _this2.$message.error(response.body.resultMessage);
          }
        });
      }
    },
    compareO: function compareO(o1, o2) {
      //比较两个对象是否相等，返回比较的数据
      for (var i in o1) {
        for (var j in o2) {
          if (i != 'id' && i == j) {
            if (o1[i].field.info.editor === 'finder' || o1[i].field.info.editor === 'tree-finder') {
              if (o1[i].field.getSrvVal() != o2[i]) ; else {
                delete o1[i];
              }
            } else {
              if (o1[i].value != o2[j]) ; else {
                delete o1[i];
              }
            }
          }
        }
      }

      return o1;
    },
    onEdit: function onEdit() {
      this.is_edit = true;
    },
    //实现JS数组的深拷贝不引用
    onExtend: function onExtend(list) {
      var arr = [];

      var obj = _$1.cloneDeep(list);

      for (var i in obj) {
        arr.push(obj[i]);
      }

      return arr;
    }
  }
};

/* script */
const __vue_script__$w = script$w;

/* template */
var __vue_render__$w = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-table',{staticClass:"tb-edit",staticStyle:{"width":"100%"},attrs:{"data":_vm.tableData,"border":"","highlight-current-row":""},on:{"row-click":_vm.handleCurrentChange}},[_vm._l((_vm.tableHeadr),function(data,index){return _c('el-table-column',{key:index,attrs:{"prop":data.columns,"label":data.label,"width":"180px"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [(_vm.is_edit)?_c('div',[(data.col_type === 'Enum' || data.col_type === 'Dict')?_c('el-select',{attrs:{"size":"small","placeholder":"请选择"},on:{"change":function($event){return _vm.handleEdit(scope.$index, scope.row)}},model:{value:(scope.row[data.columns].value),callback:function ($$v) {_vm.$set(scope.row[data.columns], "value", $$v);},expression:"scope.row[data.columns].value"}},[_vm._v(">\r\n                "),_vm._l((data.option_list_v2),function(item){return _c('el-option',{key:item.value,attrs:{"label":item.key,"value":item.value}})})],2):(data.col_type === 'datetime')?_c('el-date-picker',{attrs:{"type":"datetime","clearable":"","placeholder":"选择日期时间"},on:{"change":function($event){return _vm.handleEdit(scope.$index, scope.row)}},model:{value:(scope.row[data.columns].value),callback:function ($$v) {_vm.$set(scope.row[data.columns], "value", $$v);},expression:"scope.row[data.columns].value"}}):(scope.row[data.columns].field.info.editor === 'finder')?_c('finder',{ref:"editor",refInFor:true,attrs:{"field":scope.row[data.columns].field},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', scope.row[data.columns].field.info.name)}}}):(scope.row[data.columns].field.info.editor === 'tree-finder')?_c('tree-finder',{ref:"editor",refInFor:true,attrs:{"field":scope.row[data.columns].field},on:{"field-value-changed":function($event){return _vm.$emit('field-value-changed', scope.row[data.columns].field.info.name)}}}):_c('el-input',{attrs:{"size":"small","placeholder":"请输入内容"},on:{"change":function($event){return _vm.handleEdit(scope.$index, scope.row)}},model:{value:(scope.row[data.columns].value),callback:function ($$v) {_vm.$set(scope.row[data.columns], "value", $$v);},expression:"scope.row[data.columns].value"}})],1):_vm._e(),_vm._v(" "),(!_vm.is_edit)?_c('span',[_vm._v(_vm._s(scope.row[data.columns].value))]):_vm._e()]}}],null,true)})}),_vm._v(" "),_c('el-table-column',{attrs:{"label":"操作"},scopedSlots:_vm._u([{key:"default",fn:function(scope){return [_c('el-button',{attrs:{"size":"small","type":"danger"},on:{"click":function($event){return _vm.handleDelete(scope.$index, scope.row)}}},[_vm._v("删除")])]}}])})],2),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.onEdit()}}},[_vm._v("批量编辑")]),_vm._v(" "),_c('el-button',{attrs:{"type":"primary"},on:{"click":function($event){return _vm.onSubmit()}}},[_vm._v("批量保存")])],1)};
var __vue_staticRenderFns__$w = [];

  /* style */
  const __vue_inject_styles__$w = undefined;
  /* scoped */
  const __vue_scope_id__$w = "data-v-e322c18e";
  /* module identifier */
  const __vue_module_identifier__$w = undefined;
  /* functional template */
  const __vue_is_functional_template__$w = false;
  /* style inject */
  
  /* style inject SSR */
  

  
  var EditGrid = normalizeComponent_1(
    { render: __vue_render__$w, staticRenderFns: __vue_staticRenderFns__$w },
    __vue_inject_styles__$w,
    __vue_script__$w,
    __vue_scope_id__$w,
    __vue_is_functional_template__$w,
    __vue_module_identifier__$w,
    undefined,
    undefined
  );

var script$x = {
  components: {
    EditGrid: EditGrid,
    Treegrid: Treegrid,
    List: List,
    SimpleUpdate: SimpleUpdate,
    SimpleDetail: SimpleDetail,
    SimpleAdd: SimpleAdd,
    Executor: Executor
  },
  mixins: [ExecutorMixin],
  props: {
    initLoad: true
  },
  data: function data() {
    return {
      activeForm: null,
      service: null,
      selectService: null,
      defaultConditions: [],
      defaultValues: null,
      mapcondition: {},
      buttonInfo: {}
    };
  },
  mounted: function mounted() {},
  methods: {
    onFormLoaded: function onFormLoaded(operate_type) {
      var form = this.$refs["list-update-form"];
      var srv_cols = form.srvCols;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = srv_cols[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var field = _step.value;

          if (!field.batch_col) {
            if (form.fields[field.table_column] != undefined) {
              form.fields[field.table_column].info.visible = false;
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    },
    onCloseEvent: function onCloseEvent() {
      if (this.buttonInfo != undefined && this.buttonInfo != null) {
        var suffix_actions = this.buttonInfo.suffix_actions;

        if (suffix_actions == 'refresh') {
          window.location.reload();
        }
      }

      this.activeForm = 'xx';
    },
    onListRefresh: function onListRefresh() {
      // this.$emit("list-loaded", this);
      this.activeForm = null;
    }
  }
};

/* script */
const __vue_script__$x = script$x;

/* template */
var __vue_render__$x = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-dialog',{attrs:{"title":"添加","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'add',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'add')?_c('simple-add',{ref:"add-form",attrs:{"name":"add","service":_vm.service,"default-conditions":_vm.defaultConditions,"default-values":_vm.defaultValues},on:{"action-complete":function($event){_vm.activeForm = null;}}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'update',"append-to-body":""},on:{"close":function($event){return _vm.onCloseEvent()}}},[(_vm.activeForm == 'update')?_c('simple-update',{ref:"update-form",attrs:{"name":"update","init-load":_vm.initLoad,"service":_vm.service,"default-conditions":_vm.defaultConditions,"default-values":_vm.defaultValues},on:{"action-complete":function($event){_vm.activeForm = null;}}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"详情","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'detail',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'detail')?_c('simple-detail',{ref:"detail-form",attrs:{"name":"detail","service":_vm.service,"default-conditions":_vm.defaultConditions,"default-values":_vm.defaultValues}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"列表","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'list',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'list')?_c('list',{ref:"list",attrs:{"name":"list","service":_vm.service,"default-condition":_vm.defaultConditions,"list-type":"list"}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"列表","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'treegrid',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'treegrid')?_c('treegrid',{ref:"treegrid",attrs:{"name":"treegrid","service":_vm.service,"default-condition":_vm.defaultConditions}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"编辑列表","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'editgrid',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'editgrid')?_c('edit-grid',{ref:"editgrid",attrs:{"name":"editgrid","service":_vm.service}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"列表","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'list_update',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'list_update')?_c('simple-update',{ref:"list-update-form",attrs:{"name":"list-update-form","init-load":1==2,"service":_vm.service,"default-conditions":_vm.defaultConditions,"default-values":_vm.defaultValues},on:{"action-complete":function($event){_vm.activeForm = null;},"form-loaded":function($event){return _vm.onFormLoaded('update')}}}):_vm._e(),_vm._v(" "),(_vm.activeForm == 'list_update')?_c('list',{ref:"list",attrs:{"name":"list","read-only":1==1,"service":_vm.selectService,"default-condition":_vm.defaultConditions,"list-type":"list"}}):_vm._e()],1),_vm._v(" "),_c('el-dialog',{attrs:{"title":"添加列表","width":"90%","close-on-click-modal":1==2,"visible":_vm.activeForm == 'selectlist',"append-to-body":""},on:{"close":function($event){_vm.activeForm = 'xx';}}},[(_vm.activeForm == 'selectlist')?_c('list',{ref:"selectlist",attrs:{"name":"selectlist","service":_vm.service,"mapcondition":_vm.mapcondition,"default-condition":_vm.defaultConditions,"list-type":"addselectlist"},on:{"action-complete":_vm.onListRefresh}}):_vm._e()],1)],1)};
var __vue_staticRenderFns__$x = [];

  /* style */
  const __vue_inject_styles__$x = function (inject) {
    if (!inject) return
    inject("data-v-12b4af43_0", { source: ".bx_action[data-v-12b4af43]{margin-left:3px;margin-right:3px}", map: undefined, media: undefined });

  };
  /* scoped */
  const __vue_scope_id__$x = "data-v-12b4af43";
  /* module identifier */
  const __vue_module_identifier__$x = undefined;
  /* functional template */
  const __vue_is_functional_template__$x = false;
  /* style inject SSR */
  

  
  var Dialog = normalizeComponent_1(
    { render: __vue_render__$x, staticRenderFns: __vue_staticRenderFns__$x },
    __vue_inject_styles__$x,
    __vue_script__$x,
    __vue_scope_id__$x,
    __vue_is_functional_template__$x,
    __vue_module_identifier__$x,
    browser,
    undefined
  );

function init_util() {
  var eventBus = new Vue();
  var common_page_path = {
    "detail": "/vpages/index.html#/detail",
    "list": "/vpages/index.html#/list",
    "simple-add": "/vpages/index.html#/simple-add",
    "simple-update": "/vpages/index.html#/simple-update",
    "start-proc": "/vpages/index.html#/startproc",
    "procdetail": "/vpages/index.html#/procdetail",
    "procdetail_v2": "/vpages/index.html#/v2/procdetail",
    "start-proc_v2": "/vpages/index.html#/v2/startproc",
    "editgrid": "/vpages/index.html#/editgrid"
  };

  Vue.prototype.emitEvent = function (eventType, data) {
    var eventKey = eventType + "#" + this.getNodePath();
    eventBus.$emit(eventKey, data);
  };

  Vue.prototype.onEvent = function (nodePath, eventType, callback) {
    var eventKey = eventType + "#" + nodePath;
    eventBus.$on(eventKey, callback);
  };
  /**
   * resolve default srvapp from vue component
   * @returns {*}
   */


  Vue.prototype.resolveDefaultSrvApp = function () {
    var app = null; // search $srvApp from node to root

    var node = this;

    while (!node.$srvApp) {
      if (node.$parent) {
        node = node.$parent;
      } else {
        break;
      }
    }

    if (node.$srvApp) {
      app = node.$srvApp;
    } else {
      // whole path does not have $srvApp,
      // try  page level
      if (this.$route && this.$route.query && this.$route.query.srvApp) {
        app = this.$route.query.srvApp;
      } else {
        // try top level
        var defaultApp = window.frameElement && window.frameElement.dataset["app"] || top.window.pathConfig && top.window.pathConfig.application;
        app = defaultApp;
      }
    }

    return app;
  };
  /**
   *
   * @param operate_type: operate | select
   * @param service
   * @param app
   * @returns {string}
   */


  Vue.prototype.getServiceUrl = function (operate_type, service, app) {
    app = app || this.resolveDefaultSrvApp();
    return backendIpAddr + "/" + app + "/" + operate_type + "/" + service;
  };
  /**
   *
   * @param operate
   * @param service
   * @param app
   * @returns {string}
   */


  Vue.prototype.downloadexport = function (uuid) {
    var app = this.resolveDefaultSrvApp();
    var page_origin = window.location.protocol + "//" + window.location.hostname;
    var gateway_origin = window.top.pathConfig.gateway_protocol + "://" + window.top.pathConfig.gateway_ip; //跨域暂时没有想到好的解决方案

    if (page_origin == gateway_origin) {
      try {
        var url = backendIpAddr + "/" + app + "/downloadexport/" + uuid;
        location.href = url;
        var loading = this.openLoading();

        var checkToken = function checkToken() {
          var token = getCookie("downloadToken");

          if (token && token == uuid) {
            clearTimeout(downloadTimer);
            loading.close();
          }
        }; //获取cookie


        var getCookie = function getCookie(cookieName) {
          var strCookie = document.cookie;
          var arrCookie = strCookie.split(";");

          for (var i = 0; i < arrCookie.length; i++) {
            var arr = arrCookie[i].split("=");

            if (cookieName == arr[0].trim()) {
              return arr[1];
            }
          }

          return "";
        };

        var downloadTimer = setInterval(checkToken, 1000);
      } catch (e) {
        alert(e.name + ": " + e.message);
      }
    } else {
      var url = backendIpAddr + "/" + app + "/downloadexport/" + uuid;
      window.location.href = url;
    }
  }; //打开遮罩


  Vue.prototype.openLoading = function () {
    var loading = this.$loading({
      lock: true,
      text: '加载中',
      spinner: 'el-icon-loading',
      background: 'rgba(0, 0, 0, 0.7)'
    });
    return loading;
  };
  /**
   *
   * @param operate
   * @param service
   * @param app
   * @returns {string}
   */


  Vue.prototype.downloadFailimport = function () {
    var app = this.resolveDefaultSrvApp();
    var url = backendIpAddr + "/" + app + "/downloadImportFail";
    var bx_auth_ticket = sessionStorage.getItem("bx_auth_ticket");
    window.location.href = url + "?bx_auth_ticket=" + bx_auth_ticket; // this.$http.post(url, null, { headers: params_header, 'Content-Type': 'Multipart/form-data' }).then(function (res) {
    //   // this.cancelAddProject()
    //   // this.allRefresh()
    // }, function (res) {
    //   // if (res && res.body && res.body.message.indexOf('is exists')) {
    //   //     this.addProjectError.projectNumber = '代号不合法'
    //   // }
    //   //     // todo:AJAXError
    //   //   this.processing = false
    // })
  };

  Vue.prototype.getRootWindow = function (_window) {
    _window = _window || window;

    if (_window.top !== _window) {
      return this.getRootWindow(_window.top);
    } else {
      return _window;
    }
  };
  /**
   * 查询serviceCols, use an vuex cache here
   * @param service_name
   * @param use_type
   * @returns {*}
   */


  Vue.prototype.loadColsV2 = function (service_name, use_type) {
    var fullServiceName = this.resolveDefaultSrvApp() + "." + service_name;
    var cacheP = this.$store && this.$store.getters.getSrvCols(fullServiceName, use_type);

    if (cacheP) {
      return cacheP;
    }

    var loadedP = this.doLoadColsV2(service_name, use_type);
    this.$store && this.$store.commit('addSrvCols', {
      service: fullServiceName,
      useType: use_type,
      response: loadedP
    });
    return loadedP;
  };

  function getV2RequestData(service_name, use_type) {
    return {
      serviceName: 'srvsys_service_columnex_v2_select',
      colNames: ['*'],
      condition: [{
        colName: 'service_name',
        value: service_name,
        ruleType: 'eq'
      }, {
        colName: 'use_type',
        value: use_type,
        ruleType: 'eq'
      }],
      order: [{
        colName: "seq",
        orderType: "asc"
      }]
    };
  }

  Vue.prototype.doLoadColsV2 = function (service_name, use_type) {
    var data = getV2RequestData(service_name, use_type);
    var url = this.getServiceUrl("select", "srvsys_service_columnex_v2_select");
    url = url + "?colsel_v2=" + service_name;
    return this.$http.post(url, data).then(function (response) {


      return response;
    });
  };

  Vue.prototype.loadHotTableData = function (metadata) {
    var _this = this;

    if (!this.$store) {
      return;
    }

    var table = metadata.table;
    var service = metadata.selectService;
    var cached = this.$store.getters.getTableData(table);

    if (cached) {
      return cached;
    } // commit a placeholder for now


    this.$store && this.$store.commit("addTableData", {
      table: table,
      data: []
    });
    var url = this.getServiceUrl("select", service, metadata.srvApp);
    var params = {
      serviceName: service,
      colNames: ['*']
    };
    url = url + "?" + service;
    this.$http.post(url, params).then(function (response) {
      var data = response.data.data;

      _this.$store.commit("addTableData", {
        table: table,
        data: data
      });
    });
  };
  /**查询生成导出excel*/


  Vue.prototype.genExportExcel = function (service_name, condition, page, order, group, mapcondition) {
    // var url = this.service_api.exportExcel;
    var url = this.getServiceUrl("export", service_name);
    return this.doSelect(url, service_name, condition, page, order, group, mapcondition);
  };
  /**业务导出*/


  Vue.prototype.bizExport = function (service_name, condition, data) {
    // var url = this.service_api.exportExcel;
    var url = this.getServiceUrl("export", service_name);
    var params = {
      "serviceName": service_name,
      "colNames": ['*'],
      "condition": condition || [],
      "listData": data
    };
    url = url + "?" + service_name;
    return this.$http.post(url, params);
  };
  /**查询列表*/


  Vue.prototype.select = function (service_name, condition, page, order, group, mapcondition, app) {
    var url = this.getServiceUrl("select", service_name, app);
    return this.doSelect(url, service_name, condition, page, order, group, mapcondition);
  };

  Vue.prototype.selectFileList = function (file_no) {
    var serviceName = 'srvfile_attachment_select';
    var url = this.getServiceUrl("select", serviceName, "file");
    var condition = [{
      "colName": "file_no",
      "value": file_no,
      "ruleType": "eq"
    }, {
      "colName": "is_delete",
      "value": "1",
      "ruleType": "eq"
    }];
    return this.doSelect(url, serviceName, condition);
  };
  /**查询列表*/


  Vue.prototype.selectList = function (query, app) {
    var service_name = query.serviceName;
    var url = this.getServiceUrl("select", service_name, app);
    return this.$http.post(url, query);
  };
  /**查询*/


  Vue.prototype.doSelect = function (url, service_name, condition, page, order, group, mapcondition) {
    var query = {
      "serviceName": service_name,
      "colNames": ['*'],
      "condition": condition || [],
      "page": page,
      "order": order
    };

    if (group) {
      query.group = group;
    }

    if (mapcondition != undefined && mapcondition != '' && mapcondition != null) {
      query["map_table_condtion"] = mapcondition;
    }

    url = url + "?" + service_name;
    return this.$http.post(url, query);
  };
  /**查询*/


  Vue.prototype.selectByUser = function (service_name, condition, page, order, group, mapcondition) {
    var url = this.getServiceUrl("select", service_name);
    var params = {
      "serviceName": service_name,
      "colNames": ['*'],
      "condition": condition,
      group: group,
      "page": page,
      "order": order
    };

    if (mapcondition != undefined && mapcondition != '' && mapcondition != null) {
      params["map_table_condtion"] = mapcondition;
    }

    url = url + "?" + service_name;
    return this.$http.post(url, params);
  };
  /**查询*/


  Vue.prototype.selectproc = function (service_name, condition, page, order, proc_type) {
    //var url = this.service_api.select;
    var url = this.getServiceUrl("select", service_name);
    var params = {
      "serviceName": service_name,
      "proc_data_type": proc_type,
      "colNames": ['*'],
      "condition": condition,
      "page": page,
      "order": order
    };
    url = url + "?" + service_name;
    return this.$http.post(url, params);
  };
  /**查询*/


  Vue.prototype.treeSelect = function (service_name, condition) {
    var url = this.getServiceUrl("select", service_name);
    var params = {
      "serviceName": service_name,
      "treeData": true,
      "colNames": ['*'],
      "condition": condition
    };
    url = url + "?" + service_name;
    return this.$http.post(url, params);
  };

  Vue.prototype.selectOne = function (service_name, condition) {
    var url = this.getServiceUrl("select", service_name);
    var params = {
      "serviceName": service_name,
      "colNames": ['*'],
      "condition": condition
    };
    url = url + "?" + service_name;
    return this.$http.post(url, params).then(function (response) {
      if (response.body.data && response.body.data.length > 0) {
        response.body = response.body.data[0];
      } else {
        console.error("no data returned for selectOne");
      }

      return response;
    });
  };
  /**操作*/


  Vue.prototype.operate = function (requests) {
    var service = requests.length > 0 ? requests[0].serviceName : "";
    var srvApp = requests[0].srvApp;
    var url = this.getServiceUrl("operate", service, srvApp);
    return this.$http.post(url, requests);
  };
  /**删除文件*/


  Vue.prototype.deleteFile = function (params) {
    var url = this.serviceApi().deleteFile;
    return this.$http.post(url, params);
  };
  /**
   * 返回常用的页面路径
   * @param type：页面类型
   * @returns {*}
   */


  Vue.prototype.getCommonPagePath = function (type) {
    return common_page_path[type];
  };
  /**操作*/


  Vue.prototype.addTab = function (type, urlParams, tab_title) {
    if (tab_title == undefined || tab_title == null || tab_title == "") {
      tab_title = "新标签页";
    }

    var versionNo = this.getVersionNo();

    if (versionNo != "" && ("procdetail" == type || "start-proc" == type)) {
      type = type + "_" + versionNo;
    }

    var url = common_page_path[type] + urlParams;

    if (window.top.tab) {
      var page = {
        title: tab_title,
        url: url,
        icon: ""
      };
      window.top.tab.addTab(page);
    } else {
      window.open(url);
    }
  };

  Vue.prototype.addTabByUrl = function (url, tab_title) {
    var page = {
      title: tab_title || "新标签页",
      url: url
    };

    if (window.top.tab && window.top.tab.addTab) {
      window.top.tab.addTab(page);
    } else {
      var strWindowFeatures = "menubar=yes,location=yes,resizable=yes,scrollbars=yes,status=yes";
      var newWindow = window.open(url, "CNN_WindowName", strWindowFeatures);
      newWindow.document.title = tab_title;
    }
  };
  /**操作*/


  Vue.prototype.forwardAddTab = function (address, tab_title) {
    if (tab_title == undefined || tab_title == null || tab_title == "") {
      tab_title = "新标签页";
    }

    var page = {
      title: tab_title,
      url: address,
      icon: ""
    };
    window.top.tab.addTab(page);
  };
  /**操作*/


  Vue.prototype.custAddTab = function (type, urlParams, tab_title) {
    if (tab_title == undefined || tab_title == null || tab_title == "") {
      tab_title = "新标签页";
    }

    var page = {
      title: tab_title,
      url: common_page_path[type] + urlParams,
      icon: ""
    };
    window.top.tab.addTab(page);
  };

  Vue.prototype.approval = function (requests) {
    var url = this.serviceApi().approval;
    return this.$http.post(url, requests);
  }; //直接启动流程


  Vue.prototype.startProc = function (requests) {
    var service = requests.length > 0 ? requests[0].serviceName : "";
    var url = this.getServiceUrl("apply", service);
    url = url + "?" + service;
    return this.$http.post(url, requests);
  }; //保存草稿


  Vue.prototype.saveDraft = function (requests) {
    var service = requests.length > 0 ? requests[0].serviceName : "";
    var url = this.getServiceUrl("apply", service);
    url = url + "?" + service;
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = requests[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var item = _step.value;
        item.proc_save_type = "save";
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return this.$http.post(url, requests);
  }; //开启已有数据流程


  Vue.prototype.startDataProc = function (requests) {
    var service = requests.length > 0 ? requests[0].serviceName : "";
    var url = this.getServiceUrl("apply", service);
    url = url + "?" + service;
    var _iteratorNormalCompletion2 = true;
    var _didIteratorError2 = false;
    var _iteratorError2 = undefined;

    try {
      for (var _iterator2 = requests[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
        var item = _step2.value;
        item.proc_data_type = "old";
      }
    } catch (err) {
      _didIteratorError2 = true;
      _iteratorError2 = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
          _iterator2.return();
        }
      } finally {
        if (_didIteratorError2) {
          throw _iteratorError2;
        }
      }
    }

    return this.$http.post(url, requests);
  };

  Vue.prototype.bxDeepClone = function (obj) {
    if (obj == null) return null;
    var newObj = obj instanceof Array ? [] : {};

    for (var i in obj) {
      newObj[i] = _typeof(obj[i]) === "object" ? this.bxDeepClone(obj[i]) : obj[i];
    }

    return newObj;
  };

  Vue.prototype.parseDateTime = function (dateStr) {
    return moment(dateStr).toDate();
  };

  Vue.prototype.formatDateTime = function (date) {
    return moment(date).format("YYYY-MM-DD  HH:mm:ss");
  };

  Vue.prototype.parseDate = function (dateStr) {
    return moment(dateStr).toDate();
  };

  Vue.prototype.formatDate = function (date) {
    return moment(date).format("YYYY-MM-DD");
  };

  Vue.prototype.addDate = function (date, amount, flag) {
    return moment(date).add(amount, flag).toDate();
  };

  Vue.prototype.popupDialog = function (params) {
    var btninfo = params["btninfo"];

    if (params.formType.startsWith("simple-")) {
      params.formType = params.formType.substring("simple-".length);
    }

    if (!this.dialog) {
      // create dialog
      var ComponentClass = Vue.extend(Dialog);

      var _dialog = new ComponentClass({
        propsData: {
          type: 'primary'
        },
        store: this.$store
      });

      this.dialog = _dialog;

      _dialog.$mount();

      this.$el.appendChild(_dialog.$el);
    } // conf and show dialog


    var dialog = this.dialog;
    dialog.service = params.service;

    if (btninfo && btninfo.application) {
      dialog.srvApp = btninfo.application;
    }

    dialog.defaultConditions = params.condition;
    dialog.defaultValues = params.data;
    dialog.mapcondition = params.mapcondition;

    if (params.otherParams != undefined && params.otherParams != null) {
      var load_old_data = params.otherParams.load_old_data;

      if (load_old_data == false) {
        dialog.initLoad = load_old_data;
      }

      dialog.buttonInfo = params.otherParams.buttonInfo;
    }

    dialog.activeForm = params.formType;
  };

  Vue.prototype.popuplistFormDialog = function (formType, service, selectService, condition, updateData) {
    if (!this.dialog) {
      // create dialog
      var ComponentClass = Vue.extend(Dialog);

      var _dialog2 = new ComponentClass({
        propsData: {
          type: 'primary'
        },
        store: this.$store
      });

      this.dialog = _dialog2;

      _dialog2.$mount();

      this.$el.appendChild(_dialog2.$el);
    } // conf and show dialog


    var dialog = this.dialog;
    dialog.service = service;
    dialog.selectService = selectService;
    dialog.defaultConditions = condition;
    dialog.defaultValues = updateData;
    dialog.activeForm = formType;
  };

  Vue.prototype.guid = function () {
    function s4() {
      return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
    }

    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
  };

  Vue.prototype.formartMoney = function (s) {
    return formatMoney(s);
  };

  Vue.prototype.isEmptyCondition = function (condition) {
    var value = condition.value;

    if (condition.ruleType == 'isnull' || condition.ruleType == "notnull") {
      return false;
    } else if (condition.ruleType == "between") {
      return jQuery.isEmptyObject(value) || value[0] == null && value[1] == null;
    } else {
      if (_typeof(value) == "object") {
        return jQuery.isEmptyObject(value);
      } else {
        return value == null || value == undefined || value === "";
      }
    }
  };

  Vue.prototype.money2zh = function (money) {
    return money2Zh(money);
  };

  Vue.prototype.isTopComp = function () {
    return this.$parent.$parent === this.$root;
  };

  Vue.prototype.getCurrPage = function () {
    var isInDialog = false;
    var node = this;

    while (node.$parent) {
      isInDialog = node.$parent.$vnode && node.$parent.$vnode.tag && node.$parent.$vnode.tag.endsWith("ElDialog");

      if (isInDialog) {
        break;
      } else {
        node = node.$parent;
      }
    }

    return isInDialog ? node : this.$root.$children[0].$children[0];
  };

  Vue.prototype.getOperateParams = function () {
    if (this.$route && this.$route.query && this.$route.query.operate_params) {
      return this.$route.query.operate_params;
    }

    return false;
  };

  Vue.prototype.getVueUrlParams = function (paraName) {
    if (this.$route && this.$route.query && this.$route.query[paraName]) {
      return this.$route.query[paraName];
    }

    return false;
  };

  Vue.prototype.getinitparams = function () {
    if (this.$route && this.$route.query && this.$route.query.init_params) {
      return this.$route.query.init_params;
    }

    return "";
  };

  Vue.prototype.eval = function (expr) {
    return eval(expr);
  };

  Vue.prototype.santinizeQueries = function (queries) {
    traverseObj(queries, function (obj, key) {
      if (key === "_rtDataCtx") {
        delete obj._rtDataCtx;
      } else if (key === "data") {
        if (!obj.data || _$1.isEmpty(obj.data)) {
          delete obj.data;
        }
      }
    }, function (obj, key) {
      return key === "data" || key === "child_data_list" || _$1.isArray(obj);
    });
  };

  Vue.prototype.weekStart = function () {
    return weekStart();
  };

  Vue.prototype.weekEnd = function () {
    return weekEnd();
  };

  Vue.prototype.monthStart = function () {
    return monthStart();
  };

  Vue.prototype.monthEnd = function () {
    return monthEnd();
  };

  Vue.prototype.toTemplateString = function (templ) {
    return "`" + templ + "`";
  };

  Vue.prototype.parseJson = function (str) {
    return Function('"use strict";return (' + str + ')')();
  }; // noinspection JSUnusedLocalSymbols

  /**
   *
   * @param expr
   * @param data
   * @param vm
   * @returns {*}
   */


  Vue.prototype.evalBxExpr = function (expr, data, vm, defaultValue) {
    try {
      var user = top.user;
      return eval(expr);
    } catch (e) {
      console.error("fail to eval expr:" + e.stack);
      return defaultValue || null;
    }
  };

  Vue.prototype.evalActionValidator = function (funcStr, data) {
    var vm = this;
    var expr = "var zz=(" + funcStr + ")(vm, data); zz";
    var test = this.evalBxExpr(expr, data, vm);

    if (test !== true) {
      this.$message.error(test + "");
      return false;
    } else {
      return true;
    }
  };

  Vue.prototype.getNodePath = function () {
    var node = this;

    while (!node.$srvApp) {
      if (node.$parent) {
        node = node.$parent;
      } else {
        break;
      }
    }
  };
  /**
   * (id | key| name | attrs[name])
   */


  Vue.prototype.getName = function () {
    var type = this.$options.name || this.$options._componentTag;
    var shortName = this.name || this.$attrs && this.$attrs.name || this.$vnode && this.$vnode.key;
    return type + "#" + shortName;
  };

  Vue.prototype.getNodePath = function () {
    var tokens = []; // precondition: path already

    var node = this;

    while (node) {
      var isMarker = node.isMarker || this.$attrs && this.$attrs["is-mark"] === "true";

      if (isMarker || node.getName && _$1.isFunction(node.getName) && node === this) {
        var name = node.getName();
        tokens.splice(0, 0, name);
      }

      node = node.$parent;
    }

    return tokens.join("/");
  };

  Vue.prototype.findNodeByPath = function (path) {
    // find leaf node type
    var tokens = path.split("/");
    var leafNodeType = tokens[tokens.length - 1].split("#")[0]; // filter by their path

    return this.$root.findAnyNodeByTypeAndPredict(leafNodeType, function (node) {
      return node.getNodePath() === path;
    });
  };
  /**
   * find descendant nodes with type and predict
   * @param type
   * @param predict
   * @returns {*}
   */


  Vue.prototype.findAnyNodeByTypeAndPredict = function (type, predict) {
    var nodeType = this.$options.name || this.$options._componentTag;

    if (nodeType && nodeType === type && (!predict || predict(this))) {
      return this;
    } else {
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.$children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var child = _step3.value;
          var match = child.findAnyNodeByTypeAndPredict(type, predict);

          if (match) {
            return match;
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }

      return null;
    }
  };

  Vue.prototype.evalExprOrFunc = function (value, data, defaultValue) {
    try {
      if (_$1.isString(value)) {
        return eval(value);
      } else if (_$1.isFunction(value)) {
        return value(data);
      } else {
        console.error("value is not func or expr: " + value);
      }
    } catch (e) {
      if (_$1.isUndefined(defaultValue)) {
        throw e;
      } else {
        console.error("fail to eval func or expr: " + e.stack);
        return defaultValue;
      }
    }
  };

  Vue.prototype.evalVersatileFlagVar = function (flagVar, data) {
    if (_$1.isBoolean(flagVar)) {
      return flagVar;
    } else if (_$1.isFunction(flagVar)) {
      return flagVar(data);
    } else {
      return !!flagVar;
    }
  };

  Vue.prototype.getVersionNo = function () {
    var version = "";
    var path = this.$route.path;
    var paths = this.$route.path.split("/");

    if (paths.length > 1) {
      var reg = /^v\d*$/;
      var value = paths[1];

      if (reg.test(value)) {
        version = value;
      }
    }

    return version;
  };

  Vue.prototype.removeByValue = function (datas, value) {
    var _index = -1;

    for (var i = 0; i < datas.length; i++) {
      if (datas[i] == value) {
        _index = i;
        break;
      }
    }

    if (_index > -1) {
      datas.splice(_index, 1);
    }
  };

  Vue.prototype.serviceApi = function () {
    var defaultApp = this.resolveDefaultSrvApp();
    var service_api = {
      selectOne: backendIpAddr + "/" + defaultApp + "/select",
      select: backendIpAddr + "/" + defaultApp + "/select",
      selectByUser: backendIpAddr + "/" + defaultApp + "/select",
      operate: backendIpAddr + "/" + defaultApp + "/operate",
      approval: backendIpAddr + "/" + defaultApp + "/process/approval",
      uploadFile: backendIpAddr + "/file/upload",
      downloadFile: backendIpAddr + "/file/download?filePath=",
      deleteFile: backendIpAddr + "/file/delete",
      exportExcel: backendIpAddr + "/" + defaultApp + "/export/exportExcel",
      importExcel: backendIpAddr + "/" + defaultApp + "/bizDataImport",
      qrcode: backendIpAddr + "/" + defaultApp + "/bxsys/qrcode" // startProc: backendIpAddr + defaultApp + "/bxsys/startProc",
      // saveDraft: backendIpAddr + defaultApp + "/bxsys/saveDraft",
      // startDataProc: backendIpAddr + defaultApp + "/bxsys/startDataProc",

    };
    return service_api;
  };
}

var bxPlugin = {
  // The install method will be called with the Vue constructor as
  // the first argument, along with possible options
  install: function install(Vue$$1, options) {
    Vue$$1.mixin({
      props: {
        $srvApp: {
          type: String
        }
      },
      computed: {},
      methods: {}
    });
  }
};

/**
 * index.js as entry for build component library
 */
var index = {
  install: function install(Vue$$1, options) {
    init_util();
    Vue$$1.use(bxPlugin);
    Vue$$1.component("list", List);
    Vue$$1.component("simple-add", SimpleAdd);
    Vue$$1.component("simple-update", SimpleUpdate);
    Vue$$1.component("simple-detail", SimpleDetail);
    Vue$$1.component("proc-detail", ProcDetail);
  }
};

/**
 * ueditor完整配置项
 * 可以在这里配置整个编辑器的特性
 */

/**************************提示********************************
 * 所有被注释的配置项均为UEditor默认值。
 * 修改默认配置请首先确保已经完全明确该参数的真实用途。
 * 主要有两种修改方案，一种是取消此处注释，然后修改成对应参数；另一种是在实例化编辑器时传入对应参数。
 * 当升级编辑器时，可直接使用旧版配置文件替换新版配置文件,不用担心旧版配置文件中因缺少新功能所需的参数而导致脚本报错。
 **************************提示********************************/
(function () {
  /**
   * 编辑器资源文件根路径。它所表示的含义是：以编辑器实例化页面为当前路径，指向编辑器资源文件（即dialog等文件夹）的路径。
   * 鉴于很多同学在使用编辑器的时候出现的种种路径问题，此处强烈建议大家使用"相对于网站根目录的相对路径"进行配置。
   * "相对于网站根目录的相对路径"也就是以斜杠开头的形如"/myProject/ueditor/"这样的路径。
   * 如果站点中有多个不在同一层级的页面需要实例化编辑器，且引用了同一UEditor的时候，此处的URL可能不适用于每个页面的编辑器。
   * 因此，UEditor提供了针对不同页面的编辑器可单独配置的根路径，具体来说，在需要实例化编辑器的页面最顶部写上如下代码即可。当然，需要令此处的URL等于对应的配置。
   * window.UEDITOR_HOME_URL = "/xxxx/xxxx/";
   */
  var URL = window.UEDITOR_HOME_URL || getUEBasePath();
  /**
   * 配置项主体。注意，此处所有涉及到路径的配置别遗漏URL变量。
   */

  window.UEDITOR_CONFIG = {
    //为编辑器实例添加一个路径，这个不能被注释
    UEDITOR_HOME_URL: URL //UEDITOR_HOME_URL: window.pathConfig.fileServer
    // 服务器统一请求接口路径
    ,
    serverUrl: URL + "jsp/controller.jsp" //serverUrl: URL + "upload"
    //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的重新定义
    ,
    toolbars: [['fullscreen', 'source', '|', 'undo', 'redo', '|', 'bold', 'italic', 'underline', 'fontborder', 'strikethrough', 'superscript', 'subscript', 'removeformat', 'formatmatch', 'autotypeset', 'blockquote', 'pasteplain', '|', 'forecolor', 'backcolor', 'insertorderedlist', 'insertunorderedlist', 'selectall', 'cleardoc', '|', 'rowspacingtop', 'rowspacingbottom', 'lineheight', '|', 'customstyle', 'paragraph', 'fontfamily', 'fontsize', '|', 'directionalityltr', 'directionalityrtl', 'indent', '|', 'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify', '|', 'touppercase', 'tolowercase', '|', 'link', 'unlink', 'anchor', '|', 'imagenone', 'imageleft', 'imageright', 'imagecenter', '|', 'simpleupload', 'insertimage', 'emotion', 'scrawl', 'insertvideo', 'music', 'attachment', 'map', 'gmap', 'insertframe', 'insertcode', 'webapp', 'pagebreak', 'template', 'background', '|', 'horizontal', 'date', 'time', 'spechars', 'snapscreen', 'wordimage', '|', 'inserttable', 'deletetable', 'insertparagraphbeforetable', 'insertrow', 'deleterow', 'insertcol', 'deletecol', 'mergecells', 'mergeright', 'mergedown', 'splittocells', 'splittorows', 'splittocols', 'charts', '|', 'print', 'preview', 'searchreplace', 'drafts', 'help']] //当鼠标放在工具栏上时显示的tooltip提示,留空支持自动多语言配置，否则以配置值为准
    //,labelMap:{
    //    'anchor':'', 'undo':''
    //}
    //语言配置项,默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：
    //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()
    //,lang:"zh-cn"
    //,langPath:URL +"lang/"
    //主题配置项,默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：
    //现有如下皮肤:default
    //,theme:'default'
    //,themePath:URL +"themes/"
    ,
    zIndex: 2001 //编辑器层级的基数,默认是900
    //针对getAllHtml方法，会在对应的head标签中增加该编码设置。
    //,charset:"utf-8"
    //若实例化编辑器的页面手动修改的domain，此处需要设置为true
    //,customDomain:false
    //常用配置项目
    //,isShow : true    //默认显示编辑器
    //,textarea:'editorValue' // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值
    //,initialContent:'欢迎使用ueditor!'    //初始化编辑器的内容,也可以通过textarea/script给值，看官网例子
    //,autoClearinitialContent:true //是否自动清除编辑器初始内容，注意：如果focus属性设置为true,这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了
    //,focus:false //初始化时，是否让编辑器获得焦点true或false
    //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感
    //,initialStyle:'p{line-height:1em}'//编辑器层级的基数,可以用来改变字体等
    //,iframeCssUrl: URL + '/themes/iframe.css' //给编辑区域的iframe引入一个css文件
    //indentValue
    //首行缩进距离,默认是2em
    //,indentValue:'2em'
    //,initialFrameWidth:1000  //初始化编辑器宽度,默认1000
    //,initialFrameHeight:320  //初始化编辑器高度,默认320
    //,readonly : false //编辑器初始化结束后,编辑区域是否是只读的，默认是false
    //,autoClearEmptyNode : true //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）
    //启用自动保存
    //,enableAutoSave: true
    //自动保存间隔时间， 单位ms
    //,saveInterval: 500
    //,fullscreen : false //是否开启初始化时即全屏，默认关闭
    //,imagePopup:true      //图片操作的浮层开关，默认打开
    //,autoSyncData:true //自动同步编辑器要提交的数据
    //,emotionLocalization:false //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹
    //粘贴只保留标签，去除标签所有属性
    //,retainOnlyLabelPasted: false
    //,pasteplain:false  //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴
    //纯文本粘贴模式下的过滤规则
    //'filterTxtRules' : function(){
    //    function transP(node){
    //        node.tagName = 'p';
    //        node.setStyle();
    //    }
    //    return {
    //        //直接删除及其字节点内容
    //        '-' : 'script style object iframe embed input select',
    //        'p': {$:{}},
    //        'br':{$:{}},
    //        'div':{'$':{}},
    //        'li':{'$':{}},
    //        'caption':transP,
    //        'th':transP,
    //        'tr':transP,
    //        'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,
    //        'td':function(node){
    //            //没有内容的td直接删掉
    //            var txt = !!node.innerText();
    //            if(txt){
    //                node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);
    //            }
    //            node.parentNode.removeChild(node,node.innerText())
    //        }
    //    }
    //}()
    //,allHtmlEnabled:false //提交到后台的数据是否包含整个html字符串
    //insertorderedlist
    //有序列表的下拉配置,值留空时支持多语言自动识别，若配置值，则以此值为准
    //,'insertorderedlist':{
    //      //自定的样式
    //        'num':'1,2,3...',
    //        'num1':'1),2),3)...',
    //        'num2':'(1),(2),(3)...',
    //        'cn':'一,二,三....',
    //        'cn1':'一),二),三)....',
    //        'cn2':'(一),(二),(三)....',
    //     //系统自带
    //     'decimal' : '' ,         //'1,2,3...'
    //     'lower-alpha' : '' ,    // 'a,b,c...'
    //     'lower-roman' : '' ,    //'i,ii,iii...'
    //     'upper-alpha' : '' , lang   //'A,B,C'
    //     'upper-roman' : ''      //'I,II,III...'
    //}
    //insertunorderedlist
    //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准
    //,insertunorderedlist : { //自定的样式
    //    'dash' :'— 破折号', //-破折号
    //    'dot':' 。 小圆圈', //系统自带
    //    'circle' : '',  // '○ 小圆圈'
    //    'disc' : '',    // '● 小圆点'
    //    'square' : ''   //'■ 小方块'
    //}
    //,listDefaultPaddingLeft : '30'//默认的左边缩进的基数倍
    //,listiconpath : 'http://bs.baidu.com/listicon/'//自定义标号的路径
    //,maxListLevel : 3 //限制可以tab的级数, 设置-1为不限制
    //,autoTransWordToList:false  //禁止word中粘贴进来的列表自动变成列表标签
    //fontfamily
    //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准
    //,'fontfamily':[
    //    { label:'',name:'songti',val:'宋体,SimSun'},
    //    { label:'',name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},
    //    { label:'',name:'yahei',val:'微软雅黑,Microsoft YaHei'},
    //    { label:'',name:'heiti',val:'黑体, SimHei'},
    //    { label:'',name:'lishu',val:'隶书, SimLi'},
    //    { label:'',name:'andaleMono',val:'andale mono'},
    //    { label:'',name:'arial',val:'arial, helvetica,sans-serif'},
    //    { label:'',name:'arialBlack',val:'arial black,avant garde'},
    //    { label:'',name:'comicSansMs',val:'comic sans ms'},
    //    { label:'',name:'impact',val:'impact,chicago'},
    //    { label:'',name:'timesNewRoman',val:'times new roman'}
    //]
    //fontsize
    //字号
    //,'fontsize':[10, 11, 12, 14, 16, 18, 20, 24, 36]
    //paragraph
    //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准
    //,'paragraph':{'p':'', 'h1':'', 'h2':'', 'h3':'', 'h4':'', 'h5':'', 'h6':''}
    //rowspacingtop
    //段间距 值和显示的名字相同
    //,'rowspacingtop':['5', '10', '15', '20', '25']
    //rowspacingBottom
    //段间距 值和显示的名字相同
    //,'rowspacingbottom':['5', '10', '15', '20', '25']
    //lineheight
    //行内间距 值和显示的名字相同
    //,'lineheight':['1', '1.5','1.75','2', '3', '4', '5']
    //customstyle
    //自定义样式，不支持国际化，此处配置值即可最后显示值
    //block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置
    //尽量使用一些常用的标签
    //参数说明
    //tag 使用的标签名字
    //label 显示的名字也是用来标识不同类型的标识符，注意这个值每个要不同，
    //style 添加的样式
    //每一个对象就是一个自定义的样式
    //,'customstyle':[
    //    {tag:'h1', name:'tc', label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},
    //    {tag:'h1', name:'tl',label:'', style:'border-bottom:#ccc 2px solid;padding:0 4px 0 0;margin:0 0 10px 0;'},
    //    {tag:'span',name:'im', label:'', style:'font-style:italic;font-weight:bold'},
    //    {tag:'span',name:'hi', label:'', style:'font-style:italic;font-weight:bold;color:rgb(51, 153, 204)'}
    //]
    //打开右键菜单功能
    //,enableContextMenu: true
    //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准
    //,contextMenu:[
    //    {
    //        label:'',       //显示的名称
    //        cmdName:'selectall',//执行的command命令，当点击这个右键菜单时
    //        //exec可选，有了exec就会在点击时执行这个function，优先级高于cmdName
    //        exec:function () {
    //            //this是当前编辑器的实例
    //            //this.ui._dialogs['inserttableDialog'].open();
    //        }
    //    }
    //]
    //快捷菜单
    //,shortcutMenu:["fontfamily", "fontsize", "bold", "italic", "underline", "forecolor", "backcolor", "insertorderedlist", "insertunorderedlist"]
    //elementPathEnabled
    //是否启用元素路径，默认是显示
    //,elementPathEnabled : true
    //wordCount
    //,wordCount:true          //是否开启字数统计
    //,maximumWords:10000       //允许的最大字符数
    //字数统计提示，{#count}代表当前字数，{#leave}代表还可以输入多少字符数,留空支持多语言自动切换，否则按此配置显示
    //,wordCountMsg:''   //当前已输入 {#count} 个字符，您还可以输入{#leave} 个字符
    //超出字数限制提示  留空支持多语言自动切换，否则按此配置显示
    //,wordOverFlowMsg:''    //<span style="color:red;">你输入的字符个数已经超出最大允许值，服务器可能会拒绝保存！</span>
    //tab
    //点击tab键时移动的距离,tabSize倍数，tabNode什么字符做为单位
    //,tabSize:4
    //,tabNode:'&nbsp;'
    //removeFormat
    //清除格式时可以删除的标签和属性
    //removeForamtTags标签
    //,removeFormatTags:'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var'
    //removeFormatAttributes属性
    //,removeFormatAttributes:'class,style,lang,width,height,align,hspace,valign'
    //undo
    //可以最多回退的次数,默认20
    //,maxUndoCount:20
    //当输入的字符数超过该值时，保存一次现场
    //,maxInputCount:1
    //autoHeightEnabled
    // 是否自动长高,默认true
    //,autoHeightEnabled:true
    //scaleEnabled
    //是否可以拉伸长高,默认true(当开启时，自动长高失效)
    //,scaleEnabled:false
    //,minFrameWidth:800    //编辑器拖动时最小宽度,默认800
    //,minFrameHeight:220  //编辑器拖动时最小高度,默认220
    //autoFloatEnabled
    //是否保持toolbar的位置不动,默认true
    //,autoFloatEnabled:true
    //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面
    //,topOffset:30
    //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)
    //,toolbarTopOffset:400
    //设置远程图片是否抓取到本地保存
    //,catchRemoteImageEnable: true //设置是否抓取远程图片
    //pageBreakTag
    //分页标识符,默认是_ueditor_page_break_tag_
    //,pageBreakTag:'_ueditor_page_break_tag_'
    //autotypeset
    //自动排版参数
    //,autotypeset: {
    //    mergeEmptyline: true,           //合并空行
    //    removeClass: true,              //去掉冗余的class
    //    removeEmptyline: false,         //去掉空行
    //    textAlign:"left",               //段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版
    //    imageBlockLine: 'center',       //图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版
    //    pasteFilter: false,             //根据规则过滤没事粘贴进来的内容
    //    clearFontSize: false,           //去掉所有的内嵌字号，使用编辑器默认的字号
    //    clearFontFamily: false,         //去掉所有的内嵌字体，使用编辑器默认的字体
    //    removeEmptyNode: false,         // 去掉空节点
    //    //可以去掉的标签
    //    removeTagNames: {标签名字:1},
    //    indent: false,                  // 行首缩进
    //    indentValue : '2em',            //行首缩进的大小
    //    bdc2sb: false,
    //    tobdc: false
    //}
    //tableDragable
    //表格是否可以拖拽
    //,tableDragable: true
    //sourceEditor
    //源码的查看方式,codemirror 是代码高亮，textarea是文本框,默认是codemirror
    //注意默认codemirror只能在ie8+和非ie中使用
    //,sourceEditor:"codemirror"
    //如果sourceEditor是codemirror，还用配置一下两个参数
    //codeMirrorJsUrl js加载的路径，默认是 URL + "third-party/codemirror/codemirror.js"
    //,codeMirrorJsUrl:URL + "third-party/codemirror/codemirror.js"
    //codeMirrorCssUrl css加载的路径，默认是 URL + "third-party/codemirror/codemirror.css"
    //,codeMirrorCssUrl:URL + "third-party/codemirror/codemirror.css"
    //编辑器初始化完成后是否进入源码模式，默认为否。
    //,sourceEditorFirst:false
    //iframeUrlMap
    //dialog内容的路径 ～会被替换成URL,垓属性一旦打开，将覆盖所有的dialog的默认路径
    //,iframeUrlMap:{
    //    'anchor':'~/dialogs/anchor/anchor.html',
    //}
    //allowLinkProtocol 允许的链接地址，有这些前缀的链接地址不会自动添加http
    //, allowLinkProtocols: ['http:', 'https:', '#', '/', 'ftp:', 'mailto:', 'tel:', 'git:', 'svn:']
    //webAppKey 百度应用的APIkey，每个站长必须首先去百度官网注册一个key后方能正常使用app功能，注册介绍，http://app.baidu.com/static/cms/getapikey.html
    //, webAppKey: ""
    //默认过滤规则相关配置项目
    //,disabledTableInTable:true  //禁止表格嵌套
    //,allowDivTransToP:true      //允许进入编辑器的div标签自动变成p标签
    //,rgb2Hex:true               //默认产出的数据中的color自动从rgb格式变成16进制格式
    // xss 过滤是否开启,inserthtml等操作
    ,
    xssFilterRules: true //input xss过滤
    ,
    inputXssFilter: true //output xss过滤
    ,
    outputXssFilter: true // xss过滤白名单 名单来源: https://raw.githubusercontent.com/leizongmin/js-xss/master/lib/default.js
    ,
    whitList: {
      a: ['target', 'href', 'title', 'class', 'style'],
      abbr: ['title', 'class', 'style'],
      address: ['class', 'style'],
      area: ['shape', 'coords', 'href', 'alt'],
      article: [],
      aside: [],
      audio: ['autoplay', 'controls', 'loop', 'preload', 'src', 'class', 'style'],
      b: ['class', 'style'],
      bdi: ['dir'],
      bdo: ['dir'],
      big: [],
      blockquote: ['cite', 'class', 'style'],
      br: [],
      caption: ['class', 'style'],
      center: [],
      cite: [],
      code: ['class', 'style'],
      col: ['align', 'valign', 'span', 'width', 'class', 'style'],
      colgroup: ['align', 'valign', 'span', 'width', 'class', 'style'],
      dd: ['class', 'style'],
      del: ['datetime'],
      details: ['open'],
      div: ['class', 'style'],
      dl: ['class', 'style'],
      dt: ['class', 'style'],
      em: ['class', 'style'],
      font: ['color', 'size', 'face'],
      footer: [],
      h1: ['class', 'style'],
      h2: ['class', 'style'],
      h3: ['class', 'style'],
      h4: ['class', 'style'],
      h5: ['class', 'style'],
      h6: ['class', 'style'],
      header: [],
      hr: [],
      i: ['class', 'style'],
      img: ['src', 'alt', 'title', 'width', 'height', 'id', '_src', 'loadingclass', 'class', 'data-latex'],
      ins: ['datetime'],
      li: ['class', 'style'],
      mark: [],
      nav: [],
      ol: ['class', 'style'],
      p: ['class', 'style'],
      pre: ['class', 'style'],
      s: [],
      section: [],
      small: [],
      span: ['class', 'style'],
      sub: ['class', 'style'],
      sup: ['class', 'style'],
      strong: ['class', 'style'],
      table: ['width', 'border', 'align', 'valign', 'class', 'style'],
      tbody: ['align', 'valign', 'class', 'style'],
      td: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],
      tfoot: ['align', 'valign', 'class', 'style'],
      th: ['width', 'rowspan', 'colspan', 'align', 'valign', 'class', 'style'],
      thead: ['align', 'valign', 'class', 'style'],
      tr: ['rowspan', 'align', 'valign', 'class', 'style'],
      tt: [],
      u: [],
      ul: ['class', 'style'],
      video: ['autoplay', 'controls', 'loop', 'preload', 'src', 'height', 'width', 'class', 'style']
    }
  };

  function getUEBasePath(docUrl, confUrl) {
    return getBasePath(docUrl || self.document.URL || self.location.href, confUrl || getConfigFilePath());
  }

  function getConfigFilePath() {
    var configPath = document.getElementsByTagName('script');
    return configPath[configPath.length - 1].src;
  }

  function getBasePath(docUrl, confUrl) {
    var basePath = confUrl;

    if (/^(\/|\\\\)/.test(confUrl)) {
      basePath = /^.+?\w(\/|\\\\)/.exec(docUrl)[0] + confUrl.replace(/^(\/|\\\\)/, '');
    } else if (!/^[a-z]+:/i.test(confUrl)) {
      docUrl = docUrl.split("#")[0].split("?")[0].replace(/[^\\\/]+$/, '');
      basePath = docUrl + "" + confUrl;
    }

    return optimizationPath(basePath);
  }

  function optimizationPath(path) {
    var protocol = /^[a-z]+:\/\//.exec(path)[0],
        tmp = null,
        res = [];
    path = path.replace(protocol, "").split("?")[0].split("#")[0];
    path = path.replace(/\\/g, '/').split(/\//);
    path[path.length - 1] = "";

    while (path.length) {
      if ((tmp = path.shift()) === "..") {
        res.pop();
      } else if (tmp !== ".") {
        res.push(tmp);
      }
    }

    return protocol + res.join("/");
  }

  window.UE = {
    getUEBasePath: getUEBasePath
  };
})();

var ueditor_config = /*#__PURE__*/Object.freeze({

});

/*!
 * UEditor
 * version: ueditor
 * build: Wed Aug 10 2016 11:06:16 GMT+0800 (CST)
 */(function(){// editor.js
UEDITOR_CONFIG=window.UEDITOR_CONFIG||{};var baidu=window.baidu||{};window.baidu=baidu;window.UE=baidu.editor=window.UE||{};UE.plugins={};UE.commands={};UE.instants={};UE.I18N={};UE._customizeUI={};UE.version="1.4.3";var dom=UE.dom={};// core/browser.js
/**
     * 浏览器判断模块
     * @file
     * @module UE.browser
     * @since 1.2.6.1
     */ /**
     * 提供浏览器检测的模块
     * @unfile
     * @module UE.browser
     */var browser=UE.browser=function(){var agent=navigator.userAgent.toLowerCase(),opera=window.opera,browser={/**
                 * @property {boolean} ie 检测当前浏览器是否为IE
                 * @example
                 * ```javascript
                 * if ( UE.browser.ie ) {
                 *     console.log( '当前浏览器是IE' );
                 * }
                 * ```
                 */ie:/(msie\s|trident.*rv:)([\w.]+)/.test(agent),/**
                 * @property {boolean} opera 检测当前浏览器是否为Opera
                 * @example
                 * ```javascript
                 * if ( UE.browser.opera ) {
                 *     console.log( '当前浏览器是Opera' );
                 * }
                 * ```
                 */opera:!!opera&&opera.version,/**
                 * @property {boolean} webkit 检测当前浏览器是否是webkit内核的浏览器
                 * @example
                 * ```javascript
                 * if ( UE.browser.webkit ) {
                 *     console.log( '当前浏览器是webkit内核浏览器' );
                 * }
                 * ```
                 */webkit:agent.indexOf(' applewebkit/')>-1,/**
                 * @property {boolean} mac 检测当前浏览器是否是运行在mac平台下
                 * @example
                 * ```javascript
                 * if ( UE.browser.mac ) {
                 *     console.log( '当前浏览器运行在mac平台下' );
                 * }
                 * ```
                 */mac:agent.indexOf('macintosh')>-1,/**
                 * @property {boolean} quirks 检测当前浏览器是否处于“怪异模式”下
                 * @example
                 * ```javascript
                 * if ( UE.browser.quirks ) {
                 *     console.log( '当前浏览器运行处于“怪异模式”' );
                 * }
                 * ```
                 */quirks:document.compatMode=='BackCompat'};/**
         * @property {boolean} gecko 检测当前浏览器内核是否是gecko内核
         * @example
         * ```javascript
         * if ( UE.browser.gecko ) {
         *     console.log( '当前浏览器内核是gecko内核' );
         * }
         * ```
         */browser.gecko=navigator.product=='Gecko'&&!browser.webkit&&!browser.opera&&!browser.ie;var version=0;// Internet Explorer 6.0+
if(browser.ie){var v1=agent.match(/(?:msie\s([\w.]+))/);var v2=agent.match(/(?:trident.*rv:([\w.]+))/);if(v1&&v2&&v1[1]&&v2[1]){version=Math.max(v1[1]*1,v2[1]*1);}else if(v1&&v1[1]){version=v1[1]*1;}else if(v2&&v2[1]){version=v2[1]*1;}else{version=0;}browser.ie11Compat=document.documentMode==11;/**
             * @property { boolean } ie9Compat 检测浏览器模式是否为 IE9 兼容模式
             * @warning 如果浏览器不是IE， 则该值为undefined
             * @example
             * ```javascript
             * if ( UE.browser.ie9Compat ) {
             *     console.log( '当前浏览器运行在IE9兼容模式下' );
             * }
             * ```
             */browser.ie9Compat=document.documentMode==9;/**
             * @property { boolean } ie8 检测浏览器是否是IE8浏览器
             * @warning 如果浏览器不是IE， 则该值为undefined
             * @example
             * ```javascript
             * if ( UE.browser.ie8 ) {
             *     console.log( '当前浏览器是IE8浏览器' );
             * }
             * ```
             */browser.ie8=!!document.documentMode;/**
             * @property { boolean } ie8Compat 检测浏览器模式是否为 IE8 兼容模式
             * @warning 如果浏览器不是IE， 则该值为undefined
             * @example
             * ```javascript
             * if ( UE.browser.ie8Compat ) {
             *     console.log( '当前浏览器运行在IE8兼容模式下' );
             * }
             * ```
             */browser.ie8Compat=document.documentMode==8;/**
             * @property { boolean } ie7Compat 检测浏览器模式是否为 IE7 兼容模式
             * @warning 如果浏览器不是IE， 则该值为undefined
             * @example
             * ```javascript
             * if ( UE.browser.ie7Compat ) {
             *     console.log( '当前浏览器运行在IE7兼容模式下' );
             * }
             * ```
             */browser.ie7Compat=version==7&&!document.documentMode||document.documentMode==7;/**
             * @property { boolean } ie6Compat 检测浏览器模式是否为 IE6 模式 或者怪异模式
             * @warning 如果浏览器不是IE， 则该值为undefined
             * @example
             * ```javascript
             * if ( UE.browser.ie6Compat ) {
             *     console.log( '当前浏览器运行在IE6模式或者怪异模式下' );
             * }
             * ```
             */browser.ie6Compat=version<7||browser.quirks;browser.ie9above=version>8;browser.ie9below=version<9;browser.ie11above=version>10;browser.ie11below=version<11;}// Gecko.
if(browser.gecko){var geckoRelease=agent.match(/rv:([\d\.]+)/);if(geckoRelease){geckoRelease=geckoRelease[1].split('.');version=geckoRelease[0]*10000+(geckoRelease[1]||0)*100+(geckoRelease[2]||0)*1;}}/**
         * @property { Number } chrome 检测当前浏览器是否为Chrome, 如果是，则返回Chrome的大版本号
         * @warning 如果浏览器不是chrome， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.chrome ) {
         *     console.log( '当前浏览器是Chrome' );
         * }
         * ```
         */if(/chrome\/(\d+\.\d)/i.test(agent)){browser.chrome=+RegExp['\x241'];}/**
         * @property { Number } safari 检测当前浏览器是否为Safari, 如果是，则返回Safari的大版本号
         * @warning 如果浏览器不是safari， 则该值为undefined
         * @example
         * ```javascript
         * if ( UE.browser.safari ) {
         *     console.log( '当前浏览器是Safari' );
         * }
         * ```
         */if(/(\d+\.\d)?(?:\.\d)?\s+safari\/?(\d+\.\d+)?/i.test(agent)&&!/chrome/i.test(agent)){browser.safari=+(RegExp['\x241']||RegExp['\x242']);}// Opera 9.50+
if(browser.opera)version=parseFloat(opera.version());// WebKit 522+ (Safari 3+)
if(browser.webkit)version=parseFloat(agent.match(/ applewebkit\/(\d+)/)[1]);/**
         * @property { Number } version 检测当前浏览器版本号
         * @remind
         * <ul>
         *     <li>IE系列返回值为5,6,7,8,9,10等</li>
         *     <li>gecko系列会返回10900，158900等</li>
         *     <li>webkit系列会返回其build号 (如 522等)</li>
         * </ul>
         * @example
         * ```javascript
         * console.log( '当前浏览器版本号是： ' + UE.browser.version );
         * ```
         */browser.version=version;/**
         * @property { boolean } isCompatible 检测当前浏览器是否能够与UEditor良好兼容
         * @example
         * ```javascript
         * if ( UE.browser.isCompatible ) {
         *     console.log( '浏览器与UEditor能够良好兼容' );
         * }
         * ```
         */browser.isCompatible=!browser.mobile&&(browser.ie&&version>=6||browser.gecko&&version>=10801||browser.opera&&version>=9.5||browser.air&&version>=1||browser.webkit&&version>=522||false);return browser;}();//快捷方式
var ie=browser.ie,opera=browser.opera;// core/utils.js
/**
     * 工具函数包
     * @file
     * @module UE.utils
     * @since 1.2.6.1
     */ /**
     * UEditor封装使用的静态工具函数
     * @module UE.utils
     * @unfile
     */var utils=UE.utils={/**
         * 用给定的迭代器遍历对象
         * @method each
         * @param { Object } obj 需要遍历的对象
         * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key
         * @example
         * ```javascript
         * var demoObj = {
         *     key1: 1,
         *     key2: 2
         * };
         *
         * //output: key1: 1, key2: 2
         * UE.utils.each( demoObj, funciton ( value, key ) {
         *
         *     console.log( key + ":" + value );
         *
         * } );
         * ```
         */ /**
         * 用给定的迭代器遍历数组或类数组对象
         * @method each
         * @param { Array } array 需要遍历的数组或者类数组
         * @param { Function } iterator 迭代器， 该方法接受两个参数， 第一个参数是当前所处理的value， 第二个参数是当前遍历对象的key
         * @example
         * ```javascript
         * var divs = document.getElmentByTagNames( "div" );
         *
         * //output: 0: DIV, 1: DIV ...
         * UE.utils.each( divs, funciton ( value, key ) {
         *
         *     console.log( key + ":" + value.tagName );
         *
         * } );
         * ```
         */each:function each(obj,iterator$$1,context){if(obj==null)return;if(obj.length===+obj.length){for(var i=0,l=obj.length;i<l;i++){if(iterator$$1.call(context,obj[i],i,obj)===false)return false;}}else{for(var key in obj){if(obj.hasOwnProperty(key)){if(iterator$$1.call(context,obj[key],key,obj)===false)return false;}}}},/**
         * 以给定对象作为原型创建一个新对象
         * @method makeInstance
         * @param { Object } protoObject 该对象将作为新创建对象的原型
         * @return { Object } 新的对象， 该对象的原型是给定的protoObject对象
         * @example
         * ```javascript
         *
         * var protoObject = { sayHello: function () { console.log('Hello UEditor!'); } };
         *
         * var newObject = UE.utils.makeInstance( protoObject );
         * //output: Hello UEditor!
         * newObject.sayHello();
         * ```
         */makeInstance:function makeInstance(obj){var noop=new Function();noop.prototype=obj;obj=new noop();noop.prototype=null;return obj;},/**
         * 将source对象中的属性扩展到target对象上
         * @method extend
         * @remind 该方法将强制把source对象上的属性复制到target对象上
         * @see UE.utils.extend(Object,Object,Boolean)
         * @param { Object } target 目标对象， 新的属性将附加到该对象上
         * @param { Object } source 源对象， 该对象的属性会被附加到target对象上
         * @return { Object } 返回target对象
         * @example
         * ```javascript
         *
         * var target = { name: 'target', sex: 1 },
         *      source = { name: 'source', age: 17 };
         *
         * UE.utils.extend( target, source );
         *
         * //output: { name: 'source', sex: 1, age: 17 }
         * console.log( target );
         *
         * ```
         */ /**
         * 将source对象中的属性扩展到target对象上， 根据指定的isKeepTarget值决定是否保留目标对象中与
         * 源对象属性名相同的属性值。
         * @method extend
         * @param { Object } target 目标对象， 新的属性将附加到该对象上
         * @param { Object } source 源对象， 该对象的属性会被附加到target对象上
         * @param { Boolean } isKeepTarget 是否保留目标对象中与源对象中属性名相同的属性
         * @return { Object } 返回target对象
         * @example
         * ```javascript
         *
         * var target = { name: 'target', sex: 1 },
         *      source = { name: 'source', age: 17 };
         *
         * UE.utils.extend( target, source, true );
         *
         * //output: { name: 'target', sex: 1, age: 17 }
         * console.log( target );
         *
         * ```
         */extend:function extend(t,s,b){if(s){for(var k in s){if(!b||!t.hasOwnProperty(k)){t[k]=s[k];}}}return t;},/**
         * 将给定的多个对象的属性复制到目标对象target上
         * @method extend2
         * @remind 该方法将强制把源对象上的属性复制到target对象上
         * @remind 该方法支持两个及以上的参数， 从第二个参数开始， 其属性都会被复制到第一个参数上。 如果遇到同名的属性，
         *          将会覆盖掉之前的值。
         * @param { Object } target 目标对象， 新的属性将附加到该对象上
         * @param { Object... } source 源对象， 支持多个对象， 该对象的属性会被附加到target对象上
         * @return { Object } 返回target对象
         * @example
         * ```javascript
         *
         * var target = {},
         *     source1 = { name: 'source', age: 17 },
         *     source2 = { title: 'dev' };
         *
         * UE.utils.extend2( target, source1, source2 );
         *
         * //output: { name: 'source', age: 17, title: 'dev' }
         * console.log( target );
         *
         * ```
         */extend2:function extend2(t){var a=arguments;for(var i=1;i<a.length;i++){var x=a[i];for(var k in x){if(!t.hasOwnProperty(k)){t[k]=x[k];}}}return t;},/**
         * 模拟继承机制， 使得subClass继承自superClass
         * @method inherits
         * @param { Object } subClass 子类对象
         * @param { Object } superClass 超类对象
         * @warning 该方法只能让subClass继承超类的原型， subClass对象自身的属性和方法不会被继承
         * @return { Object } 继承superClass后的子类对象
         * @example
         * ```javascript
         * function SuperClass(){
         *     this.name = "小李";
         * }
         *
         * SuperClass.prototype = {
         *     hello:function(str){
         *         console.log(this.name + str);
         *     }
         * }
         *
         * function SubClass(){
         *     this.name = "小张";
         * }
         *
         * UE.utils.inherits(SubClass,SuperClass);
         *
         * var sub = new SubClass();
         * //output: '小张早上好!
         * sub.hello("早上好!");
         * ```
         */inherits:function inherits(subClass,superClass){var oldP=subClass.prototype,newP=utils.makeInstance(superClass.prototype);utils.extend(newP,oldP,true);subClass.prototype=newP;return newP.constructor=subClass;},/**
         * 用指定的context对象作为函数fn的上下文
         * @method bind
         * @param { Function } fn 需要绑定上下文的函数对象
         * @param { Object } content 函数fn新的上下文对象
         * @return { Function } 一个新的函数， 该函数作为原始函数fn的代理， 将完成fn的上下文调换工作。
         * @example
         * ```javascript
         *
         * var name = 'window',
         *     newTest = null;
         *
         * function test () {
         *     console.log( this.name );
         * }
         *
         * newTest = UE.utils.bind( test, { name: 'object' } );
         *
         * //output: object
         * newTest();
         *
         * //output: window
         * test();
         *
         * ```
         */bind:function bind(fn,context){return function(){return fn.apply(context,arguments);};},/**
         * 创建延迟指定时间后执行的函数fn
         * @method defer
         * @param { Function } fn 需要延迟执行的函数对象
         * @param { int } delay 延迟的时间， 单位是毫秒
         * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，
         *           而不能保证刚好到达延迟时间时执行。
         * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果
         * @example
         * ```javascript
         * var start = 0;
         *
         * function test(){
         *     console.log( new Date() - start );
         * }
         *
         * var testDefer = UE.utils.defer( test, 1000 );
         * //
         * start = new Date();
         * //output: (大约在1000毫秒之后输出) 1000
         * testDefer();
         * ```
         */ /**
         * 创建延迟指定时间后执行的函数fn, 如果在延迟时间内再次执行该方法， 将会根据指定的exclusion的值，
         * 决定是否取消前一次函数的执行， 如果exclusion的值为true， 则取消执行，反之，将继续执行前一个方法。
         * @method defer
         * @param { Function } fn 需要延迟执行的函数对象
         * @param { int } delay 延迟的时间， 单位是毫秒
         * @param { Boolean } exclusion 如果在延迟时间内再次执行该函数，该值将决定是否取消执行前一次函数的执行，
         *                     值为true表示取消执行， 反之则将在执行前一次函数之后才执行本次函数调用。
         * @warning 该方法的时间控制是不精确的，仅仅只能保证函数的执行是在给定的时间之后，
         *           而不能保证刚好到达延迟时间时执行。
         * @return { Function } 目标函数fn的代理函数， 只有执行该函数才能起到延时效果
         * @example
         * ```javascript
         *
         * function test(){
         *     console.log(1);
         * }
         *
         * var testDefer = UE.utils.defer( test, 1000, true );
         *
         * //output: (两次调用仅有一次输出) 1
         * testDefer();
         * testDefer();
         * ```
         */defer:function defer(fn,delay,exclusion){var timerID;return function(){if(exclusion){clearTimeout(timerID);}timerID=setTimeout(fn,delay);};},/**
         * 获取元素item在数组array中首次出现的位置, 如果未找到item， 则返回-1
         * @method indexOf
         * @remind 该方法的匹配过程使用的是恒等“===”
         * @param { Array } array 需要查找的数组对象
         * @param { * } item 需要在目标数组中查找的值
         * @return { int } 返回item在目标数组array中首次出现的位置， 如果在数组中未找到item， 则返回-1
         * @example
         * ```javascript
         * var item = 1,
         *     arr = [ 3, 4, 6, 8, 1, 1, 2 ];
         *
         * //output: 4
         * console.log( UE.utils.indexOf( arr, item ) );
         * ```
         */ /**
         * 获取元素item数组array中首次出现的位置, 如果未找到item， 则返回-1。通过start的值可以指定搜索的起始位置。
         * @method indexOf
         * @remind 该方法的匹配过程使用的是恒等“===”
         * @param { Array } array 需要查找的数组对象
         * @param { * } item 需要在目标数组中查找的值
         * @param { int } start 搜索的起始位置
         * @return { int } 返回item在目标数组array中的start位置之后首次出现的位置， 如果在数组中未找到item， 则返回-1
         * @example
         * ```javascript
         * var item = 1,
         *     arr = [ 3, 4, 6, 8, 1, 2, 8, 3, 2, 1, 1, 4 ];
         *
         * //output: 9
         * console.log( UE.utils.indexOf( arr, item, 5 ) );
         * ```
         */indexOf:function indexOf(array,item,start){var index=-1;start=this.isNumber(start)?start:0;this.each(array,function(v,i){if(i>=start&&v===item){index=i;return false;}});return index;},/**
         * 移除数组array中所有的元素item
         * @method removeItem
         * @param { Array } array 要移除元素的目标数组
         * @param { * } item 将要被移除的元素
         * @remind 该方法的匹配过程使用的是恒等“===”
         * @example
         * ```javascript
         * var arr = [ 4, 5, 7, 1, 3, 4, 6 ];
         *
         * UE.utils.removeItem( arr, 4 );
         * //output: [ 5, 7, 1, 3, 6 ]
         * console.log( arr );
         *
         * ```
         */removeItem:function removeItem(array,item){for(var i=0,l=array.length;i<l;i++){if(array[i]===item){array.splice(i,1);i--;}}},/**
         * 删除字符串str的首尾空格
         * @method trim
         * @param { String } str 需要删除首尾空格的字符串
         * @return { String } 删除了首尾的空格后的字符串
         * @example
         * ```javascript
         *
         * var str = " UEdtior ";
         *
         * //output: 9
         * console.log( str.length );
         *
         * //output: 7
         * console.log( UE.utils.trim( " UEdtior " ).length );
         *
         * //output: 9
         * console.log( str.length );
         *
         *  ```
         */trim:function trim(str){return str.replace(/(^[ \t\n\r]+)|([ \t\n\r]+$)/g,'');},/**
         * 将字符串str以','分隔成数组后，将该数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1
         * @method listToMap
         * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。
         * @param { String } str 该字符串将被以','分割为数组， 然后进行转化
         * @return { Object } 转化之后的hash对象
         * @example
         * ```javascript
         *
         * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}
         * console.log( UE.utils.listToMap( 'UEdtior,Hello' ) );
         *
         * ```
         */ /**
         * 将字符串数组转换成哈希对象， 其生成的hash对象的key为数组中的元素， value为1
         * @method listToMap
         * @warning 该方法在生成的hash对象中，会为每一个key同时生成一个另一个全大写的key。
         * @param { Array } arr 字符串数组
         * @return { Object } 转化之后的hash对象
         * @example
         * ```javascript
         *
         * //output: Object {UEdtior: 1, UEDTIOR: 1, Hello: 1, HELLO: 1}
         * console.log( UE.utils.listToMap( [ 'UEdtior', 'Hello' ] ) );
         *
         * ```
         */listToMap:function listToMap(list){if(!list)return {};list=utils.isArray(list)?list:list.split(',');for(var i=0,ci,obj={};ci=list[i++];){obj[ci.toUpperCase()]=obj[ci]=1;}return obj;},/**
         * 将str中的html符号转义,将转义“'，&，<，"，>”五个字符
         * @method unhtml
         * @param { String } str 需要转义的字符串
         * @return { String } 转义后的字符串
         * @example
         * ```javascript
         * var html = '<body>&</body>';
         *
         * //output: &lt;body&gt;&amp;&lt;/body&gt;
         * console.log( UE.utils.unhtml( html ) );
         *
         * ```
         */unhtml:function unhtml(str,reg){return str?str.replace(reg||/[&<">'](?:(amp|lt|quot|gt|#39|nbsp|#\d+);)?/g,function(a,b){if(b){return a;}else{return {'<':'&lt;','&':'&amp;','"':'&quot;','>':'&gt;',"'":'&#39;'}[a];}}):'';},/**
         * 将url中的html字符转义， 仅转义  ', ", <, > 四个字符
         * @param  { String } str 需要转义的字符串
         * @param  { RegExp } reg 自定义的正则
         * @return { String }     转义后的字符串
         */unhtmlForUrl:function unhtmlForUrl(str,reg){return str?str.replace(reg||/[<">']/g,function(a){return {'<':'&lt;','&':'&amp;','"':'&quot;','>':'&gt;',"'":'&#39;'}[a];}):'';},/**
         * 将str中的转义字符还原成html字符
         * @see UE.utils.unhtml(String);
         * @method html
         * @param { String } str 需要逆转义的字符串
         * @return { String } 逆转义后的字符串
         * @example
         * ```javascript
         *
         * var str = '&lt;body&gt;&amp;&lt;/body&gt;';
         *
         * //output: <body>&</body>
         * console.log( UE.utils.html( str ) );
         *
         * ```
         */html:function html(str){return str?str.replace(/&((g|l|quo)t|amp|#39|nbsp);/g,function(m){return {'&lt;':'<','&amp;':'&','&quot;':'"','&gt;':'>','&#39;':"'",'&nbsp;':' '}[m];}):'';},/**
         * 将css样式转换为驼峰的形式
         * @method cssStyleToDomStyle
         * @param { String } cssName 需要转换的css样式名
         * @return { String } 转换成驼峰形式后的css样式名
         * @example
         * ```javascript
         *
         * var str = 'border-top';
         *
         * //output: borderTop
         * console.log( UE.utils.cssStyleToDomStyle( str ) );
         *
         * ```
         */cssStyleToDomStyle:function(){var test=document.createElement('div').style,cache={'float':test.cssFloat!=undefined?'cssFloat':test.styleFloat!=undefined?'styleFloat':'float'};return function(cssName){return cache[cssName]||(cache[cssName]=cssName.toLowerCase().replace(/-./g,function(match){return match.charAt(1).toUpperCase();}));};}(),/**
         * 动态加载文件到doc中
         * @method loadFile
         * @param { DomDocument } document 需要加载资源文件的文档对象
         * @param { Object } options 加载资源文件的属性集合， 取值请参考代码示例
         * @example
         * ```javascript
         *
         * UE.utils.loadFile( document, {
         *     src:"test.js",
         *     tag:"script",
         *     type:"text/javascript",
         *     defer:"defer"
         * } );
         *
         * ```
         */ /**
         * 动态加载文件到doc中，加载成功后执行的回调函数fn
         * @method loadFile
         * @param { DomDocument } document 需要加载资源文件的文档对象
         * @param { Object } options 加载资源文件的属性集合， 该集合支持的值是script标签和style标签支持的所有属性。
         * @param { Function } fn 资源文件加载成功之后执行的回调
         * @warning 对于在同一个文档中多次加载同一URL的文件， 该方法会在第一次加载之后缓存该请求，
         *           在此之后的所有同一URL的请求， 将会直接触发回调。
         * @example
         * ```javascript
         *
         * UE.utils.loadFile( document, {
         *     src:"test.js",
         *     tag:"script",
         *     type:"text/javascript",
         *     defer:"defer"
         * }, function () {
         *     console.log('加载成功');
         * } );
         *
         * ```
         */loadFile:function(){var tmpList=[];function getItem(doc,obj){try{for(var i=0,ci;ci=tmpList[i++];){if(ci.doc===doc&&ci.url==(obj.src||obj.href)){return ci;}}}catch(e){return null;}}return function(doc,obj,fn){var item=getItem(doc,obj);if(item){if(item.ready){fn&&fn();}else{item.funs.push(fn);}return;}tmpList.push({doc:doc,url:obj.src||obj.href,funs:[fn]});if(!doc.body){var html=[];for(var p in obj){if(p=='tag')continue;html.push(p+'="'+obj[p]+'"');}doc.write('<'+obj.tag+' '+html.join(' ')+' ></'+obj.tag+'>');return;}if(obj.id&&doc.getElementById(obj.id)){return;}var element=doc.createElement(obj.tag);delete obj.tag;for(var p in obj){element.setAttribute(p,obj[p]);}element.onload=element.onreadystatechange=function(){if(!this.readyState||/loaded|complete/.test(this.readyState)){item=getItem(doc,obj);if(item.funs.length>0){item.ready=1;for(var fi;fi=item.funs.pop();){fi();}}element.onload=element.onreadystatechange=null;}};element.onerror=function(){throw Error('The load '+(obj.href||obj.src)+' fails,check the url settings of file ueditor.config.js ');};doc.getElementsByTagName("head")[0].appendChild(element);};}(),/**
         * 判断obj对象是否为空
         * @method isEmptyObject
         * @param { * } obj 需要判断的对象
         * @remind 如果判断的对象是NULL， 将直接返回true， 如果是数组且为空， 返回true， 如果是字符串， 且字符串为空，
         *          返回true， 如果是普通对象， 且该对象没有任何实例属性， 返回true
         * @return { Boolean } 对象是否为空
         * @example
         * ```javascript
         *
         * //output: true
         * console.log( UE.utils.isEmptyObject( {} ) );
         *
         * //output: true
         * console.log( UE.utils.isEmptyObject( [] ) );
         *
         * //output: true
         * console.log( UE.utils.isEmptyObject( "" ) );
         *
         * //output: false
         * console.log( UE.utils.isEmptyObject( { key: 1 } ) );
         *
         * //output: false
         * console.log( UE.utils.isEmptyObject( [1] ) );
         *
         * //output: false
         * console.log( UE.utils.isEmptyObject( "1" ) );
         *
         * ```
         */isEmptyObject:function isEmptyObject(obj){if(obj==null)return true;if(this.isArray(obj)||this.isString(obj))return obj.length===0;for(var key in obj){if(obj.hasOwnProperty(key))return false;}return true;},/**
         * 把rgb格式的颜色值转换成16进制格式
         * @method fixColor
         * @param { String } rgb格式的颜色值
         * @param { String }
         * @example
         * rgb(255,255,255)  => "#ffffff"
         */fixColor:function fixColor(name,value){if(/color/i.test(name)&&/rgba?/.test(value)){var array=value.split(",");if(array.length>3)return "";value="#";for(var i=0,color;color=array[i++];){color=parseInt(color.replace(/[^\d]/gi,''),10).toString(16);value+=color.length==1?"0"+color:color;}value=value.toUpperCase();}return value;},/**
         * 只针对border,padding,margin做了处理，因为性能问题
         * @public
         * @function
         * @param {String}    val style字符串
         */optCss:function optCss(val){var padding,margin;val=val.replace(/(padding|margin|border)\-([^:]+):([^;]+);?/gi,function(str,key,name,val){if(val.split(' ').length==1){switch(key){case'padding':!padding&&(padding={});padding[name]=val;return '';case'margin':!margin&&(margin={});margin[name]=val;return '';case'border':return val=='initial'?'':str;}}return str;});function opt(obj,name){if(!obj){return '';}var t=obj.top,b=obj.bottom,l=obj.left,r=obj.right,val='';if(!t||!l||!b||!r){for(var p in obj){val+=';'+name+'-'+p+':'+obj[p]+';';}}else{val+=';'+name+':'+(t==b&&b==l&&l==r?t:t==b&&l==r?t+' '+l:l==r?t+' '+l+' '+b:t+' '+r+' '+b+' '+l)+';';}return val;}val+=opt(padding,'padding')+opt(margin,'margin');return val.replace(/^[ \n\r\t;]*|[ \n\r\t]*$/,'').replace(/;([ \n\r\t]+)|\1;/g,';').replace(/(&((l|g)t|quot|#39))?;{2,}/g,function(a,b){return b?b+";;":';';});},/**
         * 克隆对象
         * @method clone
         * @param { Object } source 源对象
         * @return { Object } source的一个副本
         */ /**
         * 深度克隆对象，将source的属性克隆到target对象， 会覆盖target重名的属性。
         * @method clone
         * @param { Object } source 源对象
         * @param { Object } target 目标对象
         * @return { Object } 附加了source对象所有属性的target对象
         */clone:function clone(source,target){var tmp;target=target||{};for(var i in source){if(source.hasOwnProperty(i)){tmp=source[i];if(_typeof(tmp)=='object'){target[i]=utils.isArray(tmp)?[]:{};utils.clone(source[i],target[i]);}else{target[i]=tmp;}}}return target;},/**
         * 把cm／pt为单位的值转换为px为单位的值
         * @method transUnitToPx
         * @param { String } 待转换的带单位的字符串
         * @return { String } 转换为px为计量单位的值的字符串
         * @example
         * ```javascript
         *
         * //output: 500px
         * console.log( UE.utils.transUnitToPx( '20cm' ) );
         *
         * //output: 27px
         * console.log( UE.utils.transUnitToPx( '20pt' ) );
         *
         * ```
         */transUnitToPx:function transUnitToPx(val){if(!/(pt|cm)/.test(val)){return val;}var unit;val.replace(/([\d.]+)(\w+)/,function(str,v,u){val=v;unit=u;});switch(unit){case'cm':val=parseFloat(val)*25;break;case'pt':val=Math.round(parseFloat(val)*96/72);}return val+(val?'px':'');},/**
         * 在dom树ready之后执行给定的回调函数
         * @method domReady
         * @remind 如果在执行该方法的时候， dom树已经ready， 那么回调函数将立刻执行
         * @param { Function } fn dom树ready之后的回调函数
         * @example
         * ```javascript
         *
         * UE.utils.domReady( function () {
         *
         *     console.log('123');
         *
         * } );
         *
         * ```
         */domReady:function(){var fnArr=[];function doReady(doc){//确保onready只执行一次
doc.isReady=true;for(var ci;ci=fnArr.pop();ci()){}}return function(onready,win){win=win||window;var doc=win.document;onready&&fnArr.push(onready);if(doc.readyState==="complete"){doReady(doc);}else{doc.isReady&&doReady(doc);if(browser.ie&&browser.version!=11){(function(){if(doc.isReady)return;try{doc.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}doReady(doc);})();win.attachEvent('onload',function(){doReady(doc);});}else{doc.addEventListener("DOMContentLoaded",function(){doc.removeEventListener("DOMContentLoaded",arguments.callee,false);doReady(doc);},false);win.addEventListener('load',function(){doReady(doc);},false);}}};}(),/**
         * 动态添加css样式
         * @method cssRule
         * @param { String } 节点名称
         * @grammar UE.utils.cssRule('添加的样式的节点名称',['样式'，'放到哪个document上'])
         * @grammar UE.utils.cssRule('body','body{background:#ccc}') => null  //给body添加背景颜色
         * @grammar UE.utils.cssRule('body') =>样式的字符串  //取得key值为body的样式的内容,如果没有找到key值先关的样式将返回空，例如刚才那个背景颜色，将返回 body{background:#ccc}
         * @grammar UE.utils.cssRule('body',document) => 返回指定key的样式，并且指定是哪个document
         * @grammar UE.utils.cssRule('body','') =>null //清空给定的key值的背景颜色
         */cssRule:browser.ie&&browser.version!=11?function(key,style,doc){var indexList,index;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式
doc=style&&style.nodeType&&style.nodeType==9?style:doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];if(index!==undefined){return doc.styleSheets[index].cssText;}return undefined;}doc=doc||document;indexList=doc.indexList||(doc.indexList={});index=indexList[key];//清除样式
if(style===''){if(index!==undefined){doc.styleSheets[index].cssText='';delete indexList[key];return true;}return false;}//添加样式
if(index!==undefined){sheetStyle=doc.styleSheets[index];}else{sheetStyle=doc.createStyleSheet('',index=doc.styleSheets.length);indexList[key]=index;}sheetStyle.cssText=style;}:function(key,style,doc){var node;if(style===undefined||style&&style.nodeType&&style.nodeType==9){//获取样式
doc=style&&style.nodeType&&style.nodeType==9?style:doc||document;node=doc.getElementById(key);return node?node.innerHTML:undefined;}doc=doc||document;node=doc.getElementById(key);//清除样式
if(style===''){if(node){node.parentNode.removeChild(node);return true;}return false;}//添加样式
if(node){node.innerHTML=style;}else{node=doc.createElement('style');node.id=key;node.innerHTML=style;doc.getElementsByTagName('head')[0].appendChild(node);}},sort:function sort(array,compareFn){compareFn=compareFn||function(item1,item2){return item1.localeCompare(item2);};for(var i=0,len=array.length;i<len;i++){for(var j=i,length=array.length;j<length;j++){if(compareFn(array[i],array[j])>0){var t=array[i];array[i]=array[j];array[j]=t;}}}return array;},serializeParam:function serializeParam(json){var strArr=[];for(var i in json){//忽略默认的几个参数
if(i=="method"||i=="timeout"||i=="async")continue;//传递过来的对象和函数不在提交之列
if(!(_typeof(json[i]).toLowerCase()=="function"||_typeof(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容
for(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");},formatUrl:function formatUrl(url){var u=url.replace(/&&/g,'&');u=u.replace(/\?&/g,'?');u=u.replace(/&$/g,'');u=u.replace(/&#/g,'#');u=u.replace(/&+/g,'&');return u;},isCrossDomainUrl:function isCrossDomainUrl(url){var a=document.createElement('a');a.href=url;if(browser.ie){a.href=a.href;}return !(a.protocol==location.protocol&&a.hostname==location.hostname&&(a.port==location.port||a.port=='80'&&location.port==''||a.port==''&&location.port=='80'));},clearEmptyAttrs:function clearEmptyAttrs(obj){for(var p in obj){if(obj[p]===''){delete obj[p];}}return obj;},str2json:function str2json(s){if(!utils.isString(s))return null;if(window.JSON){return JSON.parse(s);}else{return new Function("return "+utils.trim(s||''))();}},json2str:function(){if(window.JSON){return JSON.stringify;}else{var encodeString=function encodeString(source){if(/["\\\x00-\x1f]/.test(source)){source=source.replace(/["\\\x00-\x1f]/g,function(match){var c=escapeMap[match];if(c){return c;}c=match.charCodeAt();return "\\u00"+Math.floor(c/16).toString(16)+(c%16).toString(16);});}return '"'+source+'"';};var encodeArray=function encodeArray(source){var result=["["],l=source.length,preComma,i,item;for(i=0;i<l;i++){item=source[i];switch(_typeof(item)){case"undefined":case"function":case"unknown":break;default:if(preComma){result.push(',');}result.push(utils.json2str(item));preComma=1;}}result.push("]");return result.join("");};var pad=function pad(source){return source<10?'0'+source:source;};var encodeDate=function encodeDate(source){return '"'+source.getFullYear()+"-"+pad(source.getMonth()+1)+"-"+pad(source.getDate())+"T"+pad(source.getHours())+":"+pad(source.getMinutes())+":"+pad(source.getSeconds())+'"';};var escapeMap={"\b":'\\b',"\t":'\\t',"\n":'\\n',"\f":'\\f',"\r":'\\r','"':'\\"',"\\":'\\\\'};return function(value){switch(_typeof(value)){case'undefined':return 'undefined';case'number':return isFinite(value)?String(value):"null";case'string':return encodeString(value);case'boolean':return String(value);default:if(value===null){return 'null';}else if(utils.isArray(value)){return encodeArray(value);}else if(utils.isDate(value)){return encodeDate(value);}else{var result=['{'],encode=utils.json2str,preComma,item;for(var key in value){if(Object.prototype.hasOwnProperty.call(value,key)){item=value[key];switch(_typeof(item)){case'undefined':case'unknown':case'function':break;default:if(preComma){result.push(',');}preComma=1;result.push(encode(key)+':'+encode(item));}}}result.push('}');return result.join('');}}};}}()};/**
     * 判断给定的对象是否是字符串
     * @method isString
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是字符串
     */ /**
     * 判断给定的对象是否是数组
     * @method isArray
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是数组
     */ /**
     * 判断给定的对象是否是一个Function
     * @method isFunction
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是Function
     */ /**
     * 判断给定的对象是否是Number
     * @method isNumber
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是Number
     */ /**
     * 判断给定的对象是否是一个正则表达式
     * @method isRegExp
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是正则表达式
     */ /**
     * 判断给定的对象是否是一个普通对象
     * @method isObject
     * @param { * } object 需要判断的对象
     * @return { Boolean } 给定的对象是否是普通对象
     */utils.each(['String','Function','Array','Number','RegExp','Object','Date'],function(v){UE.utils['is'+v]=function(obj){return Object.prototype.toString.apply(obj)=='[object '+v+']';};});// core/EventBase.js
/**
     * UE采用的事件基类
     * @file
     * @module UE
     * @class EventBase
     * @since 1.2.6.1
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @unfile
     * @module UE
     */ /**
     * UE采用的事件基类，继承此类的对应类将获取addListener,removeListener,fireEvent方法。
     * 在UE中，Editor以及所有ui实例都继承了该类，故可以在对应的ui对象以及editor对象上使用上述方法。
     * @unfile
     * @module UE
     * @class EventBase
     */ /**
     * 通过此构造器，子类可以继承EventBase获取事件监听的方法
     * @constructor
     * @example
     * ```javascript
     * UE.EventBase.call(editor);
     * ```
     */var EventBase=UE.EventBase=function(){};EventBase.prototype={/**
         * 注册事件监听器
         * @method addListener
         * @param { String } types 监听的事件名称，同时监听多个事件使用空格分隔
         * @param { Function } fn 监听的事件被触发时，会执行该回调函数
         * @waining 事件被触发时，监听的函数假如返回的值恒等于true，回调函数的队列中后面的函数将不执行
         * @example
         * ```javascript
         * editor.addListener('selectionchange',function(){
         *      console.log("选区已经变化！");
         * })
         * editor.addListener('beforegetcontent aftergetcontent',function(type){
         *         if(type == 'beforegetcontent'){
         *             //do something
         *         }else{
         *             //do something
         *         }
         *         console.log(this.getContent) // this是注册的事件的编辑器实例
         * })
         * ```
         * @see UE.EventBase:fireEvent(String)
         */addListener:function addListener(types,listener){types=utils.trim(types).split(/\s+/);for(var i=0,ti;ti=types[i++];){getListener(this,ti,true).push(listener);}},on:function on(types,listener){return this.addListener(types,listener);},off:function off(types,listener){return this.removeListener(types,listener);},trigger:function trigger(){return this.fireEvent.apply(this,arguments);},/**
         * 移除事件监听器
         * @method removeListener
         * @param { String } types 移除的事件名称，同时移除多个事件使用空格分隔
         * @param { Function } fn 移除监听事件的函数引用
         * @example
         * ```javascript
         * //changeCallback为方法体
         * editor.removeListener("selectionchange",changeCallback);
         * ```
         */removeListener:function removeListener(types,listener){types=utils.trim(types).split(/\s+/);for(var i=0,ti;ti=types[i++];){utils.removeItem(getListener(this,ti)||[],listener);}},/**
         * 触发事件
         * @method fireEvent
         * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔
         * @remind 该方法会触发addListener
         * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值
         * @example
         * ```javascript
         * editor.fireEvent("selectionchange");
         * ```
         */ /**
         * 触发事件
         * @method fireEvent
         * @param { String } types 触发的事件名称，同时触发多个事件使用空格分隔
         * @param { *... } options 可选参数，可以传入一个或多个参数，会传给事件触发的回调函数
         * @return { * } 返回触发事件的队列中，最后执行的回调函数的返回值
         * @example
         * ```javascript
         *
         * editor.addListener( "selectionchange", function ( type, arg1, arg2 ) {
         *
         *     console.log( arg1 + " " + arg2 );
         *
         * } );
         *
         * //触发selectionchange事件， 会执行上面的事件监听器
         * //output: Hello World
         * editor.fireEvent("selectionchange", "Hello", "World");
         * ```
         */fireEvent:function fireEvent(){var types=arguments[0];types=utils.trim(types).split(' ');for(var i=0,ti;ti=types[i++];){var listeners=getListener(this,ti),r,t,k;if(listeners){k=listeners.length;while(k--){if(!listeners[k])continue;t=listeners[k].apply(this,arguments);if(t===true){return t;}if(t!==undefined){r=t;}}}if(t=this['on'+ti.toLowerCase()]){r=t.apply(this,arguments);}}return r;}};/**
     * 获得对象所拥有监听类型的所有监听器
     * @unfile
     * @module UE
     * @since 1.2.6.1
     * @method getListener
     * @public
     * @param { Object } obj  查询监听器的对象
     * @param { String } type 事件类型
     * @param { Boolean } force  为true且当前所有type类型的侦听器不存在时，创建一个空监听器数组
     * @return { Array } 监听器数组
     */function getListener(obj,type,force){var allListeners;type=type.toLowerCase();return (allListeners=obj.__allListeners||force&&(obj.__allListeners={}))&&(allListeners[type]||force&&(allListeners[type]=[]));}// core/dtd.js
///import editor.js
///import core/dom/dom.js
///import core/utils.js
/**
     * dtd html语义化的体现类
     * @constructor
     * @namespace dtd
     */var dtd=dom.dtd=function(){function _(s){for(var k in s){s[k.toUpperCase()]=s[k];}return s;}var X=utils.extend2;var A=_({isindex:1,fieldset:1}),B=_({input:1,button:1,select:1,textarea:1,label:1}),C=X(_({a:1}),B),D=X({iframe:1},C),E=_({hr:1,ul:1,menu:1,div:1,blockquote:1,noscript:1,table:1,center:1,address:1,dir:1,pre:1,h5:1,dl:1,h4:1,noframes:1,h6:1,ol:1,h1:1,h3:1,h2:1}),F=_({ins:1,del:1,script:1,style:1}),G=X(_({b:1,acronym:1,bdo:1,'var':1,'#':1,abbr:1,code:1,br:1,i:1,cite:1,kbd:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,dfn:1,span:1}),F),H=X(_({sub:1,img:1,embed:1,object:1,sup:1,basefont:1,map:1,applet:1,font:1,big:1,small:1}),G),I=X(_({p:1}),H),J=X(_({iframe:1}),H,B),K=_({img:1,embed:1,noscript:1,br:1,kbd:1,center:1,button:1,basefont:1,h5:1,h4:1,samp:1,h6:1,ol:1,h1:1,h3:1,h2:1,form:1,font:1,'#':1,select:1,menu:1,ins:1,abbr:1,label:1,code:1,table:1,script:1,cite:1,input:1,iframe:1,strong:1,textarea:1,noframes:1,big:1,small:1,span:1,hr:1,sub:1,bdo:1,'var':1,div:1,object:1,sup:1,strike:1,dir:1,map:1,dl:1,applet:1,del:1,isindex:1,fieldset:1,ul:1,b:1,acronym:1,a:1,blockquote:1,i:1,u:1,s:1,tt:1,address:1,q:1,pre:1,p:1,em:1,dfn:1}),L=X(_({a:0}),J),//a不能被切开，所以把他
M=_({tr:1}),N=_({'#':1}),O=X(_({param:1}),K),P=X(_({form:1}),A,D,E,I),Q=_({li:1,ol:1,ul:1}),R=_({style:1,script:1}),S=_({base:1,link:1,meta:1,title:1}),T=X(S,R),U=_({head:1,body:1}),V=_({html:1});var block=_({address:1,blockquote:1,center:1,dir:1,div:1,dl:1,fieldset:1,form:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,hr:1,isindex:1,menu:1,noframes:1,ol:1,p:1,pre:1,table:1,ul:1}),empty=_({area:1,base:1,basefont:1,br:1,col:1,command:1,dialog:1,embed:1,hr:1,img:1,input:1,isindex:1,keygen:1,link:1,meta:1,param:1,source:1,track:1,wbr:1});return _({// $ 表示自定的属性
// body外的元素列表.
$nonBodyContent:X(V,U,S),//块结构元素列表
$block:block,//内联元素列表
$inline:L,$inlineWithA:X(_({a:1}),L),$body:X(_({script:1,style:1}),block),$cdata:_({script:1,style:1}),//自闭和元素
$empty:empty,//不是自闭合，但不能让range选中里边
$nonChild:_({iframe:1,textarea:1}),//列表元素列表
$listItem:_({dd:1,dt:1,li:1}),//列表根元素列表
$list:_({ul:1,ol:1,dl:1}),//不能认为是空的元素
$isNotEmpty:_({table:1,ul:1,ol:1,dl:1,iframe:1,area:1,base:1,col:1,hr:1,img:1,embed:1,input:1,link:1,meta:1,param:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1}),//如果没有子节点就可以删除的元素列表，像span,a
$removeEmpty:_({a:1,abbr:1,acronym:1,address:1,b:1,bdo:1,big:1,cite:1,code:1,del:1,dfn:1,em:1,font:1,i:1,ins:1,label:1,kbd:1,q:1,s:1,samp:1,small:1,span:1,strike:1,strong:1,sub:1,sup:1,tt:1,u:1,'var':1}),$removeEmptyBlock:_({'p':1,'div':1}),//在table元素里的元素列表
$tableContent:_({caption:1,col:1,colgroup:1,tbody:1,td:1,tfoot:1,th:1,thead:1,tr:1,table:1}),//不转换的标签
$notTransContent:_({pre:1,script:1,style:1,textarea:1}),html:U,head:T,style:N,script:N,body:P,base:{},link:{},meta:{},title:N,col:{},tr:_({td:1,th:1}),img:{},embed:{},colgroup:_({thead:1,col:1,tbody:1,tr:1,tfoot:1}),noscript:P,td:P,br:{},th:P,center:P,kbd:L,button:X(I,E),basefont:{},h5:L,h4:L,samp:L,h6:L,ol:Q,h1:L,h3:L,option:N,h2:L,form:X(A,D,E,I),select:_({optgroup:1,option:1}),font:L,ins:L,menu:Q,abbr:L,label:L,table:_({thead:1,col:1,tbody:1,tr:1,colgroup:1,caption:1,tfoot:1}),code:L,tfoot:M,cite:L,li:P,input:{},iframe:P,strong:L,textarea:N,noframes:P,big:L,small:L,//trace:
span:_({'#':1,br:1,b:1,strong:1,u:1,i:1,em:1,sub:1,sup:1,strike:1,span:1}),hr:L,dt:L,sub:L,optgroup:_({option:1}),param:{},bdo:L,'var':L,div:P,object:O,sup:L,dd:P,strike:L,area:{},dir:Q,map:X(_({area:1,form:1,p:1}),A,F,E),applet:O,dl:_({dt:1,dd:1}),del:L,isindex:{},fieldset:X(_({legend:1}),K),thead:M,ul:Q,acronym:L,b:L,a:X(_({a:1}),J),blockquote:X(_({td:1,tr:1,tbody:1,li:1}),P),caption:L,i:L,u:L,tbody:M,s:L,address:X(D,I),tt:L,legend:L,q:L,pre:X(G,C),p:X(_({'a':1}),L),em:L,dfn:L});}();// core/domUtils.js
/**
     * Dom操作工具包
     * @file
     * @module UE.dom.domUtils
     * @since 1.2.6.1
     */ /**
     * Dom操作工具包
     * @unfile
     * @module UE.dom.domUtils
     */function getDomNode(node,start,ltr,startFromChild,fn,guard){var tmpNode=startFromChild&&node[start],parent;!tmpNode&&(tmpNode=node[ltr]);while(!tmpNode&&(parent=(parent||node).parentNode)){if(parent.tagName=='BODY'||guard&&!guard(parent)){return null;}tmpNode=parent[ltr];}if(tmpNode&&fn&&!fn(tmpNode)){return getDomNode(tmpNode,start,ltr,false,fn);}return tmpNode;}var attrFix=ie&&browser.version<9?{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder"}:{tabindex:"tabIndex",readonly:"readOnly"},styleBlock=utils.listToMap(['-webkit-box','-moz-box','block','list-item','table','table-row-group','table-header-group','table-footer-group','table-row','table-column-group','table-column','table-cell','table-caption']);var domUtils=dom.domUtils={//节点常量
NODE_ELEMENT:1,NODE_DOCUMENT:9,NODE_TEXT:3,NODE_COMMENT:8,NODE_DOCUMENT_FRAGMENT:11,//位置关系
POSITION_IDENTICAL:0,POSITION_DISCONNECTED:1,POSITION_FOLLOWING:2,POSITION_PRECEDING:4,POSITION_IS_CONTAINED:8,POSITION_CONTAINS:16,//ie6使用其他的会有一段空白出现
fillChar:ie&&browser.version=='6'?"\uFEFF":"\u200B",//-------------------------Node部分--------------------------------
keys:{/*Backspace*/8:1,/*Delete*/46:1,/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1,13:1/*enter*/},/**
         * 获取节点A相对于节点B的位置关系
         * @method getPosition
         * @param { Node } nodeA 需要查询位置关系的节点A
         * @param { Node } nodeB 需要查询位置关系的节点B
         * @return { Number } 节点A与节点B的关系
         * @example
         * ```javascript
         * //output: 20
         * var position = UE.dom.domUtils.getPosition( document.documentElement, document.body );
         *
         * switch ( position ) {
         *
         *      //0
         *      case UE.dom.domUtils.POSITION_IDENTICAL:
         *          console.log('元素相同');
         *          break;
         *      //1
         *      case UE.dom.domUtils.POSITION_DISCONNECTED:
         *          console.log('两个节点在不同的文档中');
         *          break;
         *      //2
         *      case UE.dom.domUtils.POSITION_FOLLOWING:
         *          console.log('节点A在节点B之后');
         *          break;
         *      //4
         *      case UE.dom.domUtils.POSITION_PRECEDING;
         *          console.log('节点A在节点B之前');
         *          break;
         *      //8
         *      case UE.dom.domUtils.POSITION_IS_CONTAINED:
         *          console.log('节点A被节点B包含');
         *          break;
         *      case 10:
         *          console.log('节点A被节点B包含且节点A在节点B之后');
         *          break;
         *      //16
         *      case UE.dom.domUtils.POSITION_CONTAINS:
         *          console.log('节点A包含节点B');
         *          break;
         *      case 20:
         *          console.log('节点A包含节点B且节点A在节点B之前');
         *          break;
         *
         * }
         * ```
         */getPosition:function getPosition(nodeA,nodeB){// 如果两个节点是同一个节点
if(nodeA===nodeB){// domUtils.POSITION_IDENTICAL
return 0;}var node,parentsA=[nodeA],parentsB=[nodeB];node=nodeA;while(node=node.parentNode){// 如果nodeB是nodeA的祖先节点
if(node===nodeB){// domUtils.POSITION_IS_CONTAINED + domUtils.POSITION_FOLLOWING
return 10;}parentsA.push(node);}node=nodeB;while(node=node.parentNode){// 如果nodeA是nodeB的祖先节点
if(node===nodeA){// domUtils.POSITION_CONTAINS + domUtils.POSITION_PRECEDING
return 20;}parentsB.push(node);}parentsA.reverse();parentsB.reverse();if(parentsA[0]!==parentsB[0]){// domUtils.POSITION_DISCONNECTED
return 1;}var i=-1;while(i++,parentsA[i]===parentsB[i]){}nodeA=parentsA[i];nodeB=parentsB[i];while(nodeA=nodeA.nextSibling){if(nodeA===nodeB){// domUtils.POSITION_PRECEDING
return 4;}}// domUtils.POSITION_FOLLOWING
return 2;},/**
         * 检测节点node在父节点中的索引位置
         * @method getNodeIndex
         * @param { Node } node 需要检测的节点对象
         * @return { Number } 该节点在父节点中的位置
         * @see UE.dom.domUtils.getNodeIndex(Node,Boolean)
         */ /**
         * 检测节点node在父节点中的索引位置， 根据给定的mergeTextNode参数决定是否要合并多个连续的文本节点为一个节点
         * @method getNodeIndex
         * @param { Node } node 需要检测的节点对象
         * @param { Boolean } mergeTextNode 是否合并多个连续的文本节点为一个节点
         * @return { Number } 该节点在父节点中的位置
         * @example
         * ```javascript
         *
         *      var node = document.createElement("div");
         *
         *      node.appendChild( document.createTextNode( "hello" ) );
         *      node.appendChild( document.createTextNode( "world" ) );
         *      node.appendChild( node = document.createElement( "div" ) );
         *
         *      //output: 2
         *      console.log( UE.dom.domUtils.getNodeIndex( node ) );
         *
         *      //output: 1
         *      console.log( UE.dom.domUtils.getNodeIndex( node, true ) );
         *
         * ```
         */getNodeIndex:function getNodeIndex(node,ignoreTextNode){var preNode=node,i=0;while(preNode=preNode.previousSibling){if(ignoreTextNode&&preNode.nodeType==3){if(preNode.nodeType!=preNode.nextSibling.nodeType){i++;}continue;}i++;}return i;},/**
         * 检测节点node是否在给定的document对象上
         * @method inDoc
         * @param { Node } node 需要检测的节点对象
         * @param { DomDocument } doc 需要检测的document对象
         * @return { Boolean } 该节点node是否在给定的document的dom树上
         * @example
         * ```javascript
         *
         * var node = document.createElement("div");
         *
         * //output: false
         * console.log( UE.do.domUtils.inDoc( node, document ) );
         *
         * document.body.appendChild( node );
         *
         * //output: true
         * console.log( UE.do.domUtils.inDoc( node, document ) );
         *
         * ```
         */inDoc:function inDoc(node,doc){return domUtils.getPosition(node,doc)==10;},/**
         * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，
         * 查找的起点是给定node节点的父节点。
         * @method findParent
         * @param { Node } node 需要查找的节点
         * @param { Function } filterFn 自定义的过滤方法。
         * @warning 查找的终点是到body节点为止
         * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该
         *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。
         * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL
         * @example
         * ```javascript
         * var filterNode = UE.dom.domUtils.findParent( document.body.firstChild, function ( node ) {
         *
         *     //由于查找的终点是body节点， 所以永远也不会匹配当前过滤器的条件， 即这里永远会返回false
         *     return node.tagName === "HTML";
         *
         * } );
         *
         * //output: true
         * console.log( filterNode === null );
         * ```
         */ /**
         * 根据给定的过滤规则filterFn， 查找符合该过滤规则的node节点的第一个祖先节点，
         * 如果includeSelf的值为true，则查找的起点是给定的节点node， 否则， 起点是node的父节点
         * @method findParent
         * @param { Node } node 需要查找的节点
         * @param { Function } filterFn 自定义的过滤方法。
         * @param { Boolean } includeSelf 查找过程是否包含自身
         * @warning 查找的终点是到body节点为止
         * @remind 自定义的过滤方法filterFn接受一个Node对象作为参数， 该对象代表当前执行检测的祖先节点。 如果该
         *          节点满足过滤条件， 则要求返回true， 这时将直接返回该节点作为findParent()的结果， 否则， 请返回false。
         * @remind 如果includeSelf为true， 则过滤器第一次执行时的参数会是节点本身。
         *          反之， 过滤器第一次执行时的参数将是该节点的父节点。
         * @return { Node | Null } 如果找到符合过滤条件的节点， 就返回该节点， 否则返回NULL
         * @example
         * ```html
         * <body>
         *
         *      <div id="test">
         *      </div>
         *
         *      <script type="text/javascript">
         *
         *          //output: DIV, BODY
         *          var filterNode = UE.dom.domUtils.findParent( document.getElementById( "test" ), function ( node ) {
         *
         *              console.log( node.tagName );
         *              return false;
         *
         *          }, true );
         *
         *      </script>
         * </body>
         * ```
         */findParent:function findParent(node,filterFn,includeSelf){if(node&&!domUtils.isBody(node)){node=includeSelf?node:node.parentNode;while(node){if(!filterFn||filterFn(node)||domUtils.isBody(node)){return filterFn&&!filterFn(node)&&domUtils.isBody(node)?null:node;}node=node.parentNode;}}return null;},/**
         * 查找node的节点名为tagName的第一个祖先节点， 查找的起点是node节点的父节点。
         * @method findParentByTagName
         * @param { Node } node 需要查找的节点对象
         * @param { Array } tagNames 需要查找的父节点的名称数组
         * @warning 查找的终点是到body节点为止
         * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL
         * @example
         * ```javascript
         * var node = UE.dom.domUtils.findParentByTagName( document.getElementsByTagName("div")[0], [ "BODY" ] );
         * //output: BODY
         * console.log( node.tagName );
         * ```
         */ /**
         * 查找node的节点名为tagName的祖先节点， 如果includeSelf的值为true，则查找的起点是给定的节点node，
         * 否则， 起点是node的父节点。
         * @method findParentByTagName
         * @param { Node } node 需要查找的节点对象
         * @param { Array } tagNames 需要查找的父节点的名称数组
         * @param { Boolean } includeSelf 查找过程是否包含node节点自身
         * @warning 查找的终点是到body节点为止
         * @return { Node | NULL } 如果找到符合条件的节点， 则返回该节点， 否则返回NULL
         * @example
         * ```javascript
         * var queryTarget = document.getElementsByTagName("div")[0];
         * var node = UE.dom.domUtils.findParentByTagName( queryTarget, [ "DIV" ], true );
         * //output: true
         * console.log( queryTarget === node );
         * ```
         */findParentByTagName:function findParentByTagName(node,tagNames,includeSelf,excludeFn){tagNames=utils.listToMap(utils.isArray(tagNames)?tagNames:[tagNames]);return domUtils.findParent(node,function(node){return tagNames[node.tagName]&&!(excludeFn&&excludeFn(node));},includeSelf);},/**
         * 查找节点node的祖先节点集合， 查找的起点是给定节点的父节点，结果集中不包含给定的节点。
         * @method findParents
         * @param { Node } node 需要查找的节点对象
         * @return { Array } 给定节点的祖先节点数组
         * @grammar UE.dom.domUtils.findParents(node)  => Array  //返回一个祖先节点数组集合，不包含自身
         * @grammar UE.dom.domUtils.findParents(node,includeSelf)  => Array  //返回一个祖先节点数组集合，includeSelf指定是否包含自身
         * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn)  => Array  //返回一个祖先节点数组集合，filterFn指定过滤条件，返回true的node将被选取
         * @grammar UE.dom.domUtils.findParents(node,includeSelf,filterFn,closerFirst)  => Array  //返回一个祖先节点数组集合，closerFirst为true的话，node的直接父亲节点是数组的第0个
         */ /**
         * 查找节点node的祖先节点集合， 如果includeSelf的值为true，
         * 则返回的结果集中允许出现当前给定的节点， 否则， 该节点不会出现在其结果集中。
         * @method findParents
         * @param { Node } node 需要查找的节点对象
         * @param { Boolean } includeSelf 查找的结果中是否允许包含当前查找的节点对象
         * @return { Array } 给定节点的祖先节点数组
         */findParents:function findParents(node,includeSelf,filterFn,closerFirst){var parents=includeSelf&&(filterFn&&filterFn(node)||!filterFn)?[node]:[];while(node=domUtils.findParent(node,filterFn)){parents.push(node);}return closerFirst?parents:parents.reverse();},/**
         * 在节点node后面插入新节点newNode
         * @method insertAfter
         * @param { Node } node 目标节点
         * @param { Node } newNode 新插入的节点， 该节点将置于目标节点之后
         * @return { Node } 新插入的节点
         */insertAfter:function insertAfter(node,newNode){return node.nextSibling?node.parentNode.insertBefore(newNode,node.nextSibling):node.parentNode.appendChild(newNode);},/**
         * 删除节点node及其下属的所有节点
         * @method remove
         * @param { Node } node 需要删除的节点对象
         * @return { Node } 返回刚删除的节点对象
         * @example
         * ```html
         * <div id="test">
         *     <div id="child">你好</div>
         * </div>
         * <script>
         *     UE.dom.domUtils.remove( document.body, false );
         *     //output: false
         *     console.log( document.getElementById( "child" ) !== null );
         * </script>
         * ```
         */ /**
         * 删除节点node，并根据keepChildren的值决定是否保留子节点
         * @method remove
         * @param { Node } node 需要删除的节点对象
         * @param { Boolean } keepChildren 是否需要保留子节点
         * @return { Node } 返回刚删除的节点对象
         * @example
         * ```html
         * <div id="test">
         *     <div id="child">你好</div>
         * </div>
         * <script>
         *     UE.dom.domUtils.remove( document.body, true );
         *     //output: true
         *     console.log( document.getElementById( "child" ) !== null );
         * </script>
         * ```
         */remove:function remove(node,keepChildren){var parent=node.parentNode,child;if(parent){if(keepChildren&&node.hasChildNodes()){while(child=node.firstChild){parent.insertBefore(child,node);}}parent.removeChild(node);}return node;},/**
         * 取得node节点的下一个兄弟节点， 如果该节点其后没有兄弟节点， 则递归查找其父节点之后的第一个兄弟节点，
         * 直到找到满足条件的节点或者递归到BODY节点之后才会结束。
         * @method getNextDomNode
         * @param { Node } node 需要获取其后的兄弟节点的节点对象
         * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL
         * @example
         * ```html
         *     <body>
         *      <div id="test">
         *          <span></span>
         *      </div>
         *      <i>xxx</i>
         * </body>
         * <script>
         *
         *     //output: i节点
         *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );
         *
         * </script>
         * ```
         * @example
         * ```html
         * <body>
         *      <div>
         *          <span></span>
         *          <i id="test">xxx</i>
         *      </div>
         *      <b>xxx</b>
         * </body>
         * <script>
         *
         *     //由于id为test的i节点之后没有兄弟节点， 则查找其父节点（div）后面的兄弟节点
         *     //output: b节点
         *     console.log( UE.dom.domUtils.getNextDomNode( document.getElementById( "test" ) ) );
         *
         * </script>
         * ```
         */ /**
         * 取得node节点的下一个兄弟节点， 如果startFromChild的值为ture，则先获取其子节点，
         * 如果有子节点则直接返回第一个子节点；如果没有子节点或者startFromChild的值为false，
         * 则执行<a href="#UE.dom.domUtils.getNextDomNode(Node)">getNextDomNode(Node node)</a>的查找过程。
         * @method getNextDomNode
         * @param { Node } node 需要获取其后的兄弟节点的节点对象
         * @param { Boolean } startFromChild 查找过程是否从其子节点开始
         * @return { Node | NULL } 如果找满足条件的节点， 则返回该节点， 否则返回NULL
         * @see UE.dom.domUtils.getNextDomNode(Node)
         */getNextDomNode:function getNextDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,'firstChild','nextSibling',startFromChild,filterFn,guard);},getPreDomNode:function getPreDomNode(node,startFromChild,filterFn,guard){return getDomNode(node,'lastChild','previousSibling',startFromChild,filterFn,guard);},/**
         * 检测节点node是否属是UEditor定义的bookmark节点
         * @method isBookmarkNode
         * @private
         * @param { Node } node 需要检测的节点对象
         * @return { Boolean } 是否是bookmark节点
         * @example
         * ```html
         * <span id="_baidu_bookmark_1"></span>
         * <script>
         *      var bookmarkNode = document.getElementById("_baidu_bookmark_1");
         *      //output: true
         *      console.log( UE.dom.domUtils.isBookmarkNode( bookmarkNode ) );
         * </script>
         * ```
         */isBookmarkNode:function isBookmarkNode(node){return node.nodeType==1&&node.id&&/^_baidu_bookmark_/i.test(node.id);},/**
         * 获取节点node所属的window对象
         * @method  getWindow
         * @param { Node } node 节点对象
         * @return { Window } 当前节点所属的window对象
         * @example
         * ```javascript
         * //output: true
         * console.log( UE.dom.domUtils.getWindow( document.body ) === window );
         * ```
         */getWindow:function getWindow(node){var doc=node.ownerDocument||node;return doc.defaultView||doc.parentWindow;},/**
         * 获取离nodeA与nodeB最近的公共的祖先节点
         * @method  getCommonAncestor
         * @param { Node } nodeA 第一个节点
         * @param { Node } nodeB 第二个节点
         * @remind 如果给定的两个节点是同一个节点， 将直接返回该节点。
         * @return { Node | NULL } 如果未找到公共节点， 返回NULL， 否则返回最近的公共祖先节点。
         * @example
         * ```javascript
         * var commonAncestor = UE.dom.domUtils.getCommonAncestor( document.body, document.body.firstChild );
         * //output: true
         * console.log( commonAncestor.tagName.toLowerCase() === 'body' );
         * ```
         */getCommonAncestor:function getCommonAncestor(nodeA,nodeB){if(nodeA===nodeB)return nodeA;var parentsA=[nodeA],parentsB=[nodeB],parent=nodeA,i=-1;while(parent=parent.parentNode){if(parent===nodeB){return parent;}parentsA.push(parent);}parent=nodeB;while(parent=parent.parentNode){if(parent===nodeA)return parent;parentsB.push(parent);}parentsA.reverse();parentsB.reverse();while(i++,parentsA[i]===parentsB[i]){}return i==0?null:parentsA[i-1];},/**
         * 清除node节点左右连续为空的兄弟inline节点
         * @method clearEmptySibling
         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
         * 则这些兄弟节点将被删除
         * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext)  //ignoreNext指定是否忽略右边空节点
         * @grammar UE.dom.domUtils.clearEmptySibling(node,ignoreNext,ignorePre)  //ignorePre指定是否忽略左边空节点
         * @example
         * ```html
         * <body>
         *     <div></div>
         *     <span id="test"></span>
         *     <i></i>
         *     <b></b>
         *     <em>xxx</em>
         *     <span></span>
         * </body>
         * <script>
         *
         *      UE.dom.domUtils.clearEmptySibling( document.getElementById( "test" ) );
         *
         *      //output: <div></div><span id="test"></span><em>xxx</em><span></span>
         *      console.log( document.body.innerHTML );
         *
         * </script>
         * ```
         */ /**
         * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，
         * 则忽略对右边兄弟节点的操作。
         * @method clearEmptySibling
         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
         * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作
         * 则这些兄弟节点将被删除
         * @see UE.dom.domUtils.clearEmptySibling(Node)
         */ /**
         * 清除node节点左右连续为空的兄弟inline节点， 如果ignoreNext的值为true，
         * 则忽略对右边兄弟节点的操作， 如果ignorePre的值为true，则忽略对左边兄弟节点的操作。
         * @method clearEmptySibling
         * @param { Node } node 执行的节点对象， 如果该节点的左右连续的兄弟节点是空的inline节点，
         * @param { Boolean } ignoreNext 是否忽略忽略对右边的兄弟节点的操作
         * @param { Boolean } ignorePre 是否忽略忽略对左边的兄弟节点的操作
         * 则这些兄弟节点将被删除
         * @see UE.dom.domUtils.clearEmptySibling(Node)
         */clearEmptySibling:function clearEmptySibling(node,ignoreNext,ignorePre){function clear(next,dir){var tmpNode;while(next&&!domUtils.isBookmarkNode(next)&&(domUtils.isEmptyInlineElement(next)//这里不能把空格算进来会吧空格干掉，出现文字间的空格丢掉了
||!new RegExp('[^\t\n\r'+domUtils.fillChar+']').test(next.nodeValue))){tmpNode=next[dir];domUtils.remove(next);next=tmpNode;}}!ignoreNext&&clear(node.nextSibling,'nextSibling');!ignorePre&&clear(node.previousSibling,'previousSibling');},/**
         * 将一个文本节点textNode拆分成两个文本节点，offset指定拆分位置
         * @method split
         * @param { Node } textNode 需要拆分的文本节点对象
         * @param { int } offset 需要拆分的位置， 位置计算从0开始
         * @return { Node } 拆分后形成的新节点
         * @example
         * ```html
         * <div id="test">abcdef</div>
         * <script>
         *      var newNode = UE.dom.domUtils.split( document.getElementById( "test" ).firstChild, 3 );
         *      //output: def
         *      console.log( newNode.nodeValue );
         * </script>
         * ```
         */split:function split(node,offset){var doc=node.ownerDocument;if(browser.ie&&offset==node.nodeValue.length){var next=doc.createTextNode('');return domUtils.insertAfter(node,next);}var retval=node.splitText(offset);//ie8下splitText不会跟新childNodes,我们手动触发他的更新
if(browser.ie8){var tmpNode=doc.createTextNode('');domUtils.insertAfter(retval,tmpNode);domUtils.remove(tmpNode);}return retval;},/**
         * 检测文本节点textNode是否为空节点（包括空格、换行、占位符等字符）
         * @method  isWhitespace
         * @param { Node } node 需要检测的节点对象
         * @return { Boolean } 检测的节点是否为空
         * @example
         * ```html
         * <div id="test">
         *
         * </div>
         * <script>
         *      //output: true
         *      console.log( UE.dom.domUtils.isWhitespace( document.getElementById("test").firstChild ) );
         * </script>
         * ```
         */isWhitespace:function isWhitespace(node){return !new RegExp('[^ \t\n\r'+domUtils.fillChar+']').test(node.nodeValue);},/**
         * 获取元素element相对于viewport的位置坐标
         * @method getXY
         * @param { Node } element 需要计算位置的节点对象
         * @return { Object } 返回形如{x:left,y:top}的一个key-value映射对象， 其中键x代表水平偏移距离，
         *                          y代表垂直偏移距离。
         *
         * @example
         * ```javascript
         * var location = UE.dom.domUtils.getXY( document.getElementById("test") );
         * //output: test的坐标为: 12, 24
         * console.log( 'test的坐标为： ', location.x, ',', location.y );
         * ```
         */getXY:function getXY(element){var x=0,y=0;while(element.offsetParent){y+=element.offsetTop;x+=element.offsetLeft;element=element.offsetParent;}return {'x':x,'y':y};},/**
         * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数
         * @method on
         * @param { Node } element 需要绑定事件的节点对象
         * @param { String } type 绑定的事件类型
         * @param { Function } handler 事件处理器
         * @example
         * ```javascript
         * UE.dom.domUtils.on(document.body,"click",function(e){
         *     //e为事件对象，this为被点击元素对戏那个
         * });
         * ```
         */ /**
         * 为元素element绑定原生DOM事件，type为事件类型，handler为处理函数
         * @method on
         * @param { Node } element 需要绑定事件的节点对象
         * @param { Array } type 绑定的事件类型数组
         * @param { Function } handler 事件处理器
         * @example
         * ```javascript
         * UE.dom.domUtils.on(document.body,["click","mousedown"],function(evt){
         *     //evt为事件对象，this为被点击元素对象
         * });
         * ```
         */on:function on(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.addEventListener){element.addEventListener(type,handler,false);}else{if(!handler._d){handler._d={els:[]};}var key=type+handler.toString(),index=utils.indexOf(handler._d.els,element);if(!handler._d[key]||index==-1){if(index==-1){handler._d.els.push(element);}if(!handler._d[key]){handler._d[key]=function(evt){return handler.call(evt.srcElement,evt||window.event);};}element.attachEvent('on'+type,handler._d[key]);}}}element=null;},/**
         * 解除DOM事件绑定
         * @method un
         * @param { Node } element 需要解除事件绑定的节点对象
         * @param { String } type 需要接触绑定的事件类型
         * @param { Function } handler 对应的事件处理器
         * @example
         * ```javascript
         * UE.dom.domUtils.un(document.body,"click",function(evt){
         *     //evt为事件对象，this为被点击元素对象
         * });
         * ```
         */ /**
         * 解除DOM事件绑定
         * @method un
         * @param { Node } element 需要解除事件绑定的节点对象
         * @param { Array } type 需要接触绑定的事件类型数组
         * @param { Function } handler 对应的事件处理器
         * @example
         * ```javascript
         * UE.dom.domUtils.un(document.body, ["click","mousedown"],function(evt){
         *     //evt为事件对象，this为被点击元素对象
         * });
         * ```
         */un:function un(element,type,handler){var types=utils.isArray(type)?type:utils.trim(type).split(/\s+/),k=types.length;if(k)while(k--){type=types[k];if(element.removeEventListener){element.removeEventListener(type,handler,false);}else{var key=type+handler.toString();try{element.detachEvent('on'+type,handler._d?handler._d[key]:handler);}catch(e){}if(handler._d&&handler._d[key]){var index=utils.indexOf(handler._d.els,element);if(index!=-1){handler._d.els.splice(index,1);}handler._d.els.length==0&&delete handler._d[key];}}}},/**
         * 比较节点nodeA与节点nodeB是否具有相同的标签名、属性名以及属性值
         * @method  isSameElement
         * @param { Node } nodeA 需要比较的节点
         * @param { Node } nodeB 需要比较的节点
         * @return { Boolean } 两个节点是否具有相同的标签名、属性名以及属性值
         * @example
         * ```html
         * <span style="font-size:12px">ssss</span>
         * <span style="font-size:12px">bbbbb</span>
         * <span style="font-size:13px">ssss</span>
         * <span style="font-size:14px">bbbbb</span>
         *
         * <script>
         *
         *     var nodes = document.getElementsByTagName( "span" );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.isSameElement( nodes[0], nodes[1] ) );
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.isSameElement( nodes[2], nodes[3] ) );
         *
         * </script>
         * ```
         */isSameElement:function isSameElement(nodeA,nodeB){if(nodeA.tagName!=nodeB.tagName){return false;}var thisAttrs=nodeA.attributes,otherAttrs=nodeB.attributes;if(!ie&&thisAttrs.length!=otherAttrs.length){return false;}var attrA,attrB,al=0,bl=0;for(var i=0;attrA=thisAttrs[i++];){if(attrA.nodeName=='style'){if(attrA.specified){al++;}if(domUtils.isSameStyle(nodeA,nodeB)){continue;}else{return false;}}if(ie){if(attrA.specified){al++;attrB=otherAttrs.getNamedItem(attrA.nodeName);}else{continue;}}else{attrB=nodeB.attributes[attrA.nodeName];}if(!attrB.specified||attrA.nodeValue!=attrB.nodeValue){return false;}}// 有可能attrB的属性包含了attrA的属性之外还有自己的属性
if(ie){for(i=0;attrB=otherAttrs[i++];){if(attrB.specified){bl++;}}if(al!=bl){return false;}}return true;},/**
         * 判断节点nodeA与节点nodeB的元素的style属性是否一致
         * @method isSameStyle
         * @param { Node } nodeA 需要比较的节点
         * @param { Node } nodeB 需要比较的节点
         * @return { Boolean } 两个节点是否具有相同的style属性值
         * @example
         * ```html
         * <span style="font-size:12px">ssss</span>
         * <span style="font-size:12px">bbbbb</span>
         * <span style="font-size:13px">ssss</span>
         * <span style="font-size:14px">bbbbb</span>
         *
         * <script>
         *
         *     var nodes = document.getElementsByTagName( "span" );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.isSameStyle( nodes[0], nodes[1] ) );
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.isSameStyle( nodes[2], nodes[3] ) );
         *
         * </script>
         * ```
         */isSameStyle:function isSameStyle(nodeA,nodeB){var styleA=nodeA.style.cssText.replace(/( ?; ?)/g,';').replace(/( ?: ?)/g,':'),styleB=nodeB.style.cssText.replace(/( ?; ?)/g,';').replace(/( ?: ?)/g,':');if(browser.opera){styleA=nodeA.style;styleB=nodeB.style;if(styleA.length!=styleB.length)return false;for(var p in styleA){if(/^(\d+|csstext)$/i.test(p)){continue;}if(styleA[p]!=styleB[p]){return false;}}return true;}if(!styleA||!styleB){return styleA==styleB;}styleA=styleA.split(';');styleB=styleB.split(';');if(styleA.length!=styleB.length){return false;}for(var i=0,ci;ci=styleA[i++];){if(utils.indexOf(styleB,ci)==-1){return false;}}return true;},/**
         * 检查节点node是否为block元素
         * @method isBlockElm
         * @param { Node } node 需要检测的节点对象
         * @return { Boolean } 是否是block元素节点
         * @warning 该方法的判断规则如下： 如果该元素原本是block元素， 则不论该元素当前的css样式是什么都会返回true；
         *          否则，检测该元素的css样式， 如果该元素当前是block元素， 则返回true。 其余情况下都返回false。
         * @example
         * ```html
         * <span id="test1" style="display: block"></span>
         * <span id="test2"></span>
         * <div id="test3" style="display: inline"></div>
         *
         * <script>
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test1") ) );
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test2") ) );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.isBlockElm( document.getElementById("test3") ) );
         *
         * </script>
         * ```
         */isBlockElm:function isBlockElm(node){return node.nodeType==1&&(dtd.$block[node.tagName]||styleBlock[domUtils.getComputedStyle(node,'display')])&&!dtd.$nonChild[node.tagName];},/**
         * 检测node节点是否为body节点
         * @method isBody
         * @param { Element } node 需要检测的dom元素
         * @return { Boolean } 给定的元素是否是body元素
         * @example
         * ```javascript
         * //output: true
         * console.log( UE.dom.domUtils.isBody( document.body ) );
         * ```
         */isBody:function isBody(node){return node&&node.nodeType==1&&node.tagName.toLowerCase()=='body';},/**
         * 以node节点为分界，将该节点的指定祖先节点parent拆分成两个独立的节点，
         * 拆分形成的两个节点之间是node节点
         * @method breakParent
         * @param { Node } node 作为分界的节点对象
         * @param { Node } parent 该节点必须是node节点的祖先节点， 且是block节点。
         * @return { Node } 给定的node分界节点
         * @example
         * ```javascript
         *
         *      var node = document.createElement("span"),
         *          wrapNode = document.createElement( "div" ),
         *          parent = document.createElement("p");
         *
         *      parent.appendChild( node );
         *      wrapNode.appendChild( parent );
         *
         *      //拆分前
         *      //output: <p><span></span></p>
         *      console.log( wrapNode.innerHTML );
         *
         *
         *      UE.dom.domUtils.breakParent( node, parent );
         *      //拆分后
         *      //output: <p></p><span></span><p></p>
         *      console.log( wrapNode.innerHTML );
         *
         * ```
         */breakParent:function breakParent(node,parent){var tmpNode,parentClone=node,clone=node,leftNodes,rightNodes;do{parentClone=parentClone.parentNode;if(leftNodes){tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(leftNodes);leftNodes=tmpNode;tmpNode=parentClone.cloneNode(false);tmpNode.appendChild(rightNodes);rightNodes=tmpNode;}else{leftNodes=parentClone.cloneNode(false);rightNodes=leftNodes.cloneNode(false);}while(tmpNode=clone.previousSibling){leftNodes.insertBefore(tmpNode,leftNodes.firstChild);}while(tmpNode=clone.nextSibling){rightNodes.appendChild(tmpNode);}clone=parentClone;}while(parent!==parentClone);tmpNode=parent.parentNode;tmpNode.insertBefore(leftNodes,parent);tmpNode.insertBefore(rightNodes,parent);tmpNode.insertBefore(node,rightNodes);domUtils.remove(parent);return node;},/**
         * 检查节点node是否是空inline节点
         * @method  isEmptyInlineElement
         * @param { Node } node 需要检测的节点对象
         * @return { Number }  如果给定的节点是空的inline节点， 则返回1, 否则返回0。
         * @example
         * ```html
         * <b><i></i></b> => 1
         * <b><i></i><u></u></b> => 1
         * <b></b> => 1
         * <b>xx<i></i></b> => 0
         * ```
         */isEmptyInlineElement:function isEmptyInlineElement(node){if(node.nodeType!=1||!dtd.$removeEmpty[node.tagName]){return 0;}node=node.firstChild;while(node){//如果是创建的bookmark就跳过
if(domUtils.isBookmarkNode(node)){return 0;}if(node.nodeType==1&&!domUtils.isEmptyInlineElement(node)||node.nodeType==3&&!domUtils.isWhitespace(node)){return 0;}node=node.nextSibling;}return 1;},/**
         * 删除node节点下首尾两端的空白文本子节点
         * @method trimWhiteTextNode
         * @param { Element } node 需要执行删除操作的元素对象
         * @example
         * ```javascript
         *      var node = document.createElement("div");
         *
         *      node.appendChild( document.createTextNode( "" ) );
         *
         *      node.appendChild( document.createElement("div") );
         *
         *      node.appendChild( document.createTextNode( "" ) );
         *
         *      //3
         *      console.log( node.childNodes.length );
         *
         *      UE.dom.domUtils.trimWhiteTextNode( node );
         *
         *      //1
         *      console.log( node.childNodes.length );
         * ```
         */trimWhiteTextNode:function trimWhiteTextNode(node){function remove(dir){var child;while((child=node[dir])&&child.nodeType==3&&domUtils.isWhitespace(child)){node.removeChild(child);}}remove('firstChild');remove('lastChild');},/**
         * 合并node节点下相同的子节点
         * @name mergeChild
         * @desc
         * UE.dom.domUtils.mergeChild(node,tagName) //tagName要合并的子节点的标签
         * @example
         * <p><span style="font-size:12px;">xx<span style="font-size:12px;">aa</span>xx</span></p>
         * ==> UE.dom.domUtils.mergeChild(node,'span')
         * <p><span style="font-size:12px;">xxaaxx</span></p>
         */mergeChild:function mergeChild(node,tagName,attrs){var list=domUtils.getElementsByTagName(node,node.tagName.toLowerCase());for(var i=0,ci;ci=list[i++];){if(!ci.parentNode||domUtils.isBookmarkNode(ci)){continue;}//span单独处理
if(ci.tagName.toLowerCase()=='span'){if(node===ci.parentNode){domUtils.trimWhiteTextNode(node);if(node.childNodes.length==1){node.style.cssText=ci.style.cssText+";"+node.style.cssText;domUtils.remove(ci,true);continue;}}ci.style.cssText=node.style.cssText+';'+ci.style.cssText;if(attrs){var style=attrs.style;if(style){style=style.split(';');for(var j=0,s;s=style[j++];){ci.style[utils.cssStyleToDomStyle(s.split(':')[0])]=s.split(':')[1];}}}if(domUtils.isSameStyle(ci,node)){domUtils.remove(ci,true);}continue;}if(domUtils.isSameElement(node,ci)){domUtils.remove(ci,true);}}},/**
         * 原生方法getElementsByTagName的封装
         * @method getElementsByTagName
         * @param { Node } node 目标节点对象
         * @param { String } tagName 需要查找的节点的tagName， 多个tagName以空格分割
         * @return { Array } 符合条件的节点集合
         */getElementsByTagName:function getElementsByTagName(node,name,filter){if(filter&&utils.isString(filter)){var className=filter;filter=function filter(node){return domUtils.hasClass(node,className);};}name=utils.trim(name).replace(/[ ]{2,}/g,' ').split(' ');var arr=[];for(var n=0,ni;ni=name[n++];){var list=node.getElementsByTagName(ni);for(var i=0,ci;ci=list[i++];){if(!filter||filter(ci))arr.push(ci);}}return arr;},/**
         * 将节点node提取到父节点上
         * @method mergeToParent
         * @param { Element } node 需要提取的元素对象
         * @example
         * ```html
         * <div id="parent">
         *     <div id="sub">
         *         <span id="child"></span>
         *     </div>
         * </div>
         *
         * <script>
         *
         *     var child = document.getElementById( "child" );
         *
         *     //output: sub
         *     console.log( child.parentNode.id );
         *
         *     UE.dom.domUtils.mergeToParent( child );
         *
         *     //output: parent
         *     console.log( child.parentNode.id );
         *
         * </script>
         * ```
         */mergeToParent:function mergeToParent(node){var parent=node.parentNode;while(parent&&dtd.$removeEmpty[parent.tagName]){if(parent.tagName==node.tagName||parent.tagName=='A'){//针对a标签单独处理
domUtils.trimWhiteTextNode(parent);//span需要特殊处理  不处理这样的情况 <span stlye="color:#fff">xxx<span style="color:#ccc">xxx</span>xxx</span>
if(parent.tagName=='SPAN'&&!domUtils.isSameStyle(parent,node)||parent.tagName=='A'&&node.tagName=='SPAN'){if(parent.childNodes.length>1||parent!==node.parentNode){node.style.cssText=parent.style.cssText+";"+node.style.cssText;parent=parent.parentNode;continue;}else{parent.style.cssText+=";"+node.style.cssText;//trace:952 a标签要保持下划线
if(parent.tagName=='A'){parent.style.textDecoration='underline';}}}if(parent.tagName!='A'){parent===node.parentNode&&domUtils.remove(node,true);break;}}parent=parent.parentNode;}},/**
         * 合并节点node的左右兄弟节点
         * @method mergeSibling
         * @param { Element } node 需要合并的目标节点
         * @example
         * ```html
         * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
         *
         * <script>
         *     var demoNode = document.getElementById("test");
         *     UE.dom.domUtils.mergeSibling( demoNode );
         *     //output: xxxxoooxxxx
         *     console.log( demoNode.innerHTML );
         * </script>
         * ```
         */ /**
         * 合并节点node的左右兄弟节点， 可以根据给定的条件选择是否忽略合并左节点。
         * @method mergeSibling
         * @param { Element } node 需要合并的目标节点
         * @param { Boolean } ignorePre 是否忽略合并左节点
         * @example
         * ```html
         * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
         *
         * <script>
         *     var demoNode = document.getElementById("test");
         *     UE.dom.domUtils.mergeSibling( demoNode, true );
         *     //output: oooxxxx
         *     console.log( demoNode.innerHTML );
         * </script>
         * ```
         */ /**
         * 合并节点node的左右兄弟节点，可以根据给定的条件选择是否忽略合并左右节点。
         * @method mergeSibling
         * @param { Element } node 需要合并的目标节点
         * @param { Boolean } ignorePre 是否忽略合并左节点
         * @param { Boolean } ignoreNext 是否忽略合并右节点
         * @remind 如果同时忽略左右节点， 则该操作什么也不会做
         * @example
         * ```html
         * <b>xxxx</b><b id="test">ooo</b><b>xxxx</b>
         *
         * <script>
         *     var demoNode = document.getElementById("test");
         *     UE.dom.domUtils.mergeSibling( demoNode, false, true );
         *     //output: xxxxooo
         *     console.log( demoNode.innerHTML );
         * </script>
         * ```
         */mergeSibling:function mergeSibling(node,ignorePre,ignoreNext){function merge(rtl,start,node){var next;if((next=node[rtl])&&!domUtils.isBookmarkNode(next)&&next.nodeType==1&&domUtils.isSameElement(node,next)){while(next.firstChild){if(start=='firstChild'){node.insertBefore(next.lastChild,node.firstChild);}else{node.appendChild(next.firstChild);}}domUtils.remove(next);}}!ignorePre&&merge('previousSibling','firstChild',node);!ignoreNext&&merge('nextSibling','lastChild',node);},/**
         * 设置节点node及其子节点不会被选中
         * @method unSelectable
         * @param { Element } node 需要执行操作的dom元素
         * @remind 执行该操作后的节点， 将不能被鼠标选中
         * @example
         * ```javascript
         * UE.dom.domUtils.unSelectable( document.body );
         * ```
         */unSelectable:ie&&browser.ie9below||browser.opera?function(node){//for ie9
node.onselectstart=function(){return false;};node.onclick=node.onkeyup=node.onkeydown=function(){return false;};node.unselectable='on';node.setAttribute("unselectable","on");for(var i=0,ci;ci=node.all[i++];){switch(ci.tagName.toLowerCase()){case'iframe':case'textarea':case'input':case'select':break;default:ci.unselectable='on';node.setAttribute("unselectable","on");}}}:function(node){node.style.MozUserSelect=node.style.webkitUserSelect=node.style.msUserSelect=node.style.KhtmlUserSelect='none';},/**
         * 删除节点node上的指定属性名称的属性
         * @method  removeAttributes
         * @param { Node } node 需要删除属性的节点对象
         * @param { String } attrNames 可以是空格隔开的多个属性名称，该操作将会依次删除相应的属性
         * @example
         * ```html
         * <div id="wrap">
         *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>
         * </div>
         *
         * <script>
         *
         *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), "id name" );
         *
         *     //output: <span style="font-size:14px;">xxxxx</span>
         *     console.log( document.getElementById("wrap").innerHTML );
         *
         * </script>
         * ```
         */ /**
         * 删除节点node上的指定属性名称的属性
         * @method  removeAttributes
         * @param { Node } node 需要删除属性的节点对象
         * @param { Array } attrNames 需要删除的属性名数组
         * @example
         * ```html
         * <div id="wrap">
         *      <span style="font-size:14px;" id="test" name="followMe">xxxxx</span>
         * </div>
         *
         * <script>
         *
         *     UE.dom.domUtils.removeAttributes( document.getElementById( "test" ), ["id", "name"] );
         *
         *     //output: <span style="font-size:14px;">xxxxx</span>
         *     console.log( document.getElementById("wrap").innerHTML );
         *
         * </script>
         * ```
         */removeAttributes:function removeAttributes(node,attrNames){attrNames=utils.isArray(attrNames)?attrNames:utils.trim(attrNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci;ci=attrNames[i++];){ci=attrFix[ci]||ci;switch(ci){case'className':node[ci]='';break;case'style':node.style.cssText='';var val=node.getAttributeNode('style');!browser.ie&&val&&node.removeAttributeNode(val);}node.removeAttribute(ci);}},/**
         * 在doc下创建一个标签名为tag，属性为attrs的元素
         * @method createElement
         * @param { DomDocument } doc 新创建的元素属于该document节点创建
         * @param { String } tagName 需要创建的元素的标签名
         * @param { Object } attrs 新创建的元素的属性key-value集合
         * @return { Element } 新创建的元素对象
         * @example
         * ```javascript
         * var ele = UE.dom.domUtils.createElement( document, 'div', {
         *     id: 'test'
         * } );
         *
         * //output: DIV
         * console.log( ele.tagName );
         *
         * //output: test
         * console.log( ele.id );
         *
         * ```
         */createElement:function createElement(doc,tag,attrs){return domUtils.setAttributes(doc.createElement(tag),attrs);},/**
         * 为节点node添加属性attrs，attrs为属性键值对
         * @method setAttributes
         * @param { Element } node 需要设置属性的元素对象
         * @param { Object } attrs 需要设置的属性名-值对
         * @return { Element } 设置属性的元素对象
         * @example
         * ```html
         * <span id="test"></span>
         *
         * <script>
         *
         *     var testNode = UE.dom.domUtils.setAttributes( document.getElementById( "test" ), {
         *         id: 'demo'
         *     } );
         *
         *     //output: demo
         *     console.log( testNode.id );
         *
         * </script>
         *
         */setAttributes:function setAttributes(node,attrs){for(var attr in attrs){if(attrs.hasOwnProperty(attr)){var value=attrs[attr];switch(attr){case'class'://ie下要这样赋值，setAttribute不起作用
node.className=value;break;case'style':node.style.cssText=node.style.cssText+";"+value;break;case'innerHTML':node[attr]=value;break;case'value':node.value=value;break;default:node.setAttribute(attrFix[attr]||attr,value);}}}return node;},/**
         * 获取元素element经过计算后的样式值
         * @method getComputedStyle
         * @param { Element } element 需要获取样式的元素对象
         * @param { String } styleName 需要获取的样式名
         * @return { String } 获取到的样式值
         * @example
         * ```html
         * <style type="text/css">
         *      #test {
         *          font-size: 15px;
         *      }
         * </style>
         *
         * <span id="test"></span>
         *
         * <script>
         *     //output: 15px
         *     console.log( UE.dom.domUtils.getComputedStyle( document.getElementById( "test" ), 'font-size' ) );
         * </script>
         * ```
         */getComputedStyle:function getComputedStyle(element,styleName){//一下的属性单独处理
var pros='width height top left';if(pros.indexOf(styleName)>-1){return element['offset'+styleName.replace(/^\w/,function(s){return s.toUpperCase();})]+'px';}//忽略文本节点
if(element.nodeType==3){element=element.parentNode;}//ie下font-size若body下定义了font-size，则从currentStyle里会取到这个font-size. 取不到实际值，故此修改.
if(browser.ie&&browser.version<9&&styleName=='font-size'&&!element.style.fontSize&&!dtd.$empty[element.tagName]&&!dtd.$nonChild[element.tagName]){var span=element.ownerDocument.createElement('span');span.style.cssText='padding:0;border:0;font-family:simsun;';span.innerHTML='.';element.appendChild(span);var result=span.offsetHeight;element.removeChild(span);span=null;return result+'px';}try{var value=domUtils.getStyle(element,styleName)||(window.getComputedStyle?domUtils.getWindow(element).getComputedStyle(element,'').getPropertyValue(styleName):(element.currentStyle||element.style)[utils.cssStyleToDomStyle(styleName)]);}catch(e){return "";}return utils.transUnitToPx(utils.fixColor(styleName,value));},/**
         * 删除元素element指定的className
         * @method removeClasses
         * @param { Element } ele 需要删除class的元素节点
         * @param { String } classNames 需要删除的className， 多个className之间以空格分开
         * @example
         * ```html
         * <span id="test" class="test1 test2 test3">xxx</span>
         *
         * <script>
         *
         *     var testNode = document.getElementById( "test" );
         *     UE.dom.domUtils.removeClasses( testNode, "test1 test2" );
         *
         *     //output: test3
         *     console.log( testNode.className );
         *
         * </script>
         * ```
         */ /**
         * 删除元素element指定的className
         * @method removeClasses
         * @param { Element } ele 需要删除class的元素节点
         * @param { Array } classNames 需要删除的className数组
         * @example
         * ```html
         * <span id="test" class="test1 test2 test3">xxx</span>
         *
         * <script>
         *
         *     var testNode = document.getElementById( "test" );
         *     UE.dom.domUtils.removeClasses( testNode, ["test1", "test2"] );
         *
         *     //output: test3
         *     console.log( testNode.className );
         *
         * </script>
         * ```
         */removeClasses:function removeClasses(elm,classNames){classNames=utils.isArray(classNames)?classNames:utils.trim(classNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=elm.className;ci=classNames[i++];){cls=cls.replace(new RegExp('\\b'+ci+'\\b'),'');}cls=utils.trim(cls).replace(/[ ]{2,}/g,' ');if(cls){elm.className=cls;}else{domUtils.removeAttributes(elm,['class']);}},/**
         * 给元素element添加className
         * @method addClass
         * @param { Node } ele 需要增加className的元素
         * @param { String } classNames 需要添加的className， 多个className之间以空格分割
         * @remind 相同的类名不会被重复添加
         * @example
         * ```html
         * <span id="test" class="cls1 cls2"></span>
         *
         * <script>
         *     var testNode = document.getElementById("test");
         *
         *     UE.dom.domUtils.addClass( testNode, "cls2 cls3 cls4" );
         *
         *     //output: cl1 cls2 cls3 cls4
         *     console.log( testNode.className );
         *
         * <script>
         * ```
         */ /**
         * 给元素element添加className
         * @method addClass
         * @param { Node } ele 需要增加className的元素
         * @param { Array } classNames 需要添加的className的数组
         * @remind 相同的类名不会被重复添加
         * @example
         * ```html
         * <span id="test" class="cls1 cls2"></span>
         *
         * <script>
         *     var testNode = document.getElementById("test");
         *
         *     UE.dom.domUtils.addClass( testNode, ["cls2", "cls3", "cls4"] );
         *
         *     //output: cl1 cls2 cls3 cls4
         *     console.log( testNode.className );
         *
         * <script>
         * ```
         */addClass:function addClass(elm,classNames){if(!elm)return;classNames=utils.trim(classNames).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=elm.className;ci=classNames[i++];){if(!new RegExp('\\b'+ci+'\\b').test(cls)){cls+=' '+ci;}}elm.className=utils.trim(cls);},/**
         * 判断元素element是否包含给定的样式类名className
         * @method hasClass
         * @param { Node } ele 需要检测的元素
         * @param { String } classNames 需要检测的className， 多个className之间用空格分割
         * @return { Boolean } 元素是否包含所有给定的className
         * @example
         * ```html
         * <span id="test1" class="cls1 cls2"></span>
         *
         * <script>
         *     var test1 = document.getElementById("test1");
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1 cls3" ) );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.hasClass( test1, "cls2 cls1" ) );
         * </script>
         * ```
         */ /**
         * 判断元素element是否包含给定的样式类名className
         * @method hasClass
         * @param { Node } ele 需要检测的元素
         * @param { Array } classNames 需要检测的className数组
         * @return { Boolean } 元素是否包含所有给定的className
         * @example
         * ```html
         * <span id="test1" class="cls1 cls2"></span>
         *
         * <script>
         *     var test1 = document.getElementById("test1");
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1", "cls3" ] ) );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.hasClass( test1, [ "cls2", "cls1" ]) );
         * </script>
         * ```
         */hasClass:function hasClass(element,className){if(utils.isRegExp(className)){return className.test(element.className);}className=utils.trim(className).replace(/[ ]{2,}/g,' ').split(' ');for(var i=0,ci,cls=element.className;ci=className[i++];){if(!new RegExp('\\b'+ci+'\\b','i').test(cls)){return false;}}return i-1==className.length;},/**
         * 阻止事件默认行为
         * @method preventDefault
         * @param { Event } evt 需要阻止默认行为的事件对象
         * @example
         * ```javascript
         * UE.dom.domUtils.preventDefault( evt );
         * ```
         */preventDefault:function preventDefault(evt){evt.preventDefault?evt.preventDefault():evt.returnValue=false;},/**
         * 删除元素element指定的样式
         * @method removeStyle
         * @param { Element } element 需要删除样式的元素
         * @param { String } styleName 需要删除的样式名
         * @example
         * ```html
         * <span id="test" style="color: red; background: blue;"></span>
         *
         * <script>
         *
         *     var testNode = document.getElementById("test");
         *
         *     UE.dom.domUtils.removeStyle( testNode, 'color' );
         *
         *     //output: background: blue;
         *     console.log( testNode.style.cssText );
         *
         * </script>
         * ```
         */removeStyle:function removeStyle(element,name){if(browser.ie){//针对color先单独处理一下
if(name=='color'){name='(^|;)'+name;}element.style.cssText=element.style.cssText.replace(new RegExp(name+'[^:]*:[^;]+;?','ig'),'');}else{if(element.style.removeProperty){element.style.removeProperty(name);}else{element.style.removeAttribute(utils.cssStyleToDomStyle(name));}}if(!element.style.cssText){domUtils.removeAttributes(element,['style']);}},/**
         * 获取元素element的style属性的指定值
         * @method getStyle
         * @param { Element } element 需要获取属性值的元素
         * @param { String } styleName 需要获取的style的名称
         * @warning 该方法仅获取元素style属性中所标明的值
         * @return { String } 该元素包含指定的style属性值
         * @example
         * ```html
         * <div id="test" style="color: red;"></div>
         *
         * <script>
         *
         *      var testNode = document.getElementById( "test" );
         *
         *      //output: red
         *      console.log( UE.dom.domUtils.getStyle( testNode, "color" ) );
         *
         *      //output: ""
         *      console.log( UE.dom.domUtils.getStyle( testNode, "background" ) );
         *
         * </script>
         * ```
         */getStyle:function getStyle(element,name){var value=element.style[utils.cssStyleToDomStyle(name)];return utils.fixColor(name,value);},/**
         * 为元素element设置样式属性值
         * @method setStyle
         * @param { Element } element 需要设置样式的元素
         * @param { String } styleName 样式名
         * @param { String } styleValue 样式值
         * @example
         * ```html
         * <div id="test"></div>
         *
         * <script>
         *
         *      var testNode = document.getElementById( "test" );
         *
         *      //output: ""
         *      console.log( testNode.style.color );
         *
         *      UE.dom.domUtils.setStyle( testNode, 'color', 'red' );
         *      //output: "red"
         *      console.log( testNode.style.color );
         *
         * </script>
         * ```
         */setStyle:function setStyle(element,name,value){element.style[utils.cssStyleToDomStyle(name)]=value;if(!utils.trim(element.style.cssText)){this.removeAttributes(element,'style');}},/**
         * 为元素element设置多个样式属性值
         * @method setStyles
         * @param { Element } element 需要设置样式的元素
         * @param { Object } styles 样式名值对
         * @example
         * ```html
         * <div id="test"></div>
         *
         * <script>
         *
         *      var testNode = document.getElementById( "test" );
         *
         *      //output: ""
         *      console.log( testNode.style.color );
         *
         *      UE.dom.domUtils.setStyles( testNode, {
         *          'color': 'red'
         *      } );
         *      //output: "red"
         *      console.log( testNode.style.color );
         *
         * </script>
         * ```
         */setStyles:function setStyles(element,styles){for(var name in styles){if(styles.hasOwnProperty(name)){domUtils.setStyle(element,name,styles[name]);}}},/**
         * 删除_moz_dirty属性
         * @private
         * @method removeDirtyAttr
         */removeDirtyAttr:function removeDirtyAttr(node){for(var i=0,ci,nodes=node.getElementsByTagName('*');ci=nodes[i++];){ci.removeAttribute('_moz_dirty');}node.removeAttribute('_moz_dirty');},/**
         * 获取子节点的数量
         * @method getChildCount
         * @param { Element } node 需要检测的元素
         * @return { Number } 给定的node元素的子节点数量
         * @example
         * ```html
         * <div id="test">
         *      <span></span>
         * </div>
         *
         * <script>
         *
         *     //output: 3
         *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test") ) );
         *
         * </script>
         * ```
         */ /**
         * 根据给定的过滤规则， 获取符合条件的子节点的数量
         * @method getChildCount
         * @param { Element } node 需要检测的元素
         * @param { Function } fn 过滤器， 要求对符合条件的子节点返回true， 反之则要求返回false
         * @return { Number } 符合过滤条件的node元素的子节点数量
         * @example
         * ```html
         * <div id="test">
         *      <span></span>
         * </div>
         *
         * <script>
         *
         *     //output: 1
         *     console.log( UE.dom.domUtils.getChildCount( document.getElementById("test"), function ( node ) {
         *
         *         return node.nodeType === 1;
         *
         *     } ) );
         *
         * </script>
         * ```
         */getChildCount:function getChildCount(node,fn){var count=0,first=node.firstChild;fn=fn||function(){return 1;};while(first){if(fn(first)){count++;}first=first.nextSibling;}return count;},/**
         * 判断给定节点是否为空节点
         * @method isEmptyNode
         * @param { Node } node 需要检测的节点对象
         * @return { Boolean } 节点是否为空
         * @example
         * ```javascript
         * UE.dom.domUtils.isEmptyNode( document.body );
         * ```
         */isEmptyNode:function isEmptyNode(node){return !node.firstChild||domUtils.getChildCount(node,function(node){return !domUtils.isBr(node)&&!domUtils.isBookmarkNode(node)&&!domUtils.isWhitespace(node);})==0;},clearSelectedArr:function clearSelectedArr(nodes){var node;while(node=nodes.pop()){domUtils.removeAttributes(node,['class']);}},/**
         * 将显示区域滚动到指定节点的位置
         * @method scrollToView
         * @param    {Node}   node    节点
         * @param    {window}   win      window对象
         * @param    {Number}    offsetTop    距离上方的偏移量
         */scrollToView:function scrollToView(node,win,offsetTop){var getViewPaneSize=function getViewPaneSize(){var doc=win.document,mode=doc.compatMode=='CSS1Compat';return {width:(mode?doc.documentElement.clientWidth:doc.body.clientWidth)||0,height:(mode?doc.documentElement.clientHeight:doc.body.clientHeight)||0};},getScrollPosition=function getScrollPosition(win){if('pageXOffset'in win){return {x:win.pageXOffset||0,y:win.pageYOffset||0};}else{var doc=win.document;return {x:doc.documentElement.scrollLeft||doc.body.scrollLeft||0,y:doc.documentElement.scrollTop||doc.body.scrollTop||0};}};var winHeight=getViewPaneSize().height,offset=winHeight*-1+offsetTop;offset+=node.offsetHeight||0;var elementPosition=domUtils.getXY(node);offset+=elementPosition.y;var currentScroll=getScrollPosition(win).y;// offset += 50;
if(offset>currentScroll||offset<currentScroll-winHeight){win.scrollTo(0,offset+(offset<0?-20:20));}},/**
         * 判断给定节点是否为br
         * @method isBr
         * @param { Node } node 需要判断的节点对象
         * @return { Boolean } 给定的节点是否是br节点
         */isBr:function isBr(node){return node.nodeType==1&&node.tagName=='BR';},/**
         * 判断给定的节点是否是一个“填充”节点
         * @private
         * @method isFillChar
         * @param { Node } node 需要判断的节点
         * @param { Boolean } isInStart 是否从节点内容的开始位置匹配
         * @returns { Boolean } 节点是否是填充节点
         */isFillChar:function isFillChar(node,isInStart){if(node.nodeType!=3)return false;var text=node.nodeValue;if(isInStart){return new RegExp('^'+domUtils.fillChar).test(text);}return !text.replace(new RegExp(domUtils.fillChar,'g'),'').length;},isStartInblock:function isStartInblock(range){var tmpRange=range.cloneRange(),flag=0,start=tmpRange.startContainer,tmp;if(start.nodeType==1&&start.childNodes[tmpRange.startOffset]){start=start.childNodes[tmpRange.startOffset];var pre=start.previousSibling;while(pre&&domUtils.isFillChar(pre)){start=pre;pre=pre.previousSibling;}}if(this.isFillChar(start,true)&&tmpRange.startOffset==1){tmpRange.setStartBefore(start);start=tmpRange.startContainer;}while(start&&domUtils.isFillChar(start)){tmp=start;start=start.previousSibling;}if(tmp){tmpRange.setStartBefore(tmp);start=tmpRange.startContainer;}if(start.nodeType==1&&domUtils.isEmptyNode(start)&&tmpRange.startOffset==1){tmpRange.setStart(start,0).collapse(true);}while(!tmpRange.startOffset){start=tmpRange.startContainer;if(domUtils.isBlockElm(start)||domUtils.isBody(start)){flag=1;break;}var pre=tmpRange.startContainer.previousSibling,tmpNode;if(!pre){tmpRange.setStartBefore(tmpRange.startContainer);}else{while(pre&&domUtils.isFillChar(pre)){tmpNode=pre;pre=pre.previousSibling;}if(tmpNode){tmpRange.setStartBefore(tmpNode);}else{tmpRange.setStartBefore(tmpRange.startContainer);}}}return flag&&!domUtils.isBody(tmpRange.startContainer)?1:0;},/**
         * 判断给定的元素是否是一个空元素
         * @method isEmptyBlock
         * @param { Element } node 需要判断的元素
         * @return { Boolean } 是否是空元素
         * @example
         * ```html
         * <div id="test"></div>
         *
         * <script>
         *     //output: true
         *     console.log( UE.dom.domUtils.isEmptyBlock( document.getElementById("test") ) );
         * </script>
         * ```
         */ /**
         * 根据指定的判断规则判断给定的元素是否是一个空元素
         * @method isEmptyBlock
         * @param { Element } node 需要判断的元素
         * @param { RegExp } reg 对内容执行判断的正则表达式对象
         * @return { Boolean } 是否是空元素
         */isEmptyBlock:function isEmptyBlock(node,reg){if(node.nodeType!=1)return 0;reg=reg||new RegExp('[ \xa0\t\r\n'+domUtils.fillChar+']','g');if(node[browser.ie?'innerText':'textContent'].replace(reg,'').length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;},/**
         * 移动元素使得该元素的位置移动指定的偏移量的距离
         * @method setViewportOffset
         * @param { Element } element 需要设置偏移量的元素
         * @param { Object } offset 偏移量， 形如{ left: 100, top: 50 }的一个键值对， 表示该元素将在
         *                                  现有的位置上向水平方向偏移offset.left的距离， 在竖直方向上偏移
         *                                  offset.top的距离
         * @example
         * ```html
         * <div id="test" style="top: 100px; left: 50px; position: absolute;"></div>
         *
         * <script>
         *
         *     var testNode = document.getElementById("test");
         *
         *     UE.dom.domUtils.setViewportOffset( testNode, {
         *         left: 200,
         *         top: 50
         *     } );
         *
         *     //output: top: 300px; left: 100px; position: absolute;
         *     console.log( testNode.style.cssText );
         *
         * </script>
         * ```
         */setViewportOffset:function setViewportOffset(element,offset){var left=parseInt(element.style.left)|0;var top=parseInt(element.style.top)|0;var rect=element.getBoundingClientRect();var offsetLeft=offset.left-rect.left;var offsetTop=offset.top-rect.top;if(offsetLeft){element.style.left=left+offsetLeft+'px';}if(offsetTop){element.style.top=top+offsetTop+'px';}},/**
         * 用“填充字符”填充节点
         * @method fillNode
         * @private
         * @param { DomDocument } doc 填充的节点所在的docment对象
         * @param { Node } node 需要填充的节点对象
         * @example
         * ```html
         * <div id="test"></div>
         *
         * <script>
         *     var testNode = document.getElementById("test");
         *
         *     //output: 0
         *     console.log( testNode.childNodes.length );
         *
         *     UE.dom.domUtils.fillNode( document, testNode );
         *
         *     //output: 1
         *     console.log( testNode.childNodes.length );
         *
         * </script>
         * ```
         */fillNode:function fillNode(doc,node){var tmpNode=browser.ie?doc.createTextNode(domUtils.fillChar):doc.createElement('br');node.innerHTML='';node.appendChild(tmpNode);},/**
         * 把节点src的所有子节点追加到另一个节点tag上去
         * @method moveChild
         * @param { Node } src 源节点， 该节点下的所有子节点将被移除
         * @param { Node } tag 目标节点， 从源节点移除的子节点将被追加到该节点下
         * @example
         * ```html
         * <div id="test1">
         *      <span></span>
         * </div>
         * <div id="test2">
         *     <div></div>
         * </div>
         *
         * <script>
         *
         *     var test1 = document.getElementById("test1"),
         *         test2 = document.getElementById("test2");
         *
         *     UE.dom.domUtils.moveChild( test1, test2 );
         *
         *     //output: ""（空字符串）
         *     console.log( test1.innerHTML );
         *
         *     //output: "<div></div><span></span>"
         *     console.log( test2.innerHTML );
         *
         * </script>
         * ```
         */ /**
         * 把节点src的所有子节点移动到另一个节点tag上去, 可以通过dir参数控制附加的行为是“追加”还是“插入顶部”
         * @method moveChild
         * @param { Node } src 源节点， 该节点下的所有子节点将被移除
         * @param { Node } tag 目标节点， 从源节点移除的子节点将被附加到该节点下
         * @param { Boolean } dir 附加方式， 如果为true， 则附加进去的节点将被放到目标节点的顶部， 反之，则放到末尾
         * @example
         * ```html
         * <div id="test1">
         *      <span></span>
         * </div>
         * <div id="test2">
         *     <div></div>
         * </div>
         *
         * <script>
         *
         *     var test1 = document.getElementById("test1"),
         *         test2 = document.getElementById("test2");
         *
         *     UE.dom.domUtils.moveChild( test1, test2, true );
         *
         *     //output: ""（空字符串）
         *     console.log( test1.innerHTML );
         *
         *     //output: "<span></span><div></div>"
         *     console.log( test2.innerHTML );
         *
         * </script>
         * ```
         */moveChild:function moveChild(src,tag,dir){while(src.firstChild){if(dir&&tag.firstChild){tag.insertBefore(src.lastChild,tag.firstChild);}else{tag.appendChild(src.firstChild);}}},/**
         * 判断节点的标签上是否不存在任何属性
         * @method hasNoAttributes
         * @private
         * @param { Node } node 需要检测的节点对象
         * @return { Boolean } 节点是否不包含任何属性
         * @example
         * ```html
         * <div id="test"><span>xxxx</span></div>
         *
         * <script>
         *
         *     //output: false
         *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test") ) );
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.hasNoAttributes( document.getElementById("test").firstChild ) );
         *
         * </script>
         * ```
         */hasNoAttributes:function hasNoAttributes(node){return browser.ie?/^<\w+\s*?>/.test(node.outerHTML):node.attributes.length==0;},/**
         * 检测节点是否是UEditor所使用的辅助节点
         * @method isCustomeNode
         * @private
         * @param { Node } node 需要检测的节点
         * @remind 辅助节点是指编辑器要完成工作临时添加的节点， 在输出的时候将会从编辑器内移除， 不会影响最终的结果。
         * @return { Boolean } 给定的节点是否是一个辅助节点
         */isCustomeNode:function isCustomeNode(node){return node.nodeType==1&&node.getAttribute('_ue_custom_node_');},/**
         * 检测节点的标签是否是给定的标签
         * @method isTagNode
         * @param { Node } node 需要检测的节点对象
         * @param { String } tagName 标签
         * @return { Boolean } 节点的标签是否是给定的标签
         * @example
         * ```html
         * <div id="test"></div>
         *
         * <script>
         *
         *     //output: true
         *     console.log( UE.dom.domUtils.isTagNode( document.getElementById("test"), "div" ) );
         *
         * </script>
         * ```
         */isTagNode:function isTagNode(node,tagNames){return node.nodeType==1&&new RegExp('\\b'+node.tagName+'\\b','i').test(tagNames);},/**
         * 给定一个节点数组，在通过指定的过滤器过滤后， 获取其中满足过滤条件的第一个节点
         * @method filterNodeList
         * @param { Array } nodeList 需要过滤的节点数组
         * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false
         * @return { Node | NULL } 如果找到符合过滤条件的节点， 则返回该节点， 否则返回NULL
         * @example
         * ```javascript
         * var divNodes = document.getElementsByTagName("div");
         * divNodes = [].slice.call( divNodes, 0 );
         *
         * //output: null
         * console.log( UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
         *     return node.tagName.toLowerCase() !== 'div';
         * } ) );
         * ```
         */ /**
         * 给定一个节点数组nodeList和一组标签名tagNames， 获取其中能够匹配标签名的节点集合中的第一个节点
         * @method filterNodeList
         * @param { Array } nodeList 需要过滤的节点数组
         * @param { String } tagNames 需要匹配的标签名， 多个标签名之间用空格分割
         * @return { Node | NULL } 如果找到标签名匹配的节点， 则返回该节点， 否则返回NULL
         * @example
         * ```javascript
         * var divNodes = document.getElementsByTagName("div");
         * divNodes = [].slice.call( divNodes, 0 );
         *
         * //output: null
         * console.log( UE.dom.domUtils.filterNodeList( divNodes, 'a span' ) );
         * ```
         */ /**
         * 给定一个节点数组，在通过指定的过滤器过滤后， 如果参数forAll为true， 则会返回所有满足过滤
         * 条件的节点集合， 否则， 返回满足条件的节点集合中的第一个节点
         * @method filterNodeList
         * @param { Array } nodeList 需要过滤的节点数组
         * @param { Function } fn 过滤器， 对符合条件的节点， 执行结果返回true， 反之则返回false
         * @param { Boolean } forAll 是否返回整个节点数组, 如果该参数为false， 则返回节点集合中的第一个节点
         * @return { Array | Node | NULL } 如果找到符合过滤条件的节点， 则根据参数forAll的值决定返回满足
         *                                      过滤条件的节点数组或第一个节点， 否则返回NULL
         * @example
         * ```javascript
         * var divNodes = document.getElementsByTagName("div");
         * divNodes = [].slice.call( divNodes, 0 );
         *
         * //output: 3（假定有3个div）
         * console.log( divNodes.length );
         *
         * var nodes = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
         *     return node.tagName.toLowerCase() === 'div';
         * }, true );
         *
         * //output: 3
         * console.log( nodes.length );
         *
         * var node = UE.dom.domUtils.filterNodeList( divNodes, function ( node ) {
         *     return node.tagName.toLowerCase() === 'div';
         * }, false );
         *
         * //output: div
         * console.log( node.nodeName );
         * ```
         */filterNodeList:function filterNodeList(nodelist,filter,forAll){var results=[];if(!utils.isFunction(filter)){var str=filter;filter=function filter(n){return utils.indexOf(utils.isArray(str)?str:str.split(' '),n.tagName.toLowerCase())!=-1;};}utils.each(nodelist,function(n){filter(n)&&results.push(n);});return results.length==0?null:results.length==1||!forAll?results[0]:results;},/**
         * 查询给定的range选区是否在给定的node节点内，且在该节点的最末尾
         * @method isInNodeEndBoundary
         * @param { UE.dom.Range } rng 需要判断的range对象， 该对象的startContainer不能为NULL
         * @param node 需要检测的节点对象
         * @return { Number } 如果给定的选取range对象是在node内部的最末端， 则返回1, 否则返回0
         */isInNodeEndBoundary:function isInNodeEndBoundary(rng,node){var start=rng.startContainer;if(start.nodeType==3&&rng.startOffset!=start.nodeValue.length){return 0;}if(start.nodeType==1&&rng.startOffset!=start.childNodes.length){return 0;}while(start!==node){if(start.nextSibling){return 0;}start=start.parentNode;}return 1;},isBoundaryNode:function isBoundaryNode(node,dir){var tmp;while(!domUtils.isBody(node)){tmp=node;node=node.parentNode;if(tmp!==node[dir]){return false;}}return true;},fillHtml:browser.ie11below?'&nbsp;':'<br/>'};var fillCharReg=new RegExp(domUtils.fillChar,'g');// core/Range.js
/**
     * Range封装
     * @file
     * @module UE.dom
     * @class Range
     * @since 1.2.6.1
     */ /**
     * dom操作封装
     * @unfile
     * @module UE.dom
     */ /**
     * Range实现类，本类是UEditor底层核心类，封装不同浏览器之间的Range操作。
     * @unfile
     * @module UE.dom
     * @class Range
     */(function(){var guid=0,fillChar=domUtils.fillChar,fillData;/**
         * 更新range的collapse状态
         * @param  {Range}   range    range对象
         */function updateCollapse(range){range.collapsed=range.startContainer&&range.endContainer&&range.startContainer===range.endContainer&&range.startOffset==range.endOffset;}function selectOneNode(rng){return !rng.collapsed&&rng.startContainer.nodeType==1&&rng.startContainer===rng.endContainer&&rng.endOffset-rng.startOffset==1;}function setEndPoint(toStart,node,offset,range){//如果node是自闭合标签要处理
if(node.nodeType==1&&(dtd.$empty[node.tagName]||dtd.$nonChild[node.tagName])){offset=domUtils.getNodeIndex(node)+(toStart?0:1);node=node.parentNode;}if(toStart){range.startContainer=node;range.startOffset=offset;if(!range.endContainer){range.collapse(true);}}else{range.endContainer=node;range.endOffset=offset;if(!range.startContainer){range.collapse(false);}}updateCollapse(range);return range;}function execContentsAction(range,action){//调整边界
//range.includeBookmark();
var start=range.startContainer,end=range.endContainer,startOffset=range.startOffset,endOffset=range.endOffset,doc=range.document,frag=doc.createDocumentFragment(),tmpStart,tmpEnd;if(start.nodeType==1){start=start.childNodes[startOffset]||(tmpStart=start.appendChild(doc.createTextNode('')));}if(end.nodeType==1){end=end.childNodes[endOffset]||(tmpEnd=end.appendChild(doc.createTextNode('')));}if(start===end&&start.nodeType==3){frag.appendChild(doc.createTextNode(start.substringData(startOffset,endOffset-startOffset)));//is not clone
if(action){start.deleteData(startOffset,endOffset-startOffset);range.collapse(true);}return frag;}var current,currentLevel,clone=frag,startParents=domUtils.findParents(start,true),endParents=domUtils.findParents(end,true);for(var i=0;startParents[i]==endParents[i];){i++;}for(var j=i,si;si=startParents[j];j++){current=si.nextSibling;if(si==start){if(!tmpStart){if(range.startContainer.nodeType==3){clone.appendChild(doc.createTextNode(start.nodeValue.slice(startOffset)));//is not clone
if(action){start.deleteData(startOffset,start.nodeValue.length-startOffset);}}else{clone.appendChild(!action?start.cloneNode(true):start);}}}else{currentLevel=si.cloneNode(false);clone.appendChild(currentLevel);}while(current){if(current===end||current===endParents[j]){break;}si=current.nextSibling;clone.appendChild(!action?current.cloneNode(true):current);current=si;}clone=currentLevel;}clone=frag;if(!startParents[i]){clone.appendChild(startParents[i-1].cloneNode(false));clone=clone.firstChild;}for(var j=i,ei;ei=endParents[j];j++){current=ei.previousSibling;if(ei==end){if(!tmpEnd&&range.endContainer.nodeType==3){clone.appendChild(doc.createTextNode(end.substringData(0,endOffset)));//is not clone
if(action){end.deleteData(0,endOffset);}}}else{currentLevel=ei.cloneNode(false);clone.appendChild(currentLevel);}//如果两端同级，右边第一次已经被开始做了
if(j!=i||!startParents[i]){while(current){if(current===start){break;}ei=current.previousSibling;clone.insertBefore(!action?current.cloneNode(true):current,clone.firstChild);current=ei;}}clone=currentLevel;}if(action){range.setStartBefore(!endParents[i]?endParents[i-1]:!startParents[i]?startParents[i-1]:endParents[i]).collapse(true);}tmpStart&&domUtils.remove(tmpStart);tmpEnd&&domUtils.remove(tmpEnd);return frag;}/**
         * 创建一个跟document绑定的空的Range实例
         * @constructor
         * @param { Document } document 新建的选区所属的文档对象
         */ /**
         * @property { Node } startContainer 当前Range的开始边界的容器节点, 可以是一个元素节点或者是文本节点
         */ /**
         * @property { Node } startOffset 当前Range的开始边界容器节点的偏移量, 如果是元素节点，
         *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符
         */ /**
         * @property { Node } endContainer 当前Range的结束边界的容器节点, 可以是一个元素节点或者是文本节点
         */ /**
         * @property { Node } endOffset 当前Range的结束边界容器节点的偏移量, 如果是元素节点，
         *                              该值就是childNodes中的第几个节点， 如果是文本节点就是文本内容的第几个字符
         */ /**
         * @property { Boolean } collapsed 当前Range是否闭合
         * @default true
         * @remind Range是闭合的时候， startContainer === endContainer && startOffset === endOffset
         */ /**
         * @property { Document } document 当前Range所属的Document对象
         * @remind 不同range的的document属性可以是不同的
         */var Range=dom.Range=function(document){var me=this;me.startContainer=me.startOffset=me.endContainer=me.endOffset=null;me.document=document;me.collapsed=true;};/**
         * 删除fillData
         * @param doc
         * @param excludeNode
         */function removeFillData(doc,excludeNode){try{if(fillData&&domUtils.inDoc(fillData,doc)){if(!fillData.nodeValue.replace(fillCharReg,'').length){var tmpNode=fillData.parentNode;domUtils.remove(fillData);while(tmpNode&&domUtils.isEmptyInlineElement(tmpNode)&&(//safari的contains有bug
browser.safari?!(domUtils.getPosition(tmpNode,excludeNode)&domUtils.POSITION_CONTAINS):!tmpNode.contains(excludeNode))){fillData=tmpNode.parentNode;domUtils.remove(tmpNode);tmpNode=fillData;}}else{fillData.nodeValue=fillData.nodeValue.replace(fillCharReg,'');}}}catch(e){}}/**
         * @param node
         * @param dir
         */function mergeSibling(node,dir){var tmpNode;node=node[dir];while(node&&domUtils.isFillChar(node)){tmpNode=node[dir];domUtils.remove(node);node=tmpNode;}}Range.prototype={/**
             * 克隆选区的内容到一个DocumentFragment里
             * @method cloneContents
             * @return { DocumentFragment | NULL } 如果选区是闭合的将返回null， 否则， 返回包含所clone内容的DocumentFragment元素
             * @example
             * ```html
             * <body>
             *      <!-- 中括号表示选区 -->
             *      <b>x<i>x[x</i>xx]x</b>
             *
             *      <script>
             *          //range是已选中的选区
             *          var fragment = range.cloneContents(),
             *              node = document.createElement("div");
             *
             *          node.appendChild( fragment );
             *
             *          //output: <i>x</i>xx
             *          console.log( node.innerHTML );
             *
             *      </script>
             * </body>
             * ```
             */cloneContents:function cloneContents(){return this.collapsed?null:execContentsAction(this,0);},/**
             * 删除当前选区范围中的所有内容
             * @method deleteContents
             * @remind 执行完该操作后， 当前Range对象变成了闭合状态
             * @return { UE.dom.Range } 当前操作的Range对象
             * @example
             * ```html
             * <body>
             *      <!-- 中括号表示选区 -->
             *      <b>x<i>x[x</i>xx]x</b>
             *
             *      <script>
             *          //range是已选中的选区
             *          range.deleteContents();
             *
             *          //竖线表示闭合后的选区位置
             *          //output: <b>x<i>x</i>|x</b>
             *          console.log( document.body.innerHTML );
             *
             *          //此时， range的各项属性为
             *          //output: B
             *          console.log( range.startContainer.tagName );
             *          //output: 2
             *          console.log( range.startOffset );
             *          //output: B
             *          console.log( range.endContainer.tagName );
             *          //output: 2
             *          console.log( range.endOffset );
             *          //output: true
             *          console.log( range.collapsed );
             *
             *      </script>
             * </body>
             * ```
             */deleteContents:function deleteContents(){var txt;if(!this.collapsed){execContentsAction(this,1);}if(browser.webkit){txt=this.startContainer;if(txt.nodeType==3&&!txt.nodeValue.length){this.setStartBefore(txt).collapse(true);domUtils.remove(txt);}}return this;},/**
             * 将当前选区的内容提取到一个DocumentFragment里
             * @method extractContents
             * @remind 执行该操作后， 选区将变成闭合状态
             * @warning 执行该操作后， 原来选区所选中的内容将从dom树上剥离出来
             * @return { DocumentFragment } 返回包含所提取内容的DocumentFragment对象
             * @example
             * ```html
             * <body>
             *      <!-- 中括号表示选区 -->
             *      <b>x<i>x[x</i>xx]x</b>
             *
             *      <script>
             *          //range是已选中的选区
             *          var fragment = range.extractContents(),
             *              node = document.createElement( "div" );
             *
             *          node.appendChild( fragment );
             *
             *          //竖线表示闭合后的选区位置
             *
             *          //output: <b>x<i>x</i>|x</b>
             *          console.log( document.body.innerHTML );
             *          //output: <i>x</i>xx
             *          console.log( node.innerHTML );
             *
             *          //此时， range的各项属性为
             *          //output: B
             *          console.log( range.startContainer.tagName );
             *          //output: 2
             *          console.log( range.startOffset );
             *          //output: B
             *          console.log( range.endContainer.tagName );
             *          //output: 2
             *          console.log( range.endOffset );
             *          //output: true
             *          console.log( range.collapsed );
             *
             *      </script>
             * </body>
             */extractContents:function extractContents(){return this.collapsed?null:execContentsAction(this,2);},/**
             * 设置Range的开始容器节点和偏移量
             * @method  setStart
             * @remind 如果给定的节点是元素节点，那么offset指的是其子元素中索引为offset的元素，
             *          如果是文本节点，那么offset指的是其文本内容的第offset个字符
             * @remind 如果提供的容器节点是一个不能包含子元素的节点， 则该选区的开始容器将被设置
             *          为该节点的父节点， 此时， 其距离开始容器的偏移量也变成了该节点在其父节点
             *          中的索引
             * @param { Node } node 将被设为当前选区开始边界容器的节点对象
             * @param { int } offset 选区的开始位置偏移量
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <!-- 选区 -->
             * <b>xxx<i>x<span>xx</span>xx<em>xx</em>xxx</i>[xxx]</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.setStart( document.getElementsByTagName("i")[0], 1 );
             *
             *     //此时， 选区变成了
             *     //<b>xxx<i>x[<span>xx</span>xx<em>xx</em>xxx</i>xxx]</b>
             *
             * </script>
             * ```
             * @example
             * ```html
             * <!-- 选区 -->
             * <b>xxx<img>[xx]x</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.setStart( document.getElementsByTagName("img")[0], 3 );
             *
             *     //此时， 选区变成了
             *     //<b>xxx[<img>xx]x</b>
             *
             * </script>
             * ```
             */setStart:function setStart(node,offset){return setEndPoint(true,node,offset,this);},/**
             * 设置Range的结束容器和偏移量
             * @method  setEnd
             * @param { Node } node 作为当前选区结束边界容器的节点对象
             * @param { int } offset 结束边界的偏移量
             * @see UE.dom.Range:setStart(Node,int)
             * @return { UE.dom.Range } 当前range对象
             */setEnd:function setEnd(node,offset){return setEndPoint(false,node,offset,this);},/**
             * 将Range开始位置设置到node节点之后
             * @method  setStartAfter
             * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引+1
             * @param { Node } node 选区的开始边界将紧接着该节点之后
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>xx[x</span>xxx]</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.setStartAfter( document.getElementsByTagName("i")[0] );
             *
             *     //结果选区
             *     //<b>xx<i>xxx</i>[<span>xxx</span>xxx]</b>
             *
             * </script>
             * ```
             */setStartAfter:function setStartAfter(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node)+1);},/**
             * 将Range开始位置设置到node节点之前
             * @method  setStartBefore
             * @remind 该操作将会把给定节点的父节点作为range的开始容器， 且偏移量是该节点在其父节点中的位置索引
             * @param { Node } node 新的选区开始位置在该节点之前
             * @see UE.dom.Range:setStartAfter(Node)
             * @return { UE.dom.Range } 当前range对象
             */setStartBefore:function setStartBefore(node){return this.setStart(node.parentNode,domUtils.getNodeIndex(node));},/**
             * 将Range结束位置设置到node节点之后
             * @method  setEndAfter
             * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引+1
             * @param { Node } node 目标节点
             * @see UE.dom.Range:setStartAfter(Node)
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>[xx<i>xxx</i><span>xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.setStartAfter( document.getElementsByTagName("span")[0] );
             *
             *     //结果选区
             *     //<b>[xx<i>xxx</i><span>xxx</span>]xxx</b>
             *
             * </script>
             * ```
             */setEndAfter:function setEndAfter(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node)+1);},/**
             * 将Range结束位置设置到node节点之前
             * @method  setEndBefore
             * @remind 该操作将会把给定节点的父节点作为range的结束容器， 且偏移量是该节点在其父节点中的位置索引
             * @param { Node } node 目标节点
             * @see UE.dom.Range:setEndAfter(Node)
             * @return { UE.dom.Range } 当前range对象
             */setEndBefore:function setEndBefore(node){return this.setEnd(node.parentNode,domUtils.getNodeIndex(node));},/**
             * 设置Range的开始位置到node节点内的第一个子节点之前
             * @method  setStartAtFirst
             * @remind 选区的开始容器将变成给定的节点， 且偏移量为0
             * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。
             * @param { Node } node 目标节点
             * @see UE.dom.Range:setStartBefore(Node)
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.setStartAtFirst( document.getElementsByTagName("i")[0] );
             *
             *     //结果选区
             *     //<b>xx<i>[xxx</i><span>xx]x</span>xxx</b>
             *
             * </script>
             * ```
             */setStartAtFirst:function setStartAtFirst(node){return this.setStart(node,0);},/**
             * 设置Range的开始位置到node节点内的最后一个节点之后
             * @method setStartAtLast
             * @remind 选区的开始容器将变成给定的节点， 且偏移量为该节点的子节点数
             * @remind 如果给定的节点是元素节点， 则该节点必须是允许包含子节点的元素。
             * @param { Node } node 目标节点
             * @see UE.dom.Range:setStartAtFirst(Node)
             * @return { UE.dom.Range } 当前range对象
             */setStartAtLast:function setStartAtLast(node){return this.setStart(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**
             * 设置Range的结束位置到node节点内的第一个节点之前
             * @method  setEndAtFirst
             * @param { Node } node 目标节点
             * @remind 选区的结束容器将变成给定的节点， 且偏移量为0
             * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。
             * @see UE.dom.Range:setStartAtFirst(Node)
             * @return { UE.dom.Range } 当前range对象
             */setEndAtFirst:function setEndAtFirst(node){return this.setEnd(node,0);},/**
             * 设置Range的结束位置到node节点内的最后一个节点之后
             * @method  setEndAtLast
             * @param { Node } node 目标节点
             * @remind 选区的结束容器将变成给定的节点， 且偏移量为该节点的子节点数量
             * @remind node必须是一个元素节点， 且必须是允许包含子节点的元素。
             * @see UE.dom.Range:setStartAtFirst(Node)
             * @return { UE.dom.Range } 当前range对象
             */setEndAtLast:function setEndAtLast(node){return this.setEnd(node,node.nodeType==3?node.nodeValue.length:node.childNodes.length);},/**
             * 选中给定节点
             * @method  selectNode
             * @remind 此时， 选区的开始容器和结束容器都是该节点的父节点， 其startOffset是该节点在父节点中的位置索引，
             *          而endOffset为startOffset+1
             * @param { Node } node 需要选中的节点
             * @return { UE.dom.Range } 当前range对象，此时的range仅包含当前给定的节点对象
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.selectNode( document.getElementsByTagName("i")[0] );
             *
             *     //结果选区
             *     //<b>xx[<i>xxx</i>]<span>xxx</span>xxx</b>
             *
             * </script>
             * ```
             */selectNode:function selectNode(node){return this.setStartBefore(node).setEndAfter(node);},/**
             * 选中给定节点内部的所有节点
             * @method  selectNodeContents
             * @remind 此时， 选区的开始容器和结束容器都是该节点， 其startOffset为0，
             *          而endOffset是该节点的子节点数。
             * @param { Node } node 目标节点， 当前range将包含该节点内的所有节点
             * @return { UE.dom.Range } 当前range对象， 此时range仅包含给定节点的所有子节点
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.selectNode( document.getElementsByTagName("b")[0] );
             *
             *     //结果选区
             *     //<b>[xx<i>xxx</i><span>xxx</span>xxx]</b>
             *
             * </script>
             * ```
             */selectNodeContents:function selectNodeContents(node){return this.setStart(node,0).setEndAtLast(node);},/**
             * clone当前Range对象
             * @method  cloneRange
             * @remind 返回的range是一个全新的range对象， 其内部所有属性与当前被clone的range相同。
             * @return { UE.dom.Range } 当前range对象的一个副本
             */cloneRange:function cloneRange(){var me=this;return new Range(me.document).setStart(me.startContainer,me.startOffset).setEnd(me.endContainer,me.endOffset);},/**
             * 向当前选区的结束处闭合选区
             * @method  collapse
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.collapse();
             *
             *     //结果选区
             *     //“|”表示选区已闭合
             *     //<b>xx<i>xxx</i><span>xx|x</span>xxx</b>
             *
             * </script>
             * ```
             */ /**
             * 闭合当前选区，根据给定的toStart参数项决定是向当前选区开始处闭合还是向结束处闭合，
             * 如果toStart的值为true，则向开始位置闭合， 反之，向结束位置闭合。
             * @method  collapse
             * @param { Boolean } toStart 是否向选区开始处闭合
             * @return { UE.dom.Range } 当前range对象，此时range对象处于闭合状态
             * @see UE.dom.Range:collapse()
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>xx<i>xxx</i><span>[xx]x</span>xxx</b>
             *
             * <script>
             *
             *     //执行操作
             *     range.collapse( true );
             *
             *     //结果选区
             *     //“|”表示选区已闭合
             *     //<b>xx<i>xxx</i><span>|xxx</span>xxx</b>
             *
             * </script>
             * ```
             */collapse:function collapse(toStart){var me=this;if(toStart){me.endContainer=me.startContainer;me.endOffset=me.startOffset;}else{me.startContainer=me.endContainer;me.startOffset=me.endOffset;}me.collapsed=true;return me;},/**
             * 调整range的开始位置和结束位置，使其"收缩"到最小的位置
             * @method  shrinkBoundary
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             * <span>xx<b>xx[</b>xxxxx]</span> => <span>xx<b>xx</b>[xxxxx]</span>
             * ```
             *
             * @example
             * ```html
             * <!-- 选区示例 -->
             * <b>x[xx</b><i>]xxx</i>
             *
             * <script>
             *
             *     //执行收缩
             *     range.shrinkBoundary();
             *
             *     //结果选区
             *     //<b>x[xx]</b><i>xxx</i>
             * </script>
             * ```
             *
             * @example
             * ```html
             * [<b><i>xxxx</i>xxxxxxx</b>] => <b><i>[xxxx</i>xxxxxxx]</b>
             * ```
             */ /**
             * 调整range的开始位置和结束位置，使其"收缩"到最小的位置，
             * 如果ignoreEnd的值为true，则忽略对结束位置的调整
             * @method  shrinkBoundary
             * @param { Boolean } ignoreEnd 是否忽略对结束位置的调整
             * @return { UE.dom.Range } 当前range对象
             * @see UE.dom.domUtils.Range:shrinkBoundary()
             */shrinkBoundary:function shrinkBoundary(ignoreEnd){var me=this,child,collapsed=me.collapsed;function check(node){return node.nodeType==1&&!domUtils.isBookmarkNode(node)&&!dtd.$empty[node.tagName]&&!dtd.$nonChild[node.tagName];}while(me.startContainer.nodeType==1//是element
&&(child=me.startContainer.childNodes[me.startOffset])//子节点也是element
&&check(child)){me.setStart(child,0);}if(collapsed){return me.collapse(true);}if(!ignoreEnd){while(me.endContainer.nodeType==1//是element
&&me.endOffset>0//如果是空元素就退出 endOffset=0那么endOffst-1为负值，childNodes[endOffset]报错
&&(child=me.endContainer.childNodes[me.endOffset-1])//子节点也是element
&&check(child)){me.setEnd(child,child.childNodes.length);}}return me;},/**
             * 获取离当前选区内包含的所有节点最近的公共祖先节点，
             * @method  getCommonAncestor
             * @remind 返回的公共祖先节点一定不是range自身的容器节点， 但有可能是一个文本节点
             * @return { Node } 当前range对象内所有节点的公共祖先节点
             * @example
             * ```html
             * //选区示例
             * <span>xxx<b>x[x<em>xx]x</em>xxx</b>xx</span>
             * <script>
             *
             *     var node = range.getCommonAncestor();
             *
             *     //公共祖先节点是： b节点
             *     //输出： B
             *     console.log(node.tagName);
             *
             * </script>
             * ```
             */ /**
             * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到
             * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf
             * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点
             * @method  getCommonAncestor
             * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点
             * @return { Node } 当前range对象内所有节点的公共祖先节点
             * @see UE.dom.Range:getCommonAncestor()
             * @example
             * ```html
             * <body>
             *
             *     <!-- 选区示例 -->
             *     <b>xxx<i>xxxx<span>xx[x</span>xx]x</i>xxxxxxx</b>
             *
             *     <script>
             *
             *         var node = range.getCommonAncestor( false );
             *
             *         //这里的公共祖先节点是B而不是I， 是因为参数限制了获取到的节点不能是容器节点
             *         //output: B
             *         console.log( node.tagName );
             *
             *     </script>
             *
             * </body>
             * ```
             */ /**
             * 获取当前选区所包含的所有节点的公共祖先节点， 可以根据给定的参数 includeSelf 决定获取到
             * 的公共祖先节点是否可以是当前选区的startContainer或endContainer节点， 如果 includeSelf
             * 的取值为true， 则返回的节点可以是自身的容器节点， 否则， 则不能是容器节点； 同时可以根据
             * ignoreTextNode 参数的取值决定是否忽略类型为文本节点的祖先节点。
             * @method  getCommonAncestor
             * @param { Boolean } includeSelf 是否允许获取到的公共祖先节点是当前range对象的容器节点
             * @param { Boolean } ignoreTextNode 获取祖先节点的过程中是否忽略类型为文本节点的祖先节点
             * @return { Node } 当前range对象内所有节点的公共祖先节点
             * @see UE.dom.Range:getCommonAncestor()
             * @see UE.dom.Range:getCommonAncestor(Boolean)
             * @example
             * ```html
             * <body>
             *
             *     <!-- 选区示例 -->
             *     <b>xxx<i>xxxx<span>x[x]x</span>xxx</i>xxxxxxx</b>
             *
             *     <script>
             *
             *         var node = range.getCommonAncestor( true, false );
             *
             *         //output: SPAN
             *         console.log( node.tagName );
             *
             *     </script>
             *
             * </body>
             * ```
             */getCommonAncestor:function getCommonAncestor(includeSelf,ignoreTextNode){var me=this,start=me.startContainer,end=me.endContainer;if(start===end){if(includeSelf&&selectOneNode(this)){start=start.childNodes[me.startOffset];if(start.nodeType==1)return start;}//只有在上来就相等的情况下才会出现是文本的情况
return ignoreTextNode&&start.nodeType==3?start.parentNode:start;}return domUtils.getCommonAncestor(start,end);},/**
             * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上
             * @method trimBoundary
             * @remind 该操作有可能会引起文本节点被切开
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             *
             * //选区示例
             * <b>xxx<i>[xxxxx]</i>xxx</b>
             *
             * <script>
             *     //未调整前， 选区的开始容器和结束都是文本节点
             *     //执行调整
             *     range.trimBoundary();
             *
             *     //调整之后， 容器节点变成了i节点
             *     //<b>xxx[<i>xxxxx</i>]xxx</b>
             * </script>
             * ```
             */ /**
             * 调整当前Range的开始和结束边界容器，如果是容器节点是文本节点,就调整到包含该文本节点的父节点上，
             * 可以根据 ignoreEnd 参数的值决定是否调整对结束边界的调整
             * @method trimBoundary
             * @param { Boolean } ignoreEnd 是否忽略对结束边界的调整
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             *
             * //选区示例
             * <b>xxx<i>[xxxxx]</i>xxx</b>
             *
             * <script>
             *     //未调整前， 选区的开始容器和结束都是文本节点
             *     //执行调整
             *     range.trimBoundary( true );
             *
             *     //调整之后， 开始容器节点变成了i节点
             *     //但是， 结束容器没有发生变化
             *     //<b>xxx[<i>xxxxx]</i>xxx</b>
             * </script>
             * ```
             */trimBoundary:function trimBoundary(ignoreEnd){this.txtToElmBoundary();var start=this.startContainer,offset=this.startOffset,collapsed=this.collapsed,end=this.endContainer;if(start.nodeType==3){if(offset==0){this.setStartBefore(start);}else{if(offset>=start.nodeValue.length){this.setStartAfter(start);}else{var textNode=domUtils.split(start,offset);//跟新结束边界
if(start===end){this.setEnd(textNode,this.endOffset-offset);}else if(start.parentNode===end){this.endOffset+=1;}this.setStartBefore(textNode);}}if(collapsed){return this.collapse(true);}}if(!ignoreEnd){offset=this.endOffset;end=this.endContainer;if(end.nodeType==3){if(offset==0){this.setEndBefore(end);}else{offset<end.nodeValue.length&&domUtils.split(end,offset);this.setEndAfter(end);}}}return this;},/**
             * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则什么也不做
             * @method txtToElmBoundary
             * @remind 该操作不会修改dom节点
             * @return { UE.dom.Range } 当前range对象
             */ /**
             * 如果选区在文本的边界上，就扩展选区到文本的父节点上, 如果当前选区是闭合的， 则根据参数项
             * ignoreCollapsed 的值决定是否执行该调整
             * @method txtToElmBoundary
             * @param { Boolean } ignoreCollapsed 是否忽略选区的闭合状态， 如果该参数取值为true， 则
             *                      不论选区是否闭合， 都会执行该操作， 反之， 则不会对闭合的选区执行该操作
             * @return { UE.dom.Range } 当前range对象
             */txtToElmBoundary:function txtToElmBoundary(ignoreCollapsed){function adjust(r,c){var container=r[c+'Container'],offset=r[c+'Offset'];if(container.nodeType==3){if(!offset){r['set'+c.replace(/(\w)/,function(a){return a.toUpperCase();})+'Before'](container);}else if(offset>=container.nodeValue.length){r['set'+c.replace(/(\w)/,function(a){return a.toUpperCase();})+'After'](container);}}}if(ignoreCollapsed||!this.collapsed){adjust(this,'start');adjust(this,'end');}return this;},/**
             * 在当前选区的开始位置前插入节点，新插入的节点会被该range包含
             * @method  insertNode
             * @param { Node } node 需要插入的节点
             * @remind 插入的节点可以是一个DocumentFragment依次插入多个节点
             * @return { UE.dom.Range } 当前range对象
             */insertNode:function insertNode(node){var first=node,length=1;if(node.nodeType==11){first=node.firstChild;length=node.childNodes.length;}this.trimBoundary(true);var start=this.startContainer,offset=this.startOffset;var nextNode=start.childNodes[offset];if(nextNode){start.insertBefore(node,nextNode);}else{start.appendChild(node);}if(first.parentNode===this.endContainer){this.endOffset=this.endOffset+length;}return this.setStartBefore(first);},/**
             * 闭合选区到当前选区的开始位置， 并且定位光标到闭合后的位置
             * @method  setCursor
             * @return { UE.dom.Range } 当前range对象
             * @see UE.dom.Range:collapse()
             */ /**
             * 闭合选区，可以根据参数toEnd的值控制选区是向前闭合还是向后闭合， 并且定位光标到闭合后的位置。
             * @method  setCursor
             * @param { Boolean } toEnd 是否向后闭合， 如果为true， 则闭合选区时， 将向结束容器方向闭合，
             *                      反之，则向开始容器方向闭合
             * @return { UE.dom.Range } 当前range对象
             * @see UE.dom.Range:collapse(Boolean)
             */setCursor:function setCursor(toEnd,noFillData){return this.collapse(!toEnd).select(noFillData);},/**
             * 创建当前range的一个书签，记录下当前range的位置，方便当dom树改变时，还能找回原来的选区位置
             * @method createBookmark
             * @param { Boolean } serialize 控制返回的标记位置是对当前位置的引用还是ID，如果该值为true，则
             *                              返回标记位置的ID， 反之则返回标记位置节点的引用
             * @return { Object } 返回一个书签记录键值对， 其包含的key有： start => 开始标记的ID或者引用，
             *                          end => 结束标记的ID或引用， id => 当前标记的类型， 如果为true，则表示
             *                          返回的记录的类型为ID， 反之则为引用
             */createBookmark:function createBookmark(serialize,same){var endNode,startNode=this.document.createElement('span');startNode.style.cssText='display:none;line-height:0px;';startNode.appendChild(this.document.createTextNode("\u200D"));startNode.id='_baidu_bookmark_start_'+(same?'':guid++);if(!this.collapsed){endNode=startNode.cloneNode(true);endNode.id='_baidu_bookmark_end_'+(same?'':guid++);}this.insertNode(startNode);if(endNode){this.collapse().insertNode(endNode).setEndBefore(endNode);}this.setStartAfter(startNode);return {start:serialize?startNode.id:startNode,end:endNode?serialize?endNode.id:endNode:null,id:serialize};},/**
             *  调整当前range的边界到书签位置，并删除该书签对象所标记的位置内的节点
             *  @method  moveToBookmark
             *  @param { BookMark } bookmark createBookmark所创建的标签对象
             *  @return { UE.dom.Range } 当前range对象
             *  @see UE.dom.Range:createBookmark(Boolean)
             */moveToBookmark:function moveToBookmark(bookmark){var start=bookmark.id?this.document.getElementById(bookmark.start):bookmark.start,end=bookmark.end&&bookmark.id?this.document.getElementById(bookmark.end):bookmark.end;this.setStartBefore(start);domUtils.remove(start);if(end){this.setEndBefore(end);domUtils.remove(end);}else{this.collapse(true);}return this;},/**
             * 调整range的边界，使其"放大"到最近的父节点
             * @method  enlarge
             * @remind 会引起选区的变化
             * @return { UE.dom.Range } 当前range对象
             */ /**
             * 调整range的边界，使其"放大"到最近的父节点，根据参数 toBlock 的取值， 可以
             * 要求扩大之后的父节点是block节点
             * @method  enlarge
             * @param { Boolean } toBlock 是否要求扩大之后的父节点必须是block节点
             * @return { UE.dom.Range } 当前range对象
             */enlarge:function enlarge(toBlock,stopFn){var isBody=domUtils.isBody,pre,node,tmp=this.document.createTextNode('');if(toBlock){node=this.startContainer;if(node.nodeType==1){if(node.childNodes[this.startOffset]){pre=node=node.childNodes[this.startOffset];}else{node.appendChild(tmp);pre=node=tmp;}}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.previousSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setStartBefore(node);break;}pre=node;node=node.parentNode;}node=this.endContainer;if(node.nodeType==1){if(pre=node.childNodes[this.endOffset]){node.insertBefore(tmp,pre);}else{node.appendChild(tmp);}pre=node=tmp;}else{pre=node;}while(1){if(domUtils.isBlockElm(node)){node=pre;while((pre=node.nextSibling)&&!domUtils.isBlockElm(pre)){node=pre;}this.setEndAfter(node);break;}pre=node;node=node.parentNode;}if(tmp.parentNode===this.endContainer){this.endOffset--;}domUtils.remove(tmp);}// 扩展边界到最大
if(!this.collapsed){while(this.startOffset==0){if(stopFn&&stopFn(this.startContainer)){break;}if(isBody(this.startContainer)){break;}this.setStartBefore(this.startContainer);}while(this.endOffset==(this.endContainer.nodeType==1?this.endContainer.childNodes.length:this.endContainer.nodeValue.length)){if(stopFn&&stopFn(this.endContainer)){break;}if(isBody(this.endContainer)){break;}this.setEndAfter(this.endContainer);}}return this;},enlargeToBlockElm:function enlargeToBlockElm(ignoreEnd){while(!domUtils.isBlockElm(this.startContainer)){this.setStartBefore(this.startContainer);}if(!ignoreEnd){while(!domUtils.isBlockElm(this.endContainer)){this.setEndAfter(this.endContainer);}}return this;},/**
             * 调整Range的边界，使其"缩小"到最合适的位置
             * @method adjustmentBoundary
             * @return { UE.dom.Range } 当前range对象
             * @see UE.dom.Range:shrinkBoundary()
             */adjustmentBoundary:function adjustmentBoundary(){if(!this.collapsed){while(!domUtils.isBody(this.startContainer)&&this.startOffset==this.startContainer[this.startContainer.nodeType==3?'nodeValue':'childNodes'].length&&this.startContainer[this.startContainer.nodeType==3?'nodeValue':'childNodes'].length){this.setStartAfter(this.startContainer);}while(!domUtils.isBody(this.endContainer)&&!this.endOffset&&this.endContainer[this.endContainer.nodeType==3?'nodeValue':'childNodes'].length){this.setEndBefore(this.endContainer);}}return this;},/**
             * 给range选区中的内容添加给定的inline标签
             * @method applyInlineStyle
             * @param { String } tagName 需要添加的标签名
             * @example
             * ```html
             * <p>xxxx[xxxx]x</p>  ==>  range.applyInlineStyle("strong")  ==>  <p>xxxx[<strong>xxxx</strong>]x</p>
             * ```
             */ /**
             * 给range选区中的内容添加给定的inline标签， 并且为标签附加上一些初始化属性。
             * @method applyInlineStyle
             * @param { String } tagName 需要添加的标签名
             * @param { Object } attrs 跟随新添加的标签的属性
             * @return { UE.dom.Range } 当前选区
             * @example
             * ```html
             * <p>xxxx[xxxx]x</p>
             *
             * ==>
             *
             * <!-- 执行操作 -->
             * range.applyInlineStyle("strong",{"style":"font-size:12px"})
             *
             * ==>
             *
             * <p>xxxx[<strong style="font-size:12px">xxxx</strong>]x</p>
             * ```
             */applyInlineStyle:function applyInlineStyle(tagName,attrs,list){if(this.collapsed)return this;this.trimBoundary().enlarge(false,function(node){return node.nodeType==1&&domUtils.isBlockElm(node);}).adjustmentBoundary();var bookmark=this.createBookmark(),end=bookmark.end,filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br':!domUtils.isWhitespace(node);},current=domUtils.getNextDomNode(bookmark.start,false,filterFn),node,pre,range=this.cloneRange();while(current&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd[tagName][current.tagName]){range.setStartBefore(current);node=current;while(node&&(node.nodeType==3||dtd[tagName][node.tagName])&&node!==end){pre=node;node=domUtils.getNextDomNode(node,node.nodeType==1,null,function(parent){return dtd[tagName][parent.tagName];});}var frag=range.setEndAfter(pre).extractContents(),elm;if(list&&list.length>0){var level,top;top=level=list[0].cloneNode(false);for(var i=1,ci;ci=list[i++];){level.appendChild(ci.cloneNode(false));level=level.firstChild;}elm=level;}else{elm=range.document.createElement(tagName);}if(attrs){domUtils.setAttributes(elm,attrs);}elm.appendChild(frag);range.insertNode(list?top:elm);//处理下滑线在a上的情况
var aNode;if(tagName=='span'&&attrs.style&&/text\-decoration/.test(attrs.style)&&(aNode=domUtils.findParentByTagName(elm,'a',true))){domUtils.setAttributes(aNode,attrs);domUtils.remove(elm,true);elm=aNode;}else{domUtils.mergeSibling(elm);domUtils.clearEmptySibling(elm);}//去除子节点相同的
domUtils.mergeChild(elm,attrs);current=domUtils.getNextDomNode(elm,false,filterFn);domUtils.mergeToParent(elm);if(node===end){break;}}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return this.moveToBookmark(bookmark);},/**
             * 移除当前选区内指定的inline标签，但保留其中的内容
             * @method removeInlineStyle
             * @param { String } tagName 需要移除的标签名
             * @return { UE.dom.Range } 当前的range对象
             * @example
             * ```html
             * xx[x<span>xxx<em>yyy</em>zz]z</span>  => range.removeInlineStyle(["em"])  => xx[x<span>xxxyyyzz]z</span>
             * ```
             */ /**
             * 移除当前选区内指定的一组inline标签，但保留其中的内容
             * @method removeInlineStyle
             * @param { Array } tagNameArr 需要移除的标签名的数组
             * @return { UE.dom.Range } 当前的range对象
             * @see UE.dom.Range:removeInlineStyle(String)
             */removeInlineStyle:function removeInlineStyle(tagNames){if(this.collapsed)return this;tagNames=utils.isArray(tagNames)?tagNames:[tagNames];this.shrinkBoundary().adjustmentBoundary();var start=this.startContainer,end=this.endContainer;while(1){if(start.nodeType==1){if(utils.indexOf(tagNames,start.tagName.toLowerCase())>-1){break;}if(start.tagName.toLowerCase()=='body'){start=null;break;}}start=start.parentNode;}while(1){if(end.nodeType==1){if(utils.indexOf(tagNames,end.tagName.toLowerCase())>-1){break;}if(end.tagName.toLowerCase()=='body'){end=null;break;}}end=end.parentNode;}var bookmark=this.createBookmark(),frag,tmpRange;if(start){tmpRange=this.cloneRange().setEndBefore(bookmark.start).setStartBefore(start);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(start,true);start.parentNode.insertBefore(bookmark.start,start);}if(end){tmpRange=this.cloneRange().setStartAfter(bookmark.end).setEndAfter(end);frag=tmpRange.extractContents();tmpRange.insertNode(frag);domUtils.clearEmptySibling(end,false,true);end.parentNode.insertBefore(bookmark.end,end.nextSibling);}var current=domUtils.getNextDomNode(bookmark.start,false,function(node){return node.nodeType==1;}),next;while(current&&current!==bookmark.end){next=domUtils.getNextDomNode(current,true,function(node){return node.nodeType==1;});if(utils.indexOf(tagNames,current.tagName.toLowerCase())>-1){domUtils.remove(current,true);}current=next;}return this.moveToBookmark(bookmark);},/**
             * 获取当前选中的自闭合的节点
             * @method  getClosedNode
             * @return { Node | NULL } 如果当前选中的是自闭合节点， 则返回该节点， 否则返回NULL
             */getClosedNode:function getClosedNode(){var node;if(!this.collapsed){var range=this.cloneRange().adjustmentBoundary().shrinkBoundary();if(selectOneNode(range)){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&(dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName])){node=child;}}}return node;},/**
             * 在页面上高亮range所表示的选区
             * @method select
             * @return { UE.dom.Range } 返回当前Range对象
             */ //这里不区分ie9以上，trace:3824
select:browser.ie?function(noFillData,textRange){var nativeRange;if(!this.collapsed)this.shrinkBoundary();var node=this.getClosedNode();if(node&&!textRange){try{nativeRange=this.document.body.createControlRange();nativeRange.addElement(node);nativeRange.select();}catch(e){}return this;}var bookmark=this.createBookmark(),start=bookmark.start,end;nativeRange=this.document.body.createTextRange();nativeRange.moveToElementText(start);nativeRange.moveStart('character',1);if(!this.collapsed){var nativeRangeEnd=this.document.body.createTextRange();end=bookmark.end;nativeRangeEnd.moveToElementText(end);nativeRange.setEndPoint('EndToEnd',nativeRangeEnd);}else{if(!noFillData&&this.startContainer.nodeType!=3){//使用<span>|x<span>固定住光标
var tmpText=this.document.createTextNode(fillChar),tmp=this.document.createElement('span');tmp.appendChild(this.document.createTextNode(fillChar));start.parentNode.insertBefore(tmp,start);start.parentNode.insertBefore(tmpText,start);//当点b,i,u时，不能清除i上边的b
removeFillData(this.document,tmpText);fillData=tmpText;mergeSibling(tmp,'previousSibling');mergeSibling(start,'nextSibling');nativeRange.moveStart('character',-1);nativeRange.collapse(true);}}this.moveToBookmark(bookmark);tmp&&domUtils.remove(tmp);//IE在隐藏状态下不支持range操作，catch一下
try{nativeRange.select();}catch(e){}return this;}:function(notInsertFillData){function checkOffset(rng){function check(node,offset,dir){if(node.nodeType==3&&node.nodeValue.length<offset){rng[dir+'Offset']=node.nodeValue.length;}}check(rng.startContainer,rng.startOffset,'start');check(rng.endContainer,rng.endOffset,'end');}var win=domUtils.getWindow(this.document),sel=win.getSelection(),txtNode;//FF下关闭自动长高时滚动条在关闭dialog时会跳
//ff下如果不body.focus将不能定位闭合光标到编辑器内
browser.gecko?this.document.body.focus():win.focus();if(sel){sel.removeAllRanges();// trace:870 chrome/safari后边是br对于闭合得range不能定位 所以去掉了判断
// this.startContainer.nodeType != 3 &&! ((child = this.startContainer.childNodes[this.startOffset]) && child.nodeType == 1 && child.tagName == 'BR'
if(this.collapsed&&!notInsertFillData){//                    //opear如果没有节点接着，原生的不能够定位,不能在body的第一级插入空白节点
//                    if (notInsertFillData && browser.opera && !domUtils.isBody(this.startContainer) && this.startContainer.nodeType == 1) {
//                        var tmp = this.document.createTextNode('');
//                        this.insertNode(tmp).setStart(tmp, 0).collapse(true);
//                    }
//
//处理光标落在文本节点的情况
//处理以下的情况
//<b>|xxxx</b>
//<b>xxxx</b>|xxxx
//xxxx<b>|</b>
var start=this.startContainer,child=start;if(start.nodeType==1){child=start.childNodes[this.startOffset];}if(!(start.nodeType==3&&this.startOffset)&&(child?!child.previousSibling||child.previousSibling.nodeType!=3:!start.lastChild||start.lastChild.nodeType!=3)){txtNode=this.document.createTextNode(fillChar);//跟着前边走
this.insertNode(txtNode);removeFillData(this.document,txtNode);mergeSibling(txtNode,'previousSibling');mergeSibling(txtNode,'nextSibling');fillData=txtNode;this.setStart(txtNode,browser.webkit?1:0).collapse(true);}}var nativeRange=this.document.createRange();if(this.collapsed&&browser.opera&&this.startContainer.nodeType==1){var child=this.startContainer.childNodes[this.startOffset];if(!child){//往前靠拢
child=this.startContainer.lastChild;if(child&&domUtils.isBr(child)){this.setStartBefore(child).collapse(true);}}else{//向后靠拢
while(child&&domUtils.isBlockElm(child)){if(child.nodeType==1&&child.childNodes[0]){child=child.childNodes[0];}else{break;}}child&&this.setStartBefore(child).collapse(true);}}//是createAddress最后一位算的不准，现在这里进行微调
checkOffset(this);nativeRange.setStart(this.startContainer,this.startOffset);nativeRange.setEnd(this.endContainer,this.endOffset);sel.addRange(nativeRange);}return this;},/**
             * 滚动到当前range开始的位置
             * @method scrollToView
             * @param { Window } win 当前range对象所属的window对象
             * @return { UE.dom.Range } 当前Range对象
             */ /**
             * 滚动到距离当前range开始位置 offset 的位置处
             * @method scrollToView
             * @param { Window } win 当前range对象所属的window对象
             * @param { Number } offset 距离range开始位置处的偏移量， 如果为正数， 则向下偏移， 反之， 则向上偏移
             * @return { UE.dom.Range } 当前Range对象
             */scrollToView:function scrollToView(win,offset){win=win?window:domUtils.getWindow(this.document);var me=this,span=me.document.createElement('span');//trace:717
span.innerHTML='&nbsp;';me.cloneRange().insertNode(span);domUtils.scrollToView(span,win,offset);domUtils.remove(span);return me;},/**
             * 判断当前选区内容是否占位符
             * @private
             * @method inFillChar
             * @return { Boolean } 如果是占位符返回true，否则返回false
             */inFillChar:function inFillChar(){var start=this.startContainer;if(this.collapsed&&start.nodeType==3&&start.nodeValue.replace(new RegExp('^'+domUtils.fillChar),'').length+1==start.nodeValue.length){return true;}return false;},/**
             * 保存
             * @method createAddress
             * @private
             * @return { Boolean } 返回开始和结束的位置
             * @example
             * ```html
             * <body>
             *     <p>
             *         aaaa
             *         <em>
             *             <!-- 选区开始 -->
             *             bbbb
             *             <!-- 选区结束 -->
             *         </em>
             *     </p>
             *
             *     <script>
             *         //output: {startAddress:[0,1,0,0],endAddress:[0,1,0,4]}
             *         console.log( range.createAddress() );
             *     </script>
             * </body>
             * ```
             */createAddress:function createAddress(ignoreEnd,ignoreTxt){var addr={},me=this;function getAddress(isStart){var node=isStart?me.startContainer:me.endContainer;var parents=domUtils.findParents(node,true,function(node){return !domUtils.isBody(node);}),addrs=[];for(var i=0,ci;ci=parents[i++];){addrs.push(domUtils.getNodeIndex(ci,ignoreTxt));}var firstIndex=0;if(ignoreTxt){if(node.nodeType==3){var tmpNode=node.previousSibling;while(tmpNode&&tmpNode.nodeType==3){firstIndex+=tmpNode.nodeValue.replace(fillCharReg,'').length;tmpNode=tmpNode.previousSibling;}firstIndex+=isStart?me.startOffset:me.endOffset;// - (fillCharReg.test(node.nodeValue) ? 1 : 0 )
}else{node=node.childNodes[isStart?me.startOffset:me.endOffset];if(node){firstIndex=domUtils.getNodeIndex(node,ignoreTxt);}else{node=isStart?me.startContainer:me.endContainer;var first=node.firstChild;while(first){if(domUtils.isFillChar(first)){first=first.nextSibling;continue;}firstIndex++;if(first.nodeType==3){while(first&&first.nodeType==3){first=first.nextSibling;}}else{first=first.nextSibling;}}}}}else{firstIndex=isStart?domUtils.isFillChar(node)?0:me.startOffset:me.endOffset;}if(firstIndex<0){firstIndex=0;}addrs.push(firstIndex);return addrs;}addr.startAddress=getAddress(true);if(!ignoreEnd){addr.endAddress=me.collapsed?[].concat(addr.startAddress):getAddress();}return addr;},/**
             * 保存
             * @method createAddress
             * @private
             * @return { Boolean } 返回开始和结束的位置
             * @example
             * ```html
             * <body>
             *     <p>
             *         aaaa
             *         <em>
             *             <!-- 选区开始 -->
             *             bbbb
             *             <!-- 选区结束 -->
             *         </em>
             *     </p>
             *
             *     <script>
             *         var range = editor.selection.getRange();
             *         range.moveToAddress({startAddress:[0,1,0,0],endAddress:[0,1,0,4]});
             *         range.select();
             *         //output: 'bbbb'
             *         console.log(editor.selection.getText());
             *     </script>
             * </body>
             * ```
             */moveToAddress:function moveToAddress(addr,ignoreEnd){var me=this;function getNode(address,isStart){var tmpNode=me.document.body,parentNode,offset;for(var i=0,ci,l=address.length;i<l;i++){ci=address[i];parentNode=tmpNode;tmpNode=tmpNode.childNodes[ci];if(!tmpNode){offset=ci;break;}}if(isStart){if(tmpNode){me.setStartBefore(tmpNode);}else{me.setStart(parentNode,offset);}}else{if(tmpNode){me.setEndBefore(tmpNode);}else{me.setEnd(parentNode,offset);}}}getNode(addr.startAddress,true);!ignoreEnd&&addr.endAddress&&getNode(addr.endAddress);return me;},/**
             * 判断给定的Range对象是否和当前Range对象表示的是同一个选区
             * @method equals
             * @param { UE.dom.Range } 需要判断的Range对象
             * @return { Boolean } 如果给定的Range对象与当前Range对象表示的是同一个选区， 则返回true， 否则返回false
             */equals:function equals(rng){for(var p in this){if(this.hasOwnProperty(p)){if(this[p]!==rng[p])return false;}}return true;},/**
             * 遍历range内的节点。每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点
             * 作为其参数。
             * @method traversal
             * @param { Function }  doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数
             * @return { UE.dom.Range } 当前range对象
             * @example
             * ```html
             *
             * <body>
             *
             *     <!-- 选区开始 -->
             *     <span></span>
             *     <a></a>
             *     <!-- 选区结束 -->
             * </body>
             *
             * <script>
             *
             *     //output: <span></span><a></a>
             *     console.log( range.cloneContents() );
             *
             *     range.traversal( function ( node ) {
             *
             *         if ( node.nodeType === 1 ) {
             *             node.className = "test";
             *         }
             *
             *     } );
             *
             *     //output: <span class="test"></span><a class="test"></a>
             *     console.log( range.cloneContents() );
             *
             * </script>
             * ```
             */ /**
             * 遍历range内的节点。
             * 每当遍历一个节点时， 都会执行参数项 doFn 指定的函数， 该函数的接受当前遍历的节点
             * 作为其参数。
             * 可以通过参数项 filterFn 来指定一个过滤器， 只有符合该过滤器过滤规则的节点才会触
             * 发doFn函数的执行
             * @method traversal
             * @param { Function } doFn 对每个遍历的节点要执行的方法， 该方法接受当前遍历的节点作为其参数
             * @param { Function } filterFn 过滤器， 该函数接受当前遍历的节点作为参数， 如果该节点满足过滤
             *                      规则， 请返回true， 该节点会触发doFn， 否则， 请返回false， 则该节点不
             *                      会触发doFn。
             * @return { UE.dom.Range } 当前range对象
             * @see UE.dom.Range:traversal(Function)
             * @example
             * ```html
             *
             * <body>
             *
             *     <!-- 选区开始 -->
             *     <span></span>
             *     <a></a>
             *     <!-- 选区结束 -->
             * </body>
             *
             * <script>
             *
             *     //output: <span></span><a></a>
             *     console.log( range.cloneContents() );
             *
             *     range.traversal( function ( node ) {
             *
             *         node.className = "test";
             *
             *     }, function ( node ) {
             *          return node.nodeType === 1;
             *     } );
             *
             *     //output: <span class="test"></span><a class="test"></a>
             *     console.log( range.cloneContents() );
             *
             * </script>
             * ```
             */traversal:function traversal(doFn,filterFn){if(this.collapsed)return this;var bookmark=this.createBookmark(),end=bookmark.end,current=domUtils.getNextDomNode(bookmark.start,false,filterFn);while(current&&current!==end&&domUtils.getPosition(current,end)&domUtils.POSITION_PRECEDING){var tmpNode=domUtils.getNextDomNode(current,false,filterFn);doFn(current);current=tmpNode;}return this.moveToBookmark(bookmark);}};})();// core/Selection.js
/**
     * 选集
     * @file
     * @module UE.dom
     * @class Selection
     * @since 1.2.6.1
     */ /**
     * 选区集合
     * @unfile
     * @module UE.dom
     * @class Selection
     */(function(){function getBoundaryInformation(range,start){var getIndex=domUtils.getNodeIndex;range=range.duplicate();range.collapse(start);var parent=range.parentElement();//如果节点里没有子节点，直接退出
if(!parent.hasChildNodes()){return {container:parent,offset:0};}var siblings=parent.children,child,testRange=range.duplicate(),startIndex=0,endIndex=siblings.length-1,index=-1,distance;while(startIndex<=endIndex){index=Math.floor((startIndex+endIndex)/2);child=siblings[index];testRange.moveToElementText(child);var position=testRange.compareEndPoints('StartToStart',range);if(position>0){endIndex=index-1;}else if(position<0){startIndex=index+1;}else{//trace:1043
return {container:parent,offset:getIndex(child)};}}if(index==-1){testRange.moveToElementText(parent);testRange.setEndPoint('StartToStart',range);distance=testRange.text.replace(/(\r\n|\r)/g,'\n').length;siblings=parent.childNodes;if(!distance){child=siblings[siblings.length-1];return {container:child,offset:child.nodeValue.length};}var i=siblings.length;while(distance>0){distance-=siblings[--i].nodeValue.length;}return {container:siblings[i],offset:-distance};}testRange.collapse(position>0);testRange.setEndPoint(position>0?'StartToStart':'EndToStart',range);distance=testRange.text.replace(/(\r\n|\r)/g,'\n').length;if(!distance){return dtd.$empty[child.tagName]||dtd.$nonChild[child.tagName]?{container:parent,offset:getIndex(child)+(position>0?0:1)}:{container:child,offset:position>0?0:child.childNodes.length};}while(distance>0){try{var pre=child;child=child[position>0?'previousSibling':'nextSibling'];distance-=child.nodeValue.length;}catch(e){return {container:parent,offset:getIndex(pre)};}}return {container:child,offset:position>0?-distance:child.nodeValue.length+distance};}/**
         * 将ieRange转换为Range对象
         * @param {Range}   ieRange    ieRange对象
         * @param {Range}   range      Range对象
         * @return  {Range}  range       返回转换后的Range对象
         */function transformIERangeToRange(ieRange,range){if(ieRange.item){range.selectNode(ieRange.item(0));}else{var bi=getBoundaryInformation(ieRange,true);range.setStart(bi.container,bi.offset);if(ieRange.compareEndPoints('StartToEnd',ieRange)!=0){bi=getBoundaryInformation(ieRange,false);range.setEnd(bi.container,bi.offset);}}return range;}/**
         * 获得ieRange
         * @param {Selection} sel    Selection对象
         * @return {ieRange}    得到ieRange
         */function _getIERange(sel){var ieRange;//ie下有可能报错
try{ieRange=sel.getNative().createRange();}catch(e){return null;}var el=ieRange.item?ieRange.item(0):ieRange.parentElement();if((el.ownerDocument||el)===sel.document){return ieRange;}return null;}var Selection=dom.Selection=function(doc){var me=this,iframe;me.document=doc;if(browser.ie9below){iframe=domUtils.getWindow(doc).frameElement;domUtils.on(iframe,'beforedeactivate',function(){me._bakIERange=me.getIERange();});domUtils.on(iframe,'activate',function(){try{if(!_getIERange(me)&&me._bakIERange){me._bakIERange.select();}}catch(ex){}me._bakIERange=null;});}iframe=doc=null;};Selection.prototype={rangeInBody:function rangeInBody(rng,txtRange){var node=browser.ie9below||txtRange?rng.item?rng.item():rng.parentElement():rng.startContainer;return node===this.document.body||domUtils.inDoc(node,this.document);},/**
             * 获取原生seleciton对象
             * @method getNative
             * @return { Object } 获得selection对象
             * @example
             * ```javascript
             * editor.selection.getNative();
             * ```
             */getNative:function getNative(){var doc=this.document;try{return !doc?null:browser.ie9below?doc.selection:domUtils.getWindow(doc).getSelection();}catch(e){return null;}},/**
             * 获得ieRange
             * @method getIERange
             * @return { Object } 返回ie原生的Range
             * @example
             * ```javascript
             * editor.selection.getIERange();
             * ```
             */getIERange:function getIERange(){var ieRange=_getIERange(this);if(!ieRange){if(this._bakIERange){return this._bakIERange;}}return ieRange;},/**
             * 缓存当前选区的range和选区的开始节点
             * @method cache
             */cache:function cache(){this.clear();this._cachedRange=this.getRange();this._cachedStartElement=this.getStart();this._cachedStartElementPath=this.getStartElementPath();},/**
             * 获取选区开始位置的父节点到body
             * @method getStartElementPath
             * @return { Array } 返回父节点集合
             * @example
             * ```javascript
             * editor.selection.getStartElementPath();
             * ```
             */getStartElementPath:function getStartElementPath(){if(this._cachedStartElementPath){return this._cachedStartElementPath;}var start=this.getStart();if(start){return domUtils.findParents(start,true,null,true);}return [];},/**
             * 清空缓存
             * @method clear
             */clear:function clear(){this._cachedStartElementPath=this._cachedRange=this._cachedStartElement=null;},/**
             * 编辑器是否得到了选区
             * @method isFocus
             */isFocus:function isFocus(){try{if(browser.ie9below){var nativeRange=_getIERange(this);return !!(nativeRange&&this.rangeInBody(nativeRange));}else{return !!this.getNative().rangeCount;}}catch(e){return false;}},/**
             * 获取选区对应的Range
             * @method getRange
             * @return { Object } 得到Range对象
             * @example
             * ```javascript
             * editor.selection.getRange();
             * ```
             */getRange:function getRange(){var me=this;function optimze(range){var child=me.document.body.firstChild,collapsed=range.collapsed;while(child&&child.firstChild){range.setStart(child,0);child=child.firstChild;}if(!range.startContainer){range.setStart(me.document.body,0);}if(collapsed){range.collapse(true);}}if(me._cachedRange!=null){return this._cachedRange;}var range=new baidu.editor.dom.Range(me.document);if(browser.ie9below){var nativeRange=me.getIERange();if(nativeRange){//备份的_bakIERange可能已经实效了，dom树发生了变化比如从源码模式切回来，所以try一下，实效就放到body开始位置
try{transformIERangeToRange(nativeRange,range);}catch(e){optimze(range);}}else{optimze(range);}}else{var sel=me.getNative();if(sel&&sel.rangeCount){var firstRange=sel.getRangeAt(0);var lastRange=sel.getRangeAt(sel.rangeCount-1);range.setStart(firstRange.startContainer,firstRange.startOffset).setEnd(lastRange.endContainer,lastRange.endOffset);if(range.collapsed&&domUtils.isBody(range.startContainer)&&!range.startOffset){optimze(range);}}else{//trace:1734 有可能已经不在dom树上了，标识的节点
if(this._bakRange&&domUtils.inDoc(this._bakRange.startContainer,this.document)){return this._bakRange;}optimze(range);}}return this._bakRange=range;},/**
             * 获取开始元素，用于状态反射
             * @method getStart
             * @return { Element } 获得开始元素
             * @example
             * ```javascript
             * editor.selection.getStart();
             * ```
             */getStart:function getStart(){if(this._cachedStartElement){return this._cachedStartElement;}var range=browser.ie9below?this.getIERange():this.getRange(),tmpRange,start,tmp,parent;if(browser.ie9below){if(!range){//todo 给第一个值可能会有问题
return this.document.body.firstChild;}//control元素
if(range.item){return range.item(0);}tmpRange=range.duplicate();//修正ie下<b>x</b>[xx] 闭合后 <b>x|</b>xx
tmpRange.text.length>0&&tmpRange.moveStart('character',1);tmpRange.collapse(1);start=tmpRange.parentElement();parent=tmp=range.parentElement();while(tmp=tmp.parentNode){if(tmp==start){start=parent;break;}}}else{range.shrinkBoundary();start=range.startContainer;if(start.nodeType==1&&start.hasChildNodes()){start=start.childNodes[Math.min(start.childNodes.length-1,range.startOffset)];}if(start.nodeType==3){return start.parentNode;}}return start;},/**
             * 得到选区中的文本
             * @method getText
             * @return { String } 选区中包含的文本
             * @example
             * ```javascript
             * editor.selection.getText();
             * ```
             */getText:function getText(){var nativeSel,nativeRange;if(this.isFocus()&&(nativeSel=this.getNative())){nativeRange=browser.ie9below?nativeSel.createRange():nativeSel.getRangeAt(0);return browser.ie9below?nativeRange.text:nativeRange.toString();}return '';},/**
             * 清除选区
             * @method clearRange
             * @example
             * ```javascript
             * editor.selection.clearRange();
             * ```
             */clearRange:function clearRange(){this.getNative()[browser.ie9below?'empty':'removeAllRanges']();}};})();// core/Editor.js
/**
     * 编辑器主类，包含编辑器提供的大部分公用接口
     * @file
     * @module UE
     * @class Editor
     * @since 1.2.6.1
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @unfile
     * @module UE
     */ /**
     * UEditor的核心类，为用户提供与编辑器交互的接口。
     * @unfile
     * @module UE
     * @class Editor
     */(function(){var uid=0,_selectionChangeTimer;/**
         * 获取编辑器的html内容，赋值到编辑器所在表单的textarea文本域里面
         * @private
         * @method setValue
         * @param { UE.Editor } editor 编辑器事例
         */function setValue(form,editor){var textarea;if(editor.textarea){if(utils.isString(editor.textarea)){for(var i=0,ti,tis=domUtils.getElementsByTagName(form,'textarea');ti=tis[i++];){if(ti.id=='ueditor_textarea_'+editor.options.textarea){textarea=ti;break;}}}else{textarea=editor.textarea;}}if(!textarea){form.appendChild(textarea=domUtils.createElement(document,'textarea',{'name':editor.options.textarea,'id':'ueditor_textarea_'+editor.options.textarea,'style':"display:none"}));//不要产生多个textarea
editor.textarea=textarea;}!textarea.getAttribute('name')&&textarea.setAttribute('name',editor.options.textarea);textarea.value=editor.hasContents()?editor.options.allHtmlEnabled?editor.getAllHtml():editor.getContent(null,null,true):'';}function checkCurLang(I18N){for(var lang in I18N){return lang;}}function langReadied(me){me.langIsReady=true;me.fireEvent("langReady");}/**
         * 编辑器准备就绪后会触发该事件
         * @module UE
         * @class Editor
         * @event ready
         * @remind render方法执行完成之后,会触发该事件
         * @remind
         * @example
         * ```javascript
         * editor.addListener( 'ready', function( editor ) {
         *     editor.execCommand( 'focus' ); //编辑器家在完成后，让编辑器拿到焦点
         * } );
         * ```
         */ /**
         * 执行destroy方法,会触发该事件
         * @module UE
         * @class Editor
         * @event destroy
         * @see UE.Editor:destroy()
         */ /**
         * 执行reset方法,会触发该事件
         * @module UE
         * @class Editor
         * @event reset
         * @see UE.Editor:reset()
         */ /**
         * 执行focus方法,会触发该事件
         * @module UE
         * @class Editor
         * @event focus
         * @see UE.Editor:focus(Boolean)
         */ /**
         * 语言加载完成会触发该事件
         * @module UE
         * @class Editor
         * @event langReady
         */ /**
         * 运行命令之后会触发该命令
         * @module UE
         * @class Editor
         * @event beforeExecCommand
         */ /**
         * 运行命令之后会触发该命令
         * @module UE
         * @class Editor
         * @event afterExecCommand
         */ /**
         * 运行命令之前会触发该命令
         * @module UE
         * @class Editor
         * @event firstBeforeExecCommand
         */ /**
         * 在getContent方法执行之前会触发该事件
         * @module UE
         * @class Editor
         * @event beforeGetContent
         * @see UE.Editor:getContent()
         */ /**
         * 在getContent方法执行之后会触发该事件
         * @module UE
         * @class Editor
         * @event afterGetContent
         * @see UE.Editor:getContent()
         */ /**
         * 在getAllHtml方法执行时会触发该事件
         * @module UE
         * @class Editor
         * @event getAllHtml
         * @see UE.Editor:getAllHtml()
         */ /**
         * 在setContent方法执行之前会触发该事件
         * @module UE
         * @class Editor
         * @event beforeSetContent
         * @see UE.Editor:setContent(String)
         */ /**
         * 在setContent方法执行之后会触发该事件
         * @module UE
         * @class Editor
         * @event afterSetContent
         * @see UE.Editor:setContent(String)
         */ /**
         * 每当编辑器内部选区发生改变时，将触发该事件
         * @event selectionchange
         * @warning 该事件的触发非常频繁，不建议在该事件的处理过程中做重量级的处理
         * @example
         * ```javascript
         * editor.addListener( 'selectionchange', function( editor ) {
         *     console.log('选区发生改变');
         * }
         */ /**
         * 在所有selectionchange的监听函数执行之前，会触发该事件
         * @module UE
         * @class Editor
         * @event beforeSelectionChange
         * @see UE.Editor:selectionchange
         */ /**
         * 在所有selectionchange的监听函数执行完之后，会触发该事件
         * @module UE
         * @class Editor
         * @event afterSelectionChange
         * @see UE.Editor:selectionchange
         */ /**
         * 编辑器内容发生改变时会触发该事件
         * @module UE
         * @class Editor
         * @event contentChange
         */ /**
         * 以默认参数构建一个编辑器实例
         * @constructor
         * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面
         * @example
         * ```javascript
         * var editor = new UE.Editor();
         * editor.execCommand('blod');
         * ```
         * @see UE.Config
         */ /**
         * 以给定的参数集合创建一个编辑器实例，对于未指定的参数，将应用默认参数。
         * @constructor
         * @remind 通过 改构造方法实例化的编辑器,不带ui层.需要render到一个容器,编辑器实例才能正常渲染到页面
         * @param { Object } setting 创建编辑器的参数
         * @example
         * ```javascript
         * var editor = new UE.Editor();
         * editor.execCommand('blod');
         * ```
         * @see UE.Config
         */var Editor=UE.Editor=function(options){var me=this;me.uid=uid++;EventBase.call(me);me.commands={};me.options=utils.extend(utils.clone(options||{}),UEDITOR_CONFIG,true);me.shortcutkeys={};me.inputRules=[];me.outputRules=[];//设置默认的常用属性
me.setOpt(Editor.defaultOptions(me));/* 尝试异步加载后台配置 */me.loadServerConfig();if(!utils.isEmptyObject(UE.I18N)){//修改默认的语言类型
me.options.lang=checkCurLang(UE.I18N);UE.plugin.load(me);langReadied(me);}else{utils.loadFile(document,{src:me.options.langPath+me.options.lang+"/"+me.options.lang+".js",tag:"script",type:"text/javascript",defer:"defer"},function(){UE.plugin.load(me);langReadied(me);});}UE.instants['ueditorInstant'+me.uid]=me;};Editor.prototype={registerCommand:function registerCommand(name,obj){this.commands[name]=obj;},/**
             * 编辑器对外提供的监听ready事件的接口， 通过调用该方法，达到的效果与监听ready事件是一致的
             * @method ready
             * @param { Function } fn 编辑器ready之后所执行的回调, 如果在注册事件之前编辑器已经ready，将会
             * 立即触发该回调。
             * @remind 需要等待编辑器加载完成后才能执行的代码,可以使用该方法传入
             * @example
             * ```javascript
             * editor.ready( function( editor ) {
             *     editor.setContent('初始化完毕');
             * } );
             * ```
             * @see UE.Editor.event:ready
             */ready:function ready(fn){var me=this;if(fn){me.isReady?fn.apply(me):me.addListener('ready',fn);}},/**
             * 该方法是提供给插件里面使用，设置配置项默认值
             * @method setOpt
             * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置
             * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。
             * @param { String } key 编辑器的可接受的选项名称
             * @param { * } val  该选项可接受的值
             * @example
             * ```javascript
             * editor.setOpt( 'initContent', '欢迎使用编辑器' );
             * ```
             */ /**
             * 该方法是提供给插件里面使用，以{key:value}集合的方式设置插件内用到的配置项默认值
             * @method setOpt
             * @warning 三处设置配置项的优先级: 实例化时传入参数 > setOpt()设置 > config文件里设置
             * @warning 该方法仅供编辑器插件内部和编辑器初始化时调用，其他地方不能调用。
             * @param { Object } options 将要设置的选项的键值对对象
             * @example
             * ```javascript
             * editor.setOpt( {
             *     'initContent': '欢迎使用编辑器'
             * } );
             * ```
             */setOpt:function setOpt(key,val){var obj={};if(utils.isString(key)){obj[key]=val;}else{obj=key;}utils.extend(this.options,obj,true);},getOpt:function getOpt(key){return this.options[key];},/**
             * 销毁编辑器实例，使用textarea代替
             * @method destroy
             * @example
             * ```javascript
             * editor.destroy();
             * ```
             */destroy:function destroy(){var me=this;me.fireEvent('destroy');var container=me.container.parentNode;var textarea=me.textarea;if(!textarea){textarea=document.createElement('textarea');container.parentNode.insertBefore(textarea,container);}else{textarea.style.display='';}textarea.style.width=me.iframe.offsetWidth+'px';textarea.style.height=me.iframe.offsetHeight+'px';textarea.value=me.getContent();textarea.id=me.key;container.innerHTML='';domUtils.remove(container);var key=me.key;//trace:2004
for(var p in me){if(me.hasOwnProperty(p)){delete this[p];}}UE.delEditor(key);},/**
             * 渲染编辑器的DOM到指定容器
             * @method render
             * @param { String } containerId 指定一个容器ID
             * @remind 执行该方法,会触发ready事件
             * @warning 必须且只能调用一次
             */ /**
             * 渲染编辑器的DOM到指定容器
             * @method render
             * @param { Element } containerDom 直接指定容器对象
             * @remind 执行该方法,会触发ready事件
             * @warning 必须且只能调用一次
             */render:function render(container){var me=this,options=me.options,getStyleValue=function getStyleValue(attr){return parseInt(domUtils.getComputedStyle(container,attr));};if(utils.isString(container)){container=document.getElementById(container);}if(container){if(options.initialFrameWidth){options.minFrameWidth=options.initialFrameWidth;}else{options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;}if(options.initialFrameHeight){options.minFrameHeight=options.initialFrameHeight;}else{options.initialFrameHeight=options.minFrameHeight=container.offsetHeight;}container.style.width=/%$/.test(options.initialFrameWidth)?'100%':options.initialFrameWidth-getStyleValue("padding-left")-getStyleValue("padding-right")+'px';container.style.height=/%$/.test(options.initialFrameHeight)?'100%':options.initialFrameHeight-getStyleValue("padding-top")-getStyleValue("padding-bottom")+'px';container.style.zIndex=options.zIndex;var html=(ie&&browser.version<9?'':'<!DOCTYPE html>')+'<html xmlns=\'http://www.w3.org/1999/xhtml\' class=\'view\' ><head>'+'<style type=\'text/css\'>'+//设置四周的留边
'.view{padding:0;word-wrap:break-word;cursor:text;height:90%;}\n'+//设置默认字体和字号
//font-family不能呢随便改，在safari下fillchar会有解析问题
'body{margin:8px;font-family:sans-serif;font-size:16px;}'+//设置段落间距
'p{margin:5px 0;}</style>'+(options.iframeCssUrl?'<link rel=\'stylesheet\' type=\'text/css\' href=\''+utils.unhtml(options.iframeCssUrl)+'\'/>':'')+(options.initialStyle?'<style>'+options.initialStyle+'</style>':'')+'</head><body class=\'view\' ></body>'+'<script type=\'text/javascript\' '+(ie?'defer=\'defer\'':'')+' id=\'_initialScript\'>'+'setTimeout(function(){editor = window.parent.UE.instants[\'ueditorInstant'+me.uid+'\'];editor._setup(document);},0);'+'var _tmpScript = document.getElementById(\'_initialScript\');_tmpScript.parentNode.removeChild(_tmpScript);</script></html>';container.appendChild(domUtils.createElement(document,'iframe',{id:'ueditor_'+me.uid,width:"100%",height:"100%",frameborder:"0",//先注释掉了，加的原因忘记了，但开启会直接导致全屏模式下内容多时不会出现滚动条
//                    scrolling :'no',
src:'javascript:void(function(){document.open();'+(options.customDomain&&document.domain!=location.hostname?'document.domain="'+document.domain+'";':'')+'document.write("'+html+'");document.close();}())'}));container.style.overflow='hidden';//解决如果是给定的百分比，会导致高度算不对的问题
setTimeout(function(){if(/%$/.test(options.initialFrameWidth)){options.minFrameWidth=options.initialFrameWidth=container.offsetWidth;//如果这里给定宽度，会导致ie在拖动窗口大小时，编辑区域不随着变化
//                        container.style.width = options.initialFrameWidth + 'px';
}if(/%$/.test(options.initialFrameHeight)){options.minFrameHeight=options.initialFrameHeight=container.offsetHeight;container.style.height=options.initialFrameHeight+'px';}});}},/**
             * 编辑器初始化
             * @method _setup
             * @private
             * @param { Element } doc 编辑器Iframe中的文档对象
             */_setup:function _setup(doc){var me=this,options=me.options;if(ie){doc.body.disabled=true;doc.body.contentEditable=true;doc.body.disabled=false;}else{doc.body.contentEditable=true;}doc.body.spellcheck=false;me.document=doc;me.window=doc.defaultView||doc.parentWindow;me.iframe=me.window.frameElement;me.body=doc.body;me.selection=new dom.Selection(doc);//gecko初始化就能得到range,无法判断isFocus了
var geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}this._initEvents();//为form提交提供一个隐藏的textarea
for(var form=this.iframe.parentNode;!domUtils.isBody(form);form=form.parentNode){if(form.tagName=='FORM'){me.form=form;if(me.options.autoSyncData){domUtils.on(me.window,'blur',function(){setValue(form,me);});}else{domUtils.on(form,'submit',function(){setValue(this,me);});}break;}}if(options.initialContent){if(options.autoClearinitialContent){var oldExecCommand=me.execCommand;me.execCommand=function(){me.fireEvent('firstBeforeExecCommand');return oldExecCommand.apply(me,arguments);};this._setDefaultContent(options.initialContent);}else this.setContent(options.initialContent,false,true);}//编辑器不能为空内容
if(domUtils.isEmptyNode(me.body)){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';}//如果要求focus, 就把光标定位到内容开始
if(options.focus){setTimeout(function(){me.focus(me.options.focusInEnd);//如果自动清除开着，就不需要做selectionchange;
!me.options.autoClearinitialContent&&me._selectionChange();},0);}if(!me.container){me.container=this.iframe.parentNode;}if(options.fullscreen&&me.ui){me.ui.setFullScreen(true);}try{me.document.execCommand('2D-position',false,false);}catch(e){}try{me.document.execCommand('enableInlineTableEditing',false,false);}catch(e){}try{me.document.execCommand('enableObjectResizing',false,false);}catch(e){}//挂接快捷键
me._bindshortcutKeys();me.isReady=1;me.fireEvent('ready');options.onready&&options.onready.call(me);if(!browser.ie9below){domUtils.on(me.window,['blur','focus'],function(e){//chrome下会出现alt+tab切换时，导致选区位置不对
if(e.type=='blur'){me._bakRange=me.selection.getRange();try{me._bakNativeRange=me.selection.getNative().getRangeAt(0);me.selection.getNative().removeAllRanges();}catch(e){me._bakNativeRange=null;}}else{try{me._bakRange&&me._bakRange.select();}catch(e){}}});}//trace:1518 ff3.6body不够寛，会导致点击空白处无法获得焦点
if(browser.gecko&&browser.version<=10902){//修复ff3.6初始化进来，不能点击获得焦点
me.body.contentEditable=false;setTimeout(function(){me.body.contentEditable=true;},100);setInterval(function(){me.body.style.height=me.iframe.offsetHeight-20+'px';},100);}!options.isShow&&me.setHide();options.readonly&&me.setDisabled();},/**
             * 同步数据到编辑器所在的form
             * 从编辑器的容器节点向上查找form元素，若找到，就同步编辑内容到找到的form里，为提交数据做准备，主要用于是手动提交的情况
             * 后台取得数据的键值，使用你容器上的name属性，如果没有就使用参数里的textarea项
             * @method sync
             * @example
             * ```javascript
             * editor.sync();
             * form.sumbit(); //form变量已经指向了form元素
             * ```
             */ /**
             * 根据传入的formId，在页面上查找要同步数据的表单，若找到，就同步编辑内容到找到的form里，为提交数据做准备
             * 后台取得数据的键值，该键值默认使用给定的编辑器容器的name属性，如果没有name属性则使用参数项里给定的“textarea”项
             * @method sync
             * @param { String } formID 指定一个要同步数据的form的id,编辑器的数据会同步到你指定form下
             */sync:function sync(formId){var me=this,form=formId?document.getElementById(formId):domUtils.findParent(me.iframe.parentNode,function(node){return node.tagName=='FORM';},true);form&&setValue(form,me);},/**
             * 设置编辑器高度
             * @method setHeight
             * @remind 当配置项autoHeightEnabled为真时,该方法无效
             * @param { Number } number 设置的高度值，纯数值，不带单位
             * @example
             * ```javascript
             * editor.setHeight(number);
             * ```
             */setHeight:function setHeight(height,notSetHeight){if(height!==parseInt(this.iframe.parentNode.style.height)){this.iframe.parentNode.style.height=height+'px';}!notSetHeight&&(this.options.minFrameHeight=this.options.initialFrameHeight=height);this.body.style.height=height+'px';!notSetHeight&&this.trigger('setHeight');},/**
             * 为编辑器的编辑命令提供快捷键
             * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口
             * @method addshortcutkey
             * @param { Object } keyset 命令名和快捷键键值对对象，多个按钮的快捷键用“＋”分隔
             * @example
             * ```javascript
             * editor.addshortcutkey({
             *     "Bold" : "ctrl+66",//^B
             *     "Italic" : "ctrl+73", //^I
             * });
             * ```
             */ /**
             * 这个接口是为插件扩展提供的接口,主要是为新添加的插件，如果需要添加快捷键，所提供的接口
             * @method addshortcutkey
             * @param { String } cmd 触发快捷键时，响应的命令
             * @param { String } keys 快捷键的字符串，多个按钮用“＋”分隔
             * @example
             * ```javascript
             * editor.addshortcutkey("Underline", "ctrl+85"); //^U
             * ```
             */addshortcutkey:function addshortcutkey(cmd,keys){var obj={};if(keys){obj[cmd]=keys;}else{obj=cmd;}utils.extend(this.shortcutkeys,obj);},/**
             * 对编辑器设置keydown事件监听，绑定快捷键和命令，当快捷键组合触发成功，会响应对应的命令
             * @method _bindshortcutKeys
             * @private
             */_bindshortcutKeys:function _bindshortcutKeys(){var me=this,shortcutkeys=this.shortcutkeys;me.addListener('keydown',function(type,e){var keyCode=e.keyCode||e.which;for(var i in shortcutkeys){var tmp=shortcutkeys[i].split(',');for(var t=0,ti;ti=tmp[t++];){ti=ti.split(':');var key=ti[0],param=ti[1];if(/^(ctrl)(\+shift)?\+(\d+)$/.test(key.toLowerCase())||/^(\d+)$/.test(key)){if((RegExp.$1=='ctrl'?e.ctrlKey||e.metaKey:0)&&(RegExp.$2!=""?e[RegExp.$2.slice(1)+"Key"]:1)&&keyCode==RegExp.$3||keyCode==RegExp.$1){if(me.queryCommandState(i,param)!=-1)me.execCommand(i,param);domUtils.preventDefault(e);}}}}});},/**
             * 获取编辑器的内容
             * @method getContent
             * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容
             * @return { String } 编辑器的内容字符串, 如果编辑器的内容为空，或者是空的标签内容（如:”&lt;p&gt;&lt;br/&gt;&lt;/p&gt;“）， 则返回空字符串
             * @example
             * ```javascript
             * //编辑器html内容:<p>1<strong>2<em>34</em>5</strong>6</p>
             * var content = editor.getContent(); //返回值:<p>1<strong>2<em>34</em>5</strong>6</p>
             * ```
             */ /**
             * 获取编辑器的内容。 可以通过参数定义编辑器内置的判空规则
             * @method getContent
             * @param { Function } fn 自定的判空规则， 要求该方法返回一个boolean类型的值，
             *                      代表当前编辑器的内容是否空，
             *                      如果返回true， 则该方法将直接返回空字符串；如果返回false，则编辑器将返回
             *                      经过内置过滤规则处理后的内容。
             * @remind 该方法在处理包含有初始化内容的时候能起到很好的作用。
             * @warning 该方法获取到的是经过编辑器内置的过滤规则进行过滤后得到的内容
             * @return { String } 编辑器的内容字符串
             * @example
             * ```javascript
             * // editor 是一个编辑器的实例
             * var content = editor.getContent( function ( editor ) {
             *      return editor.body.innerHTML === '欢迎使用UEditor'; //返回空字符串
             * } );
             * ```
             */getContent:function getContent(cmd,fn,notSetCursor,ignoreBlank,formatter){var me=this;if(cmd&&utils.isFunction(cmd)){fn=cmd;cmd='';}if(fn?!fn():!this.hasContents()){return '';}me.fireEvent('beforegetcontent');var root=UE.htmlparser(me.body.innerHTML,ignoreBlank);me.filterOutputRule(root);me.fireEvent('aftergetcontent',cmd,root);return root.toHtml(formatter);},/**
             * 取得完整的html代码，可以直接显示成完整的html文档
             * @method getAllHtml
             * @return { String } 编辑器的内容html文档字符串
             * @eaxmple
             * ```javascript
             * editor.getAllHtml(); //返回格式大致是: <html><head>...</head><body>...</body></html>
             * ```
             */getAllHtml:function getAllHtml(){var me=this,headHtml=[];me.fireEvent('getAllHtml',headHtml);if(browser.ie&&browser.version>8){var headHtmlForIE9='';utils.each(me.document.styleSheets,function(si){headHtmlForIE9+=si.href?'<link rel="stylesheet" type="text/css" href="'+si.href+'" />':'<style>'+si.cssText+'</style>';});utils.each(me.document.getElementsByTagName('script'),function(si){headHtmlForIE9+=si.outerHTML;});}return '<html><head>'+(me.options.charset?'<meta http-equiv="Content-Type" content="text/html; charset='+me.options.charset+'"/>':'')+(headHtmlForIE9||me.document.getElementsByTagName('head')[0].innerHTML)+headHtml.join('\n')+'</head>'+'<body '+(ie&&browser.version<9?'class="view"':'')+'>'+me.getContent(null,null,true)+'</body></html>';},/**
             * 得到编辑器的纯文本内容，但会保留段落格式
             * @method getPlainTxt
             * @return { String } 编辑器带段落格式的纯文本内容字符串
             * @example
             * ```javascript
             * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>
             * console.log(editor.getPlainTxt()); //输出:"1\n2\n
             * ```
             */getPlainTxt:function getPlainTxt(){var reg=new RegExp(domUtils.fillChar,'g'),html=this.body.innerHTML.replace(/[\n\r]/g,'');//ie要先去了\n在处理
html=html.replace(/<(p|div)[^>]*>(<br\/?>|&nbsp;)<\/\1>/gi,'\n').replace(/<br\/?>/gi,'\n').replace(/<[^>/]+>/g,'').replace(/(\n)?<\/([^>]+)>/g,function(a,b,c){return dtd.$block[c]?'\n':b?b:'';});//取出来的空格会有c2a0会变成乱码，处理这种情况\u00a0
return html.replace(reg,'').replace(/\u00a0/g,' ').replace(/&nbsp;/g,' ');},/**
             * 获取编辑器中的纯文本内容,没有段落格式
             * @method getContentTxt
             * @return { String } 编辑器不带段落格式的纯文本内容字符串
             * @example
             * ```javascript
             * //编辑器html内容:<p><strong>1</strong></p><p><strong>2</strong></p>
             * console.log(editor.getPlainTxt()); //输出:"12
             * ```
             */getContentTxt:function getContentTxt(){var reg=new RegExp(domUtils.fillChar,'g');//取出来的空格会有c2a0会变成乱码，处理这种情况\u00a0
return this.body[browser.ie?'innerText':'textContent'].replace(reg,'').replace(/\u00a0/g,' ');},/**
             * 设置编辑器的内容，可修改编辑器当前的html内容
             * @method setContent
             * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容
             * @warning 该方法会触发selectionchange事件
             * @param { String } html 要插入的html内容
             * @example
             * ```javascript
             * editor.getContent('<p>test</p>');
             * ```
             */ /**
             * 设置编辑器的内容，可修改编辑器当前的html内容
             * @method setContent
             * @warning 通过该方法插入的内容，是经过编辑器内置的过滤规则进行过滤后得到的内容
             * @warning 该方法会触发selectionchange事件
             * @param { String } html 要插入的html内容
             * @param { Boolean } isAppendTo 若传入true，不清空原来的内容，在最后插入内容，否则，清空内容再插入
             * @example
             * ```javascript
             * //假设设置前的编辑器内容是 <p>old text</p>
             * editor.setContent('<p>new text</p>', true); //插入的结果是<p>old text</p><p>new text</p>
             * ```
             */setContent:function setContent(html,isAppendTo,notFireSelectionchange){var me=this;if(!me||!me.body){setTimeout(function(){me.setContent(html,isAppendTo,notFireSelectionchange);},500);return;}me.fireEvent('beforesetcontent',html);var root=UE.htmlparser(html);me.filterInputRule(root);html=root.toHtml();me.body.innerHTML=(isAppendTo?me.body.innerHTML:'')+html;function isCdataDiv(node){return node.tagName=='DIV'&&node.getAttribute('cdata_tag');}//给文本或者inline节点套p标签
if(me.options.enterTag=='p'){var child=this.body.firstChild,tmpNode;if(!child||child.nodeType==1&&(dtd.$cdata[child.tagName]||isCdataDiv(child)||domUtils.isCustomeNode(child))&&child===this.body.lastChild){this.body.innerHTML='<p>'+(browser.ie?'&nbsp;':'<br/>')+'</p>'+this.body.innerHTML;}else{var p=me.document.createElement('p');while(child){while(child&&(child.nodeType==3||child.nodeType==1&&dtd.p[child.tagName]&&!dtd.$cdata[child.tagName])){tmpNode=child.nextSibling;p.appendChild(child);child=tmpNode;}if(p.firstChild){if(!child){me.body.appendChild(p);break;}else{child.parentNode.insertBefore(p,child);p=me.document.createElement('p');}}child=child.nextSibling;}}}me.fireEvent('aftersetcontent');me.fireEvent('contentchange');!notFireSelectionchange&&me._selectionChange();//清除保存的选区
me._bakRange=me._bakIERange=me._bakNativeRange=null;//trace:1742 setContent后gecko能得到焦点问题
var geckoSel;if(browser.gecko&&(geckoSel=this.selection.getNative())){geckoSel.removeAllRanges();}if(me.options.autoSyncData){me.form&&setValue(me.form,me);}},/**
             * 让编辑器获得焦点，默认focus到编辑器头部
             * @method focus
             * @example
             * ```javascript
             * editor.focus()
             * ```
             */ /**
             * 让编辑器获得焦点，toEnd确定focus位置
             * @method focus
             * @param { Boolean } toEnd 默认focus到编辑器头部，toEnd为true时focus到内容尾部
             * @example
             * ```javascript
             * editor.focus(true)
             * ```
             */focus:function focus(toEnd){try{var me=this,rng=me.selection.getRange();if(toEnd){var node=me.body.lastChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){if(domUtils.isEmptyBlock(node)){rng.setStartAtFirst(node);}else{rng.setStartAtLast(node);}rng.collapse(true);}rng.setCursor(true);}else{if(!rng.collapsed&&domUtils.isBody(rng.startContainer)&&rng.startOffset==0){var node=me.body.firstChild;if(node&&node.nodeType==1&&!dtd.$empty[node.tagName]){rng.setStartAtFirst(node).collapse(true);}}rng.select(true);}this.fireEvent('focus selectionchange');}catch(e){}},isFocus:function isFocus(){return this.selection.isFocus();},blur:function blur(){var sel=this.selection.getNative();if(sel.empty&&browser.ie){var nativeRng=document.body.createTextRange();nativeRng.moveToElementText(document.body);nativeRng.collapse(true);nativeRng.select();sel.empty();}else{sel.removeAllRanges();}//this.fireEvent('blur selectionchange');
},/**
             * 初始化UE事件及部分事件代理
             * @method _initEvents
             * @private
             */_initEvents:function _initEvents(){var me=this,doc=me.document,win=me.window;me._proxyDomEvent=utils.bind(me._proxyDomEvent,me);domUtils.on(doc,['click','contextmenu','mousedown','keydown','keyup','keypress','mouseup','mouseover','mouseout','selectstart'],me._proxyDomEvent);domUtils.on(win,['focus','blur'],me._proxyDomEvent);domUtils.on(me.body,'drop',function(e){//阻止ff下默认的弹出新页面打开图片
if(browser.gecko&&e.stopPropagation){e.stopPropagation();}me.fireEvent('contentchange');});domUtils.on(doc,['mouseup','keydown'],function(evt){//特殊键不触发selectionchange
if(evt.type=='keydown'&&(evt.ctrlKey||evt.metaKey||evt.shiftKey||evt.altKey)){return;}if(evt.button==2)return;me._selectionChange(250,evt);});},/**
             * 触发事件代理
             * @method _proxyDomEvent
             * @private
             * @return { * } fireEvent的返回值
             * @see UE.EventBase:fireEvent(String)
             */_proxyDomEvent:function _proxyDomEvent(evt){if(this.fireEvent('before'+evt.type.replace(/^on/,'').toLowerCase())===false){return false;}if(this.fireEvent(evt.type.replace(/^on/,''),evt)===false){return false;}return this.fireEvent('after'+evt.type.replace(/^on/,'').toLowerCase());},/**
             * 变化选区
             * @method _selectionChange
             * @private
             */_selectionChange:function _selectionChange(delay,evt){var me=this;//有光标才做selectionchange 为了解决未focus时点击source不能触发更改工具栏状态的问题（source命令notNeedUndo=1）
//            if ( !me.selection.isFocus() ){
//                return;
//            }
var hackForMouseUp=false;var mouseX,mouseY;if(browser.ie&&browser.version<9&&evt&&evt.type=='mouseup'){var range=this.selection.getRange();if(!range.collapsed){hackForMouseUp=true;mouseX=evt.clientX;mouseY=evt.clientY;}}clearTimeout(_selectionChangeTimer);_selectionChangeTimer=setTimeout(function(){if(!me.selection||!me.selection.getNative()){return;}//修复一个IE下的bug: 鼠标点击一段已选择的文本中间时，可能在mouseup后的一段时间内取到的range是在selection的type为None下的错误值.
//IE下如果用户是拖拽一段已选择文本，则不会触发mouseup事件，所以这里的特殊处理不会对其有影响
var ieRange;if(hackForMouseUp&&me.selection.getNative().type=='None'){ieRange=me.document.body.createTextRange();try{ieRange.moveToPoint(mouseX,mouseY);}catch(ex){ieRange=null;}}var bakGetIERange;if(ieRange){bakGetIERange=me.selection.getIERange;me.selection.getIERange=function(){return ieRange;};}me.selection.cache();if(bakGetIERange){me.selection.getIERange=bakGetIERange;}if(me.selection._cachedRange&&me.selection._cachedStartElement){me.fireEvent('beforeselectionchange');// 第二个参数causeByUi为true代表由用户交互造成的selectionchange.
me.fireEvent('selectionchange',!!evt);me.fireEvent('afterselectionchange');me.selection.clear();}},delay||50);},/**
             * 执行编辑命令
             * @method _callCmdFn
             * @private
             * @param { String } fnName 函数名称
             * @param { * } args 传给命令函数的参数
             * @return { * } 返回命令函数运行的返回值
             */_callCmdFn:function _callCmdFn(fnName,args){var cmdName=args[0].toLowerCase(),cmd,cmdFn;cmd=this.commands[cmdName]||UE.commands[cmdName];cmdFn=cmd&&cmd[fnName];//没有querycommandstate或者没有command的都默认返回0
if((!cmd||!cmdFn)&&fnName=='queryCommandState'){return 0;}else if(cmdFn){return cmdFn.apply(this,args);}},/**
             * 执行编辑命令cmdName，完成富文本编辑效果
             * @method execCommand
             * @param { String } cmdName 需要执行的命令
             * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
             * @return { * } 返回命令函数运行的返回值
             * @example
             * ```javascript
             * editor.execCommand(cmdName);
             * ```
             */execCommand:function execCommand(cmdName){cmdName=cmdName.toLowerCase();var me=this,result,cmd=me.commands[cmdName]||UE.commands[cmdName];if(!cmd||!cmd.execCommand){return null;}if(!cmd.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;if(me.queryCommandState.apply(me,arguments)!=-1){me.fireEvent('saveScene');me.fireEvent.apply(me,['beforeexeccommand',cmdName].concat(arguments));result=this._callCmdFn('execCommand',arguments);//保存场景时，做了内容对比，再看是否进行contentchange触发，这里多触发了一次，去掉
//                    (!cmd.ignoreContentChange && !me._ignoreContentChange) && me.fireEvent('contentchange');
me.fireEvent.apply(me,['afterexeccommand',cmdName].concat(arguments));me.fireEvent('saveScene');}me.__hasEnterExecCommand=false;}else{result=this._callCmdFn('execCommand',arguments);!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me.fireEvent('contentchange');}!me.__hasEnterExecCommand&&!cmd.ignoreContentChange&&!me._ignoreContentChange&&me._selectionChange();return result;},/**
             * 根据传入的command命令，查选编辑器当前的选区，返回命令的状态
             * @method  queryCommandState
             * @param { String } cmdName 需要查询的命令名称
             * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
             * @return { Number } number 返回放前命令的状态，返回值三种情况：(-1|0|1)
             * @example
             * ```javascript
             * editor.queryCommandState(cmdName)  => (-1|0|1)
             * ```
             * @see COMMAND.LIST
             */queryCommandState:function queryCommandState(cmdName){return this._callCmdFn('queryCommandState',arguments);},/**
             * 根据传入的command命令，查选编辑器当前的选区，根据命令返回相关的值
             * @method queryCommandValue
             * @param { String } cmdName 需要查询的命令名称
             * @remind 具体命令的使用请参考<a href="#COMMAND.LIST">命令列表</a>
             * @remind 只有部分插件有此方法
             * @return { * } 返回每个命令特定的当前状态值
             * @grammar editor.queryCommandValue(cmdName)  =>  {*}
             * @see COMMAND.LIST
             */queryCommandValue:function queryCommandValue(cmdName){return this._callCmdFn('queryCommandValue',arguments);},/**
             * 检查编辑区域中是否有内容
             * @method  hasContents
             * @remind 默认有文本内容，或者有以下节点都不认为是空
             * table,ul,ol,dl,iframe,area,base,col,hr,img,embed,input,link,meta,param
             * @return { Boolean } 检查有内容返回true，否则返回false
             * @example
             * ```javascript
             * editor.hasContents()
             * ```
             */ /**
             * 检查编辑区域中是否有内容，若包含参数tags中的节点类型，直接返回true
             * @method  hasContents
             * @param { Array } tags 传入数组判断时用到的节点类型
             * @return { Boolean } 若文档中包含tags数组里对应的tag，返回true，否则返回false
             * @example
             * ```javascript
             * editor.hasContents(['span']);
             * ```
             */hasContents:function hasContents(tags){if(tags){for(var i=0,ci;ci=tags[i++];){if(this.document.getElementsByTagName(ci).length>0){return true;}}}if(!domUtils.isEmptyBlock(this.body)){return true;}//随时添加,定义的特殊标签如果存在，不能认为是空
tags=['div'];for(i=0;ci=tags[i++];){var nodes=domUtils.getElementsByTagName(this.document,ci);for(var n=0,cn;cn=nodes[n++];){if(domUtils.isCustomeNode(cn)){return true;}}}return false;},/**
             * 重置编辑器，可用来做多个tab使用同一个编辑器实例
             * @method  reset
             * @remind 此方法会清空编辑器内容，清空回退列表，会触发reset事件
             * @example
             * ```javascript
             * editor.reset()
             * ```
             */reset:function reset(){this.fireEvent('reset');},/**
             * 设置当前编辑区域可以编辑
             * @method setEnabled
             * @example
             * ```javascript
             * editor.setEnabled()
             * ```
             */setEnabled:function setEnabled(){var me=this,range;if(me.body.contentEditable=='false'){me.body.contentEditable=true;range=me.selection.getRange();//有可能内容丢失了
try{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}range.select(true);if(me.bkqueryCommandState){me.queryCommandState=me.bkqueryCommandState;delete me.bkqueryCommandState;}if(me.bkqueryCommandValue){me.queryCommandValue=me.bkqueryCommandValue;delete me.bkqueryCommandValue;}me.fireEvent('selectionchange');}},enable:function enable(){return this.setEnabled();},/** 设置当前编辑区域不可编辑
             * @method setDisabled
             */ /** 设置当前编辑区域不可编辑,except中的命令除外
             * @method setDisabled
             * @param { String } except 例外命令的字符串
             * @remind 即使设置了disable，此处配置的例外命令仍然可以执行
             * @example
             * ```javascript
             * editor.setDisabled('bold'); //禁用工具栏中除加粗之外的所有功能
             * ```
             */ /** 设置当前编辑区域不可编辑,except中的命令除外
             * @method setDisabled
             * @param { Array } except 例外命令的字符串数组，数组中的命令仍然可以执行
             * @remind 即使设置了disable，此处配置的例外命令仍然可以执行
             * @example
             * ```javascript
             * editor.setDisabled(['bold','insertimage']); //禁用工具栏中除加粗和插入图片之外的所有功能
             * ```
             */setDisabled:function setDisabled(except){var me=this;except=except?utils.isArray(except)?except:[except]:[];if(me.body.contentEditable=='true'){if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.body.contentEditable=false;me.bkqueryCommandState=me.queryCommandState;me.bkqueryCommandValue=me.queryCommandValue;me.queryCommandState=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandState.apply(me,arguments);}return -1;};me.queryCommandValue=function(type){if(utils.indexOf(except,type)!=-1){return me.bkqueryCommandValue.apply(me,arguments);}return null;};me.fireEvent('selectionchange');}},disable:function disable(except){return this.setDisabled(except);},/**
             * 设置默认内容
             * @method _setDefaultContent
             * @private
             * @param  { String } cont 要存入的内容
             */_setDefaultContent:function(){function clear(){var me=this;if(me.document.getElementById('initContent')){me.body.innerHTML='<p>'+(ie?'':'<br/>')+'</p>';me.removeListener('firstBeforeExecCommand focus',clear);setTimeout(function(){me.focus();me._selectionChange();},0);}}return function(cont){var me=this;me.body.innerHTML='<p id="initContent">'+cont+'</p>';me.addListener('firstBeforeExecCommand focus',clear);};}(),/**
             * 显示编辑器
             * @method setShow
             * @example
             * ```javascript
             * editor.setShow()
             * ```
             */setShow:function setShow(){var me=this,range=me.selection.getRange();if(me.container.style.display=='none'){//有可能内容丢失了
try{range.moveToBookmark(me.lastBk);delete me.lastBk;}catch(e){range.setStartAtFirst(me.body).collapse(true);}//ie下focus实效，所以做了个延迟
setTimeout(function(){range.select(true);},100);me.container.style.display='';}},show:function show(){return this.setShow();},/**
             * 隐藏编辑器
             * @method setHide
             * @example
             * ```javascript
             * editor.setHide()
             * ```
             */setHide:function setHide(){var me=this;if(!me.lastBk){me.lastBk=me.selection.getRange().createBookmark(true);}me.container.style.display='none';},hide:function hide(){return this.setHide();},/**
             * 根据指定的路径，获取对应的语言资源
             * @method getLang
             * @param { String } path 路径根据的是lang目录下的语言文件的路径结构
             * @return { Object | String } 根据路径返回语言资源的Json格式对象或者语言字符串
             * @example
             * ```javascript
             * editor.getLang('contextMenu.delete'); //如果当前是中文，那返回是的是'删除'
             * ```
             */getLang:function getLang(path){var lang=UE.I18N[this.options.lang];if(!lang){throw Error("not import language file");}path=(path||"").split(".");for(var i=0,ci;ci=path[i++];){lang=lang[ci];if(!lang)break;}return lang;},/**
             * 计算编辑器html内容字符串的长度
             * @method  getContentLength
             * @return { Number } 返回计算的长度
             * @example
             * ```javascript
             * //编辑器html内容<p><strong>132</strong></p>
             * editor.getContentLength() //返回27
             * ```
             */ /**
             * 计算编辑器当前纯文本内容的长度
             * @method  getContentLength
             * @param { Boolean } ingoneHtml 传入true时，只按照纯文本来计算
             * @return { Number } 返回计算的长度，内容中有hr/img/iframe标签，长度加1
             * @example
             * ```javascript
             * //编辑器html内容<p><strong>132</strong></p>
             * editor.getContentLength() //返回3
             * ```
             */getContentLength:function getContentLength(ingoneHtml,tagNames){var count=this.getContent(false,false,true).length;if(ingoneHtml){tagNames=(tagNames||[]).concat(['hr','img','iframe']);count=this.getContentTxt().replace(/[\t\r\n]+/g,'').length;for(var i=0,ci;ci=tagNames[i++];){count+=this.document.getElementsByTagName(ci).length;}}return count;},/**
             * 注册输入过滤规则
             * @method  addInputRule
             * @param { Function } rule 要添加的过滤规则
             * @example
             * ```javascript
             * editor.addInputRule(function(root){
             *   $.each(root.getNodesByTagName('div'),function(i,node){
             *       node.tagName="p";
             *   });
             * });
             * ```
             */addInputRule:function addInputRule(rule){this.inputRules.push(rule);},/**
             * 执行注册的过滤规则
             * @method  filterInputRule
             * @param { UE.uNode } root 要过滤的uNode节点
             * @remind 执行editor.setContent方法和执行'inserthtml'命令后，会运行该过滤函数
             * @example
             * ```javascript
             * editor.filterInputRule(editor.body);
             * ```
             * @see UE.Editor:addInputRule
             */filterInputRule:function filterInputRule(root){for(var i=0,ci;ci=this.inputRules[i++];){ci.call(this,root);}},/**
             * 注册输出过滤规则
             * @method  addOutputRule
             * @param { Function } rule 要添加的过滤规则
             * @example
             * ```javascript
             * editor.addOutputRule(function(root){
             *   $.each(root.getNodesByTagName('p'),function(i,node){
             *       node.tagName="div";
             *   });
             * });
             * ```
             */addOutputRule:function addOutputRule(rule){this.outputRules.push(rule);},/**
             * 根据输出过滤规则，过滤编辑器内容
             * @method  filterOutputRule
             * @remind 执行editor.getContent方法的时候，会先运行该过滤函数
             * @param { UE.uNode } root 要过滤的uNode节点
             * @example
             * ```javascript
             * editor.filterOutputRule(editor.body);
             * ```
             * @see UE.Editor:addOutputRule
             */filterOutputRule:function filterOutputRule(root){for(var i=0,ci;ci=this.outputRules[i++];){ci.call(this,root);}},/**
             * 根据action名称获取请求的路径
             * @method  getActionUrl
             * @remind 假如没有设置serverUrl,会根据imageUrl设置默认的controller路径
             * @param { String } action action名称
             * @example
             * ```javascript
             * editor.getActionUrl('config'); //返回 "/ueditor/php/controller.php?action=config"
             * editor.getActionUrl('image'); //返回 "/ueditor/php/controller.php?action=uplaodimage"
             * editor.getActionUrl('scrawl'); //返回 "/ueditor/php/controller.php?action=uplaodscrawl"
             * editor.getActionUrl('imageManager'); //返回 "/ueditor/php/controller.php?action=listimage"
             * ```
             */getActionUrl:function getActionUrl(action){var actionName=this.getOpt(action)||action,imageUrl=this.getOpt('imageUrl'),serverUrl=this.getOpt('serverUrl');if(!serverUrl&&imageUrl){serverUrl=imageUrl.replace(/^(.*[\/]).+([\.].+)$/,'$1controller$2');}if(serverUrl){serverUrl=serverUrl+(serverUrl.indexOf('?')==-1?'?':'&')+'action='+(actionName||'');return utils.formatUrl(serverUrl);}else{return '';}}};utils.inherits(Editor,EventBase);})();// core/Editor.defaultoptions.js
//维护编辑器一下默认的不在插件中的配置项
UE.Editor.defaultOptions=function(editor){var _url=editor.options.UEDITOR_PUBHOME_URL;return {isShow:true,initialContent:'',initialStyle:'',autoClearinitialContent:false,textarea:'editorValue',focus:false,focusInEnd:true,autoClearEmptyNode:true,fullscreen:false,readonly:false,zIndex:999,imagePopup:true,enterTag:'p',customDomain:false,lang:'zh-cn',langPath:_url+'lang/',theme:'default',themePath:_url+'themes/',allHtmlEnabled:false,scaleEnabled:false,tableNativeEditInFF:false,autoSyncData:true,fileNameFormat:'{time}{rand:6}'};};// core/loadconfig.js
(function(){UE.Editor.prototype.loadServerConfig=function(){var me=this;return;setTimeout(function(){try{me.options.imageUrl&&me.setOpt('serverUrl',me.options.imageUrl.replace(/^(.*[\/]).+([\.].+)$/,'$1controller$2'));var configUrl=me.getActionUrl('config'),isJsonp=utils.isCrossDomainUrl(configUrl);/* 发出ajax请求 */me._serverConfigLoaded=false;configUrl&&UE.ajax.request(configUrl,{'method':'GET','dataType':isJsonp?'jsonp':'','onsuccess':function onsuccess(r){try{var config=isJsonp?r:eval("("+r.responseText+")");utils.extend(me.options,config);me.fireEvent('serverConfigLoaded');me._serverConfigLoaded=true;}catch(e){showErrorMsg(me.getLang('loadconfigFormatError'));}},'onerror':function onerror(){showErrorMsg(me.getLang('loadconfigHttpError'));}});}catch(e){showErrorMsg(me.getLang('loadconfigError'));}});function showErrorMsg(msg){console&&console.error(msg);//me.fireEvent('showMessage', {
//    'title': msg,
//    'type': 'error'
//});
}};UE.Editor.prototype.isServerConfigLoaded=function(){var me=this;return me._serverConfigLoaded||false;};UE.Editor.prototype.afterConfigReady=function(handler){if(!handler||!utils.isFunction(handler))return;var me=this;var readyHandler=function readyHandler(){handler.apply(me,arguments);me.removeListener('serverConfigLoaded',readyHandler);};handler.call(me,'serverConfigLoaded');return;if(me.isServerConfigLoaded()){handler.call(me,'serverConfigLoaded');}else{me.addListener('serverConfigLoaded',readyHandler);}};})();// core/ajax.js
/**
     * @file
     * @module UE.ajax
     * @since 1.2.6.1
     */ /**
     * 提供对ajax请求的支持
     * @module UE.ajax
     */UE.ajax=function(){//创建一个ajaxRequest对象
var fnStr='XMLHttpRequest()';try{new ActiveXObject("Msxml2.XMLHTTP");fnStr='ActiveXObject(\'Msxml2.XMLHTTP\')';}catch(e){try{new ActiveXObject("Microsoft.XMLHTTP");fnStr='ActiveXObject(\'Microsoft.XMLHTTP\')';}catch(e){}}var creatAjaxRequest=new Function('return new '+fnStr);/**
         * 将json参数转化成适合ajax提交的参数列表
         * @param json
         */function json2str(json){var strArr=[];for(var i in json){//忽略默认的几个参数
if(i=="method"||i=="timeout"||i=="async"||i=="dataType"||i=="callback")continue;//忽略控制
if(json[i]==undefined||json[i]==null)continue;//传递过来的对象和函数不在提交之列
if(!(_typeof(json[i]).toLowerCase()=="function"||_typeof(json[i]).toLowerCase()=="object")){strArr.push(encodeURIComponent(i)+"="+encodeURIComponent(json[i]));}else if(utils.isArray(json[i])){//支持传数组内容
for(var j=0;j<json[i].length;j++){strArr.push(encodeURIComponent(i)+"[]="+encodeURIComponent(json[i][j]));}}}return strArr.join("&");}function doAjax(url,ajaxOptions){var xhr=creatAjaxRequest(),//是否超时
timeIsOut=false,//默认参数
defaultAjaxOptions={method:"POST",timeout:5000,async:true,data:{},//需要传递对象的话只能覆盖
onsuccess:function onsuccess(){},onerror:function onerror(){}};if(_typeof(url)==="object"){ajaxOptions=url;url=ajaxOptions.url;}if(!xhr||!url)return;var ajaxOpts=ajaxOptions?utils.extend(defaultAjaxOptions,ajaxOptions):defaultAjaxOptions;var submitStr=json2str(ajaxOpts);// { name:"Jim",city:"Beijing" } --> "name=Jim&city=Beijing"
//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串
if(!utils.isEmptyObject(ajaxOpts.data)){submitStr+=(submitStr?"&":"")+json2str(ajaxOpts.data);}//超时检测
var timerID=setTimeout(function(){if(xhr.readyState!=4){timeIsOut=true;xhr.abort();clearTimeout(timerID);}},ajaxOpts.timeout);var method=ajaxOpts.method.toUpperCase();var str=url+(url.indexOf("?")==-1?"?":"&")+(method=="POST"?"":submitStr+"&noCache="+ +new Date());xhr.open(method,str,ajaxOpts.async);xhr.onreadystatechange=function(){if(xhr.readyState==4){if(!timeIsOut&&xhr.status==200){ajaxOpts.onsuccess(xhr);}else{ajaxOpts.onerror(xhr);}}};if(method=="POST"){xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');xhr.send(submitStr);}else{xhr.send(null);}}function doJsonp(url,opts){var successhandler=opts.onsuccess||function(){},scr=document.createElement('SCRIPT'),options=opts||{},charset=options['charset'],callbackField=options['jsonp']||'callback',callbackFnName,timeOut=options['timeOut']||0,timer,reg=new RegExp('(\\?|&)'+callbackField+'=([^&]*)'),matches;if(utils.isFunction(successhandler)){callbackFnName='bd__editor__'+Math.floor(Math.random()*2147483648).toString(36);window[callbackFnName]=getCallBack(0);}else if(utils.isString(successhandler)){callbackFnName=successhandler;}else{if(matches=reg.exec(url)){callbackFnName=matches[2];}}url=url.replace(reg,'\x241'+callbackField+'='+callbackFnName);if(url.search(reg)<0){url+=(url.indexOf('?')<0?'?':'&')+callbackField+'='+callbackFnName;}var queryStr=json2str(opts);// { name:"Jim",city:"Beijing" } --> "name=Jim&city=Beijing"
//如果用户直接通过data参数传递json对象过来，则也要将此json对象转化为字符串
if(!utils.isEmptyObject(opts.data)){queryStr+=(queryStr?"&":"")+json2str(opts.data);}if(queryStr){url=url.replace(/\?/,'?'+queryStr+'&');}scr.onerror=getCallBack(1);if(timeOut){timer=setTimeout(getCallBack(1),timeOut);}createScriptTag(scr,url,charset);function createScriptTag(scr,url,charset){scr.setAttribute('type','text/javascript');scr.setAttribute('defer','defer');charset&&scr.setAttribute('charset',charset);scr.setAttribute('src',url);document.getElementsByTagName('head')[0].appendChild(scr);}function getCallBack(onTimeOut){return function(){try{if(onTimeOut){options.onerror&&options.onerror();}else{try{clearTimeout(timer);successhandler.apply(window,arguments);}catch(e){}}}catch(exception){options.onerror&&options.onerror.call(window,exception);}finally{options.oncomplete&&options.oncomplete.apply(window,arguments);scr.parentNode&&scr.parentNode.removeChild(scr);window[callbackFnName]=null;try{delete window[callbackFnName];}catch(e){}}};}}return {/**
             * 根据给定的参数项，向指定的url发起一个ajax请求。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求
             * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调
             * @method request
             * @param { URLString } url ajax请求的url地址
             * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：
             * @example
             * ```javascript
             * //向sayhello.php发起一个异步的Ajax GET请求, 请求超时时间为10s， 请求完成后执行相应的回调。
             * UE.ajax.requeset( 'sayhello.php', {
             *
             *     //请求方法。可选值： 'GET', 'POST'，默认值是'POST'
             *     method: 'GET',
             *
             *     //超时时间。 默认为5000， 单位是ms
             *     timeout: 10000,
             *
             *     //是否是异步请求。 true为异步请求， false为同步请求
             *     async: true,
             *
             *     //请求携带的数据。如果请求为GET请求， data会经过stringify后附加到请求url之后。
             *     data: {
             *         name: 'ueditor'
             *     },
             *
             *     //请求成功后的回调， 该回调接受当前的XMLHttpRequest对象作为参数。
             *     onsuccess: function ( xhr ) {
             *         console.log( xhr.responseText );
             *     },
             *
             *     //请求失败或者超时后的回调。
             *     onerror: function ( xhr ) {
             *          alert( 'Ajax请求失败' );
             *     }
             *
             * } );
             * ```
             */ /**
             * 根据给定的参数项发起一个ajax请求， 参数项里必须包含一个url地址。 ajax请求完成后，会根据请求结果调用相应回调： 如果请求
             * 成功， 则调用onsuccess回调， 失败则调用 onerror 回调。
             * @method request
             * @warning 如果在参数项里未提供一个key为“url”的地址值，则该请求将直接退出。
             * @param { Object } ajaxOptions ajax请求选项的键值对，支持的选项如下：
             * @example
             * ```javascript
             *
             * //向sayhello.php发起一个异步的Ajax POST请求, 请求超时时间为5s， 请求完成后不执行任何回调。
             * UE.ajax.requeset( 'sayhello.php', {
             *
             *     //请求的地址， 该项是必须的。
             *     url: 'sayhello.php'
             *
             * } );
             * ```
             */request:function request(url,opts){if(opts&&opts.dataType=='jsonp'){doJsonp(url,opts);}else{doAjax(url,opts);}},getJSONP:function getJSONP(url,data,fn){var opts={'data':data,'oncomplete':fn};doJsonp(url,opts);}};}();// core/filterword.js
/**
     * UE过滤word的静态方法
     * @file
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @module UE
     */ /**
     * 根据传入html字符串过滤word
     * @module UE
     * @since 1.2.6.1
     * @method filterWord
     * @param { String } html html字符串
     * @return { String } 已过滤后的结果字符串
     * @example
     * ```javascript
     * UE.filterWord(html);
     * ```
     */var filterWord=UE.filterWord=function(){//是否是word过来的内容
function isWordDocument(str){return /(class="?Mso|style="[^"]*\bmso\-|w:WordDocument|<(v|o):|lang=)/ig.test(str);}//去掉小数
function transUnit(v){v=v.replace(/[\d.]+\w+/g,function(m){return utils.transUnitToPx(m);});return v;}function filterPasteWord(str){return str.replace(/[\t\r\n]+/g,' ').replace(/<!--[\s\S]*?-->/ig,"")//转换图片
.replace(/<v:shape [^>]*>[\s\S]*?.<\/v:shape>/gi,function(str){//opera能自己解析出image所这里直接返回空
if(browser.opera){return '';}try{//有可能是bitmap占为图，无用，直接过滤掉，主要体现在粘贴excel表格中
if(/Bitmap/i.test(str)){return '';}var width=str.match(/width:([ \d.]*p[tx])/i)[1],height=str.match(/height:([ \d.]*p[tx])/i)[1],src=str.match(/src=\s*"([^"]*)"/i)[1];return '<img width="'+transUnit(width)+'" height="'+transUnit(height)+'" src="'+src+'" />';}catch(e){return '';}})//针对wps添加的多余标签处理
.replace(/<\/?div[^>]*>/g,'')//去掉多余的属性
.replace(/v:\w+=(["']?)[^'"]+\1/g,'').replace(/<(!|script[^>]*>.*?<\/script(?=[>\s])|\/?(\?xml(:\w+)?|xml|meta|link|style|\w+:\w+)(?=[\s\/>]))[^>]*>/gi,"").replace(/<p [^>]*class="?MsoHeading"?[^>]*>(.*?)<\/p>/gi,"<p><strong>$1</strong></p>")//去掉多余的属性
.replace(/\s+(class|lang|align)\s*=\s*(['"]?)([\w-]+)\2/ig,function(str,name,marks,val){//保留list的标示
return name=='class'&&val=='MsoListParagraph'?str:'';})//清除多余的font/span不能匹配&nbsp;有可能是空格
.replace(/<(font|span)[^>]*>(\s*)<\/\1>/gi,function(a,b,c){return c.replace(/[\t\r\n ]+/g,' ');})//处理style的问题
.replace(/(<[a-z][^>]*)\sstyle=(["'])([^\2]*?)\2/gi,function(str,tag,tmp,style){var n=[],s=style.replace(/^\s+|\s+$/,'').replace(/&#39;/g,'\'').replace(/&quot;/gi,"'").replace(/[\d.]+(cm|pt)/g,function(str){return utils.transUnitToPx(str);}).split(/;\s*/g);for(var i=0,v;v=s[i];i++){var name,value,parts=v.split(":");if(parts.length==2){name=parts[0].toLowerCase();value=parts[1].toLowerCase();if(/^(background)\w*/.test(name)&&value.replace(/(initial|\s)/g,'').length==0||/^(margin)\w*/.test(name)&&/^0\w+$/.test(value)){continue;}switch(name){case"mso-padding-alt":case"mso-padding-top-alt":case"mso-padding-right-alt":case"mso-padding-bottom-alt":case"mso-padding-left-alt":case"mso-margin-alt":case"mso-margin-top-alt":case"mso-margin-right-alt":case"mso-margin-bottom-alt":case"mso-margin-left-alt"://ie下会出现挤到一起的情况
//case "mso-table-layout-alt":
case"mso-height":case"mso-width":case"mso-vertical-align-alt"://trace:1819 ff下会解析出padding在table上
if(!/<table/.test(tag))n[i]=name.replace(/^mso-|-alt$/g,"")+":"+transUnit(value);continue;case"horiz-align":n[i]="text-align:"+value;continue;case"vert-align":n[i]="vertical-align:"+value;continue;case"font-color":case"mso-foreground":n[i]="color:"+value;continue;case"mso-background":case"mso-highlight":n[i]="background:"+value;continue;case"mso-default-height":n[i]="min-height:"+transUnit(value);continue;case"mso-default-width":n[i]="min-width:"+transUnit(value);continue;case"mso-padding-between-alt":n[i]="border-collapse:separate;border-spacing:"+transUnit(value);continue;case"text-line-through":if(value=="single"||value=="double"){n[i]="text-decoration:line-through";}continue;case"mso-zero-height":if(value=="yes"){n[i]="display:none";}continue;//                                case 'background':
//                                    break;
case'margin':if(!/[1-9]/.test(value)){continue;}}if(/^(mso|column|font-emph|lang|layout|line-break|list-image|nav|panose|punct|row|ruby|sep|size|src|tab-|table-border|text-(?:decor|trans)|top-bar|version|vnd|word-break)/.test(name)||/text\-indent|padding|margin/.test(name)&&/\-[\d.]+/.test(value)){continue;}n[i]=name+":"+parts[1];}}return tag+(n.length?' style="'+n.join(';').replace(/;{2,}/g,';')+'"':'');});}return function(html){return isWordDocument(html)?filterPasteWord(html):html;};}();// core/node.js
/**
     * 编辑器模拟的节点类
     * @file
     * @module UE
     * @class uNode
     * @since 1.2.6.1
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @unfile
     * @module UE
     */(function(){/**
         * 编辑器模拟的节点类
         * @unfile
         * @module UE
         * @class uNode
         */ /**
         * 通过一个键值对，创建一个uNode对象
         * @constructor
         * @param { Object } attr 传入要创建的uNode的初始属性
         * @example
         * ```javascript
         * var node = new uNode({
         *     type:'element',
         *     tagName:'span',
         *     attrs:{style:'font-size:14px;'}
         * }
         * ```
         */var uNode=UE.uNode=function(obj){this.type=obj.type;this.data=obj.data;this.tagName=obj.tagName;this.parentNode=obj.parentNode;this.attrs=obj.attrs||{};this.children=obj.children;};var notTransAttrs={'href':1,'src':1,'_src':1,'_href':1,'cdata_data':1};var notTransTagName={style:1,script:1};var indentChar='    ',breakChar='\n';function insertLine(arr,current,begin){arr.push(breakChar);return current+(begin?1:-1);}function insertIndent(arr,current){//插入缩进
for(var i=0;i<current;i++){arr.push(indentChar);}}//创建uNode的静态方法
//支持标签和html
uNode.createElement=function(html){if(/[<>]/.test(html)){return UE.htmlparser(html).children[0];}else{return new uNode({type:'element',children:[],tagName:html});}};uNode.createText=function(data,noTrans){return new UE.uNode({type:'text','data':noTrans?data:utils.unhtml(data||'')});};function nodeToHtml(node,arr,formatter,current){switch(node.type){case'root':for(var i=0,ci;ci=node.children[i++];){//插入新行
if(formatter&&ci.type=='element'&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current,true);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}break;case'text':isText(node,arr);break;case'element':isElement(node,arr,formatter,current);break;case'comment':isComment(node,arr,formatter);}return arr;}function isText(node,arr){if(node.parentNode.tagName=='pre'){//源码模式下输入html标签，不能做转换处理，直接输出
arr.push(node.data);}else{arr.push(notTransTagName[node.parentNode.tagName]?utils.html(node.data):node.data.replace(/[ ]{2}/g,' &nbsp;'));}}function isElement(node,arr,formatter,current){var attrhtml='';if(node.attrs){attrhtml=[];var attrs=node.attrs;for(var a in attrs){//这里就针对
//<p>'<img src='http://nsclick.baidu.com/u.gif?&asdf=\"sdf&asdfasdfs;asdf'></p>
//这里边的\"做转换，要不用innerHTML直接被截断了，属性src
//有可能做的不够
attrhtml.push(a+(attrs[a]!==undefined?'="'+(notTransAttrs[a]?utils.html(attrs[a]).replace(/["]/g,function(a){return '&quot;';}):utils.unhtml(attrs[a]))+'"':''));}attrhtml=attrhtml.join(' ');}arr.push('<'+node.tagName+(attrhtml?' '+attrhtml:'')+(dtd.$empty[node.tagName]?'\/':'')+'>');//插入新行
if(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!='pre'){if(node.children&&node.children.length){current=insertLine(arr,current,true);insertIndent(arr,current);}}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){if(formatter&&ci.type=='element'&&!dtd.$inlineWithA[ci.tagName]&&i>1){insertLine(arr,current);insertIndent(arr,current);}nodeToHtml(ci,arr,formatter,current);}}if(!dtd.$empty[node.tagName]){if(formatter&&!dtd.$inlineWithA[node.tagName]&&node.tagName!='pre'){if(node.children&&node.children.length){current=insertLine(arr,current);insertIndent(arr,current);}}arr.push('<\/'+node.tagName+'>');}}function isComment(node,arr){arr.push('<!--'+node.data+'-->');}function _getNodeById(root,id){var node;if(root.type=='element'&&root.getAttr('id')==id){return root;}if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}}function _getNodesByTagName(node,tagName,arr){if(node.type=='element'&&node.tagName==tagName){arr.push(node);}if(node.children&&node.children.length){for(var i=0,ci;ci=node.children[i++];){_getNodesByTagName(ci,tagName,arr);}}}function nodeTraversal(root,fn){if(root.children&&root.children.length){for(var i=0,ci;ci=root.children[i];){nodeTraversal(ci,fn);//ci被替换的情况，这里就不再走 fn了
if(ci.parentNode){if(ci.children&&ci.children.length){fn(ci);}if(ci.parentNode)i++;}}}else{fn(root);}}uNode.prototype={/**
             * 当前节点对象，转换成html文本
             * @method toHtml
             * @return { String } 返回转换后的html字符串
             * @example
             * ```javascript
             * node.toHtml();
             * ```
             */ /**
             * 当前节点对象，转换成html文本
             * @method toHtml
             * @param { Boolean } formatter 是否格式化返回值
             * @return { String } 返回转换后的html字符串
             * @example
             * ```javascript
             * node.toHtml( true );
             * ```
             */toHtml:function toHtml(formatter){var arr=[];nodeToHtml(this,arr,formatter,0);return arr.join('');},/**
             * 获取节点的html内容
             * @method innerHTML
             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
             * @return { String } 返回节点的html内容
             * @example
             * ```javascript
             * var htmlstr = node.innerHTML();
             * ```
             */ /**
             * 设置节点的html内容
             * @method innerHTML
             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
             * @param { String } htmlstr 传入要设置的html内容
             * @return { UE.uNode } 返回节点本身
             * @example
             * ```javascript
             * node.innerHTML('<span>text</span>');
             * ```
             */innerHTML:function innerHTML(htmlstr){if(this.type!='element'||dtd.$empty[this.tagName]){return this;}if(utils.isString(htmlstr)){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];var tmpRoot=UE.htmlparser(htmlstr);for(var i=0,ci;ci=tmpRoot.children[i++];){this.children.push(ci);ci.parentNode=this;}return this;}else{var tmpRoot=new UE.uNode({type:'root',children:this.children});return tmpRoot.toHtml();}},/**
             * 获取节点的纯文本内容
             * @method innerText
             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
             * @return { String } 返回节点的存文本内容
             * @example
             * ```javascript
             * var textStr = node.innerText();
             * ```
             */ /**
             * 设置节点的纯文本内容
             * @method innerText
             * @warning 假如节点的type不是'element'，或节点的标签名称不在dtd列表里，直接返回当前节点
             * @param { String } textStr 传入要设置的文本内容
             * @return { UE.uNode } 返回节点本身
             * @example
             * ```javascript
             * node.innerText('<span>text</span>');
             * ```
             */innerText:function innerText(textStr,noTrans){if(this.type!='element'||dtd.$empty[this.tagName]){return this;}if(textStr){if(this.children){for(var i=0,ci;ci=this.children[i++];){ci.parentNode=null;}}this.children=[];this.appendChild(uNode.createText(textStr,noTrans));return this;}else{return this.toHtml().replace(/<[^>]+>/g,'');}},/**
             * 获取当前对象的data属性
             * @method getData
             * @return { Object } 若节点的type值是elemenet，返回空字符串，否则返回节点的data属性
             * @example
             * ```javascript
             * node.getData();
             * ```
             */getData:function getData(){if(this.type=='element')return '';return this.data;},/**
             * 获取当前节点下的第一个子节点
             * @method firstChild
             * @return { UE.uNode } 返回第一个子节点
             * @example
             * ```javascript
             * node.firstChild(); //返回第一个子节点
             * ```
             */firstChild:function firstChild(){//            if (this.type != 'element' || dtd.$empty[this.tagName]) {
//                return this;
//            }
return this.children?this.children[0]:null;},/**
             * 获取当前节点下的最后一个子节点
             * @method lastChild
             * @return { UE.uNode } 返回最后一个子节点
             * @example
             * ```javascript
             * node.lastChild(); //返回最后一个子节点
             * ```
             */lastChild:function lastChild(){//            if (this.type != 'element' || dtd.$empty[this.tagName] ) {
//                return this;
//            }
return this.children?this.children[this.children.length-1]:null;},/**
             * 获取和当前节点有相同父亲节点的前一个节点
             * @method previousSibling
             * @return { UE.uNode } 返回前一个节点
             * @example
             * ```javascript
             * node.children[2].previousSibling(); //返回子节点node.children[1]
             * ```
             */previousSibling:function previousSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i==0?null:parent.children[i-1];}}},/**
             * 获取和当前节点有相同父亲节点的后一个节点
             * @method nextSibling
             * @return { UE.uNode } 返回后一个节点,找不到返回null
             * @example
             * ```javascript
             * node.children[2].nextSibling(); //如果有，返回子节点node.children[3]
             * ```
             */nextSibling:function nextSibling(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i++];){if(ci===this){return parent.children[i];}}},/**
             * 用新的节点替换当前节点
             * @method replaceChild
             * @param { UE.uNode } target 要替换成该节点参数
             * @param { UE.uNode } source 要被替换掉的节点
             * @return { UE.uNode } 返回替换之后的节点对象
             * @example
             * ```javascript
             * node.replaceChild(newNode, childNode); //用newNode替换childNode,childNode是node的子节点
             * ```
             */replaceChild:function replaceChild(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,1,target);source.parentNode=null;target.parentNode=this;return target;}}}},/**
             * 在节点的子节点列表最后位置插入一个节点
             * @method appendChild
             * @param { UE.uNode } node 要插入的节点
             * @return { UE.uNode } 返回刚插入的子节点
             * @example
             * ```javascript
             * node.appendChild( newNode ); //在node内插入子节点newNode
             * ```
             */appendChild:function appendChild(node){if(this.type=='root'||this.type=='element'&&!dtd.$empty[this.tagName]){if(!this.children){this.children=[];}if(node.parentNode){node.parentNode.removeChild(node);}for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);break;}}this.children.push(node);node.parentNode=this;return node;}},/**
             * 在传入节点的前面插入一个节点
             * @method insertBefore
             * @param { UE.uNode } target 要插入的节点
             * @param { UE.uNode } source 在该参数节点前面插入
             * @return { UE.uNode } 返回刚插入的子节点
             * @example
             * ```javascript
             * node.parentNode.insertBefore(newNode, node); //在node节点后面插入newNode
             * ```
             */insertBefore:function insertBefore(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i,0,target);target.parentNode=this;return target;}}}},/**
             * 在传入节点的后面插入一个节点
             * @method insertAfter
             * @param { UE.uNode } target 要插入的节点
             * @param { UE.uNode } source 在该参数节点后面插入
             * @return { UE.uNode } 返回刚插入的子节点
             * @example
             * ```javascript
             * node.parentNode.insertAfter(newNode, node); //在node节点后面插入newNode
             * ```
             */insertAfter:function insertAfter(target,source){if(this.children){if(target.parentNode){target.parentNode.removeChild(target);}for(var i=0,ci;ci=this.children[i];i++){if(ci===source){this.children.splice(i+1,0,target);target.parentNode=this;return target;}}}},/**
             * 从当前节点的子节点列表中，移除节点
             * @method removeChild
             * @param { UE.uNode } node 要移除的节点引用
             * @param { Boolean } keepChildren 是否保留移除节点的子节点，若传入true，自动把移除节点的子节点插入到移除的位置
             * @return { * } 返回刚移除的子节点
             * @example
             * ```javascript
             * node.removeChild(childNode,true); //在node的子节点列表中移除child节点，并且吧child的子节点插入到移除的位置
             * ```
             */removeChild:function removeChild(node,keepChildren){if(this.children){for(var i=0,ci;ci=this.children[i];i++){if(ci===node){this.children.splice(i,1);ci.parentNode=null;if(keepChildren&&ci.children&&ci.children.length){for(var j=0,cj;cj=ci.children[j];j++){this.children.splice(i+j,0,cj);cj.parentNode=this;}}return ci;}}}},/**
             * 获取当前节点所代表的元素属性，即获取attrs对象下的属性值
             * @method getAttr
             * @param { String } attrName 要获取的属性名称
             * @return { * } 返回attrs对象下的属性值
             * @example
             * ```javascript
             * node.getAttr('title');
             * ```
             */getAttr:function getAttr(attrName){return this.attrs&&this.attrs[attrName.toLowerCase()];},/**
             * 设置当前节点所代表的元素属性，即设置attrs对象下的属性值
             * @method setAttr
             * @param { String } attrName 要设置的属性名称
             * @param { * } attrVal 要设置的属性值，类型视设置的属性而定
             * @return { * } 返回attrs对象下的属性值
             * @example
             * ```javascript
             * node.setAttr('title','标题');
             * ```
             */setAttr:function setAttr(attrName,attrVal){if(!attrName){delete this.attrs;return;}if(!this.attrs){this.attrs={};}if(utils.isObject(attrName)){for(var a in attrName){if(!attrName[a]){delete this.attrs[a];}else{this.attrs[a.toLowerCase()]=attrName[a];}}}else{if(!attrVal){delete this.attrs[attrName];}else{this.attrs[attrName.toLowerCase()]=attrVal;}}},/**
             * 获取当前节点在父节点下的位置索引
             * @method getIndex
             * @return { Number } 返回索引数值，如果没有父节点，返回-1
             * @example
             * ```javascript
             * node.getIndex();
             * ```
             */getIndex:function getIndex(){var parent=this.parentNode;for(var i=0,ci;ci=parent.children[i];i++){if(ci===this){return i;}}return -1;},/**
             * 在当前节点下，根据id查找节点
             * @method getNodeById
             * @param { String } id 要查找的id
             * @return { UE.uNode } 返回找到的节点
             * @example
             * ```javascript
             * node.getNodeById('textId');
             * ```
             */getNodeById:function getNodeById(id){var node;if(this.children&&this.children.length){for(var i=0,ci;ci=this.children[i++];){if(node=_getNodeById(ci,id)){return node;}}}},/**
             * 在当前节点下，根据元素名称查找节点列表
             * @method getNodesByTagName
             * @param { String } tagNames 要查找的元素名称
             * @return { Array } 返回找到的节点列表
             * @example
             * ```javascript
             * node.getNodesByTagName('span');
             * ```
             */getNodesByTagName:function getNodesByTagName(tagNames){tagNames=utils.trim(tagNames).replace(/[ ]{2,}/g,' ').split(' ');var arr=[],me=this;utils.each(tagNames,function(tagName){if(me.children&&me.children.length){for(var i=0,ci;ci=me.children[i++];){_getNodesByTagName(ci,tagName,arr);}}});return arr;},/**
             * 根据样式名称，获取节点的样式值
             * @method getStyle
             * @param { String } name 要获取的样式名称
             * @return { String } 返回样式值
             * @example
             * ```javascript
             * node.getStyle('font-size');
             * ```
             */getStyle:function getStyle(name){var cssStyle=this.getAttr('style');if(!cssStyle){return '';}var reg=new RegExp('(^|;)\\s*'+name+':([^;]+)','i');var match=cssStyle.match(reg);if(match&&match[0]){return match[2];}return '';},/**
             * 给节点设置样式
             * @method setStyle
             * @param { String } name 要设置的的样式名称
             * @param { String } val 要设置的的样值
             * @example
             * ```javascript
             * node.setStyle('font-size', '12px');
             * ```
             */setStyle:function setStyle(name,val){function exec(name,val){var reg=new RegExp('(^|;)\\s*'+name+':([^;]+;?)','gi');cssStyle=cssStyle.replace(reg,'$1');if(val){cssStyle=name+':'+utils.unhtml(val)+';'+cssStyle;}}var cssStyle=this.getAttr('style');if(!cssStyle){cssStyle='';}if(utils.isObject(name)){for(var a in name){exec(a,name[a]);}}else{exec(name,val);}this.setAttr('style',utils.trim(cssStyle));},/**
             * 传入一个函数，递归遍历当前节点下的所有节点
             * @method traversal
             * @param { Function } fn 遍历到节点的时，传入节点作为参数，运行此函数
             * @example
             * ```javascript
             * traversal(node, function(){
             *     console.log(node.type);
             * });
             * ```
             */traversal:function traversal(fn){if(this.children&&this.children.length){nodeTraversal(this,fn);}return this;}};})();// core/htmlparser.js
/**
     * html字符串转换成uNode节点
     * @file
     * @module UE
     * @since 1.2.6.1
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @unfile
     * @module UE
     */ /**
     * html字符串转换成uNode节点的静态方法
     * @method htmlparser
     * @param { String } htmlstr 要转换的html代码
     * @param { Boolean } ignoreBlank 若设置为true，转换的时候忽略\n\r\t等空白字符
     * @return { uNode } 给定的html片段转换形成的uNode对象
     * @example
     * ```javascript
     * var root = UE.htmlparser('<p><b>htmlparser</b></p>', true);
     * ```
     */var htmlparser=UE.htmlparser=function(htmlstr,ignoreBlank){//todo 原来的方式  [^"'<>\/] 有\/就不能配对上 <TD vAlign=top background=../AAA.JPG> 这样的标签了
//先去掉了，加上的原因忘了，这里先记录
var re_tag=/<(?:(?:\/([^>]+)>)|(?:!--([\S|\s]*?)-->)|(?:([^\s\/<>]+)\s*((?:(?:"[^"]*")|(?:'[^']*')|[^"'<>])*)\/?>))/g,re_attr=/([\w\-:.]+)(?:(?:\s*=\s*(?:(?:"([^"]*)")|(?:'([^']*)')|([^\s>]+)))|(?=\s|$))/g;//ie下取得的html可能会有\n存在，要去掉，在处理replace(/[\t\r\n]*/g,'');代码高量的\n不能去除
var allowEmptyTags={b:1,code:1,i:1,u:1,strike:1,s:1,tt:1,strong:1,q:1,samp:1,em:1,span:1,sub:1,img:1,sup:1,font:1,big:1,small:1,iframe:1,a:1,br:1,pre:1};htmlstr=htmlstr.replace(new RegExp(domUtils.fillChar,'g'),'');if(!ignoreBlank){htmlstr=htmlstr.replace(new RegExp('[\\r\\t\\n'+(ignoreBlank?'':' ')+']*<\/?(\\w+)\\s*(?:[^>]*)>[\\r\\t\\n'+(ignoreBlank?'':' ')+']*','g'),function(a,b){//br暂时单独处理
if(b&&allowEmptyTags[b.toLowerCase()]){return a.replace(/(^[\n\r]+)|([\n\r]+$)/g,'');}return a.replace(new RegExp('^[\\r\\n'+(ignoreBlank?'':' ')+']+'),'').replace(new RegExp('[\\r\\n'+(ignoreBlank?'':' ')+']+$'),'');});}var notTransAttrs={'href':1,'src':1};var uNode=UE.uNode,needParentNode={'td':'tr','tr':['tbody','thead','tfoot'],'tbody':'table','th':'tr','thead':'table','tfoot':'table','caption':'table','li':['ul','ol'],'dt':'dl','dd':'dl','option':'select'},needChild={'ol':'li','ul':'li'};function text(parent,data){if(needChild[parent.tagName]){var tmpNode=uNode.createElement(needChild[parent.tagName]);parent.appendChild(tmpNode);tmpNode.appendChild(uNode.createText(data));parent=tmpNode;}else{parent.appendChild(uNode.createText(data));}}function element(parent,tagName,htmlattr){var needParentTag;if(needParentTag=needParentNode[tagName]){var tmpParent=parent,hasParent;while(tmpParent.type!='root'){if(utils.isArray(needParentTag)?utils.indexOf(needParentTag,tmpParent.tagName)!=-1:needParentTag==tmpParent.tagName){parent=tmpParent;hasParent=true;break;}tmpParent=tmpParent.parentNode;}if(!hasParent){parent=element(parent,utils.isArray(needParentTag)?needParentTag[0]:needParentTag);}}//按dtd处理嵌套
//        if(parent.type != 'root' && !dtd[parent.tagName][tagName])
//            parent = parent.parentNode;
var elm=new uNode({parentNode:parent,type:'element',tagName:tagName.toLowerCase(),//是自闭合的处理一下
children:dtd.$empty[tagName]?null:[]});//如果属性存在，处理属性
if(htmlattr){var attrs={},match;while(match=re_attr.exec(htmlattr)){attrs[match[1].toLowerCase()]=notTransAttrs[match[1].toLowerCase()]?match[2]||match[3]||match[4]:utils.unhtml(match[2]||match[3]||match[4]);}elm.attrs=attrs;}//trace:3970
//        //如果parent下不能放elm
//        if(dtd.$inline[parent.tagName] && dtd.$block[elm.tagName] && !dtd[parent.tagName][elm.tagName]){
//            parent = parent.parentNode;
//            elm.parentNode = parent;
//        }
parent.children.push(elm);//如果是自闭合节点返回父亲节点
return dtd.$empty[tagName]?parent:elm;}function comment(parent,data){parent.children.push(new uNode({type:'comment',data:data,parentNode:parent}));}var match,currentIndex=0,nextIndex=0;//设置根节点
var root=new uNode({type:'root',children:[]});var currentParent=root;while(match=re_tag.exec(htmlstr)){currentIndex=match.index;try{if(currentIndex>nextIndex){//text node
text(currentParent,htmlstr.slice(nextIndex,currentIndex));}if(match[3]){if(dtd.$cdata[currentParent.tagName]){text(currentParent,match[0]);}else{//start tag
currentParent=element(currentParent,match[3].toLowerCase(),match[4]);}}else if(match[1]){if(currentParent.type!='root'){if(dtd.$cdata[currentParent.tagName]&&!dtd.$cdata[match[1]]){text(currentParent,match[0]);}else{var tmpParent=currentParent;while(currentParent.type=='element'&&currentParent.tagName!=match[1].toLowerCase()){currentParent=currentParent.parentNode;if(currentParent.type=='root'){currentParent=tmpParent;throw'break';}}//end tag
currentParent=currentParent.parentNode;}}}else if(match[2]){//comment
comment(currentParent,match[2]);}}catch(e){}nextIndex=re_tag.lastIndex;}//如果结束是文本，就有可能丢掉，所以这里手动判断一下
//例如 <li>sdfsdfsdf<li>sdfsdfsdfsdf
if(nextIndex<htmlstr.length){text(currentParent,htmlstr.slice(nextIndex));}return root;};// core/filternode.js
/**
     * UE过滤节点的静态方法
     * @file
     */ /**
     * UEditor公用空间，UEditor所有的功能都挂载在该空间下
     * @module UE
     */ /**
     * 根据传入节点和过滤规则过滤相应节点
     * @module UE
     * @since 1.2.6.1
     * @method filterNode
     * @param { Object } root 指定root节点
     * @param { Object } rules 过滤规则json对象
     * @example
     * ```javascript
     * UE.filterNode(root,editor.options.filterRules);
     * ```
     */var filterNode=UE.filterNode=function(){function filterNode(node,rules){switch(node.type){case'text':break;case'element':var val;if(val=rules[node.tagName]){if(val==='-'){node.parentNode.removeChild(node);}else if(utils.isFunction(val)){var parentNode=node.parentNode,index=node.getIndex();val(node);if(node.parentNode){if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}else{var attrs=val['$'];if(attrs&&node.attrs){var tmpAttrs={},tmpVal;for(var a in attrs){tmpVal=node.getAttr(a);//todo 只先对style单独处理
if(a=='style'&&utils.isArray(attrs[a])){var tmpCssStyle=[];utils.each(attrs[a],function(v){var tmp;if(tmp=node.getStyle(v)){tmpCssStyle.push(v+':'+tmp);}});tmpVal=tmpCssStyle.join(';');}if(tmpVal){tmpAttrs[a]=tmpVal;}}node.attrs=tmpAttrs;}if(node.children){for(var i=0,ci;ci=node.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}}else{//如果不在名单里扣出子节点并删除该节点,cdata除外
if(dtd.$cdata[node.tagName]){node.parentNode.removeChild(node);}else{var parentNode=node.parentNode,index=node.getIndex();node.parentNode.removeChild(node,true);for(var i=index,ci;ci=parentNode.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}}}break;case'comment':node.parentNode.removeChild(node);}}return function(root,rules){if(utils.isEmptyObject(rules)){return root;}var val;if(val=rules['-']){utils.each(val.split(' '),function(k){rules[k]='-';});}for(var i=0,ci;ci=root.children[i];){filterNode(ci,rules);if(ci.parentNode){i++;}}return root;};}();// core/plugin.js
/**
     * Created with JetBrains PhpStorm.
     * User: campaign
     * Date: 10/8/13
     * Time: 6:15 PM
     * To change this template use File | Settings | File Templates.
     */UE.plugin=function(){var _plugins={};return {register:function register(pluginName,fn,oldOptionName,afterDisabled){if(oldOptionName&&utils.isFunction(oldOptionName)){afterDisabled=oldOptionName;oldOptionName=null;}_plugins[pluginName]={optionName:oldOptionName||pluginName,execFn:fn,//当插件被禁用时执行
afterDisabled:afterDisabled};},load:function load(editor){utils.each(_plugins,function(plugin){var _export=plugin.execFn.call(editor);if(editor.options[plugin.optionName]!==false){if(_export){//后边需要再做扩展
utils.each(_export,function(v,k){switch(k.toLowerCase()){case'shortcutkey':editor.addshortcutkey(v);break;case'bindevents':utils.each(v,function(fn,eventName){editor.addListener(eventName,fn);});break;case'bindmultievents':utils.each(utils.isArray(v)?v:[v],function(event){var types=utils.trim(event.type).split(/\s+/);utils.each(types,function(eventName){editor.addListener(eventName,event.handler);});});break;case'commands':utils.each(v,function(execFn,execName){editor.commands[execName]=execFn;});break;case'outputrule':editor.addOutputRule(v);break;case'inputrule':editor.addInputRule(v);break;case'defaultoptions':editor.setOpt(v);}});}}else if(plugin.afterDisabled){plugin.afterDisabled.call(editor);}});//向下兼容
utils.each(UE.plugins,function(plugin){plugin.call(editor);});},run:function run(pluginName,editor){var plugin=_plugins[pluginName];if(plugin){plugin.exeFn.call(editor);}}};}();// core/keymap.js
var keymap=UE.keymap={'Backspace':8,'Tab':9,'Enter':13,'Shift':16,'Control':17,'Alt':18,'CapsLock':20,'Esc':27,'Spacebar':32,'PageUp':33,'PageDown':34,'End':35,'Home':36,'Left':37,'Up':38,'Right':39,'Down':40,'Insert':45,'Del':46,'NumLock':144,'Cmd':91,'=':187,'-':189,"b":66,'i':73,//回退
'z':90,'y':89,//粘贴
'v':86,'x':88,'s':83,'n':78};// core/localstorage.js
//存储媒介封装
var LocalStorage=UE.LocalStorage=function(){var storage=window.localStorage||getUserData()||null,LOCAL_FILE='localStorage';return {saveLocalData:function saveLocalData(key,data){if(storage&&data){storage.setItem(key,data);return true;}return false;},getLocalData:function getLocalData(key){if(storage){return storage.getItem(key);}return null;},removeItem:function removeItem(key){storage&&storage.removeItem(key);}};function getUserData(){var container=document.createElement("div");container.style.display="none";if(!container.addBehavior){return null;}container.addBehavior("#default#userdata");return {getItem:function getItem(key){var result=null;try{document.body.appendChild(container);container.load(LOCAL_FILE);result=container.getAttribute(key);document.body.removeChild(container);}catch(e){}return result;},setItem:function setItem(key,value){document.body.appendChild(container);container.setAttribute(key,value);container.save(LOCAL_FILE);document.body.removeChild(container);},//// 暂时没有用到
//clear: function () {
//
//    var expiresTime = new Date();
//    expiresTime.setFullYear(expiresTime.getFullYear() - 1);
//    document.body.appendChild(container);
//    container.expires = expiresTime.toUTCString();
//    container.save(LOCAL_FILE);
//    document.body.removeChild(container);
//
//},
removeItem:function removeItem(key){document.body.appendChild(container);container.removeAttribute(key);container.save(LOCAL_FILE);document.body.removeChild(container);}};}}();(function(){var ROOTKEY='ueditor_preference';UE.Editor.prototype.setPreferences=function(key,value){var obj={};if(utils.isString(key)){obj[key]=value;}else{obj=key;}var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){utils.extend(data,obj);}else{data=obj;}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};UE.Editor.prototype.getPreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){return key?data[key]:data;}return null;};UE.Editor.prototype.removePreferences=function(key){var data=LocalStorage.getLocalData(ROOTKEY);if(data&&(data=utils.str2json(data))){data[key]=undefined;delete data[key];}data&&LocalStorage.saveLocalData(ROOTKEY,utils.json2str(data));};})();// plugins/defaultfilter.js
///import core
///plugin 编辑器默认的过滤转换机制
UE.plugins['defaultfilter']=function(){var me=this;me.setOpt({'allowDivTransToP':true,'disabledTableInTable':true});//默认的过滤处理
//进入编辑器的内容处理
me.addInputRule(function(root){var allowDivTransToP=this.options.allowDivTransToP;var val;function tdParent(node){while(node&&node.type=='element'){if(node.tagName=='td'){return true;}node=node.parentNode;}return false;}//进行默认的处理
root.traversal(function(node){if(node.type=='element'){if(!dtd.$cdata[node.tagName]&&me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=='span'&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case'style':case'script':node.setAttr({cdata_tag:node.tagName,cdata_data:node.innerHTML()||'','_ue_custom_node_':'true'});node.tagName='div';node.innerHTML('');break;case'a':if(val=node.getAttr('href')){node.setAttr('_href',val);}break;case'img'://todo base64暂时去掉，后边做远程图片上传后，干掉这个
if(val=node.getAttr('src')){if(/^data:/.test(val)){node.parentNode.removeChild(node);break;}}node.setAttr('_src',node.getAttr('src'));break;case'span':if(browser.webkit&&(val=node.getStyle('white-space'))){if(/nowrap|normal/.test(val)){node.setStyle('white-space','');if(me.options.autoClearEmptyNode&&utils.isEmptyObject(node.attrs)){node.parentNode.removeChild(node,true);}}}val=node.getAttr('id');if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}break;case'p':if(val=node.getAttr('align')){node.setAttr('align');node.setStyle('text-align',val);}//trace:3431
//                        var cssStyle = node.getAttr('style');
//                        if (cssStyle) {
//                            cssStyle = cssStyle.replace(/(margin|padding)[^;]+/g, '');
//                            node.setAttr('style', cssStyle)
//
//                        }
//p标签不允许嵌套
utils.each(node.children,function(n){if(n.type=='element'&&n.tagName=='p'){var next=n.nextSibling();node.parentNode.insertAfter(n,node);var last=n;while(next){var tmp=next.nextSibling();node.parentNode.insertAfter(next,last);last=next;next=tmp;}return false;}});if(!node.firstChild()){node.innerHTML(browser.ie?'&nbsp;':'<br/>');}break;case'div':if(node.getAttr('cdata_tag')){break;}//针对代码这里不处理插入代码的div
val=node.getAttr('class');if(val&&/^line number\d+/.test(val)){break;}if(!allowDivTransToP){break;}var tmpNode,p=UE.uNode.createElement('p');while(tmpNode=node.firstChild()){if(tmpNode.type=='text'||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement('p');}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);break;case'dl':node.tagName='ul';break;case'dt':case'dd':node.tagName='li';break;case'li':var className=node.getAttr('class');if(!className||!/list\-/.test(className)){node.setAttr();}var tmpNodes=node.getNodesByTagName('ol ul');UE.utils.each(tmpNodes,function(n){node.parentNode.insertAfter(n,node);});break;case'td':case'th':case'caption':if(!node.children||!node.children.length){node.appendChild(browser.ie11below?UE.uNode.createText(' '):UE.uNode.createElement('br'));}break;case'table':if(me.options.disabledTableInTable&&tdParent(node)){node.parentNode.insertBefore(UE.uNode.createText(node.innerText()),node);node.parentNode.removeChild(node);}}}//            if(node.type == 'comment'){
//                node.parentNode.removeChild(node);
//            }
});});//从编辑器出去的内容处理
me.addOutputRule(function(root){var val;root.traversal(function(node){if(node.type=='element'){if(me.options.autoClearEmptyNode&&dtd.$inline[node.tagName]&&!dtd.$empty[node.tagName]&&(!node.attrs||utils.isEmptyObject(node.attrs))){if(!node.firstChild())node.parentNode.removeChild(node);else if(node.tagName=='span'&&(!node.attrs||utils.isEmptyObject(node.attrs))){node.parentNode.removeChild(node,true);}return;}switch(node.tagName){case'div':if(val=node.getAttr('cdata_tag')){node.tagName=val;node.appendChild(UE.uNode.createText(node.getAttr('cdata_data')));node.setAttr({cdata_tag:'',cdata_data:'','_ue_custom_node_':''});}break;case'a':if(val=node.getAttr('_href')){node.setAttr({'href':utils.html(val),'_href':''});}break;break;case'span':val=node.getAttr('id');if(val&&/^_baidu_bookmark_/i.test(val)){node.parentNode.removeChild(node);}break;case'img':if(val=node.getAttr('_src')){node.setAttr({'src':node.getAttr('_src'),'_src':''});}}}});});};// plugins/inserthtml.js
/**
     * 插入html字符串插件
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入html代码
     * @command inserthtml
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } html 插入的html字符串
     * @remaind 插入的标签内容是在当前的选区位置上插入，如果当前是闭合状态，那直接插入内容， 如果当前是选中状态，将先清除当前选中内容后，再做插入
     * @warning 注意:该命令会对当前选区的位置，对插入的内容进行过滤转换处理。 过滤的规则遵循html语意化的原则。
     * @example
     * ```javascript
     * //xxx[BB]xxx 当前选区为非闭合选区，选中BB这两个文本
     * //执行命令，插入<b>CC</b>
     * //插入后的效果 xxx<b>CC</b>xxx
     * //<p>xx|xxx</p> 当前选区为闭合状态
     * //插入<p>CC</p>
     * //结果 <p>xx</p><p>CC</p><p>xxx</p>
     * //<p>xxxx</p>|</p>xxx</p> 当前选区在两个p标签之间
     * //插入 xxxx
     * //结果 <p>xxxx</p><p>xxxx</p></p>xxx</p>
     * ```
     */UE.commands['inserthtml']={execCommand:function execCommand(command,html,notNeedFilter){var me=this,range,div;if(!html){return;}if(me.fireEvent('beforeinserthtml',html)===true){return;}range=me.selection.getRange();div=range.document.createElement('div');div.style.display='inline';if(!notNeedFilter){var root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤
if(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理
me.filterInputRule(root);html=root.toHtml();}div.innerHTML=utils.trim(html);if(!range.collapsed){var tmpNode=range.startContainer;if(domUtils.isFillChar(tmpNode)){range.setStartBefore(tmpNode);}tmpNode=range.endContainer;if(domUtils.isFillChar(tmpNode)){range.setEndAfter(tmpNode);}range.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来
// x[xxx]<br/>
if(range.endContainer&&range.endContainer.nodeType==1){tmpNode=range.endContainer.childNodes[range.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){range.setEndAfter(tmpNode);}}if(range.startOffset==0){tmpNode=range.startContainer;if(domUtils.isBoundaryNode(tmpNode,'firstChild')){tmpNode=range.endContainer;if(range.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,'lastChild')){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';range.setStart(me.body.firstChild,0).collapse(true);}}}!range.collapsed&&range.deleteContents();if(range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset],pre;if(child&&domUtils.isBlockElm(child)&&(pre=child.previousSibling)&&domUtils.isBlockElm(pre)){range.setEnd(pre,pre.childNodes.length).collapse();while(child.firstChild){pre.appendChild(child.firstChild);}domUtils.remove(child);}}}var child,parent,pre,tmp,hadBreak=0,nextNode;//如果当前位置选中了fillchar要干掉，要不会产生空行
if(range.inFillChar()){child=range.startContainer;if(domUtils.isFillChar(child)){range.setStartBefore(child).collapse(true);domUtils.remove(child);}else if(domUtils.isFillChar(child,true)){child.nodeValue=child.nodeValue.replace(fillCharReg,'');range.startOffset--;range.collapsed&&range.collapse(true);}}//列表单独处理
var li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){var next,last;while(child=div.firstChild){//针对hr单独处理一下先
while(child&&(child.nodeType==3||!domUtils.isBlockElm(child)||child.tagName=='HR')){next=child.nextSibling;range.insertNode(child).collapse();last=child;child=next;}if(child){if(/^(ol|ul)$/i.test(child.tagName)){while(child.firstChild){last=child.firstChild;domUtils.insertAfter(li,child.firstChild);li=li.nextSibling;}domUtils.remove(child);}else{var tmpLi;next=child.nextSibling;tmpLi=me.document.createElement('li');domUtils.insertAfter(li,tmpLi);tmpLi.appendChild(child);last=child;child=next;li=tmpLi;}}}li=domUtils.findParentByTagName(range.startContainer,'li',true);if(domUtils.isEmptyBlock(li)){domUtils.remove(li);}if(last){range.setStartAfter(last).collapse(true).select(true);}}else{while(child=div.firstChild){if(hadBreak){var p=me.document.createElement('p');while(child&&(child.nodeType==3||!dtd.$block[child.tagName])){nextNode=child.nextSibling;p.appendChild(child);child=nextNode;}if(p.firstChild){child=p;}}range.insertNode(child);nextNode=child.nextSibling;if(!hadBreak&&child.nodeType==domUtils.NODE_ELEMENT&&domUtils.isBlockElm(child)){parent=domUtils.findParent(child,function(node){return domUtils.isBlockElm(node);});if(parent&&parent.tagName.toLowerCase()!='body'&&!(dtd[parent.tagName][child.nodeName]&&child.parentNode===parent)){if(!dtd[parent.tagName][child.nodeName]){pre=parent;}else{tmp=child.parentNode;while(tmp!==parent){pre=tmp;tmp=tmp.parentNode;}}domUtils.breakParent(child,pre||tmp);//去掉break后前一个多余的节点  <p>|<[p> ==> <p></p><div></div><p>|</p>
var pre=child.previousSibling;domUtils.trimWhiteTextNode(pre);if(!pre.childNodes.length){domUtils.remove(pre);}//trace:2012,在非ie的情况，切开后剩下的节点有可能不能点入光标添加br占位
if(!browser.ie&&(next=child.nextSibling)&&domUtils.isBlockElm(next)&&next.lastChild&&!domUtils.isBr(next.lastChild)){next.appendChild(me.document.createElement('br'));}hadBreak=1;}}var next=child.nextSibling;if(!div.firstChild&&next&&domUtils.isBlockElm(next)){range.setStart(next,0).collapse(true);break;}range.setEndAfter(child).collapse();}child=range.startContainer;if(nextNode&&domUtils.isBr(nextNode)){domUtils.remove(nextNode);}//用chrome可能有空白展位符
if(domUtils.isBlockElm(child)&&domUtils.isEmptyNode(child)){if(nextNode=child.nextSibling){domUtils.remove(child);if(nextNode.nodeType==1&&dtd.$block[nextNode.tagName]){range.setStart(nextNode,0).collapse(true).shrinkBoundary();}}else{try{child.innerHTML=browser.ie?domUtils.fillChar:'<br/>';}catch(e){range.setStartBefore(child);domUtils.remove(child);}}}//加上true因为在删除表情等时会删两次，第一次是删的fillData
try{range.select(true);}catch(e){}}setTimeout(function(){range=me.selection.getRange();range.scrollToView(me.autoHeightEnabled,me.autoHeightEnabled?domUtils.getXY(me.iframe).y:0);me.fireEvent('afterinserthtml',html);},200);}};// plugins/autotypeset.js
/**
     * 自动排版
     * @file
     * @since 1.2.6.1
     */ /**
     * 对当前编辑器的内容执行自动排版， 排版的行为根据config配置文件里的“autotypeset”选项进行控制。
     * @command autotypeset
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'autotypeset' );
     * ```
     */UE.plugins['autotypeset']=function(){this.setOpt({'autotypeset':{mergeEmptyline:true,//合并空行
removeClass:true,//去掉冗余的class
removeEmptyline:false,//去掉空行
textAlign:"left",//段落的排版方式，可以是 left,right,center,justify 去掉这个属性表示不执行排版
imageBlockLine:'center',//图片的浮动方式，独占一行剧中,左右浮动，默认: center,left,right,none 去掉这个属性表示不执行排版
pasteFilter:false,//根据规则过滤没事粘贴进来的内容
clearFontSize:false,//去掉所有的内嵌字号，使用编辑器默认的字号
clearFontFamily:false,//去掉所有的内嵌字体，使用编辑器默认的字体
removeEmptyNode:false,// 去掉空节点
//可以去掉的标签
removeTagNames:utils.extend({div:1},dtd.$removeEmpty),indent:false,// 行首缩进
indentValue:'2em',//行首缩进的大小
bdc2sb:false,tobdc:false}});var me=this,opt=me.options.autotypeset,remainClass={'selectTdClass':1,'pagebreak':1,'anchorclass':1},remainTag={'li':1},tags={div:1,p:1,//trace:2183 这些也认为是行
blockquote:1,center:1,h1:1,h2:1,h3:1,h4:1,h5:1,h6:1,span:1};//升级了版本，但配置项目里没有autotypeset
if(!opt){return;}readLocalOpts();function isLine(node,notEmpty){if(!node||node.nodeType==3)return 0;if(domUtils.isBr(node))return 1;if(node&&node.parentNode&&tags[node.tagName.toLowerCase()]){if(node.getAttribute('pagebreak')){return 0;}return notEmpty?!domUtils.isEmptyBlock(node):domUtils.isEmptyBlock(node,new RegExp('[\\s'+domUtils.fillChar+']','g'));}}function removeNotAttributeSpan(node){if(!node.style.cssText){domUtils.removeAttributes(node,['style']);if(node.tagName.toLowerCase()=='span'&&domUtils.hasNoAttributes(node)){domUtils.remove(node,true);}}}function autotype(type,html){var me=this,cont;if(html){if(!opt.pasteFilter){return;}cont=me.document.createElement('div');cont.innerHTML=html.html;}else{cont=me.document.body;}var nodes=domUtils.getElementsByTagName(cont,'*');// 行首缩进，段落方向，段间距，段内间距
for(var i=0,ci;ci=nodes[i++];){if(me.fireEvent('excludeNodeinautotype',ci)===true){continue;}//font-size
if(opt.clearFontSize&&ci.style.fontSize){domUtils.removeStyle(ci,'font-size');removeNotAttributeSpan(ci);}//font-family
if(opt.clearFontFamily&&ci.style.fontFamily){domUtils.removeStyle(ci,'font-family');removeNotAttributeSpan(ci);}if(isLine(ci)){//合并空行
if(opt.mergeEmptyline){var next=ci.nextSibling,tmpNode,isBr=domUtils.isBr(ci);while(isLine(next)){tmpNode=next;next=tmpNode.nextSibling;if(isBr&&(!next||next&&!domUtils.isBr(next))){break;}domUtils.remove(tmpNode);}}//去掉空行，保留占位的空行
if(opt.removeEmptyline&&domUtils.inDoc(ci,cont)&&!remainTag[ci.parentNode.tagName.toLowerCase()]){if(domUtils.isBr(ci)){next=ci.nextSibling;if(next&&!domUtils.isBr(next)){continue;}}domUtils.remove(ci);continue;}}if(isLine(ci,true)&&ci.tagName!='SPAN'){if(opt.indent){ci.style.textIndent=opt.indentValue;}if(opt.textAlign){ci.style.textAlign=opt.textAlign;}// if(opt.lineHeight)
//     ci.style.lineHeight = opt.lineHeight + 'cm';
}//去掉class,保留的class不去掉
if(opt.removeClass&&ci.className&&!remainClass[ci.className.toLowerCase()]){domUtils.removeAttributes(ci,['class']);}//表情不处理
if(opt.imageBlockLine&&ci.tagName.toLowerCase()=='img'&&!ci.getAttribute('emotion')){if(html){var img=ci;switch(opt.imageBlockLine){case'left':case'right':case'none':var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=='A'){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=='P'&&domUtils.getStyle(tmpNode,'text-align')=='center'){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return !domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,'text-align','');}}}domUtils.setStyle(img,'float',opt.imageBlockLine);break;case'center':if(me.queryCommandValue('imagefloat')!='center'){pN=img.parentNode;domUtils.setStyle(img,'float','none');tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return !domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=='A')){tmpNode=pN;pN=pN.parentNode;}var pNode=me.document.createElement('p');domUtils.setAttributes(pNode,{style:'text-align:center'});tmpNode.parentNode.insertBefore(pNode,tmpNode);pNode.appendChild(tmpNode);domUtils.setStyle(tmpNode,'float','');}}}else{var range=me.selection.getRange();range.selectNode(ci).select();me.execCommand('imagefloat',opt.imageBlockLine);}}//去掉冗余的标签
if(opt.removeEmptyNode){if(opt.removeTagNames[ci.tagName.toLowerCase()]&&domUtils.hasNoAttributes(ci)&&domUtils.isEmptyBlock(ci)){domUtils.remove(ci);}}}if(opt.tobdc){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=='text'){node.data=ToDBC(node.data);}});cont.innerHTML=root.toHtml();}if(opt.bdc2sb){var root=UE.htmlparser(cont.innerHTML);root.traversal(function(node){if(node.type=='text'){node.data=DBC2SB(node.data);}});cont.innerHTML=root.toHtml();}if(html){html.html=cont.innerHTML;}}if(opt.pasteFilter){me.addListener('beforepaste',autotype);}function DBC2SB(str){var result='';for(var i=0;i<str.length;i++){var code=str.charCodeAt(i);//获取当前字符的unicode编码
if(code>=65281&&code<=65373)//在这个unicode编码范围中的是所有的英文字母已经各种字符
{result+=String.fromCharCode(str.charCodeAt(i)-65248);//把全角字符的unicode编码转换为对应半角字符的unicode码
}else if(code==12288)//空格
{result+=String.fromCharCode(str.charCodeAt(i)-12288+32);}else{result+=str.charAt(i);}}return result;}function ToDBC(txtstring){txtstring=utils.html(txtstring);var tmp="";/*用于判断,如果是html尖括里的标记,则不进行全角的转换*/for(var i=0;i<txtstring.length;i++){if(txtstring.charCodeAt(i)==32){tmp=tmp+String.fromCharCode(12288);}else if(txtstring.charCodeAt(i)<127){tmp=tmp+String.fromCharCode(txtstring.charCodeAt(i)+65248);}else{tmp+=txtstring.charAt(i);}}return tmp;}function readLocalOpts(){var cookieOpt=me.getPreferences('autotypeset');utils.extend(me.options.autotypeset,cookieOpt);}me.commands['autotypeset']={execCommand:function execCommand(){me.removeListener('beforepaste',autotype);if(opt.pasteFilter){me.addListener('beforepaste',autotype);}autotype.call(me);}};};// plugins/autosubmit.js
/**
     * 快捷键提交
     * @file
     * @since 1.2.6.1
     */ /**
     * 提交表单
     * @command autosubmit
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'autosubmit' );
     * ```
     */UE.plugin.register('autosubmit',function(){return {shortcutkey:{"autosubmit":"ctrl+13"//手动提交
},commands:{'autosubmit':{execCommand:function execCommand(){var me=this,form=domUtils.findParentByTagName(me.iframe,"form",false);if(form){if(me.fireEvent("beforesubmit")===false){return;}me.sync();form.submit();}}}}};});// plugins/background.js
/**
     * 背景插件，为UEditor提供设置背景功能
     * @file
     * @since 1.2.6.1
     */UE.plugin.register('background',function(){var me=this,cssRuleId='editor_background',isSetColored,reg=new RegExp('body[\\s]*\\{(.+)\\}','i');function stringToObj(str){var obj={},styles=str.split(';');utils.each(styles,function(v){var index=v.indexOf(':'),key=utils.trim(v.substr(0,index)).toLowerCase();key&&(obj[key]=utils.trim(v.substr(index+1)||''));});return obj;}function setBackground(obj){if(obj){var styles=[];for(var name in obj){if(obj.hasOwnProperty(name)){styles.push(name+":"+obj[name]+'; ');}}utils.cssRule(cssRuleId,styles.length?'body{'+styles.join("")+'}':'',me.document);}else{utils.cssRule(cssRuleId,'',me.document);}}//重写editor.hasContent方法
var orgFn=me.hasContents;me.hasContents=function(){if(me.queryCommandValue('background')){return true;}return orgFn.apply(me,arguments);};return {bindEvents:{'getAllHtml':function getAllHtml(type,headHtml){var body=this.body,su=domUtils.getComputedStyle(body,"background-image"),url="";if(su.indexOf(me.options.imagePath)>0){url=su.substring(su.indexOf(me.options.imagePath),su.length-1).replace(/"|\(|\)/ig,"");}else{url=su!="none"?su.replace(/url\("?|"?\)/ig,""):"";}var html='<style type="text/css">body{';var bgObj={"background-color":domUtils.getComputedStyle(body,"background-color")||"#ffffff",'background-image':url?'url('+url+')':'','background-repeat':domUtils.getComputedStyle(body,"background-repeat")||"",'background-position':browser.ie?domUtils.getComputedStyle(body,"background-position-x")+" "+domUtils.getComputedStyle(body,"background-position-y"):domUtils.getComputedStyle(body,"background-position"),'height':domUtils.getComputedStyle(body,"height")};for(var name in bgObj){if(bgObj.hasOwnProperty(name)){html+=name+":"+bgObj[name]+"; ";}}html+='}</style> ';headHtml.push(html);},'aftersetcontent':function aftersetcontent(){if(isSetColored==false)setBackground();}},inputRule:function inputRule(root){isSetColored=false;utils.each(root.getNodesByTagName('p'),function(p){var styles=p.getAttr('data-background');if(styles){isSetColored=true;setBackground(stringToObj(styles));p.parentNode.removeChild(p);}});},outputRule:function outputRule(root){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||'').replace(/[\n\r]+/g,'').match(reg);if(styles){root.appendChild(UE.uNode.createElement('<p style="display:none;" data-background="'+utils.trim(styles[1].replace(/"/g,'').replace(/[\s]+/g,' '))+'"><br/></p>'));}},commands:{'background':{execCommand:function execCommand(cmd,obj){setBackground(obj);},queryCommandValue:function queryCommandValue(){var me=this,styles=(utils.cssRule(cssRuleId,me.document)||'').replace(/[\n\r]+/g,'').match(reg);return styles?stringToObj(styles[1]):null;},notNeedUndo:true}}};});// plugins/image.js
/**
     * 图片插入、排版插件
     * @file
     * @since 1.2.6.1
     */ /**
     * 图片对齐方式
     * @command imagefloat
     * @method execCommand
     * @remind 值center为独占一行居中
     * @param { String } cmd 命令字符串
     * @param { String } align 对齐方式，可传left、right、none、center
     * @remaind center表示图片独占一行
     * @example
     * ```javascript
     * editor.execCommand( 'imagefloat', 'center' );
     * ```
     */ /**
     * 如果选区所在位置是图片区域
     * @command imagefloat
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回图片对齐方式
     * @example
     * ```javascript
     * editor.queryCommandValue( 'imagefloat' );
     * ```
     */UE.commands['imagefloat']={execCommand:function execCommand(cmd,align){var me=this,range=me.selection.getRange();if(!range.collapsed){var img=range.getClosedNode();if(img&&img.tagName=='IMG'){switch(align){case'left':case'right':case'none':var pN=img.parentNode,tmpNode,pre,next;while(dtd.$inline[pN.tagName]||pN.tagName=='A'){pN=pN.parentNode;}tmpNode=pN;if(tmpNode.tagName=='P'&&domUtils.getStyle(tmpNode,'text-align')=='center'){if(!domUtils.isBody(tmpNode)&&domUtils.getChildCount(tmpNode,function(node){return !domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1){pre=tmpNode.previousSibling;next=tmpNode.nextSibling;if(pre&&next&&pre.nodeType==1&&next.nodeType==1&&pre.tagName==next.tagName&&domUtils.isBlockElm(pre)){pre.appendChild(tmpNode.firstChild);while(next.firstChild){pre.appendChild(next.firstChild);}domUtils.remove(tmpNode);domUtils.remove(next);}else{domUtils.setStyle(tmpNode,'text-align','');}}range.selectNode(img).select();}domUtils.setStyle(img,'float',align=='none'?'':align);if(align=='none'){domUtils.removeAttributes(img,'align');}break;case'center':if(me.queryCommandValue('imagefloat')!='center'){pN=img.parentNode;domUtils.setStyle(img,'float','');domUtils.removeAttributes(img,'align');tmpNode=img;while(pN&&domUtils.getChildCount(pN,function(node){return !domUtils.isBr(node)&&!domUtils.isWhitespace(node);})==1&&(dtd.$inline[pN.tagName]||pN.tagName=='A')){tmpNode=pN;pN=pN.parentNode;}range.setStartBefore(tmpNode).setCursor(false);pN=me.document.createElement('div');pN.appendChild(tmpNode);domUtils.setStyle(tmpNode,'float','');me.execCommand('insertHtml','<p id="_img_parent_tmp" style="text-align:center">'+pN.innerHTML+'</p>');tmpNode=me.document.getElementById('_img_parent_tmp');tmpNode.removeAttribute('id');tmpNode=tmpNode.firstChild;range.selectNode(tmpNode).select();//去掉后边多余的元素
next=tmpNode.parentNode.nextSibling;if(next&&domUtils.isEmptyNode(next)){domUtils.remove(next);}}break;}}}},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),startNode,floatStyle;if(range.collapsed){return 'none';}startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=='IMG'){floatStyle=domUtils.getComputedStyle(startNode,'float')||startNode.getAttribute('align');if(floatStyle=='none'){floatStyle=domUtils.getComputedStyle(startNode.parentNode,'text-align')=='center'?'center':floatStyle;}return {left:1,right:1,center:1}[floatStyle]?floatStyle:'none';}return 'none';},queryCommandState:function queryCommandState(){var range=this.selection.getRange(),startNode;if(range.collapsed)return -1;startNode=range.getClosedNode();if(startNode&&startNode.nodeType==1&&startNode.tagName=='IMG'){return 0;}return -1;}};/**
     * 插入图片
     * @command insertimage
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { Object } opt 属性键值对，这些属性都将被复制到当前插入图片
     * @remind 该命令第二个参数可接受一个图片配置项对象的数组，可以插入多张图片，
     * 此时数组的每一个元素都是一个Object类型的图片属性集合。
     * @example
     * ```javascript
     * editor.execCommand( 'insertimage', {
     *     src:'a/b/c.jpg',
     *     width:'100',
     *     height:'100'
     * } );
     * ```
     * @example
     * ```javascript
     * editor.execCommand( 'insertimage', [{
     *     src:'a/b/c.jpg',
     *     width:'100',
     *     height:'100'
     * },{
     *     src:'a/b/d.jpg',
     *     width:'100',
     *     height:'100'
     * }] );
     * ```
     */UE.commands['insertimage']={execCommand:function execCommand(cmd,opt){opt=utils.isArray(opt)?opt:[opt];if(!opt.length){return;}var me=this,range=me.selection.getRange(),img=range.getClosedNode();if(me.fireEvent('beforeinsertimage',opt)===true){return;}function unhtmlData(imgCi){utils.each('width,height,border,hspace,vspace'.split(','),function(item){if(imgCi[item]){imgCi[item]=parseInt(imgCi[item],10)||0;}});utils.each('src,_src'.split(','),function(item){if(imgCi[item]){imgCi[item]=utils.unhtmlForUrl(imgCi[item]);}});utils.each('title,alt'.split(','),function(item){if(imgCi[item]){imgCi[item]=utils.unhtml(imgCi[item]);}});}if(img&&/img/i.test(img.tagName)&&(img.className!="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1)&&!img.getAttribute("word_img")){var first=opt.shift();var floatStyle=first['floatStyle'];delete first['floatStyle'];////                img.style.border = (first.border||0) +"px solid #000";
////                img.style.margin = (first.margin||0) +"px";
//                img.style.cssText += ';margin:' + (first.margin||0) +"px;" + 'border:' + (first.border||0) +"px solid #000";
domUtils.setAttributes(img,first);me.execCommand('imagefloat',floatStyle);if(opt.length>0){range.setStartAfter(img).setCursor(false,true);me.execCommand('insertimage',opt);}}else{var html=[],str='',ci;ci=opt[0];if(opt.length==1){unhtmlData(ci);str='<img src="'+ci.src+'" '+(ci._src?' _src="'+ci._src+'" ':'')+(ci.width?'width="'+ci.width+'" ':'')+(ci.height?' height="'+ci.height+'" ':'')+(ci['floatStyle']=='left'||ci['floatStyle']=='right'?' style="float:'+ci['floatStyle']+';"':'')+(ci.title&&ci.title!=""?' title="'+ci.title+'"':'')+(ci.border&&ci.border!="0"?' border="'+ci.border+'"':'')+(ci.alt&&ci.alt!=""?' alt="'+ci.alt+'"':'')+(ci.hspace&&ci.hspace!="0"?' hspace = "'+ci.hspace+'"':'')+(ci.vspace&&ci.vspace!="0"?' vspace = "'+ci.vspace+'"':'')+'/>';if(ci['floatStyle']=='center'){str='<p style="text-align: center">'+str+'</p>';}html.push(str);}else{for(var i=0;ci=opt[i++];){unhtmlData(ci);str='<p '+(ci['floatStyle']=='center'?'style="text-align: center" ':'')+'><img src="'+ci.src+'" '+(ci.width?'width="'+ci.width+'" ':'')+(ci._src?' _src="'+ci._src+'" ':'')+(ci.height?' height="'+ci.height+'" ':'')+' style="'+(ci['floatStyle']&&ci['floatStyle']!='center'?'float:'+ci['floatStyle']+';':'')+(ci.border||'')+'" '+(ci.title?' title="'+ci.title+'"':'')+' /></p>';html.push(str);}}me.execCommand('insertHtml',html.join(''));}me.fireEvent('afterinsertimage',opt);}};// plugins/justify.js
/**
     * 段落格式
     * @file
     * @since 1.2.6.1
     */ /**
     * 段落对齐方式
     * @command justify
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } align 对齐方式：left => 居左，right => 居右，center => 居中，justify => 两端对齐
     * @example
     * ```javascript
     * editor.execCommand( 'justify', 'center' );
     * ```
     */ /**
     * 如果选区所在位置是段落区域，返回当前段落对齐方式
     * @command justify
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回段落对齐方式
     * @example
     * ```javascript
     * editor.queryCommandValue( 'justify' );
     * ```
     */UE.plugins['justify']=function(){var block=domUtils.isBlockElm,defaultValue={left:1,right:1,center:1,justify:1},doJustify=function doJustify(range,style){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br'&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);};range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return !block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){domUtils.setStyles(common,utils.isString(style)?{'text-align':style}:style);current=common;}else{var p=range.document.createElement('p');domUtils.setStyles(p,utils.isString(style)?{'text-align':style}:style);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};UE.commands['justify']={execCommand:function execCommand(cmdName,align){var range=this.selection.getRange(),txt;//闭合时单独处理
if(range.collapsed){txt=this.document.createTextNode('p');range.insertNode(txt);}doJustify(range,align);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var startNode=this.selection.getStart(),value=domUtils.getComputedStyle(startNode,'text-align');return defaultValue[value]?value:'left';},queryCommandState:function queryCommandState(){var start=this.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);return cell?-1:0;}};};// plugins/font.js
/**
     * 字体颜色,背景色,字号,字体,下划线,删除线
     * @file
     * @since 1.2.6.1
     */ /**
     * 字体颜色
     * @command forecolor
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } value 色值(必须十六进制)
     * @example
     * ```javascript
     * editor.execCommand( 'forecolor', '#000' );
     * ```
     */ /**
     * 返回选区字体颜色
     * @command forecolor
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回字体颜色
     * @example
     * ```javascript
     * editor.queryCommandValue( 'forecolor' );
     * ```
     */ /**
     * 字体背景颜色
     * @command backcolor
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } value 色值(必须十六进制)
     * @example
     * ```javascript
     * editor.execCommand( 'backcolor', '#000' );
     * ```
     */ /**
     * 返回选区字体颜色
     * @command backcolor
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回字体背景颜色
     * @example
     * ```javascript
     * editor.queryCommandValue( 'backcolor' );
     * ```
     */ /**
     * 字体大小
     * @command fontsize
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } value 字体大小
     * @example
     * ```javascript
     * editor.execCommand( 'fontsize', '14px' );
     * ```
     */ /**
     * 返回选区字体大小
     * @command fontsize
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回字体大小
     * @example
     * ```javascript
     * editor.queryCommandValue( 'fontsize' );
     * ```
     */ /**
     * 字体样式
     * @command fontfamily
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } value 字体样式
     * @example
     * ```javascript
     * editor.execCommand( 'fontfamily', '微软雅黑' );
     * ```
     */ /**
     * 返回选区字体样式
     * @command fontfamily
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 返回字体样式
     * @example
     * ```javascript
     * editor.queryCommandValue( 'fontfamily' );
     * ```
     */ /**
     * 字体下划线,与删除线互斥
     * @command underline
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'underline' );
     * ```
     */ /**
     * 字体删除线,与下划线互斥
     * @command strikethrough
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'strikethrough' );
     * ```
     */ /**
     * 字体边框
     * @command fontborder
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'fontborder' );
     * ```
     */UE.plugins['font']=function(){var me=this,fonts={'forecolor':'color','backcolor':'background-color','fontsize':'font-size','fontfamily':'font-family','underline':'text-decoration','strikethrough':'text-decoration','fontborder':'border'},needCmd={'underline':1,'strikethrough':1,'fontborder':1},needSetChild={'forecolor':'color','backcolor':'background-color','fontsize':'font-size','fontfamily':'font-family'};me.setOpt({'fontfamily':[{name:'songti',val:'宋体,SimSun'},{name:'yahei',val:'微软雅黑,Microsoft YaHei'},{name:'kaiti',val:'楷体,楷体_GB2312, SimKai'},{name:'heiti',val:'黑体, SimHei'},{name:'lishu',val:'隶书, SimLi'},{name:'andaleMono',val:'andale mono'},{name:'arial',val:'arial, helvetica,sans-serif'},{name:'arialBlack',val:'arial black,avant garde'},{name:'comicSansMs',val:'comic sans ms'},{name:'impact',val:'impact,chicago'},{name:'timesNewRoman',val:'times new roman'}],'fontsize':[10,11,12,14,16,18,20,24,36]});function mergeWithParent(node){var parent;while(parent=node.parentNode){if(parent.tagName=='SPAN'&&domUtils.getChildCount(parent,function(child){return !domUtils.isBookmarkNode(child)&&!domUtils.isBr(child);})==1){parent.style.cssText+=node.style.cssText;domUtils.remove(node,true);node=parent;}else{break;}}}function mergeChild(rng,cmdName,value){if(needSetChild[cmdName]){rng.adjustmentBoundary();if(!rng.collapsed&&rng.startContainer.nodeType==1){var start=rng.startContainer.childNodes[rng.startOffset];if(start&&domUtils.isTagNode(start,'span')){var bk=rng.createBookmark();utils.each(domUtils.getElementsByTagName(start,'span'),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(cmdName=='backcolor'&&domUtils.getComputedStyle(span,'background-color').toLowerCase()===value){return;}domUtils.removeStyle(span,needSetChild[cmdName]);if(span.style.cssText.replace(/^\s+$/,'').length==0){domUtils.remove(span,true);}});rng.moveToBookmark(bk);}}}}function mergesibling(rng,cmdName,value){var collapsed=rng.collapsed,bk=rng.createBookmark(),common;if(collapsed){common=bk.start.parentNode;while(dtd.$inline[common.tagName]){common=common.parentNode;}}else{common=domUtils.getCommonAncestor(bk.start,bk.end);}utils.each(domUtils.getElementsByTagName(common,'span'),function(span){if(!span.parentNode||domUtils.isBookmarkNode(span))return;if(/\s*border\s*:\s*none;?\s*/i.test(span.style.cssText)){if(/^\s*border\s*:\s*none;?\s*$/.test(span.style.cssText)){domUtils.remove(span,true);}else{domUtils.removeStyle(span,'border');}return;}if(/border/i.test(span.style.cssText)&&span.parentNode.tagName=='SPAN'&&/border/i.test(span.parentNode.style.cssText)){span.style.cssText=span.style.cssText.replace(/border[^:]*:[^;]+;?/gi,'');}if(!(cmdName=='fontborder'&&value=='none')){var next=span.nextSibling;while(next&&next.nodeType==1&&next.tagName=='SPAN'){if(domUtils.isBookmarkNode(next)&&cmdName=='fontborder'){span.appendChild(next);next=span.nextSibling;continue;}if(next.style.cssText==span.style.cssText){domUtils.moveChild(next,span);domUtils.remove(next);}if(span.nextSibling===next)break;next=span.nextSibling;}}mergeWithParent(span);if(browser.ie&&browser.version>8){//拷贝父亲们的特别的属性,这里只做背景颜色的处理
var parent=domUtils.findParent(span,function(n){return n.tagName=='SPAN'&&/background-color/.test(n.style.cssText);});if(parent&&!/background-color/.test(span.style.cssText)){span.style.backgroundColor=parent.style.backgroundColor;}}});rng.moveToBookmark(bk);mergeChild(rng,cmdName,value);}me.addInputRule(function(root){utils.each(root.getNodesByTagName('u s del font strike'),function(node){if(node.tagName=='font'){var cssStyle=[];for(var p in node.attrs){switch(p){case'size':cssStyle.push('font-size:'+({'1':'10','2':'12','3':'16','4':'18','5':'24','6':'32','7':'48'}[node.attrs[p]]||node.attrs[p])+'px');break;case'color':cssStyle.push('color:'+node.attrs[p]);break;case'face':cssStyle.push('font-family:'+node.attrs[p]);break;case'style':cssStyle.push(node.attrs[p]);}}node.attrs={'style':cssStyle.join(';')};}else{var val=node.tagName=='u'?'underline':'line-through';node.attrs={'style':(node.getAttr('style')||'')+'text-decoration:'+val+';'};}node.tagName='span';});//        utils.each(root.getNodesByTagName('span'), function (node) {
//            var val;
//            if(val = node.getAttr('class')){
//                if(/fontstrikethrough/.test(val)){
//                    node.setStyle('text-decoration','line-through');
//                    if(node.attrs['class']){
//                        node.attrs['class'] = node.attrs['class'].replace(/fontstrikethrough/,'');
//                    }else{
//                        node.setAttr('class')
//                    }
//                }
//                if(/fontborder/.test(val)){
//                    node.setStyle('border','1px solid #000');
//                    if(node.attrs['class']){
//                        node.attrs['class'] = node.attrs['class'].replace(/fontborder/,'');
//                    }else{
//                        node.setAttr('class')
//                    }
//                }
//            }
//        });
});//    me.addOutputRule(function(root){
//        utils.each(root.getNodesByTagName('span'), function (node) {
//            var val;
//            if(val = node.getStyle('text-decoration')){
//                if(/line-through/.test(val)){
//                    if(node.attrs['class']){
//                        node.attrs['class'] += ' fontstrikethrough';
//                    }else{
//                        node.setAttr('class','fontstrikethrough')
//                    }
//                }
//
//                node.setStyle('text-decoration')
//            }
//            if(val = node.getStyle('border')){
//                if(/1px/.test(val) && /solid/.test(val)){
//                    if(node.attrs['class']){
//                        node.attrs['class'] += ' fontborder';
//
//                    }else{
//                        node.setAttr('class','fontborder')
//                    }
//                }
//                node.setStyle('border')
//
//            }
//        });
//    });
for(var p in fonts){(function(cmd,style){UE.commands[cmd]={execCommand:function execCommand(cmdName,value){value=value||(this.queryCommandState(cmdName)?'none':cmdName=='underline'?'underline':cmdName=='fontborder'?'1px solid #000':'line-through');var me=this,range=this.selection.getRange(),text;if(value=='default'){if(range.collapsed){text=me.document.createTextNode('font');range.insertNode(text).select();}me.execCommand('removeFormat','span,a',style);if(text){range.setStartBefore(text).collapse(true);domUtils.remove(text);}mergesibling(range,cmdName,value);range.select();}else{if(!range.collapsed){if(needCmd[cmd]&&me.queryCommandValue(cmd)){me.execCommand('removeFormat','span,a',style);}range=me.selection.getRange();range.applyInlineStyle('span',{'style':style+':'+value});mergesibling(range,cmdName,value);range.select();}else{var span=domUtils.findParentByTagName(range.startContainer,'span',true);text=me.document.createTextNode('font');if(span&&!span.children.length&&!span[browser.ie?'innerText':'textContent'].replace(fillCharReg,'').length){//for ie hack when enter
range.insertNode(text);if(needCmd[cmd]){range.selectNode(text).select();me.execCommand('removeFormat','span,a',style,null);span=domUtils.findParentByTagName(text,'span',true);range.setStartBefore(text);}span&&(span.style.cssText+=';'+style+':'+value);range.collapse(true).select();}else{range.insertNode(text);range.selectNode(text).select();span=range.document.createElement('span');if(needCmd[cmd]){//a标签内的不处理跳过
if(domUtils.findParentByTagName(text,'a',true)){range.setStartBefore(text).setCursor();domUtils.remove(text);return;}me.execCommand('removeFormat','span,a',style);}span.style.cssText=style+':'+value;text.parentNode.insertBefore(span,text);//修复，span套span 但样式不继承的问题
if(!browser.ie||browser.ie&&browser.version==9){var spanParent=span.parentNode;while(!domUtils.isBlockElm(spanParent)){if(spanParent.tagName=='SPAN'){//opera合并style不会加入";"
span.style.cssText=spanParent.style.cssText+";"+span.style.cssText;}spanParent=spanParent.parentNode;}}if(opera){setTimeout(function(){range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();});}else{range.setStart(span,0).collapse(true);mergesibling(range,cmdName,value);range.select();}//trace:981
//domUtils.mergeToParent(span)
}domUtils.remove(text);}}return true;},queryCommandValue:function queryCommandValue(cmdName){var startNode=this.selection.getStart();//trace:946
if(cmdName=='underline'||cmdName=='strikethrough'){var tmpNode=startNode,value;while(tmpNode&&!domUtils.isBlockElm(tmpNode)&&!domUtils.isBody(tmpNode)){if(tmpNode.nodeType==1){value=domUtils.getComputedStyle(tmpNode,style);if(value!='none'){return value;}}tmpNode=tmpNode.parentNode;}return 'none';}if(cmdName=='fontborder'){var tmp=startNode,val;while(tmp&&dtd.$inline[tmp.tagName]){if(val=domUtils.getComputedStyle(tmp,'border')){if(/1px/.test(val)&&/solid/.test(val)){return val;}}tmp=tmp.parentNode;}return '';}if(cmdName=='FontSize'){var styleVal=domUtils.getComputedStyle(startNode,style),tmp=/^([\d\.]+)(\w+)$/.exec(styleVal);if(tmp){return Math.floor(tmp[1])+tmp[2];}return styleVal;}return domUtils.getComputedStyle(startNode,style);},queryCommandState:function queryCommandState(cmdName){if(!needCmd[cmdName])return 0;var val=this.queryCommandValue(cmdName);if(cmdName=='fontborder'){return /1px/.test(val)&&/solid/.test(val);}else{return cmdName=='underline'?/underline/.test(val):/line\-through/.test(val);}}};})(p,fonts[p]);}};// plugins/link.js
/**
     * 超链接
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入超链接
     * @command link
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { Object } options   设置自定义属性，例如：url、title、target
     * @example
     * ```javascript
     * editor.execCommand( 'link', '{
     *     url:'ueditor.baidu.com',
     *     title:'ueditor',
     *     target:'_blank'
     * }' );
     * ```
     */ /**
     * 返回当前选中的第一个超链接节点
     * @command link
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { Element } 超链接节点
     * @example
     * ```javascript
     * editor.queryCommandValue( 'link' );
     * ```
     */ /**
     * 取消超链接
     * @command unlink
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'unlink');
     * ```
     */UE.plugins['link']=function(){function optimize(range){var start=range.startContainer,end=range.endContainer;if(start=domUtils.findParentByTagName(start,'a',true)){range.setStartBefore(start);}if(end=domUtils.findParentByTagName(end,'a',true)){range.setEndAfter(end);}}UE.commands['unlink']={execCommand:function execCommand(){var range=this.selection.getRange(),bookmark;if(range.collapsed&&!domUtils.findParentByTagName(range.startContainer,'a',true)){return;}bookmark=range.createBookmark();optimize(range);range.removeInlineStyle('a').moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return !this.highlight&&this.queryCommandValue('link')?0:-1;}};function doLink(range,opt,me){var rngClone=range.cloneRange(),link=me.queryCommandValue('link');optimize(range=range.adjustmentBoundary());var start=range.startContainer;if(start.nodeType==1&&link){start=start.childNodes[range.startOffset];if(start&&start.nodeType==1&&start.tagName=='A'&&/^(?:https?|ftp|file)\s*:\s*\/\//.test(start[browser.ie?'innerText':'textContent'])){start[browser.ie?'innerText':'textContent']=utils.html(opt.textValue||opt.href);}}if(!rngClone.collapsed||link){range.removeInlineStyle('a');rngClone=range.cloneRange();}if(rngClone.collapsed){var a=range.document.createElement('a'),text='';if(opt.textValue){text=utils.html(opt.textValue);delete opt.textValue;}else{text=utils.html(opt.href);}domUtils.setAttributes(a,opt);start=domUtils.findParentByTagName(rngClone.startContainer,'a',true);if(start&&domUtils.isInNodeEndBoundary(rngClone,start)){range.setStartAfter(start).collapse(true);}a[browser.ie?'innerText':'textContent']=text;range.insertNode(a).selectNode(a);}else{range.applyInlineStyle('a',opt);}}UE.commands['link']={execCommand:function execCommand(cmdName,opt){var range;opt._href&&(opt._href=utils.unhtml(opt._href,/[<">]/g));opt.href&&(opt.href=utils.unhtml(opt.href,/[<">]/g));opt.textValue&&(opt.textValue=utils.unhtml(opt.textValue,/[<">]/g));doLink(range=this.selection.getRange(),opt,this);//闭合都不加占位符，如果加了会在a后边多个占位符节点，导致a是图片背景组成的列表，出现空白问题
range.collapse().select(true);},queryCommandValue:function queryCommandValue(){var range=this.selection.getRange(),node;if(range.collapsed){//                    node = this.selection.getStart();
//在ie下getstart()取值偏上了
node=range.startContainer;node=node.nodeType==1?node:node.parentNode;if(node&&(node=domUtils.findParentByTagName(node,'a',true))&&!domUtils.isInNodeEndBoundary(range,node)){return node;}}else{//trace:1111  如果是<p><a>xx</a></p> startContainer是p就会找不到a
range.shrinkBoundary();var start=range.startContainer.nodeType==3||!range.startContainer.childNodes[range.startOffset]?range.startContainer:range.startContainer.childNodes[range.startOffset],end=range.endContainer.nodeType==3||range.endOffset==0?range.endContainer:range.endContainer.childNodes[range.endOffset-1],common=range.getCommonAncestor();node=domUtils.findParentByTagName(common,'a',true);if(!node&&common.nodeType==1){var as=common.getElementsByTagName('a'),ps,pe;for(var i=0,ci;ci=as[i++];){ps=domUtils.getPosition(ci,start),pe=domUtils.getPosition(ci,end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS)){node=ci;break;}}}return node;}},queryCommandState:function queryCommandState(){//判断如果是视频的话连接不可用
//fix 853
var img=this.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?-1:0;}};};// plugins/iframe.js
///import core
///import plugins\inserthtml.js
///commands 插入框架
///commandsName  InsertFrame
///commandsTitle  插入Iframe
///commandsDialog  dialogs\insertframe
UE.plugins['insertframe']=function(){var me=this;function deleteIframe(){me._iframe&&delete me._iframe;}me.addListener("selectionchange",function(){deleteIframe();});};// plugins/scrawl.js
///import core
///commands 涂鸦
///commandsName  Scrawl
///commandsTitle  涂鸦
///commandsDialog  dialogs\scrawl
UE.commands['scrawl']={queryCommandState:function queryCommandState(){return browser.ie&&browser.version<=8?-1:0;}};// plugins/removeformat.js
/**
     * 清除格式
     * @file
     * @since 1.2.6.1
     */ /**
     * 清除文字样式
     * @command removeformat
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param   {String}   tags     以逗号隔开的标签。如：strong
     * @param   {String}   style    样式如：color
     * @param   {String}   attrs    属性如:width
     * @example
     * ```javascript
     * editor.execCommand( 'removeformat', 'strong','color','width' );
     * ```
     */UE.plugins['removeformat']=function(){var me=this;me.setOpt({'removeFormatTags':'b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var','removeFormatAttributes':'class,style,lang,width,height,align,hspace,valign'});me.commands['removeformat']={execCommand:function execCommand(cmdName,tags,style,attrs,notIncludeA){var tagReg=new RegExp('^(?:'+(tags||this.options.removeFormatTags).replace(/,/g,'|')+')$','i'),removeFormatAttributes=style?[]:(attrs||this.options.removeFormatAttributes).split(','),range=new dom.Range(this.document),bookmark,parent,filter=function filter(node){return node.nodeType==1;};function isRedundantSpan(node){if(node.nodeType==3||node.tagName.toLowerCase()!='span'){return 0;}if(browser.ie){//ie 下判断实效，所以只能简单用style来判断
//return node.style.cssText == '' ? 1 : 0;
var attrs=node.attributes;if(attrs.length){for(var i=0,l=attrs.length;i<l;i++){if(attrs[i].specified){return 0;}}return 1;}}return !node.attributes.length;}function doRemove(range){var bookmark1=range.createBookmark();if(range.collapsed){range.enlarge(true);}//不能把a标签切了
if(!notIncludeA){var aNode=domUtils.findParentByTagName(range.startContainer,'a',true);if(aNode){range.setStartBefore(aNode);}aNode=domUtils.findParentByTagName(range.endContainer,'a',true);if(aNode){range.setEndAfter(aNode);}}bookmark=range.createBookmark();node=bookmark.start;//切开始
while((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}if(bookmark.end){//切结束
node=bookmark.end;while((parent=node.parentNode)&&!domUtils.isBlockElm(parent)){domUtils.breakParent(node,parent);domUtils.clearEmptySibling(node);}//开始去除样式
var current=domUtils.getNextDomNode(bookmark.start,false,filter),next;while(current){if(current==bookmark.end){break;}next=domUtils.getNextDomNode(current,true,filter);if(!dtd.$empty[current.tagName.toLowerCase()]&&!domUtils.isBookmarkNode(current)){if(tagReg.test(current.tagName)){if(style){domUtils.removeStyle(current,style);if(isRedundantSpan(current)&&style!='text-decoration'){domUtils.remove(current,true);}}else{domUtils.remove(current,true);}}else{//trace:939  不能把list上的样式去掉
if(!dtd.$tableContent[current.tagName]&&!dtd.$list[current.tagName]){domUtils.removeAttributes(current,removeFormatAttributes);if(isRedundantSpan(current)){domUtils.remove(current,true);}}}}current=next;}}//trace:1035
//trace:1096 不能把td上的样式去掉，比如边框
var pN=bookmark.start.parentNode;if(domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}pN=bookmark.end.parentNode;if(bookmark.end&&domUtils.isBlockElm(pN)&&!dtd.$tableContent[pN.tagName]&&!dtd.$list[pN.tagName]){domUtils.removeAttributes(pN,removeFormatAttributes);}range.moveToBookmark(bookmark).moveToBookmark(bookmark1);//清除冗余的代码 <b><bookmark></b>
var node=range.startContainer,tmp,collapsed=range.collapsed;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setStartBefore(node);//trace:937
//更新结束边界
if(range.startContainer===range.endContainer){range.endOffset--;}domUtils.remove(node);node=tmp;}if(!collapsed){node=range.endContainer;while(node.nodeType==1&&domUtils.isEmptyNode(node)&&dtd.$removeEmpty[node.tagName]){tmp=node.parentNode;range.setEndBefore(node);domUtils.remove(node);node=tmp;}}}range=this.selection.getRange();doRemove(range);range.select();}};};// plugins/blockquote.js
/**
     * 添加引用
     * @file
     * @since 1.2.6.1
     */ /**
     * 添加引用
     * @command blockquote
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'blockquote' );
     * ```
     */ /**
     * 添加引用
     * @command blockquote
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { Object } attrs 节点属性
     * @example
     * ```javascript
     * editor.execCommand( 'blockquote',{
     *     style: "color: red;"
     * } );
     * ```
     */UE.plugins['blockquote']=function(){var me=this;function getObj(editor){return domUtils.filterNodeList(editor.selection.getStartElementPath(),'blockquote');}me.commands['blockquote']={execCommand:function execCommand(cmdName,attrs){var range=this.selection.getRange(),obj=getObj(this),blockquote=dtd.blockquote,bookmark=range.createBookmark();if(obj){var start=range.startContainer,startBlock=domUtils.isBlockElm(start)?start:domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);}),end=range.endContainer,endBlock=domUtils.isBlockElm(end)?end:domUtils.findParent(end,function(node){return domUtils.isBlockElm(node);});//处理一下li
startBlock=domUtils.findParentByTagName(startBlock,'li',true)||startBlock;endBlock=domUtils.findParentByTagName(endBlock,'li',true)||endBlock;if(startBlock.tagName=='LI'||startBlock.tagName=='TD'||startBlock===obj||domUtils.isBody(startBlock)){domUtils.remove(obj,true);}else{domUtils.breakParent(startBlock,obj);}if(startBlock!==endBlock){obj=domUtils.findParentByTagName(endBlock,'blockquote');if(obj){if(endBlock.tagName=='LI'||endBlock.tagName=='TD'||domUtils.isBody(endBlock)){obj.parentNode&&domUtils.remove(obj,true);}else{domUtils.breakParent(endBlock,obj);}}}var blockquotes=domUtils.getElementsByTagName(this.document,'blockquote');for(var i=0,bi;bi=blockquotes[i++];){if(!bi.childNodes.length){domUtils.remove(bi);}else if(domUtils.getPosition(bi,startBlock)&domUtils.POSITION_FOLLOWING&&domUtils.getPosition(bi,endBlock)&domUtils.POSITION_PRECEDING){domUtils.remove(bi,true);}}}else{var tmpRange=range.cloneRange(),node=tmpRange.startContainer.nodeType==1?tmpRange.startContainer:tmpRange.startContainer.parentNode,preNode=node,doEnd=1;//调整开始
while(1){if(domUtils.isBody(node)){if(preNode!==node){if(range.collapsed){tmpRange.selectNode(preNode);doEnd=0;}else{tmpRange.setStartBefore(preNode);}}else{tmpRange.setStart(node,0);}break;}if(!blockquote[node.tagName]){if(range.collapsed){tmpRange.selectNode(preNode);}else{tmpRange.setStartBefore(preNode);}break;}preNode=node;node=node.parentNode;}//调整结束
if(doEnd){preNode=node=node=tmpRange.endContainer.nodeType==1?tmpRange.endContainer:tmpRange.endContainer.parentNode;while(1){if(domUtils.isBody(node)){if(preNode!==node){tmpRange.setEndAfter(preNode);}else{tmpRange.setEnd(node,node.childNodes.length);}break;}if(!blockquote[node.tagName]){tmpRange.setEndAfter(preNode);break;}preNode=node;node=node.parentNode;}}node=range.document.createElement('blockquote');domUtils.setAttributes(node,attrs);node.appendChild(tmpRange.extractContents());tmpRange.insertNode(node);//去除重复的
var childs=domUtils.getElementsByTagName(node,'blockquote');for(var i=0,ci;ci=childs[i++];){if(ci.parentNode){domUtils.remove(ci,true);}}}range.moveToBookmark(bookmark).select();},queryCommandState:function queryCommandState(){return getObj(this)?1:0;}};};// plugins/convertcase.js
/**
     * 大小写转换
     * @file
     * @since 1.2.6.1
     */ /**
     * 把选区内文本变大写，与“tolowercase”命令互斥
     * @command touppercase
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'touppercase' );
     * ```
     */ /**
     * 把选区内文本变小写，与“touppercase”命令互斥
     * @command tolowercase
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'tolowercase' );
     * ```
     */UE.commands['touppercase']=UE.commands['tolowercase']={execCommand:function execCommand(cmd){var me=this;var rng=me.selection.getRange();if(rng.collapsed){return rng;}var bk=rng.createBookmark(),bkEnd=bk.end,filterFn=function filterFn(node){return !domUtils.isBr(node)&&!domUtils.isWhitespace(node);},curNode=domUtils.getNextDomNode(bk.start,false,filterFn);while(curNode&&domUtils.getPosition(curNode,bkEnd)&domUtils.POSITION_PRECEDING){if(curNode.nodeType==3){curNode.nodeValue=curNode.nodeValue[cmd=='touppercase'?'toUpperCase':'toLowerCase']();}curNode=domUtils.getNextDomNode(curNode,true,filterFn);if(curNode===bkEnd){break;}}rng.moveToBookmark(bk).select();}};// plugins/indent.js
/**
     * 首行缩进
     * @file
     * @since 1.2.6.1
     */ /**
     * 缩进
     * @command indent
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'indent' );
     * ```
     */UE.commands['indent']={execCommand:function execCommand(){var me=this,value=me.queryCommandState("indent")?"0em":me.options.indentValue||'2em';me.execCommand('Paragraph','p',{style:'text-indent:'+value});},queryCommandState:function queryCommandState(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),'p h1 h2 h3 h4 h5 h6');return pN&&pN.style.textIndent&&parseInt(pN.style.textIndent)?1:0;}};// plugins/print.js
/**
     * 打印
     * @file
     * @since 1.2.6.1
     */ /**
     * 打印
     * @command print
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'print' );
     * ```
     */UE.commands['print']={execCommand:function execCommand(){this.window.print();},notNeedUndo:1};// plugins/preview.js
/**
     * 预览
     * @file
     * @since 1.2.6.1
     */ /**
     * 预览
     * @command preview
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'preview' );
     * ```
     */UE.commands['preview']={execCommand:function execCommand(){var w=window.open('','_blank',''),d=w.document;d.open();d.write('<!DOCTYPE html><html><head><meta charset="utf-8"/><script src="'+this.options.UEDITOR_HOME_URL+'ueditor.parse.js"></script><script>'+"setTimeout(function(){uParse('div',{rootPath: '"+this.options.UEDITOR_HOME_URL+"'})},300)"+'</script></head><body><div>'+this.getContent(null,null,true)+'</div></body></html>');d.close();},notNeedUndo:1};// plugins/selectall.js
/**
     * 全选
     * @file
     * @since 1.2.6.1
     */ /**
     * 选中所有内容
     * @command selectall
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'selectall' );
     * ```
     */UE.plugins['selectall']=function(){var me=this;me.commands['selectall']={execCommand:function execCommand(){//去掉了原生的selectAll,因为会出现报错和当内容为空时，不能出现闭合状态的光标
var me=this,body=me.body,range=me.selection.getRange();range.selectNodeContents(body);if(domUtils.isEmptyBlock(body)){//opera不能自动合并到元素的里边，要手动处理一下
if(browser.opera&&body.firstChild&&body.firstChild.nodeType==1){range.setStartAtFirst(body.firstChild);}range.collapse(true);}range.select(true);},notNeedUndo:1};//快捷键
me.addshortcutkey({"selectAll":"ctrl+65"});};// plugins/paragraph.js
/**
     * 段落样式
     * @file
     * @since 1.2.6.1
     */ /**
     * 段落格式
     * @command paragraph
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param {String}   style               标签值为：'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'
     * @param {Object}   attrs               标签的属性
     * @example
     * ```javascript
     * editor.execCommand( 'Paragraph','h1','{
     *     class:'test'
     * }' );
     * ```
     */ /**
     * 返回选区内节点标签名
     * @command paragraph
     * @method queryCommandValue
     * @param { String } cmd 命令字符串
     * @return { String } 节点标签名
     * @example
     * ```javascript
     * editor.queryCommandValue( 'Paragraph' );
     * ```
     */UE.plugins['paragraph']=function(){var me=this,block=domUtils.isBlockElm,notExchange=['TD','LI','PRE'],doParagraph=function doParagraph(range,style,attrs,sourceCmdName){var bookmark=range.createBookmark(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br'&&!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},para;range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return !block(node);});}tmpRange.setEndAfter(tmpNode);para=range.document.createElement(style);if(attrs){domUtils.setAttributes(para,attrs);if(sourceCmdName&&sourceCmdName=='customstyle'&&attrs.style){para.style.cssText=attrs.style;}}para.appendChild(tmpRange.extractContents());//需要内容占位
if(domUtils.isEmptyNode(para)){domUtils.fillChar(range.document,para);}tmpRange.insertNode(para);var parent=para.parentNode;//如果para上一级是一个block元素且不是body,td就删除它
if(block(parent)&&!domUtils.isBody(para.parentNode)&&utils.indexOf(notExchange,parent.tagName)==-1){//存储dir,style
if(!(sourceCmdName&&sourceCmdName=='customstyle')){parent.getAttribute('dir')&&para.setAttribute('dir',parent.getAttribute('dir'));//trace:1070
parent.style.cssText&&(para.style.cssText=parent.style.cssText+';'+para.style.cssText);//trace:1030
parent.style.textAlign&&!para.style.textAlign&&(para.style.textAlign=parent.style.textAlign);parent.style.textIndent&&!para.style.textIndent&&(para.style.textIndent=parent.style.textIndent);parent.style.padding&&!para.style.padding&&(para.style.padding=parent.style.padding);}//trace:1706 选择的就是h1-6要删除
if(attrs&&/h\d/i.test(parent.tagName)&&!/h\d/i.test(para.tagName)){domUtils.setAttributes(parent,attrs);if(sourceCmdName&&sourceCmdName=='customstyle'&&attrs.style){parent.style.cssText=attrs.style;}domUtils.remove(para,true);para=parent;}else{domUtils.remove(para.parentNode,true);}}if(utils.indexOf(notExchange,parent.tagName)!=-1){current=parent;}else{current=para;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};me.setOpt('paragraph',{'p':'','h1':'','h2':'','h3':'','h4':'','h5':'','h6':''});me.commands['paragraph']={execCommand:function execCommand(cmdName,style,attrs,sourceCmdName){var range=this.selection.getRange();//闭合时单独处理
if(range.collapsed){var txt=this.document.createTextNode('p');range.insertNode(txt);//去掉冗余的fillchar
if(browser.ie){var node=txt.previousSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}node=txt.nextSibling;if(node&&domUtils.isWhitespace(node)){domUtils.remove(node);}}}range=doParagraph(range,style,attrs,sourceCmdName);if(txt){range.setStartBefore(txt).collapse(true);pN=txt.parentNode;domUtils.remove(txt);if(domUtils.isBlockElm(pN)&&domUtils.isEmptyNode(pN)){domUtils.fillNode(this.document,pN);}}if(browser.gecko&&range.collapsed&&range.startContainer.nodeType==1){var child=range.startContainer.childNodes[range.startOffset];if(child&&child.nodeType==1&&child.tagName.toLowerCase()==style){range.setStart(child,0).collapse(true);}}//trace:1097 原来有true，原因忘了，但去了就不能清除多余的占位符了
range.select();return true;},queryCommandValue:function queryCommandValue(){var node=domUtils.filterNodeList(this.selection.getStartElementPath(),'p h1 h2 h3 h4 h5 h6');return node?node.tagName.toLowerCase():'';}};};// plugins/directionality.js
/**
     * 设置文字输入的方向的插件
     * @file
     * @since 1.2.6.1
     */(function(){var block=domUtils.isBlockElm,getObj=function getObj(editor){//            var startNode = editor.selection.getStart(),
//                parents;
//            if ( startNode ) {
//                //查找所有的是block的父亲节点
//                parents = domUtils.findParents( startNode, true, block, true );
//                for ( var i = 0,ci; ci = parents[i++]; ) {
//                    if ( ci.getAttribute( 'dir' ) ) {
//                        return ci;
//                    }
//                }
//            }
return domUtils.filterNodeList(editor.selection.getStartElementPath(),function(n){return n&&n.nodeType==1&&n.getAttribute('dir');});},doDirectionality=function doDirectionality(range,editor,forward){var bookmark,filterFn=function filterFn(node){return node.nodeType==1?!domUtils.isBookmarkNode(node):!domUtils.isWhitespace(node);},obj=getObj(editor);if(obj&&range.collapsed){obj.setAttribute('dir',forward);return range;}bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode;while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){if(current.nodeType==3||!block(current)){tmpRange.setStartBefore(current);while(current&&current!==bookmark2.end&&!block(current)){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return !block(node);});}tmpRange.setEndAfter(tmpNode);var common=tmpRange.getCommonAncestor();if(!domUtils.isBody(common)&&block(common)){//遍历到了block节点
common.setAttribute('dir',forward);current=common;}else{//没有遍历到，添加一个block节点
var p=range.document.createElement('p');p.setAttribute('dir',forward);var frag=tmpRange.extractContents();p.appendChild(frag);tmpRange.insertNode(p);current=p;}current=domUtils.getNextDomNode(current,false,filterFn);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}return range.moveToBookmark(bookmark2).moveToBookmark(bookmark);};/**
         * 文字输入方向
         * @command directionality
         * @method execCommand
         * @param { String } cmdName 命令字符串
         * @param { String } forward 传入'ltr'表示从左向右输入，传入'rtl'表示从右向左输入
         * @example
         * ```javascript
         * editor.execCommand( 'directionality', 'ltr');
         * ```
         */ /**
         * 查询当前选区的文字输入方向
         * @command directionality
         * @method queryCommandValue
         * @param { String } cmdName 命令字符串
         * @return { String } 返回'ltr'表示从左向右输入，返回'rtl'表示从右向左输入
         * @example
         * ```javascript
         * editor.queryCommandValue( 'directionality');
         * ```
         */UE.commands['directionality']={execCommand:function execCommand(cmdName,forward){var range=this.selection.getRange();//闭合时单独处理
if(range.collapsed){var txt=this.document.createTextNode('d');range.insertNode(txt);}doDirectionality(range,this,forward);if(txt){range.setStartBefore(txt).collapse(true);domUtils.remove(txt);}range.select();return true;},queryCommandValue:function queryCommandValue(){var node=getObj(this);return node?node.getAttribute('dir'):'ltr';}};})();// plugins/horizontal.js
/**
     * 插入分割线插件
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入分割线
     * @command horizontal
     * @method execCommand
     * @param { String } cmdName 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'horizontal' );
     * ```
     */UE.plugins['horizontal']=function(){var me=this;me.commands['horizontal']={execCommand:function execCommand(cmdName){var me=this;if(me.queryCommandState(cmdName)!==-1){me.execCommand('insertHtml','<hr>');var range=me.selection.getRange(),start=range.startContainer;if(start.nodeType==1&&!start.childNodes[range.startOffset]){var tmp;if(tmp=start.childNodes[range.startOffset-1]){if(tmp.nodeType==1&&tmp.tagName=='HR'){if(me.options.enterTag=='p'){tmp=me.document.createElement('p');range.insertNode(tmp);range.setStart(tmp,0).setCursor();}else{tmp=me.document.createElement('br');range.insertNode(tmp);range.setStartBefore(tmp).setCursor();}}}}return true;}},//边界在table里不能加分隔线
queryCommandState:function queryCommandState(){return domUtils.filterNodeList(this.selection.getStartElementPath(),'table')?-1:0;}};//    me.addListener('delkeyup',function(){
//        var rng = this.selection.getRange();
//        if(browser.ie && browser.version > 8){
//            rng.txtToElmBoundary(true);
//            if(domUtils.isStartInblock(rng)){
//                var tmpNode = rng.startContainer;
//                var pre = tmpNode.previousSibling;
//                if(pre && domUtils.isTagNode(pre,'hr')){
//                    domUtils.remove(pre);
//                    rng.select();
//                    return;
//                }
//            }
//        }
//        if(domUtils.isBody(rng.startContainer)){
//            var hr = rng.startContainer.childNodes[rng.startOffset -1];
//            if(hr && hr.nodeName == 'HR'){
//                var next = hr.nextSibling;
//                if(next){
//                    rng.setStart(next,0)
//                }else if(hr.previousSibling){
//                    rng.setStartAtLast(hr.previousSibling)
//                }else{
//                    var p = this.document.createElement('p');
//                    hr.parentNode.insertBefore(p,hr);
//                    domUtils.fillNode(this.document,p);
//                    rng.setStart(p,0);
//                }
//                domUtils.remove(hr);
//                rng.setCursor(false,true);
//            }
//        }
//    })
me.addListener('delkeydown',function(name,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);if(domUtils.isStartInblock(rng)){var tmpNode=rng.startContainer;var pre=tmpNode.previousSibling;if(pre&&domUtils.isTagNode(pre,'hr')){domUtils.remove(pre);rng.select();domUtils.preventDefault(evt);return true;}}});};// plugins/time.js
/**
     * 插入时间和日期
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入时间，默认格式：12:59:59
     * @command time
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'time');
     * ```
     */ /**
     * 插入日期，默认格式：2013-08-30
     * @command date
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'date');
     * ```
     */UE.commands['time']=UE.commands["date"]={execCommand:function execCommand(cmd,format){var date=new Date();function formatTime(date,format){var hh=('0'+date.getHours()).slice(-2),ii=('0'+date.getMinutes()).slice(-2),ss=('0'+date.getSeconds()).slice(-2);format=format||'hh:ii:ss';return format.replace(/hh/ig,hh).replace(/ii/ig,ii).replace(/ss/ig,ss);}function formatDate(date,format){var yyyy=('000'+date.getFullYear()).slice(-4),yy=yyyy.slice(-2),mm=('0'+(date.getMonth()+1)).slice(-2),dd=('0'+date.getDate()).slice(-2);format=format||'yyyy-mm-dd';return format.replace(/yyyy/ig,yyyy).replace(/yy/ig,yy).replace(/mm/ig,mm).replace(/dd/ig,dd);}this.execCommand('insertHtml',cmd=="time"?formatTime(date,format):formatDate(date,format));}};// plugins/rowspacing.js
/**
     * 段前段后间距插件
     * @file
     * @since 1.2.6.1
     */ /**
     * 设置段间距
     * @command rowspacing
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @param { String } value 段间距的值，以px为单位
     * @param { String } dir 间距位置，top或bottom，分别表示段前和段后
     * @example
     * ```javascript
     * editor.execCommand( 'rowspacing', '10', 'top' );
     * ```
     */UE.plugins['rowspacing']=function(){var me=this;me.setOpt({'rowspacingtop':['5','10','15','20','25'],'rowspacingbottom':['5','10','15','20','25']});me.commands['rowspacing']={execCommand:function execCommand(cmdName,value,dir){this.execCommand('paragraph','p',{style:'margin-'+dir+':'+value+'px'});return true;},queryCommandValue:function queryCommandValue(cmdName,dir){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);}),value;//trace:1026
if(pN){value=domUtils.getComputedStyle(pN,'margin-'+dir).replace(/[^\d]/g,'');return !value?0:value;}return 0;}};};// plugins/lineheight.js
/**
     * 设置行内间距
     * @file
     * @since 1.2.6.1
     */UE.plugins['lineheight']=function(){var me=this;me.setOpt({'lineheight':['1','1.5','1.75','2','3','4','5']});/**
         * 行距
         * @command lineheight
         * @method execCommand
         * @param { String } cmdName 命令字符串
         * @param { String } value 传入的行高值， 该值是当前字体的倍数， 例如： 1.5, 1.75
         * @example
         * ```javascript
         * editor.execCommand( 'lineheight', 1.5);
         * ```
         */ /**
         * 查询当前选区内容的行高大小
         * @command lineheight
         * @method queryCommandValue
         * @param { String } cmd 命令字符串
         * @return { String } 返回当前行高大小
         * @example
         * ```javascript
         * editor.queryCommandValue( 'lineheight' );
         * ```
         */me.commands['lineheight']={execCommand:function execCommand(cmdName,value){this.execCommand('paragraph','p',{style:'line-height:'+(value=="1"?"normal":value+'em')});return true;},queryCommandValue:function queryCommandValue(){var pN=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return domUtils.isBlockElm(node);});if(pN){var value=domUtils.getComputedStyle(pN,'line-height');return value=='normal'?1:value.replace(/[^\d.]*/ig,"");}}};};// plugins/insertcode.js
/**
     * 插入代码插件
     * @file
     * @since 1.2.6.1
     */UE.plugins['insertcode']=function(){var me=this;me.ready(function(){utils.cssRule('pre','pre{margin:.5em 0;padding:.4em .6em;border-radius:8px;background:#f8f8f8;}',me.document);});me.setOpt('insertcode',{'as3':'ActionScript3','bash':'Bash/Shell','cpp':'C/C++','css':'Css','cf':'CodeFunction','c#':'C#','delphi':'Delphi','diff':'Diff','erlang':'Erlang','groovy':'Groovy','html':'Html','java':'Java','jfx':'JavaFx','js':'Javascript','pl':'Perl','php':'Php','plain':'Plain Text','ps':'PowerShell','python':'Python','ruby':'Ruby','scala':'Scala','sql':'Sql','vb':'Vb','xml':'Xml'});/**
         * 插入代码
         * @command insertcode
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @param { String } lang 插入代码的语言
         * @example
         * ```javascript
         * editor.execCommand( 'insertcode', 'javascript' );
         * ```
         */ /**
         * 如果选区所在位置是插入插入代码区域，返回代码的语言
         * @command insertcode
         * @method queryCommandValue
         * @param { String } cmd 命令字符串
         * @return { String } 返回代码的语言
         * @example
         * ```javascript
         * editor.queryCommandValue( 'insertcode' );
         * ```
         */me.commands['insertcode']={execCommand:function execCommand(cmd,lang){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){pre.className='brush:'+lang+';toolbar:false;';}else{var code='';if(rng.collapsed){code=browser.ie&&browser.ie11below?browser.version<=8?'&nbsp;':'':'<br/>';}else{var frag=rng.extractContents();var div=me.document.createElement('div');div.appendChild(frag);utils.each(UE.filterNode(UE.htmlparser(div.innerHTML.replace(/[\r\t]/g,'')),me.options.filterTxtRules).children,function(node){if(browser.ie&&browser.ie11below&&browser.version>8){if(node.type=='element'){if(node.tagName=='br'){code+='\n';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){code+='\n';}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/\n$/.test(code)){code+='\n';}}}else{code+=node.data+'\n';}if(!node.nextSibling()&&/\n$/.test(code)){code=code.replace(/\n$/,'');}}else{if(browser.ie&&browser.ie11below){if(node.type=='element'){if(node.tagName=='br'){code+='<br>';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){code+='<br>';}else if(!dtd.$empty[node.tagName]){code+=cn.innerText();}}else{code+=cn.data;}});if(!/br>$/.test(code)){code+='<br>';}}}else{code+=node.data+'<br>';}if(!node.nextSibling()&&/<br>$/.test(code)){code=code.replace(/<br>$/,'');}}else{code+=node.type=='element'?dtd.$empty[node.tagName]?'':node.innerText():node.data;if(!/br\/?\s*>$/.test(code)){if(!node.nextSibling())return;code+='<br>';}}}});}me.execCommand('inserthtml','<pre id="coder"class="brush:'+lang+';toolbar:false">'+code+'</pre>',true);pre=me.document.getElementById('coder');domUtils.removeAttributes(pre,'id');var tmpNode=pre.previousSibling;if(tmpNode&&(tmpNode.nodeType==3&&tmpNode.nodeValue.length==1&&browser.ie&&browser.version==6||domUtils.isEmptyBlock(tmpNode))){domUtils.remove(tmpNode);}var rng=me.selection.getRange();if(domUtils.isEmptyBlock(pre)){rng.setStart(pre,0).setCursor(false,true);}else{rng.selectNodeContents(pre).select();}}},queryCommandValue:function queryCommandValue(){var path=this.selection.getStartElementPath();var lang='';utils.each(path,function(node){if(node.nodeName=='PRE'){var match=node.className.match(/brush:([^;]+)/);lang=match&&match[1]?match[1]:'';return false;}});return lang;}};me.addInputRule(function(root){utils.each(root.getNodesByTagName('pre'),function(pre){var brs=pre.getNodesByTagName('br');if(brs.length){browser.ie&&browser.ie11below&&browser.version>8&&utils.each(brs,function(br){var txt=UE.uNode.createText('\n');br.parentNode.insertBefore(txt,br);br.parentNode.removeChild(br);});return;}if(browser.ie&&browser.ie11below&&browser.version>8)return;var code=pre.innerText().split(/\n/);pre.innerHTML('');utils.each(code,function(c){if(c.length){pre.appendChild(UE.uNode.createText(c));}pre.appendChild(UE.uNode.createElement('br'));});});});me.addOutputRule(function(root){utils.each(root.getNodesByTagName('pre'),function(pre){var code='';utils.each(pre.children,function(n){if(n.type=='text'){//在ie下文本内容有可能末尾带有\n要去掉
//trace:3396
code+=n.data.replace(/[ ]/g,'&nbsp;').replace(/\n$/,'');}else{if(n.tagName=='br'){code+='\n';}else{code+=!dtd.$empty[n.tagName]?'':n.innerText();}}});pre.innerText(code.replace(/(&nbsp;|\n)+$/,''));});});//不需要判断highlight的command列表
me.notNeedCodeQuery={help:1,undo:1,redo:1,source:1,print:1,searchreplace:1,fullscreen:1,preview:1,insertparagraph:1,elementpath:1,insertcode:1,inserthtml:1,selectall:1};//将queyCommamndState重置
var orgQuery=me.queryCommandState;me.queryCommandState=function(cmd){var me=this;if(!me.notNeedCodeQuery[cmd.toLowerCase()]&&me.selection&&me.queryCommandValue('insertcode')){return -1;}return UE.Editor.prototype.queryCommandState.apply(this,arguments);};me.addListener('beforeenterkeydown',function(){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){me.fireEvent('saveScene');if(!rng.collapsed){rng.deleteContents();}if(!browser.ie||browser.ie9above){var tmpNode=me.document.createElement('br'),pre;rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true);var next=tmpNode.nextSibling;if(!next&&(!browser.ie||browser.version>10)){rng.insertNode(tmpNode.cloneNode(false));}else{rng.setStartAfter(tmpNode);}pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=='BR'){pre=tmp;break;}}if(pre){var str='';while(pre&&pre.nodeName!='BR'&&new RegExp('^[\\s'+domUtils.fillChar+']*$').test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!='BR'){var match=pre.nodeValue.match(new RegExp('^([\\s'+domUtils.fillChar+']+)'));if(match&&match[1]){str+=match[1];}}if(str){str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}}rng.collapse(true).select(true);}else{if(browser.version>8){var txt=me.document.createTextNode('\n');var start=rng.startContainer;if(rng.startOffset==0){var preNode=start.previousSibling;if(preNode){rng.insertNode(txt);var fillchar=me.document.createTextNode(' ');rng.setStartAfter(txt).insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{rng.insertNode(txt).setStartAfter(txt);var fillchar=me.document.createTextNode(' ');start=rng.startContainer.childNodes[rng.startOffset];if(start&&!/^\n/.test(start.nodeValue)){rng.setStartBefore(txt);}rng.insertNode(fillchar).setStart(fillchar,0).collapse(true).select(true);}}else{var tmpNode=me.document.createElement('br');rng.insertNode(tmpNode);rng.insertNode(me.document.createTextNode(domUtils.fillChar));rng.setStartAfter(tmpNode);pre=tmpNode.previousSibling;var tmp;while(pre){tmp=pre;pre=pre.previousSibling;if(!pre||pre.nodeName=='BR'){pre=tmp;break;}}if(pre){var str='';while(pre&&pre.nodeName!='BR'&&new RegExp('^[ '+domUtils.fillChar+']*$').test(pre.nodeValue)){str+=pre.nodeValue;pre=pre.nextSibling;}if(pre.nodeName!='BR'){var match=pre.nodeValue.match(new RegExp('^([ '+domUtils.fillChar+']+)'));if(match&&match[1]){str+=match[1];}}str=me.document.createTextNode(str);rng.insertNode(str).setStartAfter(str);}rng.collapse(true).select();}}me.fireEvent('saveScene');return true;}});me.addListener('tabkeydown',function(cmd,evt){var rng=me.selection.getRange();var pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){me.fireEvent('saveScene');if(evt.shiftKey);else{if(!rng.collapsed){var bk=rng.createBookmark();var start=bk.start.previousSibling;while(start){if(pre.firstChild===start&&!domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode('    '),start);break;}if(domUtils.isBr(start)){pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);break;}start=start.previousSibling;}var end=bk.end;start=bk.start.nextSibling;if(pre.firstChild===bk.start){pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);}while(start&&start!==end){if(domUtils.isBr(start)&&start.nextSibling){if(start.nextSibling===end){break;}pre.insertBefore(me.document.createTextNode('    '),start.nextSibling);}start=start.nextSibling;}rng.moveToBookmark(bk).select();}else{var tmpNode=me.document.createTextNode('    ');rng.insertNode(tmpNode).setStartAfter(tmpNode).collapse(true).select(true);}}me.fireEvent('saveScene');return true;}});me.addListener('beforeinserthtml',function(evtName,html){var me=this,rng=me.selection.getRange(),pre=domUtils.findParentByTagName(rng.startContainer,'pre',true);if(pre){if(!rng.collapsed){rng.deleteContents();}var htmlstr='';if(browser.ie&&browser.version>8){utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=='element'){if(node.tagName=='br'){htmlstr+='\n';}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){htmlstr+='\n';}else if(!dtd.$empty[node.tagName]){htmlstr+=cn.innerText();}}else{htmlstr+=cn.data;}});if(!/\n$/.test(htmlstr)){htmlstr+='\n';}}}else{htmlstr+=node.data+'\n';}if(!node.nextSibling()&&/\n$/.test(htmlstr)){htmlstr=htmlstr.replace(/\n$/,'');}});var tmpNode=me.document.createTextNode(utils.html(htmlstr.replace(/&nbsp;/g,' ')));rng.insertNode(tmpNode).selectNode(tmpNode).select();}else{var frag=me.document.createDocumentFragment();utils.each(UE.filterNode(UE.htmlparser(html),me.options.filterTxtRules).children,function(node){if(node.type=='element'){if(node.tagName=='br'){frag.appendChild(me.document.createElement('br'));}else if(!dtd.$empty[node.tagName]){utils.each(node.children,function(cn){if(cn.type=='element'){if(cn.tagName=='br'){frag.appendChild(me.document.createElement('br'));}else if(!dtd.$empty[node.tagName]){frag.appendChild(me.document.createTextNode(utils.html(cn.innerText().replace(/&nbsp;/g,' '))));}}else{frag.appendChild(me.document.createTextNode(utils.html(cn.data.replace(/&nbsp;/g,' '))));}});if(frag.lastChild.nodeName!='BR'){frag.appendChild(me.document.createElement('br'));}}}else{frag.appendChild(me.document.createTextNode(utils.html(node.data.replace(/&nbsp;/g,' '))));}if(!node.nextSibling()&&frag.lastChild.nodeName=='BR'){frag.removeChild(frag.lastChild);}});rng.insertNode(frag).select();}return true;}});//方向键的处理
me.addListener('keydown',function(cmd,evt){var me=this,keyCode=evt.keyCode||evt.which;if(keyCode==40){var rng=me.selection.getRange(),pre,start=rng.startContainer;if(rng.collapsed&&(pre=domUtils.findParentByTagName(rng.startContainer,'pre',true))&&!pre.nextSibling){var last=pre.lastChild;while(last&&last.nodeName=='BR'){last=last.previousSibling;}if(last===start||rng.startContainer===pre&&rng.startOffset==pre.childNodes.length){me.execCommand('insertparagraph');domUtils.preventDefault(evt);}}}});//trace:3395
me.addListener('delkeydown',function(type,evt){var rng=this.selection.getRange();rng.txtToElmBoundary(true);var start=rng.startContainer;if(domUtils.isTagNode(start,'pre')&&rng.collapsed&&domUtils.isStartInblock(rng)){var p=me.document.createElement('p');domUtils.fillNode(me.document,p);start.parentNode.insertBefore(p,start);domUtils.remove(start);rng.setStart(p,0).setCursor(false,true);domUtils.preventDefault(evt);return true;}});};// plugins/cleardoc.js
/**
     * 清空文档插件
     * @file
     * @since 1.2.6.1
     */ /**
     * 清空文档
     * @command cleardoc
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * //editor 是编辑器实例
     * editor.execCommand('cleardoc');
     * ```
     */UE.commands['cleardoc']={execCommand:function execCommand(cmdName){var me=this,enterTag=me.options.enterTag,range=me.selection.getRange();if(enterTag=="br"){me.body.innerHTML="<br/>";range.setStart(me.body,0).setCursor();}else{me.body.innerHTML="<p>"+(ie?"":"<br/>")+"</p>";range.setStart(me.body.firstChild,0).setCursor(false,true);}setTimeout(function(){me.fireEvent("clearDoc");},0);}};// plugins/anchor.js
/**
     * 锚点插件，为UEditor提供插入锚点支持
     * @file
     * @since 1.2.6.1
     */UE.plugin.register('anchor',function(){return {bindEvents:{'ready':function ready(){utils.cssRule('anchor','.anchorclass{background: url(\''+this.options.themePath+this.options.theme+'/images/anchor.gif\') no-repeat scroll left center transparent;cursor: auto;display: inline-block;height: 16px;width: 15px;}',this.document);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(a){var val;if(val=a.getAttr('anchorname')){a.tagName='a';a.setAttr({anchorname:'',name:val,'class':''});}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('a'),function(a){var val;if((val=a.getAttr('name'))&&!a.getAttr('href')){a.tagName='img';a.setAttr({anchorname:a.getAttr('name'),'class':'anchorclass'});a.setAttr('name');}});},commands:{/**
                 * 插入锚点
                 * @command anchor
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @param { String } name 锚点名称字符串
                 * @example
                 * ```javascript
                 * //editor 是编辑器实例
                 * editor.execCommand('anchor', 'anchor1');
                 * ```
                 */'anchor':{execCommand:function execCommand(cmd,name){var range=this.selection.getRange(),img=range.getClosedNode();if(img&&img.getAttribute('anchorname')){if(name){img.setAttribute('anchorname',name);}else{range.setStartBefore(img).setCursor();domUtils.remove(img);}}else{if(name){//只在选区的开始插入
var anchor=this.document.createElement('img');range.collapse(true);domUtils.setAttributes(anchor,{'anchorname':name,'class':'anchorclass'});range.insertNode(anchor).setStartAfter(anchor).setCursor(false,true);}}}}}};});// plugins/wordcount.js
///import core
///commands 字数统计
///commandsName  WordCount,wordCount
///commandsTitle  字数统计
/*
     * Created by JetBrains WebStorm.
     * User: taoqili
     * Date: 11-9-7
     * Time: 下午8:18
     * To change this template use File | Settings | File Templates.
     */UE.plugins['wordcount']=function(){var me=this;me.setOpt('wordCount',true);me.addListener('contentchange',function(){me.fireEvent('wordcount');});var timer;me.addListener('ready',function(){var me=this;domUtils.on(me.body,"keyup",function(evt){var code=evt.keyCode||evt.which,//忽略的按键,ctr,alt,shift,方向键
ignores={"16":1,"18":1,"20":1,"37":1,"38":1,"39":1,"40":1};if(code in ignores)return;clearTimeout(timer);timer=setTimeout(function(){me.fireEvent('wordcount');},200);});});};// plugins/pagebreak.js
/**
     * 分页功能插件
     * @file
     * @since 1.2.6.1
     */UE.plugins['pagebreak']=function(){var me=this,notBreakTags=['td'];me.setOpt('pageBreakTag','_ueditor_page_break_tag_');function fillNode(node){if(domUtils.isEmptyBlock(node)){var firstChild=node.firstChild,tmpNode;while(firstChild&&firstChild.nodeType==1&&domUtils.isEmptyBlock(firstChild)){tmpNode=firstChild;firstChild=firstChild.firstChild;}!tmpNode&&(tmpNode=node);domUtils.fillNode(me.document,tmpNode);}}//分页符样式添加
me.ready(function(){utils.cssRule('pagebreak','.pagebreak{display:block;clear:both !important;cursor:default !important;width: 100% !important;margin:0;}',me.document);});function isHr(node){return node&&node.nodeType==1&&node.tagName=='HR'&&node.className=='pagebreak';}me.addInputRule(function(root){root.traversal(function(node){if(node.type=='text'&&node.data==me.options.pageBreakTag){var hr=UE.uNode.createElement('<hr class="pagebreak" noshade="noshade" size="5" style="-webkit-user-select: none;">');node.parentNode.insertBefore(hr,node);node.parentNode.removeChild(node);}});});me.addOutputRule(function(node){utils.each(node.getNodesByTagName('hr'),function(n){if(n.getAttr('class')=='pagebreak'){var txt=UE.uNode.createText(me.options.pageBreakTag);n.parentNode.insertBefore(txt,n);n.parentNode.removeChild(n);}});});/**
         * 插入分页符
         * @command pagebreak
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @remind 在表格中插入分页符会把表格切分成两部分
         * @remind 获取编辑器内的数据时， 编辑器会把分页符转换成“_ueditor_page_break_tag_”字符串，
         *          以便于提交数据到服务器端后处理分页。
         * @example
         * ```javascript
         * editor.execCommand( 'pagebreak'); //插入一个hr标签，带有样式类名pagebreak
         * ```
         */me.commands['pagebreak']={execCommand:function execCommand(){var range=me.selection.getRange(),hr=me.document.createElement('hr');domUtils.setAttributes(hr,{'class':'pagebreak',noshade:"noshade",size:"5"});domUtils.unSelectable(hr);//table单独处理
var node=domUtils.findParentByTagName(range.startContainer,notBreakTags,true),parents=[],pN;if(node){switch(node.tagName){case'TD':pN=node.parentNode;if(!pN.previousSibling){var table=domUtils.findParentByTagName(pN,'table');//                            var tableWrapDiv = table.parentNode;
//                            if(tableWrapDiv && tableWrapDiv.nodeType == 1
//                                && tableWrapDiv.tagName == 'DIV'
//                                && tableWrapDiv.getAttribute('dropdrag')
//                                ){
//                                domUtils.remove(tableWrapDiv,true);
//                            }
table.parentNode.insertBefore(hr,table);parents=domUtils.findParents(hr,true);}else{pN.parentNode.insertBefore(hr,pN);parents=domUtils.findParents(hr);}pN=parents[1];if(hr!==pN){domUtils.breakParent(hr,pN);}//table要重写绑定一下拖拽
me.fireEvent('afteradjusttable',me.document);}}else{if(!range.collapsed){range.deleteContents();var start=range.startContainer;while(!domUtils.isBody(start)&&domUtils.isBlockElm(start)&&domUtils.isEmptyNode(start)){range.setStartBefore(start).collapse(true);domUtils.remove(start);start=range.startContainer;}}range.insertNode(hr);var pN=hr.parentNode,nextNode;while(!domUtils.isBody(pN)){domUtils.breakParent(hr,pN);nextNode=hr.nextSibling;if(nextNode&&domUtils.isEmptyBlock(nextNode)){domUtils.remove(nextNode);}pN=hr.parentNode;}nextNode=hr.nextSibling;var pre=hr.previousSibling;if(isHr(pre)){domUtils.remove(pre);}else{pre&&fillNode(pre);}if(!nextNode){var p=me.document.createElement('p');hr.parentNode.appendChild(p);domUtils.fillNode(me.document,p);range.setStart(p,0).collapse(true);}else{if(isHr(nextNode)){domUtils.remove(nextNode);}else{fillNode(nextNode);}range.setEndAfter(hr).collapse(false);}range.select(true);}}};};// plugins/wordimage.js
///import core
///commands 本地图片引导上传
///commandsName  WordImage
///commandsTitle  本地图片引导上传
///commandsDialog  dialogs\wordimage
UE.plugin.register('wordimage',function(){var me=this,images=[];return {commands:{'wordimage':{execCommand:function execCommand(){var images=domUtils.getElementsByTagName(me.body,"img");var urlList=[];for(var i=0,ci;ci=images[i++];){var url=ci.getAttribute("word_img");url&&urlList.push(url);}return urlList;},queryCommandState:function queryCommandState(){images=domUtils.getElementsByTagName(me.body,"img");for(var i=0,ci;ci=images[i++];){if(ci.getAttribute("word_img")){return 1;}}return -1;},notNeedUndo:true}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('img'),function(img){var attrs=img.attrs,flag=parseInt(attrs.width)<128||parseInt(attrs.height)<43,opt=me.options,src=opt.UEDITOR_HOME_URL+'themes/default/images/spacer.gif';if(attrs['src']&&/^(?:(file:\/+))/.test(attrs['src'])){img.setAttr({width:attrs.width,height:attrs.height,alt:attrs.alt,word_img:attrs.src,src:src,'style':'background:url('+(flag?opt.themePath+opt.theme+'/images/word.gif':opt.langPath+opt.lang+'/images/localimage.png')+') no-repeat center center;border:1px solid #ddd'});}});}};});// plugins/dragdrop.js
UE.plugins['dragdrop']=function(){var me=this;me.ready(function(){domUtils.on(this.body,'dragend',function(){var rng=me.selection.getRange();var node=rng.getClosedNode()||me.selection.getStart();if(node&&node.tagName=='IMG'){var pre=node.previousSibling,next;while(next=node.nextSibling){if(next.nodeType==1&&next.tagName=='SPAN'&&!next.firstChild){domUtils.remove(next);}else{break;}}if((pre&&pre.nodeType==1&&!domUtils.isEmptyBlock(pre)||!pre)&&(!next||next&&!domUtils.isEmptyBlock(next))){if(pre&&pre.tagName=='P'&&!domUtils.isEmptyBlock(pre)){pre.appendChild(node);domUtils.moveChild(next,pre);domUtils.remove(next);}else if(next&&next.tagName=='P'&&!domUtils.isEmptyBlock(next)){next.insertBefore(node,next.firstChild);}if(pre&&pre.tagName=='P'&&domUtils.isEmptyBlock(pre)){domUtils.remove(pre);}if(next&&next.tagName=='P'&&domUtils.isEmptyBlock(next)){domUtils.remove(next);}rng.selectNode(node).select();me.fireEvent('saveScene');}}});});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var rng=me.selection.getRange(),node;if(node=domUtils.findParentByTagName(rng.startContainer,'p',true)){if(domUtils.getComputedStyle(node,'text-align')=='center'){domUtils.removeStyle(node,'text-align');}}}});};// plugins/undo.js
/**
     * undo redo
     * @file
     * @since 1.2.6.1
     */ /**
     * 撤销上一次执行的命令
     * @command undo
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'undo' );
     * ```
     */ /**
     * 重做上一次执行的命令
     * @command redo
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'redo' );
     * ```
     */UE.plugins['undo']=function(){var saveSceneTimer;var me=this,maxUndoCount=me.options.maxUndoCount||20,maxInputCount=me.options.maxInputCount||20,fillchar=new RegExp(domUtils.fillChar+'|<\/hr>','gi');// ie会产生多余的</hr>
var noNeedFillCharTags={ol:1,ul:1,table:1,tbody:1,tr:1,body:1};var orgState=me.options.autoClearEmptyNode;function compareAddr(indexA,indexB){if(indexA.length!=indexB.length)return 0;for(var i=0,l=indexA.length;i<l;i++){if(indexA[i]!=indexB[i])return 0;}return 1;}function compareRangeAddress(rngAddrA,rngAddrB){if(rngAddrA.collapsed!=rngAddrB.collapsed){return 0;}if(!compareAddr(rngAddrA.startAddress,rngAddrB.startAddress)||!compareAddr(rngAddrA.endAddress,rngAddrB.endAddress)){return 0;}return 1;}function UndoManager(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.undo=function(){if(this.hasUndo){if(!this.list[this.index-1]&&this.list.length==1){this.reset();return;}while(this.list[this.index].content==this.list[this.index-1].content){this.index--;if(this.index==0){return this.restore(0);}}this.restore(--this.index);}};this.redo=function(){if(this.hasRedo){while(this.list[this.index].content==this.list[this.index+1].content){this.index++;if(this.index==this.list.length-1){return this.restore(this.index);}}this.restore(++this.index);}};this.restore=function(){var me=this.editor;var scene=this.list[this.index];var root=UE.htmlparser(scene.content.replace(fillchar,''));me.options.autoClearEmptyNode=false;me.filterInputRule(root);me.options.autoClearEmptyNode=orgState;//trace:873
//去掉展位符
me.document.body.innerHTML=root.toHtml();me.fireEvent('afterscencerestore');//处理undo后空格不展位的问题
if(browser.ie){utils.each(domUtils.getElementsByTagName(me.document,'td th caption p'),function(node){if(domUtils.isEmptyNode(node)){domUtils.fillNode(me.document,node);}});}try{var rng=new dom.Range(me.document).moveToAddress(scene.address);rng.select(noNeedFillCharTags[rng.startContainer.nodeName.toLowerCase()]);}catch(e){}this.update();this.clearKey();//不能把自己reset了
me.fireEvent('reset',true);};this.getScene=function(){var me=this.editor;var rng=me.selection.getRange(),rngAddress=rng.createAddress(false,true);me.fireEvent('beforegetscene');var root=UE.htmlparser(me.body.innerHTML);me.options.autoClearEmptyNode=false;me.filterOutputRule(root);me.options.autoClearEmptyNode=orgState;var cont=root.toHtml();//trace:3461
//这个会引起回退时导致空格丢失的情况
//            browser.ie && (cont = cont.replace(/>&nbsp;</g, '><').replace(/\s*</g, '<').replace(/>\s*/g, '>'));
me.fireEvent('aftergetscene');return {address:rngAddress,content:cont};};this.save=function(notCompareRange,notSetCursor){clearTimeout(saveSceneTimer);var currentScene=this.getScene(notSetCursor),lastScene=this.list[this.index];if(lastScene&&lastScene.content!=currentScene.content){me.trigger('contentchange');}//内容相同位置相同不存
if(lastScene&&lastScene.content==currentScene.content&&(notCompareRange?1:compareRangeAddress(lastScene.address,currentScene.address))){return;}this.list=this.list.slice(0,this.index+1);this.list.push(currentScene);//如果大于最大数量了，就把最前的剔除
if(this.list.length>maxUndoCount){this.list.shift();}this.index=this.list.length-1;this.clearKey();//跟新undo/redo状态
this.update();};this.update=function(){this.hasRedo=!!this.list[this.index+1];this.hasUndo=!!this.list[this.index-1];};this.reset=function(){this.list=[];this.index=0;this.hasUndo=false;this.hasRedo=false;this.clearKey();};this.clearKey=function(){keycont=0;};}me.undoManger=new UndoManager();me.undoManger.editor=me;me.addListener('saveScene',function(){var args=Array.prototype.splice.call(arguments,1);this.undoManger.save.apply(this.undoManger,args);});//    me.addListener('beforeexeccommand', saveScene);
//    me.addListener('afterexeccommand', saveScene);
me.addListener('reset',function(type,exclude){if(!exclude){this.undoManger.reset();}});me.commands['redo']=me.commands['undo']={execCommand:function execCommand(cmdName){this.undoManger[cmdName]();},queryCommandState:function queryCommandState(cmdName){return this.undoManger['has'+(cmdName.toLowerCase()=='undo'?'Undo':'Redo')]?0:-1;},notNeedUndo:1};var keys={//  /*Backspace*/ 8:1, /*Delete*/ 46:1,
/*Shift*/16:1,/*Ctrl*/17:1,/*Alt*/18:1,37:1,38:1,39:1,40:1},keycont=0;//输入法状态下不计算字符数
var inputType=false;me.addListener('ready',function(){domUtils.on(this.body,'compositionstart',function(){inputType=true;});domUtils.on(this.body,'compositionend',function(){inputType=false;});});//快捷键
me.addshortcutkey({"Undo":"ctrl+90",//undo
"Redo":"ctrl+89"//redo
});var isCollapsed=true;me.addListener('keydown',function(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var save=function save(cont){cont.undoManger.save(false,true);cont.fireEvent('selectionchange');};if(inputType)return;if(!me.selection.getRange().collapsed){me.undoManger.save(false,true);isCollapsed=false;return;}if(me.undoManger.list.length==0){me.undoManger.save(true);}clearTimeout(saveSceneTimer);saveSceneTimer=setTimeout(function(){if(inputType){var interalTimer=setInterval(function(){if(!inputType){save(me);clearInterval(interalTimer);}},300);return;}save(me);},200);keycont++;if(keycont>=maxInputCount){save(me);}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(!keys[keyCode]&&!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){if(inputType)return;if(!isCollapsed){this.undoManger.save(false,true);isCollapsed=true;}}});//扩展实例，添加关闭和开启命令undo
me.stopCmdUndo=function(){me.__hasEnterExecCommand=true;};me.startCmdUndo=function(){me.__hasEnterExecCommand=false;};};// plugins/copy.js
UE.plugin.register('copy',function(){var me=this;function initZeroClipboard(){ZeroClipboard.config({debug:false,swfPath:me.options.UEDITOR_PUBHOME_URL+'third-party/zeroclipboard/ZeroClipboard.swf'});var client=me.zeroclipboard=new ZeroClipboard();// 复制内容
client.on('copy',function(e){var client=e.client,rng=me.selection.getRange(),div=document.createElement('div');div.appendChild(rng.cloneContents());client.setText(div.innerText||div.textContent);client.setHtml(div.innerHTML);rng.select();});// hover事件传递到target
client.on('mouseover mouseout',function(e){var target=e.target;if(e.type=='mouseover'){domUtils.addClass(target,'edui-state-hover');}else if(e.type=='mouseout'){domUtils.removeClasses(target,'edui-state-hover');}});// flash加载不成功
client.on('wrongflash noflash',function(){ZeroClipboard.destroy();});}return {bindEvents:{'ready':function ready(){if(!browser.ie){if(window.ZeroClipboard){initZeroClipboard();}else{utils.loadFile(document,{src:me.options.UEDITOR_PUBHOME_URL+"third-party/zeroclipboard/ZeroClipboard.js",tag:"script",type:"text/javascript",defer:"defer"},function(){initZeroClipboard();});}}}},commands:{'copy':{execCommand:function execCommand(cmd){if(!me.document.execCommand('copy')){alert(me.getLang('copymsg'));}}}}};});// plugins/paste.js
///import core
///import plugins/inserthtml.js
///import plugins/undo.js
///import plugins/serialize.js
///commands 粘贴
///commandsName  PastePlain
///commandsTitle  纯文本粘贴模式
/**
     * @description 粘贴
     * @author zhanyi
     */UE.plugins['paste']=function(){function getClipboardData(callback){var doc=this.document;if(doc.getElementById('baidu_pastebin')){return;}var range=this.selection.getRange(),bk=range.createBookmark(),//创建剪贴的容器div
pastebin=doc.createElement('div');pastebin.id='baidu_pastebin';// Safari 要求div必须有内容，才能粘贴内容进来
browser.webkit&&pastebin.appendChild(doc.createTextNode(domUtils.fillChar+domUtils.fillChar));doc.body.appendChild(pastebin);//trace:717 隐藏的span不能得到top
//bk.start.innerHTML = '&nbsp;';
bk.start.style.display='';pastebin.style.cssText="position:absolute;width:1px;height:1px;overflow:hidden;left:-1000px;white-space:nowrap;top:"+//要在现在光标平行的位置加入，否则会出现跳动的问题
domUtils.getXY(bk.start).y+'px';range.selectNodeContents(pastebin).select(true);setTimeout(function(){if(browser.webkit){for(var i=0,pastebins=doc.querySelectorAll('#baidu_pastebin'),pi;pi=pastebins[i++];){if(domUtils.isEmptyNode(pi)){domUtils.remove(pi);}else{pastebin=pi;break;}}}try{pastebin.parentNode.removeChild(pastebin);}catch(e){}range.moveToBookmark(bk).select(true);callback(pastebin);},0);}var me=this;me.setOpt({retainOnlyLabelPasted:false});var txtContent,htmlContent,address;function getPureHtml(html){return html.replace(/<(\/?)([\w\-]+)([^>]*)>/gi,function(a,b,tagName,attrs){tagName=tagName.toLowerCase();if({img:1}[tagName]){return a;}attrs=attrs.replace(/([\w\-]*?)\s*=\s*(("([^"]*)")|('([^']*)')|([^\s>]+))/gi,function(str,atr,val){if({'src':1,'href':1,'name':1}[atr.toLowerCase()]){return atr+'='+val+' ';}return '';});if({'span':1,'div':1}[tagName]){return '';}else{return '<'+b+tagName+' '+utils.trim(attrs)+'>';}});}function filter(div){var html;if(div.firstChild){//去掉cut中添加的边界值
var nodes=domUtils.getElementsByTagName(div,'span');for(var i=0,ni;ni=nodes[i++];){if(ni.id=='_baidu_cut_start'||ni.id=='_baidu_cut_end'){domUtils.remove(ni);}}if(browser.webkit){var brs=div.querySelectorAll('div br');for(var i=0,bi;bi=brs[i++];){var pN=bi.parentNode;if(pN.tagName=='DIV'&&pN.childNodes.length==1){pN.innerHTML='<p><br/></p>';domUtils.remove(pN);}}var divs=div.querySelectorAll('#baidu_pastebin');for(var i=0,di;di=divs[i++];){var tmpP=me.document.createElement('p');di.parentNode.insertBefore(tmpP,di);while(di.firstChild){tmpP.appendChild(di.firstChild);}domUtils.remove(di);}var metas=div.querySelectorAll('meta');for(var i=0,ci;ci=metas[i++];){domUtils.remove(ci);}var brs=div.querySelectorAll('br');for(i=0;ci=brs[i++];){if(/^apple-/i.test(ci.className)){domUtils.remove(ci);}}}if(browser.gecko){var dirtyNodes=div.querySelectorAll('[_moz_dirty]');for(i=0;ci=dirtyNodes[i++];){ci.removeAttribute('_moz_dirty');}}if(!browser.ie){var spans=div.querySelectorAll('span.Apple-style-span');for(var i=0,ci;ci=spans[i++];){domUtils.remove(ci,true);}}//ie下使用innerHTML会产生多余的\r\n字符，也会产生&nbsp;这里过滤掉
html=div.innerHTML;//.replace(/>(?:(\s|&nbsp;)*?)</g,'><');
//过滤word粘贴过来的冗余属性
html=UE.filterWord(html);//取消了忽略空白的第二个参数，粘贴过来的有些是有空白的，会被套上相关的标签
var root=UE.htmlparser(html);//如果给了过滤规则就先进行过滤
if(me.options.filterRules){UE.filterNode(root,me.options.filterRules);}//执行默认的处理
me.filterInputRule(root);//针对chrome的处理
if(browser.webkit){var br=root.lastChild();if(br&&br.type=='element'&&br.tagName=='br'){root.removeChild(br);}utils.each(me.body.querySelectorAll('div'),function(node){if(domUtils.isEmptyBlock(node)){domUtils.remove(node,true);}});}html={'html':root.toHtml()};me.fireEvent('beforepaste',html,root);//抢了默认的粘贴，那后边的内容就不执行了，比如表格粘贴
if(!html.html){return;}root=UE.htmlparser(html.html,true);//如果开启了纯文本模式
if(me.queryCommandState('pasteplain')===1){me.execCommand('insertHtml',UE.filterNode(root,me.options.filterTxtRules).toHtml(),true);}else{//文本模式
UE.filterNode(root,me.options.filterTxtRules);txtContent=root.toHtml();//完全模式
htmlContent=html.html;address=me.selection.getRange().createAddress(true);me.execCommand('insertHtml',me.getOpt('retainOnlyLabelPasted')===true?getPureHtml(htmlContent):htmlContent,true);}me.fireEvent("afterpaste",html);}}me.addListener('pasteTransfer',function(cmd,plainType){if(address&&txtContent&&htmlContent&&txtContent!=htmlContent){var range=me.selection.getRange();range.moveToAddress(address,true);if(!range.collapsed){while(!domUtils.isBody(range.startContainer)){var start=range.startContainer;if(start.nodeType==1){start=start.childNodes[range.startOffset];if(!start){range.setStartBefore(range.startContainer);continue;}var pre=start.previousSibling;if(pre&&pre.nodeType==3&&new RegExp('^[\n\r\t '+domUtils.fillChar+']*$').test(pre.nodeValue)){range.setStartBefore(pre);}}if(range.startOffset==0){range.setStartBefore(range.startContainer);}else{break;}}while(!domUtils.isBody(range.endContainer)){var end=range.endContainer;if(end.nodeType==1){end=end.childNodes[range.endOffset];if(!end){range.setEndAfter(range.endContainer);continue;}var next=end.nextSibling;if(next&&next.nodeType==3&&new RegExp('^[\n\r\t'+domUtils.fillChar+']*$').test(next.nodeValue)){range.setEndAfter(next);}}if(range.endOffset==range.endContainer[range.endContainer.nodeType==3?'nodeValue':'childNodes'].length){range.setEndAfter(range.endContainer);}else{break;}}}range.deleteContents();range.select(true);me.__hasEnterExecCommand=true;var html=htmlContent;if(plainType===2){html=getPureHtml(html);}else if(plainType){html=txtContent;}me.execCommand('inserthtml',html,true);me.__hasEnterExecCommand=false;var rng=me.selection.getRange();while(!domUtils.isBody(rng.startContainer)&&!rng.startOffset&&rng.startContainer[rng.startContainer.nodeType==3?'nodeValue':'childNodes'].length){rng.setStartBefore(rng.startContainer);}var tmpAddress=rng.createAddress(true);address.endAddress=tmpAddress.startAddress;}});me.addListener('ready',function(){domUtils.on(me.body,'cut',function(){var range=me.selection.getRange();if(!range.collapsed&&me.undoManger){me.undoManger.save();}});//ie下beforepaste在点击右键时也会触发，所以用监控键盘才处理
domUtils.on(me.body,browser.ie||browser.opera?'keydown':'paste',function(e){if((browser.ie||browser.opera)&&(!e.ctrlKey&&!e.metaKey||e.keyCode!='86')){return;}getClipboardData.call(me,function(div){filter(div);});});});me.commands['paste']={execCommand:function execCommand(cmd){if(browser.ie){getClipboardData.call(me,function(div){filter(div);});me.document.execCommand('paste');}else{alert(me.getLang('pastemsg'));}}};};// plugins/puretxtpaste.js
/**
     * 纯文本粘贴插件
     * @file
     * @since 1.2.6.1
     */UE.plugins['pasteplain']=function(){var me=this;me.setOpt({'pasteplain':false,'filterTxtRules':function(){function transP(node){node.tagName='p';node.setStyle();}function removeNode(node){node.parentNode.removeChild(node,true);}return {//直接删除及其字节点内容
'-':'script style object iframe embed input select','p':{$:{}},'br':{$:{}},div:function div(node){var tmpNode,p=UE.uNode.createElement('p');while(tmpNode=node.firstChild()){if(tmpNode.type=='text'||!UE.dom.dtd.$block[tmpNode.tagName]){p.appendChild(tmpNode);}else{if(p.firstChild()){node.parentNode.insertBefore(p,node);p=UE.uNode.createElement('p');}else{node.parentNode.insertBefore(tmpNode,node);}}}if(p.firstChild()){node.parentNode.insertBefore(p,node);}node.parentNode.removeChild(node);},ol:removeNode,ul:removeNode,dl:removeNode,dt:removeNode,dd:removeNode,'li':removeNode,'caption':transP,'th':transP,'tr':transP,'h1':transP,'h2':transP,'h3':transP,'h4':transP,'h5':transP,'h6':transP,'td':function td(node){//没有内容的td直接删掉
var txt=!!node.innerText();if(txt){node.parentNode.insertAfter(UE.uNode.createText(' &nbsp; &nbsp;'),node);}node.parentNode.removeChild(node,node.innerText());}};}()});//暂时这里支持一下老版本的属性
var pasteplain=me.options.pasteplain;/**
         * 启用或取消纯文本粘贴模式
         * @command pasteplain
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @example
         * ```javascript
         * editor.queryCommandState( 'pasteplain' );
         * ```
         */ /**
         * 查询当前是否处于纯文本粘贴模式
         * @command pasteplain
         * @method queryCommandState
         * @param { String } cmd 命令字符串
         * @return { int } 如果处于纯文本模式，返回1，否则，返回0
         * @example
         * ```javascript
         * editor.queryCommandState( 'pasteplain' );
         * ```
         */me.commands['pasteplain']={queryCommandState:function queryCommandState(){return pasteplain?1:0;},execCommand:function execCommand(){pasteplain=!pasteplain|0;},notNeedUndo:1};};// plugins/list.js
/**
     * 有序列表,无序列表插件
     * @file
     * @since 1.2.6.1
     */UE.plugins['list']=function(){var me=this,notExchange={'TD':1,'PRE':1,'BLOCKQUOTE':1};var customStyle={'cn':'cn-1-','cn1':'cn-2-','cn2':'cn-3-','num':'num-1-','num1':'num-2-','num2':'num-3-','dash':'dash','dot':'dot'};me.setOpt({'autoTransWordToList':false,'insertorderedlist':{'num':'','num1':'','num2':'','cn':'','cn1':'','cn2':'','decimal':'','lower-alpha':'','lower-roman':'','upper-alpha':'','upper-roman':''},'insertunorderedlist':{'circle':'','disc':'','square':'','dash':'','dot':''},listDefaultPaddingLeft:'30',listiconpath:'http://bs.baidu.com/listicon/',maxListLevel:-1,//-1不限制
disablePInList:false});function listToArray(list){var arr=[];for(var p in list){arr.push(p);}return arr;}var listStyle={'OL':listToArray(me.options.insertorderedlist),'UL':listToArray(me.options.insertunorderedlist)};var liiconpath=me.options.listiconpath;//根据用户配置，调整customStyle
for(var s in customStyle){if(!me.options.insertorderedlist.hasOwnProperty(s)&&!me.options.insertunorderedlist.hasOwnProperty(s)){delete customStyle[s];}}me.ready(function(){var customCss=[];for(var p in customStyle){if(p=='dash'||p=='dot'){customCss.push('li.list-'+customStyle[p]+'{background-image:url('+liiconpath+customStyle[p]+'.gif)}');customCss.push('ul.custom_'+p+'{list-style:none;}ul.custom_'+p+' li{background-position:0 3px;background-repeat:no-repeat}');}else{for(var i=0;i<99;i++){customCss.push('li.list-'+customStyle[p]+i+'{background-image:url('+liiconpath+'list-'+customStyle[p]+i+'.gif)}');}customCss.push('ol.custom_'+p+'{list-style:none;}ol.custom_'+p+' li{background-position:0 3px;background-repeat:no-repeat}');}switch(p){case'cn':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:25px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:55px}');break;case'cn1':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:30px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:55px}');break;case'cn2':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:40px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:55px}');customCss.push('li.list-'+p+'-paddingleft-3{padding-left:68px}');break;case'num':case'num1':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:25px}');break;case'num2':customCss.push('li.list-'+p+'-paddingleft-1{padding-left:35px}');customCss.push('li.list-'+p+'-paddingleft-2{padding-left:40px}');break;case'dash':customCss.push('li.list-'+p+'-paddingleft{padding-left:35px}');break;case'dot':customCss.push('li.list-'+p+'-paddingleft{padding-left:20px}');}}customCss.push('.list-paddingleft-1{padding-left:0}');customCss.push('.list-paddingleft-2{padding-left:'+me.options.listDefaultPaddingLeft+'px}');customCss.push('.list-paddingleft-3{padding-left:'+me.options.listDefaultPaddingLeft*2+'px}');//如果不给宽度会在自定应样式里出现滚动条
utils.cssRule('list','ol,ul{margin:0;pading:0;'+(browser.ie?'':'width:95%')+'}li{clear:both;}'+customCss.join('\n'),me.document);});//单独处理剪切的问题
me.ready(function(){domUtils.on(me.body,'cut',function(){setTimeout(function(){var rng=me.selection.getRange(),li;//trace:3416
if(!rng.collapsed){if(li=domUtils.findParentByTagName(rng.startContainer,'li',true)){if(!li.nextSibling&&domUtils.isEmptyBlock(li)){var pn=li.parentNode,node;if(node=pn.previousSibling){domUtils.remove(pn);rng.setStartAtLast(node).collapse(true);rng.select(true);}else if(node=pn.nextSibling){domUtils.remove(pn);rng.setStartAtFirst(node).collapse(true);rng.select(true);}else{var tmpNode=me.document.createElement('p');domUtils.fillNode(me.document,tmpNode);pn.parentNode.insertBefore(tmpNode,pn);domUtils.remove(pn);rng.setStart(tmpNode,0).collapse(true);rng.select(true);}}}}});});});function getStyle(node){var cls=node.className;if(domUtils.hasClass(node,/custom_/)){return cls.match(/custom_(\w+)/)[1];}return domUtils.getStyle(node,'list-style-type');}me.addListener('beforepaste',function(type,html){var me=this,rng=me.selection.getRange(),li;var root=UE.htmlparser(html.html,true);if(li=domUtils.findParentByTagName(rng.startContainer,'li',true)){var list=li.parentNode,tagName=list.tagName=='OL'?'ul':'ol';utils.each(root.getNodesByTagName(tagName),function(n){n.tagName=list.tagName;n.setAttr();if(n.parentNode===root){type=getStyle(list)||(list.tagName=='OL'?'decimal':'disc');}else{var className=n.parentNode.getAttr('class');if(className&&/custom_/.test(className)){type=className.match(/custom_(\w+)/)[1];}else{type=n.parentNode.getStyle('list-style-type');}if(!type){type=list.tagName=='OL'?'decimal':'disc';}}var index=utils.indexOf(listStyle[list.tagName],type);if(n.parentNode!==root)index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];if(customStyle[currentStyle]){n.setAttr('class','custom_'+currentStyle);}else{n.setStyle('list-style-type',currentStyle);}});}html.html=root.toHtml();});//导出时，去掉p标签
me.getOpt('disablePInList')===true&&me.addOutputRule(function(root){utils.each(root.getNodesByTagName('li'),function(li){var newChildrens=[],index=0;utils.each(li.children,function(n){if(n.tagName=='p'){var tmpNode;while(tmpNode=n.children.pop()){newChildrens.splice(index,0,tmpNode);tmpNode.parentNode=li;lastNode=tmpNode;}tmpNode=newChildrens[newChildrens.length-1];if(!tmpNode||tmpNode.type!='element'||tmpNode.tagName!='br'){var br=UE.uNode.createElement('br');br.parentNode=li;newChildrens.push(br);}index=newChildrens.length;}});if(newChildrens.length){li.children=newChildrens;}});});//进入编辑器的li要套p标签
me.addInputRule(function(root){utils.each(root.getNodesByTagName('li'),function(li){var tmpP=UE.uNode.createElement('p');for(var i=0,ci;ci=li.children[i];){if(ci.type=='text'||dtd.p[ci.tagName]){tmpP.appendChild(ci);}else{if(tmpP.firstChild()){li.insertBefore(tmpP,ci);tmpP=UE.uNode.createElement('p');i=i+2;}else{i++;}}}if(tmpP.firstChild()&&!tmpP.parentNode||!li.firstChild()){li.appendChild(tmpP);}//trace:3357
//p不能为空
if(!tmpP.firstChild()){tmpP.innerHTML(browser.ie?'&nbsp;':'<br/>');}//去掉末尾的空白
var p=li.firstChild();var lastChild=p.lastChild();if(lastChild&&lastChild.type=='text'&&/^\s*$/.test(lastChild.data)){p.removeChild(lastChild);}});if(me.options.autoTransWordToList){var checkListType=function checkListType(content,container){var span=container.firstChild();if(span&&span.type=='element'&&span.tagName=='span'&&/Wingdings|Symbol/.test(span.getStyle('font-family'))){for(var p in unorderlisttype){if(unorderlisttype[p]==span.data){return p;}}return 'disc';}for(var p in orderlisttype){if(orderlisttype[p].test(content)){return p;}}};var orderlisttype={'num1':/^\d+\)/,'decimal':/^\d+\./,'lower-alpha':/^[a-z]+\)/,'upper-alpha':/^[A-Z]+\./,'cn':/^[\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+[\u3001]/,'cn2':/^\([\u4E00\u4E8C\u4E09\u56DB\u516d\u4e94\u4e03\u516b\u4e5d]+\)/},unorderlisttype={'square':'n'};utils.each(root.getNodesByTagName('p'),function(node){if(node.getAttr('class')!='MsoListParagraph'){return;}//word粘贴过来的会带有margin要去掉,但这样也可能会误命中一些央视
node.setStyle('margin','');node.setStyle('margin-left','');node.setAttr('class','');function appendLi(list,p,type){if(list.tagName=='ol'){if(browser.ie){var first=p.firstChild();if(first.type=='element'&&first.tagName=='span'&&orderlisttype[type].test(first.innerText())){p.removeChild(first);}}else{p.innerHTML(p.innerHTML().replace(orderlisttype[type],''));}}else{p.removeChild(p.firstChild());}var li=UE.uNode.createElement('li');li.appendChild(p);list.appendChild(li);}var tmp=node,type,cacheNode=node;if(node.parentNode.tagName!='li'&&(type=checkListType(node.innerText(),node))){var list=UE.uNode.createElement(me.options.insertorderedlist.hasOwnProperty(type)?'ol':'ul');if(customStyle[type]){list.setAttr('class','custom_'+type);}else{list.setStyle('list-style-type',type);}while(node&&node.parentNode.tagName!='li'&&checkListType(node.innerText(),node)){tmp=node.nextSibling();if(!tmp){node.parentNode.insertBefore(list,node);}appendLi(list,node,type);node=tmp;}if(!list.parentNode&&node&&node.parentNode){node.parentNode.insertBefore(list,node);}}var span=cacheNode.firstChild();if(span&&span.type=='element'&&span.tagName=='span'&&/^\s*(&nbsp;)+\s*$/.test(span.innerText())){span.parentNode.removeChild(span);}});}});//调整索引标签
me.addListener('contentchange',function(){adjustListStyle(me.document);});function adjustListStyle(doc,ignore){utils.each(domUtils.getElementsByTagName(doc,'ol ul'),function(node){if(!domUtils.inDoc(node,doc))return;var parent=node.parentNode;if(parent.tagName==node.tagName){var nodeStyleType=getStyle(node)||(node.tagName=='OL'?'decimal':'disc'),parentStyleType=getStyle(parent)||(parent.tagName=='OL'?'decimal':'disc');if(nodeStyleType==parentStyleType){var styleIndex=utils.indexOf(listStyle[node.tagName],nodeStyleType);styleIndex=styleIndex+1==listStyle[node.tagName].length?0:styleIndex+1;setListStyle(node,listStyle[node.tagName][styleIndex]);}}var index=0,type=2;if(domUtils.hasClass(node,/custom_/)){if(!(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/))){type=1;}}else{if(/[ou]l/i.test(parent.tagName)&&domUtils.hasClass(parent,/custom_/)){type=3;}}var style=domUtils.getStyle(node,'list-style-type');style&&(node.style.cssText='list-style-type:'+style);node.className=utils.trim(node.className.replace(/list-paddingleft-\w+/,''))+' list-paddingleft-'+type;utils.each(domUtils.getElementsByTagName(node,'li'),function(li){li.style.cssText&&(li.style.cssText='');if(!li.firstChild){domUtils.remove(li);return;}if(li.parentNode!==node){return;}index++;if(domUtils.hasClass(node,/custom_/)){var paddingLeft=1,currentStyle=getStyle(node);if(node.tagName=='OL'){if(currentStyle){switch(currentStyle){case'cn':case'cn1':case'cn2':if(index>10&&(index%10==0||index>10&&index<20)){paddingLeft=2;}else if(index>20){paddingLeft=3;}break;case'num2':if(index>9){paddingLeft=2;}}}li.className='list-'+customStyle[currentStyle]+index+' '+'list-'+currentStyle+'-paddingleft-'+paddingLeft;}else{li.className='list-'+customStyle[currentStyle]+' '+'list-'+currentStyle+'-paddingleft';}}else{li.className=li.className.replace(/list-[\w\-]+/gi,'');}var className=li.getAttribute('class');if(className!==null&&!className.replace(/\s/g,'')){domUtils.removeAttributes(li,'class');}});!ignore&&adjustList(node,node.tagName.toLowerCase(),getStyle(node)||domUtils.getStyle(node,'list-style-type'),true);});}function adjustList(list,tag,style,ignoreEmpty){var nextList=list.nextSibling;if(nextList&&nextList.nodeType==1&&nextList.tagName.toLowerCase()==tag&&(getStyle(nextList)||domUtils.getStyle(nextList,'list-style-type')||(tag=='ol'?'decimal':'disc'))==style){domUtils.moveChild(nextList,list);if(nextList.childNodes.length==0){domUtils.remove(nextList);}}if(nextList&&domUtils.isFillChar(nextList)){domUtils.remove(nextList);}var preList=list.previousSibling;if(preList&&preList.nodeType==1&&preList.tagName.toLowerCase()==tag&&(getStyle(preList)||domUtils.getStyle(preList,'list-style-type')||(tag=='ol'?'decimal':'disc'))==style){domUtils.moveChild(list,preList);}if(preList&&domUtils.isFillChar(preList)){domUtils.remove(preList);}!ignoreEmpty&&domUtils.isEmptyBlock(list)&&domUtils.remove(list);if(getStyle(list)){adjustListStyle(list.ownerDocument,true);}}function setListStyle(list,style){if(customStyle[style]){list.className='custom_'+style;}try{domUtils.setStyle(list,'list-style-type',style);}catch(e){}}function clearEmptySibling(node){var tmpNode=node.previousSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}tmpNode=node.nextSibling;if(tmpNode&&domUtils.isEmptyBlock(tmpNode)){domUtils.remove(tmpNode);}}me.addListener('keydown',function(type,evt){function preventAndSave(){evt.preventDefault?evt.preventDefault():evt.returnValue=false;me.fireEvent('contentchange');me.undoManger&&me.undoManger.save();}function findList(node,filterFn){while(node&&!domUtils.isBody(node)){if(filterFn(node)){return null;}if(node.nodeType==1&&/[ou]l/i.test(node.tagName)){return node;}node=node.parentNode;}return null;}var keyCode=evt.keyCode||evt.which;if(keyCode==13&&!evt.shiftKey){//回车
var rng=me.selection.getRange(),parent=domUtils.findParent(rng.startContainer,function(node){return domUtils.isBlockElm(node);},true),li=domUtils.findParentByTagName(rng.startContainer,'li',true);if(parent&&parent.tagName!='PRE'&&!li){var html=parent.innerHTML.replace(new RegExp(domUtils.fillChar,'g'),'');if(/^\s*1\s*\.[^\d]/.test(html)){parent.innerHTML=html.replace(/^\s*1\s*\./,'');rng.setStartAtLast(parent).collapse(true).select();me.__hasEnterExecCommand=true;me.execCommand('insertorderedlist');me.__hasEnterExecCommand=false;}}var range=me.selection.getRange(),start=findList(range.startContainer,function(node){return node.tagName=='TABLE';}),end=range.collapsed?start:findList(range.endContainer,function(node){return node.tagName=='TABLE';});if(start&&end&&start===end){if(!range.collapsed){start=domUtils.findParentByTagName(range.startContainer,'li',true);end=domUtils.findParentByTagName(range.endContainer,'li',true);if(start&&end&&start===end){range.deleteContents();li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li&&domUtils.isEmptyBlock(li)){pre=li.previousSibling;next=li.nextSibling;p=me.document.createElement('p');domUtils.fillNode(me.document,p);parentList=li.parentNode;if(pre&&next){range.setStart(next,0).collapse(true).select(true);domUtils.remove(li);}else{if(!pre&&!next||!pre){parentList.parentNode.insertBefore(p,parentList);}else{li.parentNode.parentNode.insertBefore(p,parentList.nextSibling);}domUtils.remove(li);if(!parentList.firstChild){domUtils.remove(parentList);}range.setStart(p,0).setCursor();}preventAndSave();return;}}else{var tmpRange=range.cloneRange(),bk=tmpRange.collapse(false).createBookmark();range.deleteContents();tmpRange.moveToBookmark(bk);var li=domUtils.findParentByTagName(tmpRange.startContainer,'li',true);clearEmptySibling(li);tmpRange.select();preventAndSave();return;}}li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){if(domUtils.isEmptyBlock(li)){bk=range.createBookmark();var parentList=li.parentNode;if(li!==parentList.lastChild){domUtils.breakParent(li,parentList);clearEmptySibling(li);}else{parentList.parentNode.insertBefore(li,parentList.nextSibling);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}//嵌套不处理
if(!dtd.$list[li.parentNode.tagName]){if(!domUtils.isBlockElm(li.firstChild)){p=me.document.createElement('p');li.parentNode.insertBefore(p,li);while(li.firstChild){p.appendChild(li.firstChild);}domUtils.remove(li);}else{domUtils.remove(li,true);}}range.moveToBookmark(bk).select();}else{var first=li.firstChild;if(!first||!domUtils.isBlockElm(first)){var p=me.document.createElement('p');!li.firstChild&&domUtils.fillNode(me.document,p);while(li.firstChild){p.appendChild(li.firstChild);}li.appendChild(p);first=p;}var span=me.document.createElement('span');range.insertNode(span);domUtils.breakParent(span,li);var nextLi=span.nextSibling;first=nextLi.firstChild;if(!first){p=me.document.createElement('p');domUtils.fillNode(me.document,p);nextLi.appendChild(p);first=p;}if(domUtils.isEmptyNode(first)){first.innerHTML='';domUtils.fillNode(me.document,first);}range.setStart(first,0).collapse(true).shrinkBoundary().select();domUtils.remove(span);var pre=nextLi.previousSibling;if(pre&&domUtils.isEmptyBlock(pre)){pre.innerHTML='<p></p>';domUtils.fillNode(me.document,pre.firstChild);}}//                        }
preventAndSave();}}}if(keyCode==8){//修中ie中li下的问题
range=me.selection.getRange();if(range.collapsed&&domUtils.isStartInblock(range)){tmpRange=range.cloneRange().trimBoundary();li=domUtils.findParentByTagName(range.startContainer,'li',true);//要在li的最左边，才能处理
if(li&&domUtils.isStartInblock(tmpRange)){start=domUtils.findParentByTagName(range.startContainer,'p',true);if(start&&start!==li.firstChild){var parentList=domUtils.findParentByTagName(start,['ol','ul']);domUtils.breakParent(start,parentList);clearEmptySibling(start);me.fireEvent('contentchange');range.setStart(start,0).setCursor(false,true);me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}if(li&&(pre=li.previousSibling)){if(keyCode==46&&li.childNodes.length){return;}//有可能上边的兄弟节点是个2级菜单，要追加到2级菜单的最后的li
if(dtd.$list[pre.tagName]){pre=pre.lastChild;}me.undoManger&&me.undoManger.save();first=li.firstChild;if(domUtils.isBlockElm(first)){if(domUtils.isEmptyNode(first)){//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);
pre.appendChild(first);range.setStart(first,0).setCursor(false,true);//first不是唯一的节点
while(li.firstChild){pre.appendChild(li.firstChild);}}else{span=me.document.createElement('span');range.insertNode(span);//判断pre是否是空的节点,如果是<p><br/></p>类型的空节点，干掉p标签防止它占位
if(domUtils.isEmptyBlock(pre)){pre.innerHTML='';}domUtils.moveChild(li,pre);range.setStartBefore(span).collapse(true).select(true);domUtils.remove(span);}}else{if(domUtils.isEmptyNode(li)){var p=me.document.createElement('p');pre.appendChild(p);range.setStart(p,0).setCursor();//                                    range.setEnd(pre, pre.childNodes.length).shrinkBoundary().collapse().select(true);
}else{range.setEnd(pre,pre.childNodes.length).collapse().select(true);while(li.firstChild){pre.appendChild(li.firstChild);}}}domUtils.remove(li);me.fireEvent('contentchange');me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}//trace:980
if(li&&!li.previousSibling){var parentList=li.parentNode;var bk=range.createBookmark();if(domUtils.isTagNode(parentList.parentNode,'ol ul')){parentList.parentNode.insertBefore(li,parentList);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}else{while(li.firstChild){parentList.parentNode.insertBefore(li.firstChild,parentList);}domUtils.remove(li);if(domUtils.isEmptyNode(parentList)){domUtils.remove(parentList);}}range.moveToBookmark(bk).setCursor(false,true);me.fireEvent('contentchange');me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}}}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==8){var rng=me.selection.getRange(),list;if(list=domUtils.findParentByTagName(rng.startContainer,['ol','ul'],true)){adjustList(list,list.tagName.toLowerCase(),getStyle(list)||domUtils.getComputedStyle(list,'list-style-type'),true);}}});//处理tab键
me.addListener('tabkeydown',function(){var range=me.selection.getRange();//控制级数
function checkLevel(li){if(me.options.maxListLevel!=-1){var level=li.parentNode,levelNum=0;while(/[ou]l/i.test(level.tagName)){levelNum++;level=level.parentNode;}if(levelNum>=me.options.maxListLevel){return true;}}}//只以开始为准
//todo 后续改进
var li=domUtils.findParentByTagName(range.startContainer,'li',true);if(li){var bk;if(range.collapsed){if(checkLevel(li))return true;var parentLi=li.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,'list-style-type'));index=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][index];setListStyle(list,currentStyle);if(domUtils.isStartInblock(range)){me.fireEvent('saveScene');bk=range.createBookmark();parentLi.insertBefore(list,li);list.appendChild(li);adjustList(list,list.tagName.toLowerCase(),currentStyle);me.fireEvent('contentchange');range.moveToBookmark(bk).select(true);return true;}}else{me.fireEvent('saveScene');bk=range.createBookmark();for(var i=0,closeList,parents=domUtils.findParents(li),ci;ci=parents[i++];){if(domUtils.isTagNode(ci,'ol ul')){closeList=ci;break;}}var current=li;if(bk.end){while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){if(checkLevel(current)){current=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});continue;}var parentLi=current.parentNode,list=me.document.createElement(parentLi.tagName),index=utils.indexOf(listStyle[list.tagName],getStyle(parentLi)||domUtils.getComputedStyle(parentLi,'list-style-type'));var currentIndex=index+1==listStyle[list.tagName].length?0:index+1;var currentStyle=listStyle[list.tagName][currentIndex];setListStyle(list,currentStyle);parentLi.insertBefore(list,current);while(current&&!(domUtils.getPosition(current,bk.end)&domUtils.POSITION_FOLLOWING)){li=current.nextSibling;list.appendChild(current);if(!li||domUtils.isTagNode(li,'ol ul')){if(li){while(li=li.firstChild){if(li.tagName=='LI'){break;}}}else{li=domUtils.getNextDomNode(current,false,null,function(node){return node!==closeList;});}break;}current=li;}adjustList(list,list.tagName.toLowerCase(),currentStyle);current=li;}}me.fireEvent('contentchange');range.moveToBookmark(bk).select();return true;}}});function getLi(start){while(start&&!domUtils.isBody(start)){if(start.nodeName=='TABLE'){return null;}if(start.nodeName=='LI'){return start;}start=start.parentNode;}}/**
         * 有序列表，与“insertunorderedlist”命令互斥
         * @command insertorderedlist
         * @method execCommand
         * @param { String } command 命令字符串
         * @param { String } style 插入的有序列表类型，值为：decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2
         * @example
         * ```javascript
         * editor.execCommand( 'insertorderedlist','decimal');
         * ```
         */ /**
         * 查询当前选区内容是否有序列表
         * @command insertorderedlist
         * @method queryCommandState
         * @param { String } cmd 命令字符串
         * @return { int } 如果当前选区是有序列表返回1，否则返回0
         * @example
         * ```javascript
         * editor.queryCommandState( 'insertorderedlist' );
         * ```
         */ /**
         * 查询当前选区内容是否有序列表
         * @command insertorderedlist
         * @method queryCommandValue
         * @param { String } cmd 命令字符串
         * @return { String } 返回当前有序列表的类型，值为null或decimal,lower-alpha,lower-roman,upper-alpha,upper-roman,cn,cn1,cn2,num,num1,num2
         * @example
         * ```javascript
         * editor.queryCommandValue( 'insertorderedlist' );
         * ```
         */ /**
         * 无序列表，与“insertorderedlist”命令互斥
         * @command insertunorderedlist
         * @method execCommand
         * @param { String } command 命令字符串
         * @param { String } style 插入的无序列表类型，值为：circle,disc,square,dash,dot
         * @example
         * ```javascript
         * editor.execCommand( 'insertunorderedlist','circle');
         * ```
         */ /**
         * 查询当前是否有word文档粘贴进来的图片
         * @command insertunorderedlist
         * @method insertunorderedlist
         * @param { String } command 命令字符串
         * @return { int } 如果当前选区是无序列表返回1，否则返回0
         * @example
         * ```javascript
         * editor.queryCommandState( 'insertunorderedlist' );
         * ```
         */ /**
         * 查询当前选区内容是否有序列表
         * @command insertunorderedlist
         * @method queryCommandValue
         * @param { String } command 命令字符串
         * @return { String } 返回当前无序列表的类型，值为null或circle,disc,square,dash,dot
         * @example
         * ```javascript
         * editor.queryCommandValue( 'insertunorderedlist' );
         * ```
         */me.commands['insertorderedlist']=me.commands['insertunorderedlist']={execCommand:function execCommand(command,style){if(!style){style=command.toLowerCase()=='insertorderedlist'?'decimal':'disc';}var me=this,range=this.selection.getRange(),filterFn=function filterFn(node){return node.nodeType==1?node.tagName.toLowerCase()!='br':!domUtils.isWhitespace(node);},tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul',frag=me.document.createDocumentFragment();//去掉是因为会出现选到末尾，导致adjustmentBoundary缩到ol/ul的位置
//range.shrinkBoundary();//.adjustmentBoundary();
range.adjustmentBoundary().shrinkBoundary();var bko=range.createBookmark(true),start=getLi(me.document.getElementById(bko.start)),modifyStart=0,end=getLi(me.document.getElementById(bko.end)),modifyEnd=0,startParent,endParent,list,tmp;if(start||end){start&&(startParent=start.parentNode);if(!bko.end){end=start;}end&&(endParent=end.parentNode);if(startParent===endParent){while(start!==end){tmp=start;start=start.nextSibling;if(!domUtils.isBlockElm(tmp.firstChild)){var p=me.document.createElement('p');while(tmp.firstChild){p.appendChild(tmp.firstChild);}tmp.appendChild(p);}frag.appendChild(tmp);}tmp=me.document.createElement('span');startParent.insertBefore(tmp,end);if(!domUtils.isBlockElm(end.firstChild)){p=me.document.createElement('p');while(end.firstChild){p.appendChild(end.firstChild);}end.appendChild(p);}frag.appendChild(end);domUtils.breakParent(tmp,startParent);if(domUtils.isEmptyNode(tmp.previousSibling)){domUtils.remove(tmp.previousSibling);}if(domUtils.isEmptyNode(tmp.nextSibling)){domUtils.remove(tmp.nextSibling);}var nodeStyle=getStyle(startParent)||domUtils.getComputedStyle(startParent,'list-style-type')||(command.toLowerCase()=='insertorderedlist'?'decimal':'disc');if(startParent.tagName.toLowerCase()==tag&&nodeStyle==style){for(var i=0,ci,tmpFrag=me.document.createDocumentFragment();ci=frag.firstChild;){if(domUtils.isTagNode(ci,'ol ul')){//                                  删除时，子列表不处理
//                                  utils.each(domUtils.getElementsByTagName(ci,'li'),function(li){
//                                        while(li.firstChild){
//                                            tmpFrag.appendChild(li.firstChild);
//                                        }
//
//                                    });
tmpFrag.appendChild(ci);}else{while(ci.firstChild){tmpFrag.appendChild(ci.firstChild);domUtils.remove(ci);}}}tmp.parentNode.insertBefore(tmpFrag,tmp);}else{list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);tmp.parentNode.insertBefore(list,tmp);}domUtils.remove(tmp);list&&adjustList(list,tag,style);range.moveToBookmark(bko).select();return;}//开始
if(start){while(start){tmp=start.nextSibling;if(domUtils.isTagNode(start,'ol ul')){frag.appendChild(start);}else{var tmpfrag=me.document.createDocumentFragment(),hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){var tmpP=me.document.createElement('p');tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}startParent.parentNode.insertBefore(frag,startParent.nextSibling);if(domUtils.isEmptyNode(startParent)){range.setStartBefore(startParent);domUtils.remove(startParent);}else{range.setStartAfter(startParent);}modifyStart=1;}if(end&&domUtils.inDoc(endParent,me.document)){//结束
start=endParent.firstChild;while(start&&start!==end){tmp=start.nextSibling;if(domUtils.isTagNode(start,'ol ul')){frag.appendChild(start);}else{tmpfrag=me.document.createDocumentFragment();hasBlock=0;while(start.firstChild){if(domUtils.isBlockElm(start.firstChild)){hasBlock=1;}tmpfrag.appendChild(start.firstChild);}if(!hasBlock){tmpP=me.document.createElement('p');tmpP.appendChild(tmpfrag);frag.appendChild(tmpP);}else{frag.appendChild(tmpfrag);}domUtils.remove(start);}start=tmp;}var tmpDiv=domUtils.createElement(me.document,'div',{'tmpDiv':1});domUtils.moveChild(end,tmpDiv);frag.appendChild(tmpDiv);domUtils.remove(end);endParent.parentNode.insertBefore(frag,endParent);range.setEndBefore(endParent);if(domUtils.isEmptyNode(endParent)){domUtils.remove(endParent);}modifyEnd=1;}}if(!modifyStart){range.setStartBefore(me.document.getElementById(bko.start));}if(bko.end&&!modifyEnd){range.setEndAfter(me.document.getElementById(bko.end));}range.enlarge(true,function(node){return notExchange[node.tagName];});frag=me.document.createDocumentFragment();var bk=range.createBookmark(),current=domUtils.getNextDomNode(bk.start,false,filterFn),tmpRange=range.cloneRange(),tmpNode,block=domUtils.isBlockElm;while(current&&current!==bk.end&&domUtils.getPosition(current,bk.end)&domUtils.POSITION_PRECEDING){if(current.nodeType==3||dtd.li[current.tagName]){if(current.nodeType==1&&dtd.$list[current.tagName]){while(current.firstChild){frag.appendChild(current.firstChild);}tmpNode=domUtils.getNextDomNode(current,false,filterFn);domUtils.remove(current);current=tmpNode;continue;}tmpNode=current;tmpRange.setStartBefore(current);while(current&&current!==bk.end&&(!block(current)||domUtils.isBookmarkNode(current))){tmpNode=current;current=domUtils.getNextDomNode(current,false,null,function(node){return !notExchange[node.tagName];});}if(current&&block(current)){tmp=domUtils.getNextDomNode(tmpNode,false,filterFn);if(tmp&&domUtils.isBookmarkNode(tmp)){current=domUtils.getNextDomNode(tmp,false,filterFn);tmpNode=tmp;}}tmpRange.setEndAfter(tmpNode);current=domUtils.getNextDomNode(tmpNode,false,filterFn);var li=range.document.createElement('li');li.appendChild(tmpRange.extractContents());if(domUtils.isEmptyNode(li)){var tmpNode=range.document.createElement('p');while(li.firstChild){tmpNode.appendChild(li.firstChild);}li.appendChild(tmpNode);}frag.appendChild(li);}else{current=domUtils.getNextDomNode(current,true,filterFn);}}range.moveToBookmark(bk).collapse(true);list=me.document.createElement(tag);setListStyle(list,style);list.appendChild(frag);range.insertNode(list);//当前list上下看能否合并
adjustList(list,tag,style);//去掉冗余的tmpDiv
for(var i=0,ci,tmpDivs=domUtils.getElementsByTagName(list,'div');ci=tmpDivs[i++];){if(ci.getAttribute('tmpDiv')){domUtils.remove(ci,true);}}range.moveToBookmark(bko).select();},queryCommandState:function queryCommandState(command){var tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul';var path=this.selection.getStartElementPath();for(var i=0,ci;ci=path[i++];){if(ci.nodeName=='TABLE'){return 0;}if(tag==ci.nodeName.toLowerCase()){return 1;}}return 0;},queryCommandValue:function queryCommandValue(command){var tag=command.toLowerCase()=='insertorderedlist'?'ol':'ul';var path=this.selection.getStartElementPath(),node;for(var i=0,ci;ci=path[i++];){if(ci.nodeName=='TABLE'){node=null;break;}if(tag==ci.nodeName.toLowerCase()){node=ci;break;}}return node?getStyle(node)||domUtils.getComputedStyle(node,'list-style-type'):null;}};};// plugins/source.js
/**
     * 源码编辑插件
     * @file
     * @since 1.2.6.1
     */(function(){var sourceEditors={textarea:function textarea(editor,holder){var textarea=holder.ownerDocument.createElement('textarea');textarea.style.cssText='position:absolute;resize:none;width:100%;height:100%;border:0;padding:0;margin:0;overflow-y:auto;';// todo: IE下只有onresize属性可用... 很纠结
if(browser.ie&&browser.version<8){textarea.style.width=holder.offsetWidth+'px';textarea.style.height=holder.offsetHeight+'px';holder.onresize=function(){textarea.style.width=holder.offsetWidth+'px';textarea.style.height=holder.offsetHeight+'px';};}holder.appendChild(textarea);return {setContent:function setContent(content){textarea.value=content;},getContent:function getContent(){return textarea.value;},select:function select(){var range;if(browser.ie){range=textarea.createTextRange();range.collapse(true);range.select();}else{//todo: chrome下无法设置焦点
textarea.setSelectionRange(0,0);textarea.focus();}},dispose:function dispose(){holder.removeChild(textarea);// todo
holder.onresize=null;textarea=null;holder=null;}};},codemirror:function codemirror(editor,holder){var codeEditor=window.CodeMirror(holder,{mode:"text/html",tabMode:"indent",lineNumbers:true,lineWrapping:true});var dom=codeEditor.getWrapperElement();dom.style.cssText='position:absolute;left:0;top:0;width:100%;height:100%;font-family:consolas,"Courier new",monospace;font-size:13px;';codeEditor.getScrollerElement().style.cssText='position:absolute;left:0;top:0;width:100%;height:100%;';codeEditor.refresh();return {getCodeMirror:function getCodeMirror(){return codeEditor;},setContent:function setContent(content){codeEditor.setValue(content);},getContent:function getContent(){return codeEditor.getValue();},select:function select(){codeEditor.focus();},dispose:function dispose(){holder.removeChild(dom);dom=null;codeEditor=null;}};}};UE.plugins['source']=function(){var me=this;var opt=this.options;var sourceMode=false;var sourceEditor;var orgSetContent;opt.sourceEditor=browser.ie?'textarea':opt.sourceEditor||'codemirror';me.setOpt({sourceEditorFirst:false});function createSourceEditor(holder){return sourceEditors[opt.sourceEditor=='codemirror'&&window.CodeMirror?'codemirror':'textarea'](me,holder);}var bakCssText;//解决在源码模式下getContent不能得到最新的内容问题
var oldGetContent,bakAddress;/**
             * 切换源码模式和编辑模式
             * @command source
             * @method execCommand
             * @param { String } cmd 命令字符串
             * @example
             * ```javascript
             * editor.execCommand( 'source');
             * ```
             */ /**
             * 查询当前编辑区域的状态是源码模式还是可视化模式
             * @command source
             * @method queryCommandState
             * @param { String } cmd 命令字符串
             * @return { int } 如果当前是源码编辑模式，返回1，否则返回0
             * @example
             * ```javascript
             * editor.queryCommandState( 'source' );
             * ```
             */me.commands['source']={execCommand:function execCommand(){sourceMode=!sourceMode;if(sourceMode){bakAddress=me.selection.getRange().createAddress(false,true);me.undoManger&&me.undoManger.save(true);if(browser.gecko){me.body.contentEditable=false;}bakCssText=me.iframe.style.cssText;me.iframe.style.cssText+='position:absolute;left:-32768px;top:-32768px;';me.fireEvent('beforegetcontent');var root=UE.htmlparser(me.body.innerHTML);me.filterOutputRule(root);root.traversal(function(node){if(node.type=='element'){switch(node.tagName){case'td':case'th':case'caption':if(node.children&&node.children.length==1){if(node.firstChild().tagName=='br'){node.removeChild(node.firstChild());}}break;case'pre':node.innerText(node.innerText().replace(/&nbsp;/g,' '));}}});me.fireEvent('aftergetcontent');var content=root.toHtml(true);sourceEditor=createSourceEditor(me.iframe.parentNode);sourceEditor.setContent(content);orgSetContent=me.setContent;me.setContent=function(html){//这里暂时不触发事件，防止报错
var root=UE.htmlparser(html);me.filterInputRule(root);html=root.toHtml();sourceEditor.setContent(html);};setTimeout(function(){sourceEditor.select();me.addListener('fullscreenchanged',function(){try{sourceEditor.getCodeMirror().refresh();}catch(e){}});});//重置getContent，源码模式下取值也能是最新的数据
oldGetContent=me.getContent;me.getContent=function(){return sourceEditor.getContent()||'<p>'+(browser.ie?'':'<br/>')+'</p>';};}else{me.iframe.style.cssText=bakCssText;var cont=sourceEditor.getContent()||'<p>'+(browser.ie?'':'<br/>')+'</p>';//处理掉block节点前后的空格,有可能会误命中，暂时不考虑
cont=cont.replace(new RegExp('[\\r\\t\\n ]*<\/?(\\w+)\\s*(?:[^>]*)>','g'),function(a,b){if(b&&!dtd.$inlineWithA[b.toLowerCase()]){return a.replace(/(^[\n\r\t ]*)|([\n\r\t ]*$)/g,'');}return a.replace(/(^[\n\r\t]*)|([\n\r\t]*$)/g,'');});me.setContent=orgSetContent;me.setContent(cont);sourceEditor.dispose();sourceEditor=null;//还原getContent方法
me.getContent=oldGetContent;var first=me.body.firstChild;//trace:1106 都删除空了，下边会报错，所以补充一个p占位
if(!first){me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';first=me.body.firstChild;}//要在ifm为显示时ff才能取到selection,否则报错
//这里不能比较位置了
me.undoManger&&me.undoManger.save(true);if(browser.gecko){var input=document.createElement('input');input.style.cssText='position:absolute;left:0;top:-32768px';document.body.appendChild(input);me.body.contentEditable=false;setTimeout(function(){domUtils.setViewportOffset(input,{left:-32768,top:0});input.focus();setTimeout(function(){me.body.contentEditable=true;me.selection.getRange().moveToAddress(bakAddress).select(true);domUtils.remove(input);});});}else{//ie下有可能报错，比如在代码顶头的情况
try{me.selection.getRange().moveToAddress(bakAddress).select(true);}catch(e){}}}this.fireEvent('sourcemodechanged',sourceMode);},queryCommandState:function queryCommandState(){return sourceMode|0;},notNeedUndo:1};var oldQueryCommandState=me.queryCommandState;me.queryCommandState=function(cmdName){cmdName=cmdName.toLowerCase();if(sourceMode){//源码模式下可以开启的命令
return cmdName in{'source':1,'fullscreen':1}?1:-1;}return oldQueryCommandState.apply(this,arguments);};if(opt.sourceEditor=="codemirror"){me.addListener("ready",function(){utils.loadFile(document,{src:opt.codeMirrorJsUrl||opt.UEDITOR_PUBHOME_URL+"third-party/codemirror/codemirror.js",tag:"script",type:"text/javascript",defer:"defer"},function(){if(opt.sourceEditorFirst){setTimeout(function(){me.execCommand("source");},0);}});utils.loadFile(document,{tag:"link",rel:"stylesheet",type:"text/css",href:opt.codeMirrorCssUrl||opt.UEDITOR_PUBHOME_URL+"third-party/codemirror/codemirror.css"});});}};})();// plugins/enterkey.js
///import core
///import plugins/undo.js
///commands 设置回车标签p或br
///commandsName  EnterKey
///commandsTitle  设置回车标签p或br
/**
     * @description 处理回车
     * @author zhanyi
     */UE.plugins['enterkey']=function(){var hTag,me=this,tag=me.options.enterTag;me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){var range=me.selection.getRange(),start=range.startContainer,doSave;//修正在h1-h6里边回车后不能嵌套p的问题
if(!browser.ie){if(/h\d/i.test(hTag)){if(browser.gecko){var h=domUtils.findParentByTagName(start,['h1','h2','h3','h4','h5','h6','blockquote','caption','table'],true);if(!h){me.document.execCommand('formatBlock',false,'<p>');doSave=1;}}else{//chrome remove div
if(start.nodeType==1){var tmp=me.document.createTextNode(''),div;range.insertNode(tmp);div=domUtils.findParentByTagName(tmp,'div',true);if(div){var p=me.document.createElement('p');while(div.firstChild){p.appendChild(div.firstChild);}div.parentNode.insertBefore(p,div);domUtils.remove(div);range.setStartBefore(tmp).setCursor();doSave=1;}domUtils.remove(tmp);}}if(me.undoManger&&doSave){me.undoManger.save();}}//没有站位符，会出现多行的问题
browser.opera&&range.select();}else{me.fireEvent('saveScene',true,true);}}});me.addListener('keydown',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==13){//回车
if(me.fireEvent('beforeenterkeydown')){domUtils.preventDefault(evt);return;}me.fireEvent('saveScene',true,true);hTag='';var range=me.selection.getRange();if(!range.collapsed){//跨td不能删
var start=range.startContainer,end=range.endContainer,startTd=domUtils.findParentByTagName(start,'td',true),endTd=domUtils.findParentByTagName(end,'td',true);if(startTd&&endTd&&startTd!==endTd||!startTd&&endTd||startTd&&!endTd){evt.preventDefault?evt.preventDefault():evt.returnValue=false;return;}}if(tag=='p'){if(!browser.ie){start=domUtils.findParentByTagName(range.startContainer,['ol','ul','p','h1','h2','h3','h4','h5','h6','blockquote','caption'],true);//opera下执行formatblock会在table的场景下有问题，回车在opera原生支持很好，所以暂时在opera去掉调用这个原生的command
//trace:2431
if(!start&&!browser.opera){me.document.execCommand('formatBlock',false,'<p>');if(browser.gecko){range=me.selection.getRange();start=domUtils.findParentByTagName(range.startContainer,'p',true);start&&domUtils.removeDirtyAttr(start);}}else{hTag=start.tagName;start.tagName.toLowerCase()=='p'&&browser.gecko&&domUtils.removeDirtyAttr(start);}}}else{evt.preventDefault?evt.preventDefault():evt.returnValue=false;if(!range.collapsed){range.deleteContents();start=range.startContainer;if(start.nodeType==1&&(start=start.childNodes[range.startOffset])){while(start.nodeType==1){if(dtd.$empty[start.tagName]){range.setStartBefore(start).setCursor();if(me.undoManger){me.undoManger.save();}return false;}if(!start.firstChild){var br=range.document.createElement('br');start.appendChild(br);range.setStart(start,0).setCursor();if(me.undoManger){me.undoManger.save();}return false;}start=start.firstChild;}if(start===range.startContainer.childNodes[range.startOffset]){br=range.document.createElement('br');range.insertNode(br).setCursor();}else{range.setStart(start,0).setCursor();}}else{br=range.document.createElement('br');range.insertNode(br).setStartAfter(br).setCursor();}}else{br=range.document.createElement('br');range.insertNode(br);var parent=br.parentNode;if(parent.lastChild===br){br.parentNode.insertBefore(br.cloneNode(true),br);range.setStartBefore(br);}else{range.setStartAfter(br);}range.setCursor();}}}});};// plugins/keystrokes.js
/* 处理特殊键的兼容性问题 */UE.plugins['keystrokes']=function(){var me=this;var collapsed=true;me.addListener('keydown',function(type,evt){var keyCode=evt.keyCode||evt.which,rng=me.selection.getRange();//处理全选的情况
if(!rng.collapsed&&!(evt.ctrlKey||evt.shiftKey||evt.altKey||evt.metaKey)&&(keyCode>=65&&keyCode<=90||keyCode>=48&&keyCode<=57||keyCode>=96&&keyCode<=111||{13:1,8:1,46:1}[keyCode])){var tmpNode=rng.startContainer;if(domUtils.isFillChar(tmpNode)){rng.setStartBefore(tmpNode);}tmpNode=rng.endContainer;if(domUtils.isFillChar(tmpNode)){rng.setEndAfter(tmpNode);}rng.txtToElmBoundary();//结束边界可能放到了br的前边，要把br包含进来
// x[xxx]<br/>
if(rng.endContainer&&rng.endContainer.nodeType==1){tmpNode=rng.endContainer.childNodes[rng.endOffset];if(tmpNode&&domUtils.isBr(tmpNode)){rng.setEndAfter(tmpNode);}}if(rng.startOffset==0){tmpNode=rng.startContainer;if(domUtils.isBoundaryNode(tmpNode,'firstChild')){tmpNode=rng.endContainer;if(rng.endOffset==(tmpNode.nodeType==3?tmpNode.nodeValue.length:tmpNode.childNodes.length)&&domUtils.isBoundaryNode(tmpNode,'lastChild')){me.fireEvent('saveScene');me.body.innerHTML='<p>'+(browser.ie?'':'<br/>')+'</p>';rng.setStart(me.body.firstChild,0).setCursor(false,true);me._selectionChange();return;}}}}//处理backspace
if(keyCode==keymap.Backspace){rng=me.selection.getRange();collapsed=rng.collapsed;if(me.fireEvent('delkeydown',evt)){return;}var start,end;//避免按两次删除才能生效的问题
if(rng.collapsed&&rng.inFillChar()){start=rng.startContainer;if(domUtils.isFillChar(start)){rng.setStartBefore(start).shrinkBoundary(true).collapse(true);domUtils.remove(start);}else{start.nodeValue=start.nodeValue.replace(new RegExp('^'+domUtils.fillChar),'');rng.startOffset--;rng.collapse(true).select(true);}}//解决选中control元素不能删除的问题
if(start=rng.getClosedNode()){me.fireEvent('saveScene');rng.setStartBefore(start);domUtils.remove(start);rng.setCursor();me.fireEvent('saveScene');domUtils.preventDefault(evt);return;}//阻止在table上的删除
if(!browser.ie){start=domUtils.findParentByTagName(rng.startContainer,'table',true);end=domUtils.findParentByTagName(rng.endContainer,'table',true);if(start&&!end||!start&&end||start!==end){evt.preventDefault();return;}}}//处理tab键的逻辑
if(keyCode==keymap.Tab){//不处理以下标签
var excludeTagNameForTabKey={'ol':1,'ul':1,'table':1};//处理组件里的tab按下事件
if(me.fireEvent('tabkeydown',evt)){domUtils.preventDefault(evt);return;}var range=me.selection.getRange();me.fireEvent('saveScene');for(var i=0,txt='',tabSize=me.options.tabSize||4,tabNode=me.options.tabNode||'&nbsp;';i<tabSize;i++){txt+=tabNode;}var span=me.document.createElement('span');span.innerHTML=txt+domUtils.fillChar;if(range.collapsed){range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var filterFn=function filterFn(node){return domUtils.isBlockElm(node)&&!excludeTagNameForTabKey[node.tagName.toLowerCase()];};//普通的情况
start=domUtils.findParent(range.startContainer,filterFn,true);end=domUtils.findParent(range.endContainer,filterFn,true);if(start&&end&&start===end){range.deleteContents();range.insertNode(span.cloneNode(true).firstChild).setCursor(true);}else{var bookmark=range.createBookmark();range.enlarge(true);var bookmark2=range.createBookmark(),current=domUtils.getNextDomNode(bookmark2.start,false,filterFn);while(current&&!(domUtils.getPosition(current,bookmark2.end)&domUtils.POSITION_FOLLOWING)){current.insertBefore(span.cloneNode(true).firstChild,current.firstChild);current=domUtils.getNextDomNode(current,false,filterFn);}range.moveToBookmark(bookmark2).moveToBookmark(bookmark).select();}}domUtils.preventDefault(evt);}//trace:1634
//ff的del键在容器空的时候，也会删除
if(browser.gecko&&keyCode==46){range=me.selection.getRange();if(range.collapsed){start=range.startContainer;if(domUtils.isEmptyBlock(start)){var parent=start.parentNode;while(domUtils.getChildCount(parent)==1&&!domUtils.isBody(parent)){start=parent;parent=parent.parentNode;}if(start===parent.lastChild)evt.preventDefault();return;}}}});me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which,rng,me=this;if(keyCode==keymap.Backspace){if(me.fireEvent('delkeyup')){return;}rng=me.selection.getRange();if(rng.collapsed){var tmpNode,autoClearTagName=['h1','h2','h3','h4','h5','h6'];if(tmpNode=domUtils.findParentByTagName(rng.startContainer,autoClearTagName,true)){if(domUtils.isEmptyBlock(tmpNode)){var pre=tmpNode.previousSibling;if(pre&&pre.nodeName!='TABLE'){domUtils.remove(tmpNode);rng.setStartAtLast(pre).setCursor(false,true);return;}else{var next=tmpNode.nextSibling;if(next&&next.nodeName!='TABLE'){domUtils.remove(tmpNode);rng.setStartAtFirst(next).setCursor(false,true);return;}}}}//处理当删除到body时，要重新给p标签展位
if(domUtils.isBody(rng.startContainer)){var tmpNode=domUtils.createElement(me.document,'p',{'innerHTML':browser.ie?domUtils.fillChar:'<br/>'});rng.insertNode(tmpNode).setStart(tmpNode,0).setCursor(false,true);}}//chrome下如果删除了inline标签，浏览器会有记忆，在输入文字还是会套上刚才删除的标签，所以这里再选一次就不会了
if(!collapsed&&(rng.startContainer.nodeType==3||rng.startContainer.nodeType==1&&domUtils.isEmptyBlock(rng.startContainer))){if(browser.ie){var span=rng.document.createElement('span');rng.insertNode(span).setStartBefore(span).collapse(true);rng.select();domUtils.remove(span);}else{rng.select();}}}});};// plugins/fiximgclick.js
///import core
///commands 修复chrome下图片不能点击的问题，出现八个角可改变大小
///commandsName  FixImgClick
///commandsTitle  修复chrome下图片不能点击的问题，出现八个角可改变大小
//修复chrome下图片不能点击的问题，出现八个角可改变大小
UE.plugins['fiximgclick']=function(){var elementUpdated=false;function Scale(){this.editor=null;this.resizer=null;this.cover=null;this.doc=document;this.prePos={x:0,y:0};this.startPos={x:0,y:0};}(function(){var rect=[//[left, top, width, height]
[0,0,-1,-1],[0,0,0,-1],[0,0,1,-1],[0,0,-1,0],[0,0,1,0],[0,0,-1,1],[0,0,0,1],[0,0,1,1]];Scale.prototype={init:function init(editor){var me=this;me.editor=editor;me.startPos=this.prePos={x:0,y:0};me.dragId=-1;var hands=[],cover=me.cover=document.createElement('div'),resizer=me.resizer=document.createElement('div');cover.id=me.editor.ui.id+'_imagescale_cover';cover.style.cssText='position:absolute;display:none;z-index:'+me.editor.options.zIndex+';filter:alpha(opacity=0); opacity:0;background:#CCC;';domUtils.on(cover,'mousedown click',function(){me.hide();});for(i=0;i<8;i++){hands.push('<span class="edui-editor-imagescale-hand'+i+'"></span>');}resizer.id=me.editor.ui.id+'_imagescale';resizer.className='edui-editor-imagescale';resizer.innerHTML=hands.join('');resizer.style.cssText+=';display:none;border:1px solid #3b77ff;z-index:'+me.editor.options.zIndex+';';me.editor.ui.getDom().appendChild(cover);me.editor.ui.getDom().appendChild(resizer);me.initStyle();me.initEvents();},initStyle:function initStyle(){utils.cssRule('imagescale','.edui-editor-imagescale{display:none;position:absolute;border:1px solid #38B2CE;cursor:hand;-webkit-box-sizing: content-box;-moz-box-sizing: content-box;box-sizing: content-box;}'+'.edui-editor-imagescale span{position:absolute;width:6px;height:6px;overflow:hidden;font-size:0px;display:block;background-color:#3C9DD0;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand0{cursor:nw-resize;top:0;margin-top:-4px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand1{cursor:n-resize;top:0;margin-top:-4px;left:50%;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand2{cursor:ne-resize;top:0;margin-top:-4px;left:100%;margin-left:-3px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand3{cursor:w-resize;top:50%;margin-top:-4px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand4{cursor:e-resize;top:50%;margin-top:-4px;left:100%;margin-left:-3px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand5{cursor:sw-resize;top:100%;margin-top:-3px;left:0;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand6{cursor:s-resize;top:100%;margin-top:-3px;left:50%;margin-left:-4px;}'+'.edui-editor-imagescale .edui-editor-imagescale-hand7{cursor:se-resize;top:100%;margin-top:-3px;left:100%;margin-left:-3px;}');},initEvents:function initEvents(){var me=this;me.startPos.x=me.startPos.y=0;me.isDraging=false;},_eventHandler:function _eventHandler(e){var me=this;switch(e.type){case'mousedown':var hand=e.target||e.srcElement,hand;if(hand.className.indexOf('edui-editor-imagescale-hand')!=-1&&me.dragId==-1){me.dragId=hand.className.slice(-1);me.startPos.x=me.prePos.x=e.clientX;me.startPos.y=me.prePos.y=e.clientY;domUtils.on(me.doc,'mousemove',me.proxy(me._eventHandler,me));}break;case'mousemove':if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.prePos.x=e.clientX;me.prePos.y=e.clientY;elementUpdated=true;me.updateTargetElement();}break;case'mouseup':if(me.dragId!=-1){me.updateContainerStyle(me.dragId,{x:e.clientX-me.prePos.x,y:e.clientY-me.prePos.y});me.updateTargetElement();if(me.target.parentNode)me.attachTo(me.target);me.dragId=-1;}domUtils.un(me.doc,'mousemove',me.proxy(me._eventHandler,me));//修复只是点击挪动点，但没有改变大小，不应该触发contentchange
if(elementUpdated){elementUpdated=false;me.editor.fireEvent('contentchange');}break;default:break;}},updateTargetElement:function updateTargetElement(){var me=this;domUtils.setStyles(me.target,{'width':me.resizer.style.width,'height':me.resizer.style.height});me.target.width=parseInt(me.resizer.style.width);me.target.height=parseInt(me.resizer.style.height);me.attachTo(me.target);},updateContainerStyle:function updateContainerStyle(dir,offset){var me=this,dom=me.resizer,tmp;if(rect[dir][0]!=0){tmp=parseInt(dom.style.left)+offset.x;dom.style.left=me._validScaledProp('left',tmp)+'px';}if(rect[dir][1]!=0){tmp=parseInt(dom.style.top)+offset.y;dom.style.top=me._validScaledProp('top',tmp)+'px';}if(rect[dir][2]!=0){tmp=dom.clientWidth+rect[dir][2]*offset.x;dom.style.width=me._validScaledProp('width',tmp)+'px';}if(rect[dir][3]!=0){tmp=dom.clientHeight+rect[dir][3]*offset.y;dom.style.height=me._validScaledProp('height',tmp)+'px';}},_validScaledProp:function _validScaledProp(prop,value){var ele=this.resizer,wrap=document;value=isNaN(value)?0:value;switch(prop){case'left':return value<0?0:value+ele.clientWidth>wrap.clientWidth?wrap.clientWidth-ele.clientWidth:value;case'top':return value<0?0:value+ele.clientHeight>wrap.clientHeight?wrap.clientHeight-ele.clientHeight:value;case'width':return value<=0?1:value+ele.offsetLeft>wrap.clientWidth?wrap.clientWidth-ele.offsetLeft:value;case'height':return value<=0?1:value+ele.offsetTop>wrap.clientHeight?wrap.clientHeight-ele.offsetTop:value;}},hideCover:function hideCover(){this.cover.style.display='none';},showCover:function showCover(){var me=this,editorPos=domUtils.getXY(me.editor.ui.getDom()),iframePos=domUtils.getXY(me.editor.iframe);domUtils.setStyles(me.cover,{'width':me.editor.iframe.offsetWidth+'px','height':me.editor.iframe.offsetHeight+'px','top':iframePos.y-editorPos.y+'px','left':iframePos.x-editorPos.x+'px','position':'absolute','display':''});},show:function show(targetObj){var me=this;me.resizer.style.display='block';if(targetObj)me.attachTo(targetObj);domUtils.on(this.resizer,'mousedown',me.proxy(me._eventHandler,me));domUtils.on(me.doc,'mouseup',me.proxy(me._eventHandler,me));me.showCover();me.editor.fireEvent('afterscaleshow',me);me.editor.fireEvent('saveScene');},hide:function hide(){var me=this;me.hideCover();me.resizer.style.display='none';domUtils.un(me.resizer,'mousedown',me.proxy(me._eventHandler,me));domUtils.un(me.doc,'mouseup',me.proxy(me._eventHandler,me));me.editor.fireEvent('afterscalehide',me);},proxy:function proxy(fn,context){return function(e){return fn.apply(context||this,arguments);};},attachTo:function attachTo(targetObj){var me=this,target=me.target=targetObj,resizer=this.resizer,imgPos=domUtils.getXY(target),iframePos=domUtils.getXY(me.editor.iframe),editorPos=domUtils.getXY(resizer.parentNode);domUtils.setStyles(resizer,{'width':target.width+'px','height':target.height+'px','left':iframePos.x+imgPos.x-me.editor.document.body.scrollLeft-editorPos.x-parseInt(resizer.style.borderLeftWidth)+'px','top':iframePos.y+imgPos.y-me.editor.document.body.scrollTop-editorPos.y-parseInt(resizer.style.borderTopWidth)+'px'});}};})();return function(){var me=this,imageScale;me.setOpt('imageScaleEnabled',true);if(!browser.ie&&me.options.imageScaleEnabled){me.addListener('click',function(type,e){var range=me.selection.getRange(),img=range.getClosedNode();if(img&&img.tagName=='IMG'&&me.body.contentEditable!="false"){if(img.className.indexOf("edui-faked-music")!=-1||img.getAttribute("anchorname")||domUtils.hasClass(img,'loadingclass')||domUtils.hasClass(img,'loaderrorclass')){return;}if(!imageScale){imageScale=new Scale();imageScale.init(me);me.ui.getDom().appendChild(imageScale.resizer);var _keyDownHandler=function _keyDownHandler(e){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(imageScale.target).select();},_mouseDownHandler=function _mouseDownHandler(e){var ele=e.target||e.srcElement;if(ele&&(ele.className===undefined||ele.className.indexOf('edui-editor-imagescale')==-1)){_keyDownHandler(e);}},timer;me.addListener('afterscaleshow',function(e){me.addListener('beforekeydown',_keyDownHandler);me.addListener('beforemousedown',_mouseDownHandler);domUtils.on(document,'keydown',_keyDownHandler);domUtils.on(document,'mousedown',_mouseDownHandler);me.selection.getNative().removeAllRanges();});me.addListener('afterscalehide',function(e){me.removeListener('beforekeydown',_keyDownHandler);me.removeListener('beforemousedown',_mouseDownHandler);domUtils.un(document,'keydown',_keyDownHandler);domUtils.un(document,'mousedown',_mouseDownHandler);var target=imageScale.target;if(target.parentNode){me.selection.getRange().selectNode(target).select();}});//TODO 有iframe的情况，mousedown不能往下传。。
domUtils.on(imageScale.resizer,'mousedown',function(e){me.selection.getNative().removeAllRanges();var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf('edui-editor-imagescale-hand')==-1){timer=setTimeout(function(){imageScale.hide();if(imageScale.target)me.selection.getRange().selectNode(ele).select();},200);}});domUtils.on(imageScale.resizer,'mouseup',function(e){var ele=e.target||e.srcElement;if(ele&&ele.className.indexOf('edui-editor-imagescale-hand')==-1){clearTimeout(timer);}});}imageScale.show(img);}else{if(imageScale&&imageScale.resizer.style.display!='none')imageScale.hide();}});}if(browser.webkit){me.addListener('click',function(type,e){if(e.target.tagName=='IMG'&&me.body.contentEditable!="false"){var range=new dom.Range(me.document);range.selectNode(e.target).select();}});}};}();// plugins/autolink.js
///import core
///commands 为非ie浏览器自动添加a标签
///commandsName  AutoLink
///commandsTitle  自动增加链接
/**
     * @description 为非ie浏览器自动添加a标签
     * @author zhanyi
     */UE.plugin.register('autolink',function(){return !browser.ie?{bindEvents:{'reset':function reset(){},'keydown':function keydown(type,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var sel=me.selection.getNative(),range=sel.getRangeAt(0).cloneRange(),offset,charCode;var start=range.startContainer;while(start.nodeType==1&&range.startOffset>0){start=range.startContainer.childNodes[range.startOffset-1];if(!start){break;}range.setStart(start,start.nodeType==1?start.childNodes.length:start.nodeValue.length);range.collapse(true);start=range.startContainer;}do{if(range.startOffset==0){start=range.startContainer.previousSibling;while(start&&start.nodeType==1){start=start.lastChild;}if(!start||domUtils.isFillChar(start)){break;}offset=start.nodeValue.length;}else{start=range.startContainer;offset=range.startOffset;}range.setStart(start,offset-1);charCode=range.toString().charCodeAt(0);}while(charCode!=160&&charCode!=32);if(range.toString().replace(new RegExp(domUtils.fillChar,'g'),'').match(/(?:https?:\/\/|ssh:\/\/|ftp:\/\/|file:\/|www\.)/i)){while(range.toString().length){if(/^(?:https?:\/\/|ssh:\/\/|ftp:\/\/|file:\/|www\.)/i.test(range.toString())){break;}try{range.setStart(range.startContainer,range.startOffset+1);}catch(e){//trace:2121
var start=range.startContainer;while(!(next=start.nextSibling)){if(domUtils.isBody(start)){return;}start=start.parentNode;}range.setStart(next,0);}}//range的开始边界已经在a标签里的不再处理
if(domUtils.findParentByTagName(range.startContainer,'a',true)){return;}var a=me.document.createElement('a'),text=me.document.createTextNode(' '),href;me.undoManger&&me.undoManger.save();a.appendChild(range.extractContents());a.href=a.innerHTML=a.innerHTML.replace(/<[^>]+>/g,'');href=a.getAttribute("href").replace(new RegExp(domUtils.fillChar,'g'),'');href=/^(?:https?:\/\/)/ig.test(href)?href:"http://"+href;a.setAttribute('_src',utils.html(href));a.href=utils.html(href);range.insertNode(a);a.parentNode.insertBefore(text,a.nextSibling);range.setStart(text,0);range.collapse(true);sel.removeAllRanges();sel.addRange(range);me.undoManger&&me.undoManger.save();}}}}}:{};},function(){var keyCodes={37:1,38:1,39:1,40:1,13:1,32:1};function checkIsCludeLink(node){if(node.nodeType==3){return null;}if(node.nodeName=='A'){return node;}var lastChild=node.lastChild;while(lastChild){if(lastChild.nodeName=='A'){return lastChild;}if(lastChild.nodeType==3){if(domUtils.isWhitespace(lastChild)){lastChild=lastChild.previousSibling;continue;}return null;}lastChild=lastChild.lastChild;}}browser.ie&&this.addListener('keyup',function(cmd,evt){var me=this,keyCode=evt.keyCode;if(keyCodes[keyCode]){var rng=me.selection.getRange();var start=rng.startContainer;if(keyCode==13){while(start&&!domUtils.isBody(start)&&!domUtils.isBlockElm(start)){start=start.parentNode;}if(start&&!domUtils.isBody(start)&&start.nodeName=='P'){var pre=start.previousSibling;if(pre&&pre.nodeType==1){var pre=checkIsCludeLink(pre);if(pre&&!pre.getAttribute('_href')){domUtils.remove(pre,true);}}}}else if(keyCode==32){if(start.nodeType==3&&/^\s$/.test(start.nodeValue)){start=start.previousSibling;if(start&&start.nodeName=='A'&&!start.getAttribute('_href')){domUtils.remove(start,true);}}}else{start=domUtils.findParentByTagName(start,'a',true);if(start&&!start.getAttribute('_href')){var bk=rng.createBookmark();domUtils.remove(start,true);rng.moveToBookmark(bk).select(true);}}}});});// plugins/autoheight.js
///import core
///commands 当输入内容超过编辑器高度时，编辑器自动增高
///commandsName  AutoHeight,autoHeightEnabled
///commandsTitle  自动增高
/**
     * @description 自动伸展
     * @author zhanyi
     */UE.plugins['autoheight']=function(){var me=this;//提供开关，就算加载也可以关闭
me.autoHeightEnabled=me.options.autoHeightEnabled!==false;if(!me.autoHeightEnabled){return;}var bakOverflow,lastHeight=0,options=me.options,currentHeight,timer;function adjustHeight(){var me=this;clearTimeout(timer);if(isFullscreen)return;if(!me.queryCommandState||me.queryCommandState&&me.queryCommandState('source')!=1){timer=setTimeout(function(){var node=me.body.lastChild;while(node&&node.nodeType!=1){node=node.previousSibling;}if(node&&node.nodeType==1){node.style.clear='both';currentHeight=Math.max(domUtils.getXY(node).y+node.offsetHeight+25,Math.max(options.minFrameHeight,options.initialFrameHeight));if(currentHeight!=lastHeight){if(currentHeight!==parseInt(me.iframe.parentNode.style.height)){me.iframe.parentNode.style.height=currentHeight+'px';}me.body.style.height=currentHeight+'px';lastHeight=currentHeight;}domUtils.removeStyle(node,'clear');}},50);}}var isFullscreen;me.addListener('fullscreenchanged',function(cmd,f){isFullscreen=f;});me.addListener('destroy',function(){me.removeListener('contentchange afterinserthtml keyup mouseup',adjustHeight);});me.enableAutoHeight=function(){var me=this;if(!me.autoHeightEnabled){return;}var doc=me.document;me.autoHeightEnabled=true;bakOverflow=doc.body.style.overflowY;doc.body.style.overflowY='hidden';me.addListener('contentchange afterinserthtml keyup mouseup',adjustHeight);//ff不给事件算得不对
setTimeout(function(){adjustHeight.call(me);},browser.gecko?100:0);me.fireEvent('autoheightchanged',me.autoHeightEnabled);};me.disableAutoHeight=function(){me.body.style.overflowY=bakOverflow||'';me.removeListener('contentchange',adjustHeight);me.removeListener('keyup',adjustHeight);me.removeListener('mouseup',adjustHeight);me.autoHeightEnabled=false;me.fireEvent('autoheightchanged',me.autoHeightEnabled);};me.on('setHeight',function(){me.disableAutoHeight();});me.addListener('ready',function(){me.enableAutoHeight();//trace:1764
var timer;domUtils.on(browser.ie?me.body:me.document,browser.webkit?'dragover':'drop',function(){clearTimeout(timer);timer=setTimeout(function(){//trace:3681
adjustHeight.call(me);},100);});//修复内容过多时，回到顶部，顶部内容被工具栏遮挡问题
var lastScrollY;window.onscroll=function(){if(lastScrollY===null){lastScrollY=this.scrollY;}else if(this.scrollY==0&&lastScrollY!=0){me.window.scrollTo(0,0);lastScrollY=null;}};});};// plugins/autofloat.js
///import core
///commands 悬浮工具栏
///commandsName  AutoFloat,autoFloatEnabled
///commandsTitle  悬浮工具栏
/**
     *  modified by chengchao01
     *  注意： 引入此功能后，在IE6下会将body的背景图片覆盖掉！
     */UE.plugins['autofloat']=function(){var me=this,lang=me.getLang();me.setOpt({topOffset:0});var optsAutoFloatEnabled=me.options.autoFloatEnabled!==false,topOffset=me.options.topOffset;//如果不固定toolbar的位置，则直接退出
if(!optsAutoFloatEnabled){return;}var uiUtils=UE.ui.uiUtils,LteIE6=browser.ie&&browser.version<=6,quirks=browser.quirks;function checkHasUI(){if(!UE.ui){alert(lang.autofloatMsg);return 0;}return 1;}function fixIE6FixedPos(){var docStyle=document.body.style;docStyle.backgroundImage='url("about:blank")';docStyle.backgroundAttachment='fixed';}var bakCssText,placeHolder=document.createElement('div'),toolbarBox,orgTop,getPosition,flag=true;//ie7模式下需要偏移
function setFloating(){var toobarBoxPos=domUtils.getXY(toolbarBox),origalFloat=domUtils.getComputedStyle(toolbarBox,'position'),origalLeft=domUtils.getComputedStyle(toolbarBox,'left');toolbarBox.style.width=toolbarBox.offsetWidth+'px';toolbarBox.style.zIndex=me.options.zIndex*1+1;toolbarBox.parentNode.insertBefore(placeHolder,toolbarBox);if(LteIE6||quirks&&browser.ie){if(toolbarBox.style.position!='absolute'){toolbarBox.style.position='absolute';}toolbarBox.style.top=(document.body.scrollTop||document.documentElement.scrollTop)-orgTop+topOffset+'px';}else{if(browser.ie7Compat&&flag){flag=false;toolbarBox.style.left=domUtils.getXY(toolbarBox).x-document.documentElement.getBoundingClientRect().left+2+'px';}if(toolbarBox.style.position!='fixed'){toolbarBox.style.position='fixed';toolbarBox.style.top=topOffset+"px";(origalFloat=='absolute'||origalFloat=='relative')&&parseFloat(origalLeft)&&(toolbarBox.style.left=toobarBoxPos.x+'px');}}}function unsetFloating(){flag=true;if(placeHolder.parentNode){placeHolder.parentNode.removeChild(placeHolder);}toolbarBox.style.cssText=bakCssText;}function updateFloating(){var rect3=getPosition(me.container);var offset=me.options.toolbarTopOffset||0;if(rect3.top<0&&rect3.bottom-toolbarBox.offsetHeight>offset){setFloating();}else{unsetFloating();}}var defer_updateFloating=utils.defer(function(){updateFloating();},browser.ie?200:100,true);me.addListener('destroy',function(){domUtils.un(window,['scroll','resize'],updateFloating);me.removeListener('keydown',defer_updateFloating);});me.addListener('ready',function(){if(checkHasUI(me)){//加载了ui组件，但在new时，没有加载ui，导致编辑器实例上没有ui类，所以这里做判断
if(!me.ui){return;}getPosition=uiUtils.getClientRect;toolbarBox=me.ui.getDom('toolbarbox');orgTop=getPosition(toolbarBox).top;bakCssText=toolbarBox.style.cssText;placeHolder.style.height=toolbarBox.offsetHeight+'px';if(LteIE6){fixIE6FixedPos();}domUtils.on(window,['scroll','resize'],updateFloating);me.addListener('keydown',defer_updateFloating);me.addListener('beforefullscreenchange',function(t,enabled){if(enabled){unsetFloating();}});me.addListener('fullscreenchanged',function(t,enabled){if(!enabled){updateFloating();}});me.addListener('sourcemodechanged',function(t,enabled){setTimeout(function(){updateFloating();},0);});me.addListener("clearDoc",function(){setTimeout(function(){updateFloating();},0);});}});};// plugins/video.js
/**
     * video插件， 为UEditor提供视频插入支持
     * @file
     * @since 1.2.6.1
     */UE.plugins['video']=function(){var me=this;/**
         * 创建插入视频字符窜
         * @param url 视频地址
         * @param width 视频宽度
         * @param height 视频高度
         * @param align 视频对齐
         * @param toEmbed 是否以flash代替显示
         * @param addParagraph  是否需要添加P 标签
         */function creatInsertStr(url,width,height,id,align,classname,type){url=utils.unhtmlForUrl(url);align=utils.unhtml(align);classname=utils.unhtml(classname);width=parseInt(width,10)||0;height=parseInt(height,10)||0;var str;switch(type){case'image':str='<img '+(id?'id="'+id+'"':'')+' width="'+width+'" height="'+height+'" _url="'+url+'" class="'+classname.replace(/\bvideo-js\b/,'')+'"'+' src="'+me.options.UEDITOR_HOME_URL+'themes/default/images/spacer.gif" style="background:url('+me.options.UEDITOR_HOME_URL+'themes/default/images/videologo.gif) no-repeat center center; border:1px solid gray;'+(align?'float:'+align+';':'')+'" />';break;case'embed':str='<embed type="application/x-shockwave-flash" class="'+classname+'" pluginspage="http://www.macromedia.com/go/getflashplayer"'+' src="'+utils.html(url)+'" width="'+width+'" height="'+height+'"'+(align?' style="float:'+align+'"':'')+' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >';break;case'video':var ext=url.substr(url.lastIndexOf('.')+1);if(ext=='ogv')ext='ogg';str='<video'+(id?' id="'+id+'"':'')+' class="'+classname+' video-js" '+(align?' style="float:'+align+'"':'')+' controls preload="none" width="'+width+'" height="'+height+'" src="'+url+'" data-setup="{}">'+'<source src="'+url+'" type="video/'+ext+'" /></video>';break;}return str;}function switchImgAndVideo(root,img2video){utils.each(root.getNodesByTagName(img2video?'img':'embed video'),function(node){var className=node.getAttr('class');if(className&&className.indexOf('edui-faked-video')!=-1){var html=creatInsertStr(img2video?node.getAttr('_url'):node.getAttr('src'),node.getAttr('width'),node.getAttr('height'),null,node.getStyle('float')||'',className,img2video?'embed':'image');node.parentNode.replaceChild(UE.uNode.createElement(html),node);}if(className&&className.indexOf('edui-upload-video')!=-1){var html=creatInsertStr(img2video?node.getAttr('_url'):node.getAttr('src'),node.getAttr('width'),node.getAttr('height'),null,node.getStyle('float')||'',className,img2video?'video':'image');node.parentNode.replaceChild(UE.uNode.createElement(html),node);}});}me.addOutputRule(function(root){switchImgAndVideo(root,true);});me.addInputRule(function(root){switchImgAndVideo(root);});/**
         * 插入视频
         * @command insertvideo
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @param { Object } videoAttr 键值对对象， 描述一个视频的所有属性
         * @example
         * ```javascript
         *
         * var videoAttr = {
         *      //视频地址
         *      url: 'http://www.youku.com/xxx',
         *      //视频宽高值， 单位px
         *      width: 200,
         *      height: 100
         * };
         *
         * //editor 是编辑器实例
         * //向编辑器插入单个视频
         * editor.execCommand( 'insertvideo', videoAttr );
         * ```
         */ /**
         * 插入视频
         * @command insertvideo
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @param { Array } videoArr 需要插入的视频的数组， 其中的每一个元素都是一个键值对对象， 描述了一个视频的所有属性
         * @example
         * ```javascript
         *
         * var videoAttr1 = {
         *      //视频地址
         *      url: 'http://www.youku.com/xxx',
         *      //视频宽高值， 单位px
         *      width: 200,
         *      height: 100
         * },
         * videoAttr2 = {
         *      //视频地址
         *      url: 'http://www.youku.com/xxx',
         *      //视频宽高值， 单位px
         *      width: 200,
         *      height: 100
         * }
         *
         * //editor 是编辑器实例
         * //该方法将会向编辑器内插入两个视频
         * editor.execCommand( 'insertvideo', [ videoAttr1, videoAttr2 ] );
         * ```
         */ /**
         * 查询当前光标所在处是否是一个视频
         * @command insertvideo
         * @method queryCommandState
         * @param { String } cmd 需要查询的命令字符串
         * @return { int } 如果当前光标所在处的元素是一个视频对象， 则返回1，否则返回0
         * @example
         * ```javascript
         *
         * //editor 是编辑器实例
         * editor.queryCommandState( 'insertvideo' );
         * ```
         */me.commands["insertvideo"]={execCommand:function execCommand(cmd,videoObjs,type){videoObjs=utils.isArray(videoObjs)?videoObjs:[videoObjs];var html=[],id='tmpVedio',cl;for(var i=0,vi,len=videoObjs.length;i<len;i++){vi=videoObjs[i];cl=type=='upload'?'edui-upload-video video-js vjs-default-skin':'edui-faked-video';html.push(creatInsertStr(vi.url,vi.width||420,vi.height||280,id+i,null,cl,'image'));}me.execCommand("inserthtml",html.join(""),true);var rng=this.selection.getRange();for(var i=0,len=videoObjs.length;i<len;i++){var img=this.document.getElementById('tmpVedio'+i);domUtils.removeAttributes(img,'id');rng.selectNode(img).select();me.execCommand('imagefloat',videoObjs[i].align);}},queryCommandState:function queryCommandState(){var img=me.selection.getRange().getClosedNode(),flag=img&&(img.className=="edui-faked-video"||img.className.indexOf("edui-upload-video")!=-1);return flag?1:0;}};};// plugins/table.core.js
/**
     * Created with JetBrains WebStorm.
     * User: taoqili
     * Date: 13-1-18
     * Time: 上午11:09
     * To change this template use File | Settings | File Templates.
     */ /**
     * UE表格操作类
     * @param table
     * @constructor
     */(function(){var UETable=UE.UETable=function(table){this.table=table;this.indexTable=[];this.selectedTds=[];this.cellsRange={};this.update(table);};//===以下为静态工具方法===
UETable.removeSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.removeClasses(cell,"selectTdClass");});};UETable.addSelectedClass=function(cells){utils.each(cells,function(cell){domUtils.addClass(cell,"selectTdClass");});};UETable.isEmptyBlock=function(node){var reg=new RegExp(domUtils.fillChar,'g');if(node[browser.ie?'innerText':'textContent'].replace(/^\s*$/,'').replace(reg,'').length>0){return 0;}for(var i in dtd.$isNotEmpty){if(dtd.$isNotEmpty.hasOwnProperty(i)){if(node.getElementsByTagName(i).length){return 0;}}}return 1;};UETable.getWidth=function(cell){if(!cell)return 0;return parseInt(domUtils.getComputedStyle(cell,"width"),10);};/**
         * 获取单元格或者单元格组的“对齐”状态。 如果当前的检测对象是一个单元格组， 只有在满足所有单元格的 水平和竖直 对齐属性都相同的
         * 条件时才会返回其状态值，否则将返回null； 如果当前只检测了一个单元格， 则直接返回当前单元格的对齐状态；
         * @param table cell or table cells , 支持单个单元格dom对象 或者 单元格dom对象数组
         * @return { align: 'left' || 'right' || 'center', valign: 'top' || 'middle' || 'bottom' } 或者 null
         */UETable.getTableCellAlignState=function(cells){!utils.isArray(cells)&&(cells=[cells]);var result={},status=['align','valign'],tempStatus=null,isSame=true;//状态是否相同
utils.each(cells,function(cellNode){utils.each(status,function(currentState){tempStatus=cellNode.getAttribute(currentState);if(!result[currentState]&&tempStatus){result[currentState]=tempStatus;}else if(!result[currentState]||tempStatus!==result[currentState]){isSame=false;return false;}});return isSame;});return isSame?result:null;};/**
         * 根据当前选区获取相关的table信息
         * @return {Object}
         */UETable.getTableItemsByRange=function(editor){var start=editor.selection.getStart();//ff下会选中bookmark
if(start&&start.id&&start.id.indexOf('_baidu_bookmark_start_')===0&&start.nextSibling){start=start.nextSibling;}//在table或者td边缘有可能存在选中tr的情况
var cell=start&&domUtils.findParentByTagName(start,["td","th"],true),tr=cell&&cell.parentNode,caption=start&&domUtils.findParentByTagName(start,'caption',true),table=caption?caption.parentNode:tr&&tr.parentNode.parentNode;return {cell:cell,tr:tr,table:table,caption:caption};};UETable.getUETableBySelected=function(editor){var table=UETable.getTableItemsByRange(editor).table;if(table&&table.ueTable&&table.ueTable.selectedTds.length){return table.ueTable;}return null;};UETable.getDefaultValue=function(editor,table){var borderMap={thin:'0px',medium:'1px',thick:'2px'},tableBorder,tdPadding,tdBorder,tmpValue;if(!table){table=editor.document.createElement('table');table.insertRow(0).insertCell(0).innerHTML='xxx';editor.body.appendChild(table);var td=table.getElementsByTagName('td')[0];tmpValue=domUtils.getComputedStyle(table,'border-left-width');tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'padding-left');tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'border-left-width');tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);domUtils.remove(table);return {tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}else{td=table.getElementsByTagName('td')[0];tmpValue=domUtils.getComputedStyle(table,'border-left-width');tableBorder=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'padding-left');tdPadding=parseInt(borderMap[tmpValue]||tmpValue,10);tmpValue=domUtils.getComputedStyle(td,'border-left-width');tdBorder=parseInt(borderMap[tmpValue]||tmpValue,10);return {tableBorder:tableBorder,tdPadding:tdPadding,tdBorder:tdBorder};}};/**
         * 根据当前点击的td或者table获取索引对象
         * @param tdOrTable
         */UETable.getUETable=function(tdOrTable){var tag=tdOrTable.tagName.toLowerCase();tdOrTable=tag=="td"||tag=="th"||tag=='caption'?domUtils.findParentByTagName(tdOrTable,"table",true):tdOrTable;if(!tdOrTable.ueTable){tdOrTable.ueTable=new UETable(tdOrTable);}return tdOrTable.ueTable;};UETable.cloneCell=function(cell,ignoreMerge,keepPro){if(!cell||utils.isString(cell)){return this.table.ownerDocument.createElement(cell||'td');}var flag=domUtils.hasClass(cell,"selectTdClass");flag&&domUtils.removeClasses(cell,"selectTdClass");var tmpCell=cell.cloneNode(true);if(ignoreMerge){tmpCell.rowSpan=tmpCell.colSpan=1;}//去掉宽高
!keepPro&&domUtils.removeAttributes(tmpCell,'width height');!keepPro&&domUtils.removeAttributes(tmpCell,'style');tmpCell.style.borderLeftStyle="";tmpCell.style.borderTopStyle="";tmpCell.style.borderLeftColor=cell.style.borderRightColor;tmpCell.style.borderLeftWidth=cell.style.borderRightWidth;tmpCell.style.borderTopColor=cell.style.borderBottomColor;tmpCell.style.borderTopWidth=cell.style.borderBottomWidth;flag&&domUtils.addClass(cell,"selectTdClass");return tmpCell;};UETable.prototype={getMaxRows:function getMaxRows(){var rows=this.table.rows,maxLen=1;for(var i=0,row;row=rows[i];i++){var currentMax=1;for(var j=0,cj;cj=row.cells[j++];){currentMax=Math.max(cj.rowSpan||1,currentMax);}maxLen=Math.max(currentMax+i,maxLen);}return maxLen;},/**
             * 获取当前表格的最大列数
             */getMaxCols:function getMaxCols(){var rows=this.table.rows,maxLen=0,cellRows={};for(var i=0,row;row=rows[i];i++){var cellsNum=0;for(var j=0,cj;cj=row.cells[j++];){cellsNum+=cj.colSpan||1;if(cj.rowSpan&&cj.rowSpan>1){for(var k=1;k<cj.rowSpan;k++){if(!cellRows['row_'+(i+k)]){cellRows['row_'+(i+k)]=cj.colSpan||1;}else{cellRows['row_'+(i+k)]++;}}}}cellsNum+=cellRows['row_'+i]||0;maxLen=Math.max(cellsNum,maxLen);}return maxLen;},getCellColIndex:function getCellColIndex(cell){},/**
             * 获取当前cell旁边的单元格，
             * @param cell
             * @param right
             */getHSideCell:function getHSideCell(cell,right){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格
if(!right&&(!len?!cellInfo.colIndex:!range.beginColIndex)||right&&(!len?cellInfo.colIndex==this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!len?cellInfo.rowIndex:range.beginRowIndex;previewColIndex=!right?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex+1:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){}},getTabNextCell:function getTabNextCell(cell,preRowIndex){var cellInfo=this.getCellInfo(cell),rowIndex=preRowIndex||cellInfo.rowIndex,colIndex=cellInfo.colIndex+1+(cellInfo.colSpan-1),nextCell;try{nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){try{rowIndex=rowIndex*1+1;colIndex=0;nextCell=this.getCell(this.indexTable[rowIndex][colIndex].rowIndex,this.indexTable[rowIndex][colIndex].cellIndex);}catch(e){}}return nextCell;},/**
             * 获取视觉上的后置单元格
             * @param cell
             * @param bottom
             */getVSideCell:function getVSideCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格
if(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){}},/**
             * 获取相同结束位置的单元格，xOrY指代了是获取x轴相同还是y轴相同
             */getSameEndPosCells:function getSameEndPosCells(cell,xOrY){try{var flag=xOrY.toLowerCase()==="x",end=domUtils.getXY(cell)[flag?'x':'y']+cell["offset"+(flag?'Width':'Height')],rows=this.table.rows,cells=null,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpEnd=domUtils.getXY(tmpCell)[flag?'x':'y']+tmpCell["offset"+(flag?'Width':'Height')];//对应行的td已经被上面行rowSpan了
if(tmpEnd>end&&flag)break;if(cell==tmpCell||end==tmpEnd){//只获取单一的单元格
//todo 仅获取单一单元格在特定情况下会造成returns为空，从而影响后续的拖拽实现，修正这个。需考虑性能
if(tmpCell[flag?"colSpan":"rowSpan"]==1){returns.push(tmpCell);}if(flag)break;}}}return returns;}catch(e){}},setCellContent:function setCellContent(cell,content){cell.innerHTML=content||(browser.ie?domUtils.fillChar:"<br />");},cloneCell:UETable.cloneCell,/**
             * 获取跟当前单元格的右边竖线为左边的所有未合并单元格
             */getSameStartPosXCells:function getSameStartPosXCells(cell){try{var start=domUtils.getXY(cell).x+cell.offsetWidth,rows=this.table.rows,cells,returns=[];for(var i=0;i<this.rowsNum;i++){cells=rows[i].cells;for(var j=0,tmpCell;tmpCell=cells[j++];){var tmpStart=domUtils.getXY(tmpCell).x;if(tmpStart>start)break;if(tmpStart==start&&tmpCell.colSpan==1){returns.push(tmpCell);break;}}}return returns;}catch(e){}},/**
             * 更新table对应的索引表
             */update:function update(table){this.table=table||this.table;this.selectedTds=[];this.cellsRange={};this.indexTable=[];var rows=this.table.rows,rowsNum=this.getMaxRows(),dNum=rowsNum-rows.length,colsNum=this.getMaxCols();while(dNum--){this.table.insertRow(rows.length);}this.rowsNum=rowsNum;this.colsNum=colsNum;for(var i=0,len=rows.length;i<len;i++){this.indexTable[i]=new Array(colsNum);}//填充索引表
for(var rowIndex=0,row;row=rows[rowIndex];rowIndex++){for(var cellIndex=0,cell,cells=row.cells;cell=cells[cellIndex];cellIndex++){//修正整行被rowSpan时导致的行数计算错误
if(cell.rowSpan>rowsNum){cell.rowSpan=rowsNum;}var colIndex=cellIndex,rowSpan=cell.rowSpan||1,colSpan=cell.colSpan||1;//当已经被上一行rowSpan或者被前一列colSpan了，则跳到下一个单元格进行
while(this.indexTable[rowIndex][colIndex]){colIndex++;}for(var j=0;j<rowSpan;j++){for(var k=0;k<colSpan;k++){this.indexTable[rowIndex+j][colIndex+k]={rowIndex:rowIndex,cellIndex:cellIndex,colIndex:colIndex,rowSpan:rowSpan,colSpan:colSpan};}}}}//修复残缺td
for(j=0;j<rowsNum;j++){for(k=0;k<colsNum;k++){if(this.indexTable[j][k]===undefined){row=rows[j];cell=row.cells[row.cells.length-1];cell=cell?cell.cloneNode(true):this.table.ownerDocument.createElement("td");this.setCellContent(cell);if(cell.colSpan!==1)cell.colSpan=1;if(cell.rowSpan!==1)cell.rowSpan=1;row.appendChild(cell);this.indexTable[j][k]={rowIndex:j,cellIndex:cell.cellIndex,colIndex:k,rowSpan:1,colSpan:1};}}}//当框选后删除行或者列后撤销，需要重建选区。
var tds=domUtils.getElementsByTagName(this.table,"td"),selectTds=[];utils.each(tds,function(td){if(domUtils.hasClass(td,"selectTdClass")){selectTds.push(td);}});if(selectTds.length){var start=selectTds[0],end=selectTds[selectTds.length-1],startInfo=this.getCellInfo(start),endInfo=this.getCellInfo(end);this.selectedTds=selectTds;this.cellsRange={beginRowIndex:startInfo.rowIndex,beginColIndex:startInfo.colIndex,endRowIndex:endInfo.rowIndex+endInfo.rowSpan-1,endColIndex:endInfo.colIndex+endInfo.colSpan-1};}//给第一行设置firstRow的样式名称,在排序图标的样式上使用到
if(!domUtils.hasClass(this.table.rows[0],"firstRow")){domUtils.addClass(this.table.rows[0],"firstRow");for(var i=1;i<this.table.rows.length;i++){domUtils.removeClasses(this.table.rows[i],"firstRow");}}},/**
             * 获取单元格的索引信息
             */getCellInfo:function getCellInfo(cell){if(!cell)return;var cellIndex=cell.cellIndex,rowIndex=cell.parentNode.rowIndex,rowInfo=this.indexTable[rowIndex],numCols=this.colsNum;for(var colIndex=cellIndex;colIndex<numCols;colIndex++){var cellInfo=rowInfo[colIndex];if(cellInfo.rowIndex===rowIndex&&cellInfo.cellIndex===cellIndex){return cellInfo;}}},/**
             * 根据行列号获取单元格
             */getCell:function getCell(rowIndex,cellIndex){return rowIndex<this.rowsNum&&this.table.rows[rowIndex].cells[cellIndex]||null;},/**
             * 删除单元格
             */deleteCell:function deleteCell(cell,rowIndex){rowIndex=typeof rowIndex=='number'?rowIndex:cell.parentNode.rowIndex;var row=this.table.rows[rowIndex];row.deleteCell(cell.cellIndex);},/**
             * 根据始末两个单元格获取被框选的所有单元格范围
             */getCellsRange:function getCellsRange(cellA,cellB){function checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex){var tmpBeginRowIndex=beginRowIndex,tmpBeginColIndex=beginColIndex,tmpEndRowIndex=endRowIndex,tmpEndColIndex=endColIndex,cellInfo,colIndex,rowIndex;// 通过indexTable检查是否存在超出TableRange上边界的情况
if(beginRowIndex>0){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[beginRowIndex][colIndex];rowIndex=cellInfo.rowIndex;if(rowIndex<beginRowIndex){tmpBeginRowIndex=Math.min(rowIndex,tmpBeginRowIndex);}}}// 通过indexTable检查是否存在超出TableRange右边界的情况
if(endColIndex<me.colsNum){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][endColIndex];colIndex=cellInfo.colIndex+cellInfo.colSpan-1;if(colIndex>endColIndex){tmpEndColIndex=Math.max(colIndex,tmpEndColIndex);}}}// 检查是否有超出TableRange下边界的情况
if(endRowIndex<me.rowsNum){for(colIndex=beginColIndex;colIndex<endColIndex;colIndex++){cellInfo=me.indexTable[endRowIndex][colIndex];rowIndex=cellInfo.rowIndex+cellInfo.rowSpan-1;if(rowIndex>endRowIndex){tmpEndRowIndex=Math.max(rowIndex,tmpEndRowIndex);}}}// 检查是否有超出TableRange左边界的情况
if(beginColIndex>0){for(rowIndex=beginRowIndex;rowIndex<endRowIndex;rowIndex++){cellInfo=me.indexTable[rowIndex][beginColIndex];colIndex=cellInfo.colIndex;if(colIndex<beginColIndex){tmpBeginColIndex=Math.min(cellInfo.colIndex,tmpBeginColIndex);}}}//递归调用直至所有完成所有框选单元格的扩展
if(tmpBeginRowIndex!=beginRowIndex||tmpBeginColIndex!=beginColIndex||tmpEndRowIndex!=endRowIndex||tmpEndColIndex!=endColIndex){return checkRange(tmpBeginRowIndex,tmpBeginColIndex,tmpEndRowIndex,tmpEndColIndex);}else{// 不需要扩展TableRange的情况
return {beginRowIndex:beginRowIndex,beginColIndex:beginColIndex,endRowIndex:endRowIndex,endColIndex:endColIndex};}}try{var me=this,cellAInfo=me.getCellInfo(cellA);if(cellA===cellB){return {beginRowIndex:cellAInfo.rowIndex,beginColIndex:cellAInfo.colIndex,endRowIndex:cellAInfo.rowIndex+cellAInfo.rowSpan-1,endColIndex:cellAInfo.colIndex+cellAInfo.colSpan-1};}var cellBInfo=me.getCellInfo(cellB);// 计算TableRange的四个边
var beginRowIndex=Math.min(cellAInfo.rowIndex,cellBInfo.rowIndex),beginColIndex=Math.min(cellAInfo.colIndex,cellBInfo.colIndex),endRowIndex=Math.max(cellAInfo.rowIndex+cellAInfo.rowSpan-1,cellBInfo.rowIndex+cellBInfo.rowSpan-1),endColIndex=Math.max(cellAInfo.colIndex+cellAInfo.colSpan-1,cellBInfo.colIndex+cellBInfo.colSpan-1);return checkRange(beginRowIndex,beginColIndex,endRowIndex,endColIndex);}catch(e){//throw e;
}},/**
             * 依据cellsRange获取对应的单元格集合
             */getCells:function getCells(range){//每次获取cells之前必须先清除上次的选择，否则会对后续获取操作造成影响
this.clearSelected();var beginRowIndex=range.beginRowIndex,beginColIndex=range.beginColIndex,endRowIndex=range.endRowIndex,endColIndex=range.endColIndex,cellInfo,rowIndex,colIndex,tdHash={},returnTds=[];for(var i=beginRowIndex;i<=endRowIndex;i++){for(var j=beginColIndex;j<=endColIndex;j++){cellInfo=this.indexTable[i][j];rowIndex=cellInfo.rowIndex;colIndex=cellInfo.colIndex;// 如果Cells里已经包含了此Cell则跳过
var key=rowIndex+'|'+colIndex;if(tdHash[key])continue;tdHash[key]=1;if(rowIndex<i||colIndex<j||rowIndex+cellInfo.rowSpan-1>endRowIndex||colIndex+cellInfo.colSpan-1>endColIndex){return null;}returnTds.push(this.getCell(rowIndex,cellInfo.cellIndex));}}return returnTds;},/**
             * 清理已经选中的单元格
             */clearSelected:function clearSelected(){UETable.removeSelectedClass(this.selectedTds);this.selectedTds=[];this.cellsRange={};},/**
             * 根据range设置已经选中的单元格
             */setSelected:function setSelected(range){var cells=this.getCells(range);UETable.addSelectedClass(cells);this.selectedTds=cells;this.cellsRange=range;},isFullRow:function isFullRow(){var range=this.cellsRange;return range.endColIndex-range.beginColIndex+1==this.colsNum;},isFullCol:function isFullCol(){var range=this.cellsRange,table=this.table,ths=table.getElementsByTagName("th"),rows=range.endRowIndex-range.beginRowIndex+1;return !ths.length?rows==this.rowsNum:rows==this.rowsNum||rows==this.rowsNum-1;},/**
             * 获取视觉上的前置单元格，默认是左边，top传入时
             * @param cell
             * @param top
             */getNextCell:function getNextCell(cell,bottom,ignoreRange){try{var cellInfo=this.getCellInfo(cell),nextRowIndex,nextColIndex;var len=this.selectedTds.length&&!ignoreRange,range=this.cellsRange;//末行或者末列没有后置单元格
if(!bottom&&cellInfo.rowIndex==0||bottom&&(!len?cellInfo.rowIndex+cellInfo.rowSpan>this.rowsNum-1:range.endRowIndex==this.rowsNum-1))return null;nextRowIndex=!bottom?!len?cellInfo.rowIndex-1:range.beginRowIndex-1:!len?cellInfo.rowIndex+cellInfo.rowSpan:range.endRowIndex+1;nextColIndex=!len?cellInfo.colIndex:range.beginColIndex;return this.getCell(this.indexTable[nextRowIndex][nextColIndex].rowIndex,this.indexTable[nextRowIndex][nextColIndex].cellIndex);}catch(e){}},getPreviewCell:function getPreviewCell(cell,top){try{var cellInfo=this.getCellInfo(cell),previewRowIndex,previewColIndex;var len=this.selectedTds.length,range=this.cellsRange;//首行或者首列没有前置单元格
if(!top&&(!len?!cellInfo.colIndex:!range.beginColIndex)||top&&(!len?cellInfo.rowIndex>this.colsNum-1:range.endColIndex==this.colsNum-1))return null;previewRowIndex=!top?!len?cellInfo.rowIndex:range.beginRowIndex:!len?cellInfo.rowIndex<1?0:cellInfo.rowIndex-1:range.beginRowIndex;previewColIndex=!top?!len?cellInfo.colIndex<1?0:cellInfo.colIndex-1:range.beginColIndex-1:!len?cellInfo.colIndex:range.endColIndex+1;return this.getCell(this.indexTable[previewRowIndex][previewColIndex].rowIndex,this.indexTable[previewRowIndex][previewColIndex].cellIndex);}catch(e){}},/**
             * 移动单元格中的内容
             */moveContent:function moveContent(cellTo,cellFrom){if(UETable.isEmptyBlock(cellFrom))return;if(UETable.isEmptyBlock(cellTo)){cellTo.innerHTML=cellFrom.innerHTML;return;}var child=cellTo.lastChild;if(child.nodeType==3||!dtd.$block[child.tagName]){cellTo.appendChild(cellTo.ownerDocument.createElement('br'));}while(child=cellFrom.firstChild){cellTo.appendChild(child);}},/**
             * 向右合并单元格
             */mergeRight:function mergeRight(cell){var cellInfo=this.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan,rightCellInfo=this.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=this.getCell(rightCellInfo.rowIndex,rightCellInfo.cellIndex);//合并
cell.colSpan=cellInfo.colSpan+rightCellInfo.colSpan;//被合并的单元格不应存在宽度属性
cell.removeAttribute("width");//移动内容
this.moveContent(cell,rightCell);//删掉被合并的Cell
this.deleteCell(rightCell,rightCellInfo.rowIndex);this.update();},/**
             * 向下合并单元格
             */mergeDown:function mergeDown(cell){var cellInfo=this.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan,downCellInfo=this.indexTable[downRowIndex][cellInfo.colIndex],downCell=this.getCell(downCellInfo.rowIndex,downCellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+downCellInfo.rowSpan;cell.removeAttribute("height");this.moveContent(cell,downCell);this.deleteCell(downCell,downCellInfo.rowIndex);this.update();},/**
             * 合并整个range中的内容
             */mergeRange:function mergeRange(){//由于合并操作可以在任意时刻进行，所以无法通过鼠标位置等信息实时生成range，只能通过缓存实例中的cellsRange对象来访问
var range=this.cellsRange,leftTopCell=this.getCell(range.beginRowIndex,this.indexTable[range.beginRowIndex][range.beginColIndex].cellIndex);if(leftTopCell.tagName=="TH"&&range.endRowIndex!==range.beginRowIndex){var index=this.indexTable,info=this.getCellInfo(leftTopCell);leftTopCell=this.getCell(1,index[1][info.colIndex].cellIndex);range=this.getCellsRange(leftTopCell,this.getCell(index[this.rowsNum-1][info.colIndex].rowIndex,index[this.rowsNum-1][info.colIndex].cellIndex));}// 删除剩余的Cells
var cells=this.getCells(range);for(var i=0,ci;ci=cells[i++];){if(ci!==leftTopCell){this.moveContent(leftTopCell,ci);this.deleteCell(ci);}}// 修改左上角Cell的rowSpan和colSpan，并调整宽度属性设置
leftTopCell.rowSpan=range.endRowIndex-range.beginRowIndex+1;leftTopCell.rowSpan>1&&leftTopCell.removeAttribute("height");leftTopCell.colSpan=range.endColIndex-range.beginColIndex+1;leftTopCell.colSpan>1&&leftTopCell.removeAttribute("width");if(leftTopCell.rowSpan==this.rowsNum&&leftTopCell.colSpan!=1){leftTopCell.colSpan=1;}if(leftTopCell.colSpan==this.colsNum&&leftTopCell.rowSpan!=1){var rowIndex=leftTopCell.parentNode.rowIndex;//解决IE下的表格操作问题
if(this.table.deleteRow){for(var i=rowIndex+1,curIndex=rowIndex+1,len=leftTopCell.rowSpan;i<len;i++){this.table.deleteRow(curIndex);}}else{for(var i=0,len=leftTopCell.rowSpan-1;i<len;i++){var row=this.table.rows[rowIndex+1];row.parentNode.removeChild(row);}}leftTopCell.rowSpan=1;}this.update();},/**
             * 插入一行单元格
             */insertRow:function insertRow(rowIndex,sourceCell){var numCols=this.colsNum,table=this.table,row=table.insertRow(rowIndex),cell,isInsertTitle=typeof sourceCell=='string'&&sourceCell.toUpperCase()=='TH';function replaceTdToTh(colIndex,cell,tableRow){if(colIndex==0){var tr=tableRow.nextSibling||tableRow.previousSibling,th=tr.cells[colIndex];if(th.tagName=='TH'){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=='TH'){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}//首行直接插入,无需考虑部分单元格被rowspan的情况
if(rowIndex==0||rowIndex==this.rowsNum){for(var colIndex=0;colIndex<numCols;colIndex++){cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);cell.getAttribute('vAlign')&&cell.setAttribute('vAlign',cell.getAttribute('vAlign'));row.appendChild(cell);if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}}else{var infoRow=this.indexTable[rowIndex];for(colIndex=0;colIndex<numCols;colIndex++){var cellInfo=infoRow[colIndex];//如果存在某个单元格的rowspan穿过待插入行的位置，则修改该单元格的rowspan即可，无需插入单元格
if(cellInfo.rowIndex<rowIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.rowSpan=cellInfo.rowSpan+1;}else{cell=this.cloneCell(sourceCell,true);this.setCellContent(cell);row.appendChild(cell);}if(!isInsertTitle)replaceTdToTh(colIndex,cell,row);}}//框选时插入不触发contentchange，需要手动更新索引。
this.update();return row;},/**
             * 删除一行单元格
             * @param rowIndex
             */deleteRow:function deleteRow(rowIndex){var row=this.table.rows[rowIndex],infoRow=this.indexTable[rowIndex],colsNum=this.colsNum,count=0;//处理计数
for(var colIndex=0;colIndex<colsNum;){var cellInfo=infoRow[colIndex],cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(cell.rowSpan>1){if(cellInfo.rowIndex==rowIndex){var clone=cell.cloneNode(true);clone.rowSpan=cell.rowSpan-1;clone.innerHTML="";cell.rowSpan=1;var nextRowIndex=rowIndex+1,nextRow=this.table.rows[nextRowIndex],insertCellIndex,preMerged=this.getPreviewMergedCellsNum(nextRowIndex,colIndex)-count;if(preMerged<colIndex){insertCellIndex=colIndex-preMerged-1;//nextRow.insertCell(insertCellIndex);
domUtils.insertAfter(nextRow.cells[insertCellIndex],clone);}else{if(nextRow.cells.length)nextRow.insertBefore(clone,nextRow.cells[0]);}count+=1;//cell.parentNode.removeChild(cell);
}}colIndex+=cell.colSpan||1;}var deleteTds=[],cacheMap={};for(colIndex=0;colIndex<colsNum;colIndex++){var tmpRowIndex=infoRow[colIndex].rowIndex,tmpCellIndex=infoRow[colIndex].cellIndex,key=tmpRowIndex+"_"+tmpCellIndex;if(cacheMap[key])continue;cacheMap[key]=1;cell=this.getCell(tmpRowIndex,tmpCellIndex);deleteTds.push(cell);}var mergeTds=[];utils.each(deleteTds,function(td){if(td.rowSpan==1){td.parentNode.removeChild(td);}else{mergeTds.push(td);}});utils.each(mergeTds,function(td){td.rowSpan--;});row.parentNode.removeChild(row);//浏览器方法本身存在bug,采用自定义方法删除
//this.table.deleteRow(rowIndex);
this.update();},insertCol:function insertCol(colIndex,sourceCell,defaultValue){var rowsNum=this.rowsNum,rowIndex=0,tableRow,cell,backWidth=parseInt((this.table.offsetWidth-(this.colsNum+1)*20-(this.colsNum+1))/(this.colsNum+1),10),isInsertTitleCol=typeof sourceCell=='string'&&sourceCell.toUpperCase()=='TH';function replaceTdToTh(rowIndex,cell,tableRow){if(rowIndex==0){var th=cell.nextSibling||cell.previousSibling;if(th.tagName=='TH'){th=cell.ownerDocument.createElement("th");th.appendChild(cell.firstChild);tableRow.insertBefore(th,cell);domUtils.remove(cell);}}else{if(cell.tagName=='TH'){var td=cell.ownerDocument.createElement("td");td.appendChild(cell.firstChild);tableRow.insertBefore(td,cell);domUtils.remove(cell);}}}var preCell;if(colIndex==0||colIndex==this.colsNum){for(;rowIndex<rowsNum;rowIndex++){tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[colIndex==0?colIndex:tableRow.cells.length];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(colIndex == 0 ? colIndex : tableRow.cells.length);
this.setCellContent(cell);cell.setAttribute('vAlign',cell.getAttribute('vAlign'));preCell&&cell.setAttribute('width',preCell.getAttribute('width'));if(!colIndex){tableRow.insertBefore(cell,tableRow.cells[0]);}else{domUtils.insertAfter(tableRow.cells[tableRow.cells.length-1],cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}else{for(;rowIndex<rowsNum;rowIndex++){var cellInfo=this.indexTable[rowIndex][colIndex];if(cellInfo.colIndex<colIndex){cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);cell.colSpan=cellInfo.colSpan+1;}else{tableRow=this.table.rows[rowIndex];preCell=tableRow.cells[cellInfo.cellIndex];cell=this.cloneCell(sourceCell,true);//tableRow.insertCell(cellInfo.cellIndex);
this.setCellContent(cell);cell.setAttribute('vAlign',cell.getAttribute('vAlign'));preCell&&cell.setAttribute('width',preCell.getAttribute('width'));//防止IE下报错
preCell?tableRow.insertBefore(cell,preCell):tableRow.appendChild(cell);}if(!isInsertTitleCol)replaceTdToTh(rowIndex,cell,tableRow);}}//框选时插入不触发contentchange，需要手动更新索引
this.update();this.updateWidth(backWidth,defaultValue||{tdPadding:10,tdBorder:1});},updateWidth:function updateWidth(width,defaultValue){var table=this.table,tmpWidth=UETable.getWidth(table)-defaultValue.tdPadding*2-defaultValue.tdBorder+width;if(tmpWidth<table.ownerDocument.body.offsetWidth){table.setAttribute("width",tmpWidth);return;}var tds=domUtils.getElementsByTagName(this.table,"td th");utils.each(tds,function(td){td.setAttribute("width",width);});},deleteCol:function deleteCol(colIndex){var indexTable=this.indexTable,tableRows=this.table.rows,backTableWidth=this.table.getAttribute("width"),backTdWidth=0,rowsNum=this.rowsNum,cacheMap={};for(var rowIndex=0;rowIndex<rowsNum;){var infoRow=indexTable[rowIndex],cellInfo=infoRow[colIndex],key=cellInfo.rowIndex+'_'+cellInfo.colIndex;// 跳过已经处理过的Cell
if(cacheMap[key])continue;cacheMap[key]=1;var cell=this.getCell(cellInfo.rowIndex,cellInfo.cellIndex);if(!backTdWidth)backTdWidth=cell&&parseInt(cell.offsetWidth/cell.colSpan,10).toFixed(0);// 如果Cell的colSpan大于1, 就修改colSpan, 否则就删掉这个Cell
if(cell.colSpan>1){cell.colSpan--;}else{tableRows[rowIndex].deleteCell(cellInfo.cellIndex);}rowIndex+=cellInfo.rowSpan||1;}this.table.setAttribute("width",backTableWidth-backTdWidth);this.update();},splitToCells:function splitToCells(cell){var me=this,cells=this.splitToRows(cell);utils.each(cells,function(cell){me.splitToCols(cell);});},splitToRows:function splitToRows(cell){var cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan
cell.rowSpan=1;results.push(cell);// 补齐单元格
for(var i=rowIndex,endRow=rowIndex+cellInfo.rowSpan;i<endRow;i++){if(i==rowIndex)continue;var tableRow=this.table.rows[i],tmpCell=tableRow.insertCell(colIndex-this.getPreviewMergedCellsNum(i,colIndex));tmpCell.colSpan=cellInfo.colSpan;this.setCellContent(tmpCell);tmpCell.setAttribute('vAlign',cell.getAttribute('vAlign'));tmpCell.setAttribute('align',cell.getAttribute('align'));if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}results.push(tmpCell);}this.update();return results;},getPreviewMergedCellsNum:function getPreviewMergedCellsNum(rowIndex,colIndex){var indexRow=this.indexTable[rowIndex],num=0;for(var i=0;i<colIndex;){var colSpan=indexRow[i].colSpan,tmpRowIndex=indexRow[i].rowIndex;num+=colSpan-(tmpRowIndex==rowIndex?1:0);i+=colSpan;}return num;},splitToCols:function splitToCols(cell){var backWidth=(cell.offsetWidth/cell.colSpan-22).toFixed(0),cellInfo=this.getCellInfo(cell),rowIndex=cellInfo.rowIndex,colIndex=cellInfo.colIndex,results=[];// 修改Cell的rowSpan
cell.colSpan=1;cell.setAttribute("width",backWidth);results.push(cell);// 补齐单元格
for(var j=colIndex,endCol=colIndex+cellInfo.colSpan;j<endCol;j++){if(j==colIndex)continue;var tableRow=this.table.rows[rowIndex],tmpCell=tableRow.insertCell(this.indexTable[rowIndex][j].cellIndex+1);tmpCell.rowSpan=cellInfo.rowSpan;this.setCellContent(tmpCell);tmpCell.setAttribute('vAlign',cell.getAttribute('vAlign'));tmpCell.setAttribute('align',cell.getAttribute('align'));tmpCell.setAttribute('width',backWidth);if(cell.style.cssText){tmpCell.style.cssText=cell.style.cssText;}//处理th的情况
if(cell.tagName=='TH'){var th=cell.ownerDocument.createElement('th');th.appendChild(tmpCell.firstChild);th.setAttribute('vAlign',cell.getAttribute('vAlign'));th.rowSpan=tmpCell.rowSpan;tableRow.insertBefore(th,tmpCell);domUtils.remove(tmpCell);}results.push(tmpCell);}this.update();return results;},isLastCell:function isLastCell(cell,rowsNum,colsNum){rowsNum=rowsNum||this.rowsNum;colsNum=colsNum||this.colsNum;var cellInfo=this.getCellInfo(cell);return cellInfo.rowIndex+cellInfo.rowSpan==rowsNum&&cellInfo.colIndex+cellInfo.colSpan==colsNum;},getLastCell:function getLastCell(cells){cells=cells||this.table.getElementsByTagName("td");var firstInfo=this.getCellInfo(cells[0]);var me=this,last=cells[0],tr=last.parentNode,cellsNum=0,cols=0,rows;utils.each(cells,function(cell){if(cell.parentNode==tr)cols+=cell.colSpan||1;cellsNum+=cell.rowSpan*cell.colSpan||1;});rows=cellsNum/cols;utils.each(cells,function(cell){if(me.isLastCell(cell,rows,cols)){last=cell;return false;}});return last;},selectRow:function selectRow(rowIndex){var indexRow=this.indexTable[rowIndex],start=this.getCell(indexRow[0].rowIndex,indexRow[0].cellIndex),end=this.getCell(indexRow[this.colsNum-1].rowIndex,indexRow[this.colsNum-1].cellIndex),range=this.getCellsRange(start,end);this.setSelected(range);},selectTable:function selectTable(){var tds=this.table.getElementsByTagName("td"),range=this.getCellsRange(tds[0],tds[tds.length-1]);this.setSelected(range);},setBackground:function setBackground(cells,value){if(typeof value==="string"){utils.each(cells,function(cell){cell.style.backgroundColor=value;});}else if(_typeof(value)==="object"){value=utils.extend({repeat:true,colorList:["#ddd","#fff"]},value);var rowIndex=this.getCellInfo(cells[0]).rowIndex,count=0,colors=value.colorList,getColor=function getColor(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0,cell;cell=cells[i++];){var cellInfo=this.getCellInfo(cell);cell.style.backgroundColor=getColor(colors,rowIndex+count==cellInfo.rowIndex?count:++count,value.repeat);}}},removeBackground:function removeBackground(cells){utils.each(cells,function(cell){cell.style.backgroundColor="";});}};})();// plugins/table.cmds.js
(function(){var UT=UE.UETable,getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);};UE.commands['inserttable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?-1:0;},execCommand:function execCommand(cmd,opt){function createTable(opt,tdWidth){var html=[],rowsNum=opt.numRows,colsNum=opt.numCols;for(var r=0;r<rowsNum;r++){html.push('<tr'+(r==0?' class="firstRow"':'')+'>');for(var c=0;c<colsNum;c++){html.push('<td width="'+tdWidth+'"  vAlign="'+opt.tdvalign+'" >'+(browser.ie&&browser.version<11?domUtils.fillChar:'<br/>')+'</td>');}html.push('</tr>');}//禁止指定table-width
return '<table><tbody>'+html.join('')+'</tbody></table>';}if(!opt){opt=utils.extend({},{numCols:this.options.defaultCols,numRows:this.options.defaultRows,tdvalign:this.options.tdvalign});}var me=this;var range=this.selection.getRange(),start=range.startContainer,firstParentBlock=domUtils.findParent(start,function(node){return domUtils.isBlockElm(node);},true)||me.body;var defaultValue=getDefaultValue(me),tableWidth=firstParentBlock.offsetWidth,tdWidth=Math.floor(tableWidth/opt.numCols-defaultValue.tdPadding*2-defaultValue.tdBorder);//todo其他属性
!opt.tdvalign&&(opt.tdvalign=me.options.tdvalign);me.execCommand("inserthtml",createTable(opt,tdWidth));}};UE.commands['insertparagraphbeforetable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).cell?0:-1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var p=this.document.createElement("p");p.innerHTML=browser.ie?'&nbsp;':'<br />';table.parentNode.insertBefore(p,table);this.selection.getRange().setStart(p,0).setCursor();}}};UE.commands['deletetable']={queryCommandState:function queryCommandState(){var rng=this.selection.getRange();return domUtils.findParentByTagName(rng.startContainer,'table',true)?0:-1;},execCommand:function execCommand(cmd,table){var rng=this.selection.getRange();table=table||domUtils.findParentByTagName(rng.startContainer,'table',true);if(table){var next=table.nextSibling;if(!next){next=domUtils.createElement(this.document,'p',{'innerHTML':browser.ie?domUtils.fillChar:'<br/>'});table.parentNode.insertBefore(next,table);}domUtils.remove(table);rng=this.selection.getRange();if(next.nodeType==3){rng.setStartBefore(next);}else{rng.setStart(next,0);}rng.setCursor(false,true);this.fireEvent("tablehasdeleted");}}};UE.commands['cellalign']={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,align){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute('align',align);}}}};UE.commands['cellvalign']={queryCommandState:function queryCommandState(){return getSelectedArr(this).length?0:-1;},execCommand:function execCommand(cmd,valign){var selectedTds=getSelectedArr(this);if(selectedTds.length){for(var i=0,ci;ci=selectedTds[i++];){ci.setAttribute('vAlign',valign);}}}};UE.commands['insertcaption']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){return table.getElementsByTagName('caption').length==0?1:-1;}return -1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){var caption=this.document.createElement('caption');caption.innerHTML=browser.ie?domUtils.fillChar:'<br/>';table.insertBefore(caption,table.firstChild);var range=this.selection.getRange();range.setStart(caption,0).setCursor();}}};UE.commands['deletecaption']={queryCommandState:function queryCommandState(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){return table.getElementsByTagName('caption').length==0?-1:1;}return -1;},execCommand:function execCommand(){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){domUtils.remove(table.getElementsByTagName('caption')[0]);var range=this.selection.getRange();range.setStart(table.rows[0].cells[0],0).setCursor();}}};UE.commands['inserttitle']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()!='th'?0:-1;}return -1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertRow(0,'th');}var th=table.getElementsByTagName('th')[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands['deletetitle']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var firstRow=table.rows[0];return firstRow.cells[firstRow.cells.length-1].tagName.toLowerCase()=='th'?0:-1;}return -1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){domUtils.remove(table.rows[0]);}var td=table.getElementsByTagName('td')[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands['inserttitlecol']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName('th').length?-1:0;}return -1;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;if(table){getUETable(table).insertCol(0,'th');}resetTdWidth(table,this);var th=table.getElementsByTagName('th')[0];this.selection.getRange().setStart(th,0).setCursor(false,true);}};UE.commands['deletetitlecol']={queryCommandState:function queryCommandState(){var table=getTableItemsByRange(this).table;if(table){var lastRow=table.rows[table.rows.length-1];return lastRow.getElementsByTagName('th').length?0:-1;}return -1;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;if(table){for(var i=0;i<table.rows.length;i++){domUtils.remove(table.rows[i].children[0]);}}resetTdWidth(table,this);var td=table.getElementsByTagName('td')[0];this.selection.getRange().setStart(td,0).setCursor(false,true);}};UE.commands["mergeright"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return -1;var ut=getUETable(table);if(ut.selectedTds.length)return -1;var cellInfo=ut.getCellInfo(cell),rightColIndex=cellInfo.colIndex+cellInfo.colSpan;if(rightColIndex>=ut.colsNum)return -1;// 如果处于最右边则不能向右合并
var rightCellInfo=ut.indexTable[cellInfo.rowIndex][rightColIndex],rightCell=table.rows[rightCellInfo.rowIndex].cells[rightCellInfo.cellIndex];if(!rightCell||cell.tagName!=rightCell.tagName)return -1;// TH和TD不能相互合并
// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并
return rightCellInfo.rowIndex==cellInfo.rowIndex&&rightCellInfo.rowSpan==cellInfo.rowSpan?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeRight(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergedown"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table,cell=tableItems.cell;if(!table||!cell)return -1;var ut=getUETable(table);if(ut.selectedTds.length)return -1;var cellInfo=ut.getCellInfo(cell),downRowIndex=cellInfo.rowIndex+cellInfo.rowSpan;if(downRowIndex>=ut.rowsNum)return -1;// 如果处于最下边则不能向下合并
var downCellInfo=ut.indexTable[downRowIndex][cellInfo.colIndex],downCell=table.rows[downCellInfo.rowIndex].cells[downCellInfo.cellIndex];if(!downCell||cell.tagName!=downCell.tagName)return -1;// TH和TD不能相互合并
// 当且仅当两个Cell的开始列号和结束列号一致时能进行合并
return downCellInfo.colIndex==cellInfo.colIndex&&downCellInfo.colSpan==cellInfo.colSpan?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.mergeDown(cell);rng.moveToBookmark(bk).select();}};UE.commands["mergecells"]={queryCommandState:function queryCommandState(){return getUETableBySelected(this)?0:-1;},execCommand:function execCommand(){var ut=getUETableBySelected(this);if(ut&&ut.selectedTds.length){var cell=ut.selectedTds[0];ut.mergeRange();var rng=this.selection.getRange();if(domUtils.isEmptyBlock(cell)){rng.setStart(cell,0).collapse(true);}else{rng.selectNodeContents(cell);}rng.select();}}};UE.commands["insertrow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=='TH'&&tableItems.tr!==tableItems.table.rows[0])&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length ? cellInfo.rowIndex:ut.cellsRange.beginRowIndex,'');
if(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.beginRowIndex,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};//后插入行
UE.commands["insertrownext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&cell.tagName=="TD"&&getUETable(tableItems.table).rowsNum<this.options.maxRowNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var tableItems=getTableItemsByRange(this),cell=tableItems.cell,table=tableItems.table,ut=getUETable(table),cellInfo=ut.getCellInfo(cell);//ut.insertRow(!ut.selectedTds.length? cellInfo.rowIndex + cellInfo.rowSpan : ut.cellsRange.endRowIndex + 1,'');
if(!ut.selectedTds.length){ut.insertRow(cellInfo.rowIndex+cellInfo.rowSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endRowIndex-range.beginRowIndex+1;i<len;i++){ut.insertRow(range.endRowIndex+1,cell);}}rng.moveToBookmark(bk).select();if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["deleterow"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellsRange=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getVSideCell(cell),nextCell=ut.getVSideCell(cell,true),rng=this.selection.getRange();if(utils.isEmptyObject(cellsRange)){ut.deleteRow(cellInfo.rowIndex);}else{for(var i=cellsRange.beginRowIndex;i<cellsRange.endRowIndex+1;i++){ut.deleteRow(cellsRange.beginRowIndex);}}var table=ut.table;if(!table.getElementsByTagName('td').length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(cellInfo.rowSpan==1||cellInfo.rowSpan==cellsRange.endRowIndex-cellsRange.beginRowIndex+1){if(nextCell||preCell)rng.selectNodeContents(nextCell||preCell).setCursor(false,true);}else{var newCell=ut.getCell(cellInfo.rowIndex,ut.indexTable[cellInfo.rowIndex][cellInfo.colIndex].cellIndex);if(newCell)rng.selectNodeContents(newCell).setCursor(false,true);}}if(table.getAttribute("interlaced")==="enabled")this.fireEvent("interlacetable",table);}};UE.commands["insertcol"]={queryCommandState:function queryCommandState(cmd){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&(cell.tagName=="TD"||cell.tagName=='TH'&&cell!==tableItems.tr.cells[0])&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(cmd){var rng=this.selection.getRange(),bk=rng.createBookmark(true);if(this.queryCommandState(cmd)==-1)return;var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex:ut.cellsRange.beginColIndex);
if(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.beginColIndex,cell);}}rng.moveToBookmark(bk).select(true);}};UE.commands["insertcolnext"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;return cell&&getUETable(tableItems.table).colsNum<this.options.maxColNum?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),cellInfo=ut.getCellInfo(cell);//ut.insertCol(!ut.selectedTds.length ? cellInfo.colIndex + cellInfo.colSpan:ut.cellsRange.endColIndex +1);
if(!ut.selectedTds.length){ut.insertCol(cellInfo.colIndex+cellInfo.colSpan,cell);}else{var range=ut.cellsRange;for(var i=0,len=range.endColIndex-range.beginColIndex+1;i<len;i++){ut.insertCol(range.endColIndex+1,cell);}}rng.moveToBookmark(bk).select();}};UE.commands["deletecol"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this);return tableItems.cell?0:-1;},execCommand:function execCommand(){var cell=getTableItemsByRange(this).cell,ut=getUETable(cell),range=ut.cellsRange,cellInfo=ut.getCellInfo(cell),preCell=ut.getHSideCell(cell),nextCell=ut.getHSideCell(cell,true);if(utils.isEmptyObject(range)){ut.deleteCol(cellInfo.colIndex);}else{for(var i=range.beginColIndex;i<range.endColIndex+1;i++){ut.deleteCol(range.beginColIndex);}}var table=ut.table,rng=this.selection.getRange();if(!table.getElementsByTagName('td').length){var nextSibling=table.nextSibling;domUtils.remove(table);if(nextSibling){rng.setStart(nextSibling,0).setCursor(false,true);}}else{if(domUtils.inDoc(cell,this.document)){rng.setStart(cell,0).setCursor(false,true);}else{if(nextCell&&domUtils.inDoc(nextCell,this.document)){rng.selectNodeContents(nextCell).setCursor(false,true);}else{if(preCell&&domUtils.inDoc(preCell,this.document)){rng.selectNodeContents(preCell).setCursor(true,true);}}}}}};UE.commands["splittocells"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return -1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return -1;return cell&&(cell.colSpan>1||cell.rowSpan>1)?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCells(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittorows"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return -1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return -1;return cell&&cell.rowSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToRows(cell);rng.moveToBookmark(bk).select();}};UE.commands["splittocols"]={queryCommandState:function queryCommandState(){var tableItems=getTableItemsByRange(this),cell=tableItems.cell;if(!cell)return -1;var ut=getUETable(tableItems.table);if(ut.selectedTds.length>0)return -1;return cell&&cell.colSpan>1?0:-1;},execCommand:function execCommand(){var rng=this.selection.getRange(),bk=rng.createBookmark(true);var cell=getTableItemsByRange(this).cell,ut=getUETable(cell);ut.splitToCols(cell);rng.moveToBookmark(bk).select();}};UE.commands["adaptbytext"]=UE.commands["adaptbywindow"]={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd){var tableItems=getTableItemsByRange(this),table=tableItems.table;if(table){if(cmd=='adaptbywindow'){resetTdWidth(table,this);}else{var cells=domUtils.getElementsByTagName(table,"td th");utils.each(cells,function(cell){cell.removeAttribute("width");});table.removeAttribute("width");}}}};//平均分配各列
UE.commands['averagedistributecol']={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return -1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageWidth(){var tb=ut.table,averageWidth,sumWidth=0,colsNum=0,tbAttr=getDefaultValue(me,tb);if(ut.isFullRow()){sumWidth=tb.offsetWidth;colsNum=ut.colsNum;}else{var begin=ut.cellsRange.beginColIndex,end=ut.cellsRange.endColIndex,node;for(var i=begin;i<=end;){node=ut.selectedTds[i];sumWidth+=node.offsetWidth;i+=node.colSpan;colsNum+=1;}}averageWidth=Math.ceil(sumWidth/colsNum)-tbAttr.tdBorder*2-tbAttr.tdPadding*2;return averageWidth;}function setAverageWidth(averageWidth){utils.each(domUtils.getElementsByTagName(ut.table,"th"),function(node){node.setAttribute("width","");});var cells=ut.isFullRow()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.colSpan==1){node.setAttribute("width",averageWidth);}});}if(ut&&ut.selectedTds.length){setAverageWidth(getAverageWidth());}}};//平均分配各行
UE.commands['averagedistributerow']={queryCommandState:function queryCommandState(){var ut=getUETableBySelected(this);if(!ut)return -1;if(ut.selectedTds&&/th/ig.test(ut.selectedTds[0].tagName))return -1;return ut.isFullRow()||ut.isFullCol()?0:-1;},execCommand:function execCommand(cmd){var me=this,ut=getUETableBySelected(me);function getAverageHeight(){var averageHeight,rowNum,sumHeight=0,tb=ut.table,tbAttr=getDefaultValue(me,tb),tdpadding=parseInt(domUtils.getComputedStyle(tb.getElementsByTagName('td')[0],"padding-top"));if(ut.isFullCol()){var captionArr=domUtils.getElementsByTagName(tb,"caption"),thArr=domUtils.getElementsByTagName(tb,"th"),captionHeight,thHeight;if(captionArr.length>0){captionHeight=captionArr[0].offsetHeight;}if(thArr.length>0){thHeight=thArr[0].offsetHeight;}sumHeight=tb.offsetHeight-(captionHeight||0)-(thHeight||0);rowNum=thArr.length==0?ut.rowsNum:ut.rowsNum-1;}else{var begin=ut.cellsRange.beginRowIndex,end=ut.cellsRange.endRowIndex,count=0,trs=domUtils.getElementsByTagName(tb,"tr");for(var i=begin;i<=end;i++){sumHeight+=trs[i].offsetHeight;count+=1;}rowNum=count;}//ie8下是混杂模式
if(browser.ie&&browser.version<9){averageHeight=Math.ceil(sumHeight/rowNum);}else{averageHeight=Math.ceil(sumHeight/rowNum)-tbAttr.tdBorder*2-tdpadding*2;}return averageHeight;}function setAverageHeight(averageHeight){var cells=ut.isFullCol()?domUtils.getElementsByTagName(ut.table,"td"):ut.selectedTds;utils.each(cells,function(node){if(node.rowSpan==1){node.setAttribute("height",averageHeight);}});}if(ut&&ut.selectedTds.length){setAverageHeight(getAverageHeight());}}};//单元格对齐方式
UE.commands['cellalignment']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,data){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(!/caption/ig.test(cell.tagName)){domUtils.setAttributes(cell,data);}else{cell.style.textAlign=data.align;cell.style.verticalAlign=data.vAlign;}me.selection.getRange().setCursor(true);}else{utils.each(ut.selectedTds,function(cell){domUtils.setAttributes(cell,data);});}},/**
             * 查询当前点击的单元格的对齐状态， 如果当前已经选择了多个单元格， 则会返回所有单元格经过统一协调过后的状态
             * @see UE.UETable.getTableCellAlignState
             */queryCommandValue:function queryCommandValue(cmd){var activeMenuCell=getTableItemsByRange(this).cell;if(!activeMenuCell){activeMenuCell=getSelectedArr(this)[0];}if(!activeMenuCell){return null;}else{//获取同时选中的其他单元格
var cells=UE.UETable.getUETable(activeMenuCell).selectedTds;!cells.length&&(cells=activeMenuCell);return UE.UETable.getTableCellAlignState(cells);}}};//表格对齐方式
UE.commands['tablealignment']={queryCommandState:function queryCommandState(){if(browser.ie&&browser.version<8){return -1;}return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,value){var me=this,start=me.selection.getStart(),table=start&&domUtils.findParentByTagName(start,["table"],true);if(table){table.setAttribute("align",value);}}};//表格属性
UE.commands['edittable']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,color){var rng=this.selection.getRange(),table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){var arr=domUtils.getElementsByTagName(table,"td").concat(domUtils.getElementsByTagName(table,"th"),domUtils.getElementsByTagName(table,"caption"));utils.each(arr,function(node){node.style.borderColor=color;});}}};//单元格属性
UE.commands['edittd']={queryCommandState:function queryCommandState(){return getTableItemsByRange(this).table?0:-1;},execCommand:function execCommand(cmd,bkColor){var me=this,ut=getUETableBySelected(me);if(!ut){var start=me.selection.getStart(),cell=start&&domUtils.findParentByTagName(start,["td","th","caption"],true);if(cell){cell.style.backgroundColor=bkColor;}}else{utils.each(ut.selectedTds,function(cell){cell.style.backgroundColor=bkColor;});}}};UE.commands["settablebackground"]={queryCommandState:function queryCommandState(){return getSelectedArr(this).length>1?0:-1;},execCommand:function execCommand(cmd,value){var cells,ut;cells=getSelectedArr(this);ut=getUETable(cells[0]);ut.setBackground(cells,value);}};UE.commands["cleartablebackground"]={queryCommandState:function queryCommandState(){var cells=getSelectedArr(this);if(!cells.length)return -1;for(var i=0,cell;cell=cells[i++];){if(cell.style.backgroundColor!=="")return 0;}return -1;},execCommand:function execCommand(){var cells=getSelectedArr(this),ut=getUETable(cells[0]);ut.removeBackground(cells);}};UE.commands["interlacetable"]=UE.commands["uninterlacetable"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return -1;var interlaced=table.getAttribute("interlaced");if(cmd=="interlacetable"){//TODO 待定
//是否需要待定，如果设置，则命令只能单次执行成功，但反射具备toggle效果；否则可以覆盖前次命令，但反射将不存在toggle效果
return interlaced==="enabled"?-1:0;}else{return !interlaced||interlaced==="disabled"?-1:0;}},execCommand:function execCommand(cmd,classList){var table=getTableItemsByRange(this).table;if(cmd=="interlacetable"){table.setAttribute("interlaced","enabled");this.fireEvent("interlacetable",table,classList);}else{table.setAttribute("interlaced","disabled");this.fireEvent("uninterlacetable",table);}}};UE.commands["setbordervisible"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(!table)return -1;return 0;},execCommand:function execCommand(){var table=getTableItemsByRange(this).table;utils.each(domUtils.getElementsByTagName(table,'td'),function(td){td.style.borderWidth='1px';td.style.borderStyle='solid';});}};function resetTdWidth(table,editor){var tds=domUtils.getElementsByTagName(table,'td th');utils.each(tds,function(td){td.removeAttribute("width");});table.setAttribute('width',getTableWidth(editor,true,getDefaultValue(editor,table)));var tdsWidths=[];setTimeout(function(){utils.each(tds,function(td){td.colSpan==1&&tdsWidths.push(td.offsetWidth);});utils.each(tds,function(td,i){td.colSpan==1&&td.setAttribute("width",tdsWidths[i]+"");});},0);}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}function getSelectedArr(editor){var cell=getTableItemsByRange(editor).cell;if(cell){var ut=getUETable(cell);return ut.selectedTds.length?ut.selectedTds:[cell];}else{return [];}}})();// plugins/table.action.js
/**
     * Created with JetBrains PhpStorm.
     * User: taoqili
     * Date: 12-10-12
     * Time: 上午10:05
     * To change this template use File | Settings | File Templates.
     */UE.plugins['table']=function(){var me=this,tableDragTimer=null,//双击计时器
tableResizeTimer=null,//单元格最小宽度
cellMinWidth=5,isInResizeBuffer=false,//单元格边框大小
cellBorderWidth=5,//鼠标偏移距离
offsetOfTableCell=10,//记录在有限时间内的点击状态， 共有3个取值， 0, 1, 2。 0代表未初始化， 1代表单击了1次，2代表2次
singleClickState=0,userActionStatus=null,//双击允许的时间范围
dblclickTime=360,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getUETableBySelected=function getUETableBySelected(editor){return UT.getUETableBySelected(editor);},getDefaultValue=function getDefaultValue(editor,table){return UT.getDefaultValue(editor,table);},removeSelectedClass=function removeSelectedClass(cells){return UT.removeSelectedClass(cells);};me.ready(function(){var me=this;var orgGetText=me.selection.getText;me.selection.getText=function(){var table=getUETableBySelected(me);if(table){var str='';utils.each(table.selectedTds,function(td){str+=td[browser.ie?'innerText':'textContent'];});return str;}else{return orgGetText.call(me.selection);}};});//处理拖动及框选相关方法
var startTd=null,//鼠标按下时的锚点td
currentTd=null,//当前鼠标经过时的td
onDrag="",//指示当前拖动状态，其值可为"","h","v" ,分别表示未拖动状态，横向拖动状态，纵向拖动状态，用于鼠标移动过程中的判断
onBorder=false,//检测鼠标按下时是否处在单元格边缘位置
dragButton=null,dragOver=false,dragLine=null,//模拟的拖动线
dragTd=null;//发生拖动的目标td
var mousedown=false,//todo 判断混乱模式
needIEHack=true;me.setOpt({'maxColNum':20,'maxRowNum':100,'defaultCols':5,'defaultRows':5,'tdvalign':'top','cursorpath':me.options.UEDITOR_HOME_URL+"themes/default/images/cursor_",'tableDragable':false,'classList':["ue-table-interlace-color-single","ue-table-interlace-color-double"]});me.getUETable=getUETable;var commands={'deletetable':1,'inserttable':1,'cellvalign':1,'insertcaption':1,'deletecaption':1,'inserttitle':1,'deletetitle':1,"mergeright":1,"mergedown":1,"mergecells":1,"insertrow":1,"insertrownext":1,"deleterow":1,"insertcol":1,"insertcolnext":1,"deletecol":1,"splittocells":1,"splittorows":1,"splittocols":1,"adaptbytext":1,"adaptbywindow":1,"adaptbycustomer":1,"insertparagraph":1,"insertparagraphbeforetable":1,"averagedistributecol":1,"averagedistributerow":1};me.ready(function(){utils.cssRule('table',//选中的td上的样式
'.selectTdClass{background-color:#edf5fa !important}'+'table.noBorderTable td,table.noBorderTable th,table.noBorderTable caption{border:1px dashed #ddd !important}'+//插入的表格的默认样式
'table{margin-bottom:10px;border-collapse:collapse;display:table;}'+'td,th{padding: 5px 10px;border: 1px solid #DDD;}'+'caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}'+'th{border-top:1px solid #BBB;background-color:#F7F7F7;}'+'table tr.firstRow th{border-top-width:2px;}'+'.ue-table-interlace-color-single{ background-color: #fcfcfc; } .ue-table-interlace-color-double{ background-color: #f7faff; }'+'td p{margin:0;padding:0;}',me.document);var tableCopyList,isFullCol,isFullRow;//注册del/backspace事件
me.addListener('keydown',function(cmd,evt){var me=this;var keyCode=evt.keyCode||evt.which;if(keyCode==8){var ut=getUETableBySelected(me);if(ut&&ut.selectedTds.length){if(ut.isFullCol()){me.execCommand('deletecol');}else if(ut.isFullRow()){me.execCommand('deleterow');}else{me.fireEvent('delcells');}domUtils.preventDefault(evt);}var caption=domUtils.findParentByTagName(me.selection.getStart(),'caption',true),range=me.selection.getRange();if(range.collapsed&&caption&&isEmptyBlock(caption)){me.fireEvent('saveScene');var table=caption.parentNode;domUtils.remove(caption);if(table){range.setStart(table.rows[0].cells[0],0).setCursor(false,true);}me.fireEvent('saveScene');}}if(keyCode==46){ut=getUETableBySelected(me);if(ut){me.fireEvent('saveScene');for(var i=0,ci;ci=ut.selectedTds[i++];){domUtils.fillNode(me.document,ci);}me.fireEvent('saveScene');domUtils.preventDefault(evt);}}if(keyCode==13){var rng=me.selection.getRange(),caption=domUtils.findParentByTagName(rng.startContainer,'caption',true);if(caption){var table=domUtils.findParentByTagName(caption,'table');if(!rng.collapsed){rng.deleteContents();me.fireEvent('saveScene');}else{if(caption){rng.setStart(table.rows[0].cells[0],0).setCursor(false,true);}}domUtils.preventDefault(evt);return;}if(rng.collapsed){var table=domUtils.findParentByTagName(rng.startContainer,'table');if(table){var cell=table.rows[0].cells[0],start=domUtils.findParentByTagName(me.selection.getStart(),['td','th'],true),preNode=table.previousSibling;if(cell===start&&(!preNode||preNode.nodeType==1&&preNode.tagName=='TABLE')&&domUtils.isStartInblock(rng)){var first=domUtils.findParent(me.selection.getStart(),function(n){return domUtils.isBlockElm(n);},true);if(first&&(/t(h|d)/i.test(first.tagName)||first===start.firstChild)){me.execCommand('insertparagraphbeforetable');domUtils.preventDefault(evt);}}}}}if((evt.ctrlKey||evt.metaKey)&&evt.keyCode=='67'){tableCopyList=null;var ut=getUETableBySelected(me);if(ut){var tds=ut.selectedTds;isFullCol=ut.isFullCol();isFullRow=ut.isFullRow();tableCopyList=[[ut.cloneCell(tds[0],null,true)]];for(var i=1,ci;ci=tds[i];i++){if(ci.parentNode!==tds[i-1].parentNode){tableCopyList.push([ut.cloneCell(ci,null,true)]);}else{tableCopyList[tableCopyList.length-1].push(ut.cloneCell(ci,null,true));}}}}});me.addListener("tablehasdeleted",function(){toggleDraggableState(this,false,"",null);if(dragButton)domUtils.remove(dragButton);});me.addListener('beforepaste',function(cmd,html){var me=this;var rng=me.selection.getRange();if(domUtils.findParentByTagName(rng.startContainer,'caption',true)){var div=me.document.createElement("div");div.innerHTML=html.html;//trace:3729
html.html=div[browser.ie9below?'innerText':'textContent'];return;}var table=getUETableBySelected(me);if(tableCopyList){me.fireEvent('saveScene');var rng=me.selection.getRange();var td=domUtils.findParentByTagName(rng.startContainer,['td','th'],true),tmpNode,preNode;if(td){var ut=getUETable(td);if(isFullRow){var rowIndex=ut.getCellInfo(td).rowIndex;if(td.tagName=='TH'){rowIndex++;}for(var i=0,ci;ci=tableCopyList[i++];){var tr=ut.insertRow(rowIndex++,"td");for(var j=0,cj;cj=ci[j];j++){var cell=tr.cells[j];if(!cell){cell=tr.insertCell(j);}cell.innerHTML=cj.innerHTML;cj.getAttribute('width')&&cell.setAttribute('width',cj.getAttribute('width'));cj.getAttribute('vAlign')&&cell.setAttribute('vAlign',cj.getAttribute('vAlign'));cj.getAttribute('align')&&cell.setAttribute('align',cj.getAttribute('align'));cj.style.cssText&&(cell.style.cssText=cj.style.cssText);}for(var j=0,cj;cj=tr.cells[j];j++){if(!ci[j])break;cj.innerHTML=ci[j].innerHTML;ci[j].getAttribute('width')&&cj.setAttribute('width',ci[j].getAttribute('width'));ci[j].getAttribute('vAlign')&&cj.setAttribute('vAlign',ci[j].getAttribute('vAlign'));ci[j].getAttribute('align')&&cj.setAttribute('align',ci[j].getAttribute('align'));ci[j].style.cssText&&(cj.style.cssText=ci[j].style.cssText);}}}else{if(isFullCol){cellInfo=ut.getCellInfo(td);var maxColNum=0;for(var j=0,ci=tableCopyList[0],cj;cj=ci[j++];){maxColNum+=cj.colSpan||1;}me.__hasEnterExecCommand=true;for(i=0;i<maxColNum;i++){me.execCommand('insertcol');}me.__hasEnterExecCommand=false;td=ut.table.rows[0].cells[cellInfo.cellIndex];if(td.tagName=='TH'){td=ut.table.rows[1].cells[cellInfo.cellIndex];}}for(var i=0,ci;ci=tableCopyList[i++];){tmpNode=td;for(var j=0,cj;cj=ci[j++];){if(td){td.innerHTML=cj.innerHTML;//todo 定制处理
cj.getAttribute('width')&&td.setAttribute('width',cj.getAttribute('width'));cj.getAttribute('vAlign')&&td.setAttribute('vAlign',cj.getAttribute('vAlign'));cj.getAttribute('align')&&td.setAttribute('align',cj.getAttribute('align'));cj.style.cssText&&(td.style.cssText=cj.style.cssText);preNode=td;td=td.nextSibling;}else{var cloneTd=cj.cloneNode(true);domUtils.removeAttributes(cloneTd,['class','rowSpan','colSpan']);preNode.parentNode.appendChild(cloneTd);}}td=ut.getNextCell(tmpNode,true,true);if(!tableCopyList[i])break;if(!td){var cellInfo=ut.getCellInfo(tmpNode);ut.table.insertRow(ut.table.rows.length);ut.update();td=ut.getVSideCell(tmpNode,true);}}}ut.update();}else{table=me.document.createElement('table');for(var i=0,ci;ci=tableCopyList[i++];){var tr=table.insertRow(table.rows.length);for(var j=0,cj;cj=ci[j++];){cloneTd=UT.cloneCell(cj,null,true);domUtils.removeAttributes(cloneTd,['class']);tr.appendChild(cloneTd);}if(j==2&&cloneTd.rowSpan>1){cloneTd.rowSpan=1;}}var defaultValue=getDefaultValue(me),width=me.body.offsetWidth-(parseInt(domUtils.getComputedStyle(me.body,'margin-left'),10)*2)-defaultValue.tableBorder*2-(me.options.offsetWidth||0);me.execCommand('insertHTML','<table  '+(isFullCol&&isFullRow?'width="'+width+'"':'')+'>'+table.innerHTML.replace(/>\s*</g,'><').replace(/\bth\b/gi,"td")+'</table>');}me.fireEvent('contentchange');me.fireEvent('saveScene');html.html='';return true;}else{var div=me.document.createElement("div"),tables;div.innerHTML=html.html;tables=div.getElementsByTagName("table");if(domUtils.findParentByTagName(me.selection.getStart(),'table')){utils.each(tables,function(t){domUtils.remove(t);});if(domUtils.findParentByTagName(me.selection.getStart(),'caption',true)){div.innerHTML=div[browser.ie?'innerText':'textContent'];}}else{utils.each(tables,function(table){removeStyleSize(table,true);domUtils.removeAttributes(table,['style','border']);utils.each(domUtils.getElementsByTagName(table,"td"),function(td){if(isEmptyBlock(td)){domUtils.fillNode(me.document,td);}removeStyleSize(td,true);//                            domUtils.removeAttributes(td, ['style'])
});});}html.html=div.innerHTML;}});me.addListener('afterpaste',function(){utils.each(domUtils.getElementsByTagName(me.body,"table"),function(table){if(table.offsetWidth>me.body.offsetWidth){var defaultValue=getDefaultValue(me,table);table.style.width=me.body.offsetWidth-(parseInt(domUtils.getComputedStyle(me.body,'margin-left'),10)*2)-defaultValue.tableBorder*2-(me.options.offsetWidth||0)+'px';}});});me.addListener('blur',function(){tableCopyList=null;});var timer;me.addListener('keydown',function(){clearTimeout(timer);timer=setTimeout(function(){var rng=me.selection.getRange(),cell=domUtils.findParentByTagName(rng.startContainer,['th','td'],true);if(cell){var table=cell.parentNode.parentNode.parentNode;if(table.offsetWidth>table.getAttribute("width")){cell.style.wordBreak="break-all";}}},100);});me.addListener("selectionchange",function(){toggleDraggableState(me,false,"",null);});//内容变化时触发索引更新
//todo 可否考虑标记检测，如果不涉及表格的变化就不进行索引重建和更新
me.addListener("contentchange",function(){var me=this;//尽可能排除一些不需要更新的状况
hideDragLine(me);if(getUETableBySelected(me))return;var rng=me.selection.getRange();var start=rng.startContainer;start=domUtils.findParentByTagName(start,['td','th'],true);utils.each(domUtils.getElementsByTagName(me.document,'table'),function(table){if(me.fireEvent("excludetable",table)===true)return;table.ueTable=new UT(table);//trace:3742
//                utils.each(domUtils.getElementsByTagName(me.document, 'td'), function (td) {
//
//                    if (domUtils.isEmptyBlock(td) && td !== start) {
//                        domUtils.fillNode(me.document, td);
//                        if (browser.ie && browser.version == 6) {
//                            td.innerHTML = '&nbsp;'
//                        }
//                    }
//                });
//                utils.each(domUtils.getElementsByTagName(me.document, 'th'), function (th) {
//                    if (domUtils.isEmptyBlock(th) && th !== start) {
//                        domUtils.fillNode(me.document, th);
//                        if (browser.ie && browser.version == 6) {
//                            th.innerHTML = '&nbsp;'
//                        }
//                    }
//                });
table.onmouseover=function(){me.fireEvent('tablemouseover',table);};table.onmousemove=function(){me.fireEvent('tablemousemove',table);me.options.tableDragable&&toggleDragButton(true,this,me);utils.defer(function(){me.fireEvent('contentchange',50);},true);};table.onmouseout=function(){me.fireEvent('tablemouseout',table);toggleDraggableState(me,false,"",null);hideDragLine(me);};table.onclick=function(evt){evt=me.window.event||evt;var target=getParentTdOrTh(evt.target||evt.srcElement);if(!target)return;var ut=getUETable(target),table=ut.table,cellInfo=ut.getCellInfo(target),cellsRange,rng=me.selection.getRange();//                    if ("topLeft" == inPosition(table, mouseCoords(evt))) {
//                        cellsRange = ut.getCellsRange(ut.table.rows[0].cells[0], ut.getLastCell());
//                        ut.setSelected(cellsRange);
//                        return;
//                    }
//                    if ("bottomRight" == inPosition(table, mouseCoords(evt))) {
//
//                        return;
//                    }
if(inTableSide(table,target,evt,true)){var endTdCol=ut.getCell(ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].rowIndex,ut.indexTable[ut.rowsNum-1][cellInfo.colIndex].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdCol){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}else{if(target!==endTdCol){cellsRange=ut.getCellsRange(target,endTdCol);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdCol).select();}}return;}if(inTableSide(table,target,evt)){var endTdRow=ut.getCell(ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].rowIndex,ut.indexTable[cellInfo.rowIndex][ut.colsNum-1].cellIndex);if(evt.shiftKey&&ut.selectedTds.length){if(ut.selectedTds[0]!==endTdRow){cellsRange=ut.getCellsRange(ut.selectedTds[0],endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}else{if(target!==endTdRow){cellsRange=ut.getCellsRange(target,endTdRow);ut.setSelected(cellsRange);}else{rng&&rng.selectNodeContents(endTdRow).select();}}}};});switchBorderColor(me,true);});domUtils.on(me.document,"mousemove",mouseMoveEvent);domUtils.on(me.document,"mouseout",function(evt){var target=evt.target||evt.srcElement;if(target.tagName=="TABLE"){toggleDraggableState(me,false,"",null);}});/**
             * 表格隔行变色
             */me.addListener("interlacetable",function(type,table,classList){if(!table)return;var me=this,rows=table.rows,len=rows.length,getClass=function getClass(list,index,repeat){return list[index]?list[index]:repeat?list[index%list.length]:"";};for(var i=0;i<len;i++){rows[i].className=getClass(classList||me.options.classList,i,true);}});me.addListener("uninterlacetable",function(type,table){if(!table)return;var me=this,rows=table.rows,classList=me.options.classList,len=rows.length;for(var i=0;i<len;i++){domUtils.removeClasses(rows[i],classList);}});me.addListener("mousedown",mouseDownEvent);me.addListener("mouseup",mouseUpEvent);//拖动的时候触发mouseup
domUtils.on(me.body,'dragstart',function(evt){mouseUpEvent.call(me,'dragstart',evt);});me.addOutputRule(function(root){utils.each(root.getNodesByTagName('div'),function(n){if(n.getAttr('id')=='ue_tableDragLine'){n.parentNode.removeChild(n);}});});var currentRowIndex=0;me.addListener("mousedown",function(){currentRowIndex=0;});me.addListener('tabkeydown',function(){var range=this.selection.getRange(),common=range.getCommonAncestor(true,true),table=domUtils.findParentByTagName(common,'table');if(table){if(domUtils.findParentByTagName(common,'caption',true)){var cell=domUtils.getElementsByTagName(table,'th td');if(cell&&cell.length){range.setStart(cell[0],0).setCursor(false,true);}}else{var cell=domUtils.findParentByTagName(common,['td','th'],true),ua=getUETable(cell);currentRowIndex=cell.rowSpan>1?currentRowIndex:ua.getCellInfo(cell).rowIndex;var nextCell=ua.getTabNextCell(cell,currentRowIndex);if(nextCell){if(isEmptyBlock(nextCell)){range.setStart(nextCell,0).setCursor(false,true);}else{range.selectNodeContents(nextCell).select();}}else{me.fireEvent('saveScene');me.__hasEnterExecCommand=true;this.execCommand('insertrownext');me.__hasEnterExecCommand=false;range=this.selection.getRange();range.setStart(table.rows[table.rows.length-1].cells[0],0).setCursor();me.fireEvent('saveScene');}}return true;}});browser.ie&&me.addListener('selectionchange',function(){toggleDraggableState(this,false,"",null);});me.addListener("keydown",function(type,evt){var me=this;//处理在表格的最后一个输入tab产生新的表格
var keyCode=evt.keyCode||evt.which;if(keyCode==8||keyCode==46){return;}var notCtrlKey=!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey;notCtrlKey&&removeSelectedClass(domUtils.getElementsByTagName(me.body,"td"));var ut=getUETableBySelected(me);if(!ut)return;notCtrlKey&&ut.clearSelected();});me.addListener("beforegetcontent",function(){switchBorderColor(this,false);browser.ie&&utils.each(this.document.getElementsByTagName('caption'),function(ci){if(domUtils.isEmptyNode(ci)){ci.innerHTML='&nbsp;';}});});me.addListener("aftergetcontent",function(){switchBorderColor(this,true);});me.addListener("getAllHtml",function(){removeSelectedClass(me.document.getElementsByTagName("td"));});//修正全屏状态下插入的表格宽度在非全屏状态下撑开编辑器的情况
me.addListener("fullscreenchanged",function(type,fullscreen){if(!fullscreen){var ratio=this.body.offsetWidth/document.body.offsetWidth,tables=domUtils.getElementsByTagName(this.body,"table");utils.each(tables,function(table){if(table.offsetWidth<me.body.offsetWidth)return false;var tds=domUtils.getElementsByTagName(table,"td"),backWidths=[];utils.each(tds,function(td){backWidths.push(td.offsetWidth);});for(var i=0,td;td=tds[i];i++){td.setAttribute("width",Math.floor(backWidths[i]*ratio));}table.setAttribute("width",Math.floor(getTableWidth(me,needIEHack,getDefaultValue(me))));});}});//重写execCommand命令，用于处理框选时的处理
var oldExecCommand=me.execCommand;me.execCommand=function(cmd,datatat){var me=this;cmd=cmd.toLowerCase();var ut=getUETableBySelected(me),tds,range=new dom.Range(me.document),cmdFun=me.commands[cmd]||UE.commands[cmd],result;if(!cmdFun)return;if(ut&&!commands[cmd]&&!cmdFun.notNeedUndo&&!me.__hasEnterExecCommand){me.__hasEnterExecCommand=true;me.fireEvent("beforeexeccommand",cmd);tds=ut.selectedTds;var lastState=-2,lastValue=-2,value,state;for(var i=0,td;td=tds[i];i++){if(isEmptyBlock(td)){range.setStart(td,0).setCursor(false,true);}else{range.selectNode(td).select(true);}state=me.queryCommandState(cmd);value=me.queryCommandValue(cmd);if(state!=-1){if(lastState!==state||lastValue!==value){me._ignoreContentChange=true;result=oldExecCommand.apply(me,arguments);me._ignoreContentChange=false;}lastState=me.queryCommandState(cmd);lastValue=me.queryCommandValue(cmd);if(domUtils.isEmptyBlock(td)){domUtils.fillNode(me.document,td);}}}range.setStart(tds[0],0).shrinkBoundary(true).setCursor(false,true);me.fireEvent('contentchange');me.fireEvent("afterexeccommand",cmd);me.__hasEnterExecCommand=false;me._selectionChange();}else{result=oldExecCommand.apply(me,arguments);}return result;};});/**
         * 删除obj的宽高style，改成属性宽高
         * @param obj
         * @param replaceToProperty
         */function removeStyleSize(obj,replaceToProperty){removeStyle(obj,"width",true);removeStyle(obj,"height",true);}function removeStyle(obj,styleName,replaceToProperty){if(obj.style[styleName]){replaceToProperty&&obj.setAttribute(styleName,parseInt(obj.style[styleName],10));obj.style[styleName]="";}}function getParentTdOrTh(ele){if(ele.tagName=="TD"||ele.tagName=="TH")return ele;var td;if(td=domUtils.findParentByTagName(ele,"td",true)||domUtils.findParentByTagName(ele,"th",true))return td;return null;}function isEmptyBlock(node){var reg=new RegExp(domUtils.fillChar,'g');if(node[browser.ie?'innerText':'textContent'].replace(/^\s*$/,'').replace(reg,'').length>0){return 0;}for(var n in dtd.$isNotEmpty){if(node.getElementsByTagName(n).length){return 0;}}return 1;}function mouseCoords(evt){if(evt.pageX||evt.pageY){return {x:evt.pageX,y:evt.pageY};}return {x:evt.clientX+me.document.body.scrollLeft-me.document.body.clientLeft,y:evt.clientY+me.document.body.scrollTop-me.document.body.clientTop};}function mouseMoveEvent(evt){if(isEditorDisabled()){return;}try{//普通状态下鼠标移动
var target=getParentTdOrTh(evt.target||evt.srcElement),pos;//区分用户的行为是拖动还是双击
if(isInResizeBuffer){me.body.style.webkitUserSelect='none';if(Math.abs(userActionStatus.x-evt.clientX)>offsetOfTableCell||Math.abs(userActionStatus.y-evt.clientY)>offsetOfTableCell){clearTableDragTimer();isInResizeBuffer=false;singleClickState=0;//drag action
tableBorderDrag(evt);}}//修改单元格大小时的鼠标移动
if(onDrag&&dragTd){singleClickState=0;me.body.style.webkitUserSelect='none';me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();pos=mouseCoords(evt);toggleDraggableState(me,true,onDrag,pos,target);if(onDrag=="h"){dragLine.style.left=getPermissionX(dragTd,evt)+"px";}else if(onDrag=="v"){dragLine.style.top=getPermissionY(dragTd,evt)+"px";}return;}//当鼠标处于table上时，修改移动过程中的光标状态
if(target){//针对使用table作为容器的组件不触发拖拽效果
if(me.fireEvent('excludetable',target)===true)return;pos=mouseCoords(evt);var state=getRelation(target,pos),table=domUtils.findParentByTagName(target,"table",true);if(inTableSide(table,target,evt,true)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"h.png),pointer";}else if(inTableSide(table,target,evt)){if(me.fireEvent("excludetable",table)===true)return;me.body.style.cursor="url("+me.options.cursorpath+"v.png),pointer";}else{me.body.style.cursor="text";if(/\d/.test(state)){state=state.replace(/\d/,'');target=getUETable(target).getPreviewCell(target,state=="v");}//位于第一行的顶部或者第一列的左边时不可拖动
toggleDraggableState(me,target?!!state:false,target?state:'',pos,target);}}else{toggleDragButton(false,table,me);}}catch(e){}}var dragButtonTimer;function toggleDragButton(show,table,editor){if(!show){if(dragOver)return;dragButtonTimer=setTimeout(function(){!dragOver&&dragButton&&dragButton.parentNode&&dragButton.parentNode.removeChild(dragButton);},2000);}else{createDragButton(table,editor);}}function createDragButton(table,editor){var pos=domUtils.getXY(table),doc=table.ownerDocument;if(dragButton&&dragButton.parentNode)return dragButton;dragButton=doc.createElement("div");dragButton.contentEditable=false;dragButton.innerHTML="";dragButton.style.cssText="width:15px;height:15px;background-image:url("+editor.options.UEDITOR_HOME_URL+"dialogs/table/dragicon.png);position: absolute;cursor:move;top:"+(pos.y-15)+"px;left:"+pos.x+"px;";domUtils.unSelectable(dragButton);dragButton.onmouseover=function(evt){dragOver=true;};dragButton.onmouseout=function(evt){dragOver=false;};domUtils.on(dragButton,'click',function(type,evt){doClick(evt,this);});domUtils.on(dragButton,'dblclick',function(type,evt){doDblClick(evt);});domUtils.on(dragButton,'dragstart',function(type,evt){domUtils.preventDefault(evt);});var timer;function doClick(evt,button){// 部分浏览器下需要清理
clearTimeout(timer);timer=setTimeout(function(){editor.fireEvent("tableClicked",table,button);},300);}function doDblClick(evt){clearTimeout(timer);var ut=getUETable(table),start=table.rows[0].cells[0],end=ut.getLastCell(),range=ut.getCellsRange(start,end);editor.selection.getRange().setStart(start,0).setCursor(false,true);ut.setSelected(range);}doc.body.appendChild(dragButton);}//    function inPosition(table, pos) {
//        var tablePos = domUtils.getXY(table),
//            width = table.offsetWidth,
//            height = table.offsetHeight;
//        if (pos.x - tablePos.x < 5 && pos.y - tablePos.y < 5) {
//            return "topLeft";
//        } else if (tablePos.x + width - pos.x < 5 && tablePos.y + height - pos.y < 5) {
//            return "bottomRight";
//        }
//    }
function inTableSide(table,cell,evt,top){var pos=mouseCoords(evt),state=getRelation(cell,pos);if(top){var caption=table.getElementsByTagName("caption")[0],capHeight=caption?caption.offsetHeight:0;return state=="v1"&&pos.y-domUtils.getXY(table).y-capHeight<8;}else{return state=="h1"&&pos.x-domUtils.getXY(table).x<8;}}/**
         * 获取拖动时允许的X轴坐标
         * @param dragTd
         * @param evt
         */function getPermissionX(dragTd,evt){var ut=getUETable(dragTd);if(ut){var preTd=ut.getSameEndPosCells(dragTd,"x")[0],nextTd=ut.getSameStartPosXCells(dragTd)[0],mouseX=mouseCoords(evt).x,left=(preTd?domUtils.getXY(preTd).x:domUtils.getXY(ut.table).x)+20,right=nextTd?domUtils.getXY(nextTd).x+nextTd.offsetWidth-20:me.body.offsetWidth+5||parseInt(domUtils.getComputedStyle(me.body,"width"),10);left+=cellMinWidth;right-=cellMinWidth;return mouseX<left?left:mouseX>right?right:mouseX;}}/**
         * 获取拖动时允许的Y轴坐标
         */function getPermissionY(dragTd,evt){try{var top=domUtils.getXY(dragTd).y,mousePosY=mouseCoords(evt).y;return mousePosY<top?top:mousePosY;}catch(e){}}/**
         * 移动状态切换
         */function toggleDraggableState(editor,draggable,dir,mousePos,cell){try{editor.body.style.cursor=dir=="h"?"col-resize":dir=="v"?"row-resize":"text";if(browser.ie){if(dir&&!mousedown&&!getUETableBySelected(editor)){getDragLine(editor,editor.document);showDragLineAt(dir,cell);}else{hideDragLine(editor);}}onBorder=draggable;}catch(e){}}/**
         * 获取鼠标与当前单元格的相对位置
         * @param ele
         * @param mousePos
         */function getRelation(ele,mousePos){var elePos=domUtils.getXY(ele);if(!elePos){return '';}if(elePos.x+ele.offsetWidth-mousePos.x<cellBorderWidth){return "h";}if(mousePos.x-elePos.x<cellBorderWidth){return 'h1';}if(elePos.y+ele.offsetHeight-mousePos.y<cellBorderWidth){return "v";}if(mousePos.y-elePos.y<cellBorderWidth){return 'v1';}return '';}function mouseDownEvent(type,evt){if(isEditorDisabled()){return;}userActionStatus={x:evt.clientX,y:evt.clientY};//右键菜单单独处理
if(evt.button==2){var ut=getUETableBySelected(me),flag=false;if(ut){var td=getTargetTd(me,evt);utils.each(ut.selectedTds,function(ti){if(ti===td){flag=true;}});if(!flag){removeSelectedClass(domUtils.getElementsByTagName(me.body,"th td"));ut.clearSelected();}else{td=ut.selectedTds[0];setTimeout(function(){me.selection.getRange().setStart(td,0).setCursor(false,true);},0);}}}else{tableClickHander(evt);}}//清除表格的计时器
function tableDbclickHandler(evt){singleClickState=0;evt=evt||me.window.event;var target=getParentTdOrTh(evt.target||evt.srcElement);if(target){var h;if(h=getRelation(target,mouseCoords(evt))){hideDragLine(me);if(h=='h1'){h='h';if(inTableSide(domUtils.findParentByTagName(target,"table"),target,evt)){me.execCommand('adaptbywindow');}else{target=getUETable(target).getPreviewCell(target);if(target){var rng=me.selection.getRange();rng.selectNodeContents(target).setCursor(true,true);}}}if(h=='h'){var ut=getUETable(target),table=ut.table,cells=getCellsByMoveBorder(target,table,true);cells=extractArray(cells,'left');ut.width=ut.offsetWidth;var oldWidth=[],newWidth=[];utils.each(cells,function(cell){oldWidth.push(cell.offsetWidth);});utils.each(cells,function(cell){cell.removeAttribute("width");});window.setTimeout(function(){//是否允许改变
var changeable=true;utils.each(cells,function(cell,index){var width=cell.offsetWidth;if(width>oldWidth[index]){changeable=false;return false;}newWidth.push(width);});var change=changeable?newWidth:oldWidth;utils.each(cells,function(cell,index){cell.width=change[index]-getTabcellSpace();});},0);//                    minWidth -= cellMinWidth;
//
//                    table.removeAttribute("width");
//                    utils.each(cells, function (cell) {
//                        cell.style.width = "";
//                        cell.width -= minWidth;
//                    });
}}}}function tableClickHander(evt){removeSelectedClass(domUtils.getElementsByTagName(me.body,"td th"));//trace:3113
//选中单元格，点击table外部，不会清掉table上挂的ueTable,会引起getUETableBySelected方法返回值
utils.each(me.document.getElementsByTagName('table'),function(t){t.ueTable=null;});startTd=getTargetTd(me,evt);if(!startTd)return;var table=domUtils.findParentByTagName(startTd,"table",true);ut=getUETable(table);ut&&ut.clearSelected();//判断当前鼠标状态
if(!onBorder){me.document.body.style.webkitUserSelect='';mousedown=true;me.addListener('mouseover',mouseOverEvent);}else{//边框上的动作处理
borderActionHandler(evt);}}//处理表格边框上的动作, 这里做延时处理，避免两种动作互相影响
function borderActionHandler(evt){if(browser.ie){evt=reconstruct(evt);}clearTableDragTimer();//是否正在等待resize的缓冲中
isInResizeBuffer=true;tableDragTimer=setTimeout(function(){tableBorderDrag(evt);},dblclickTime);}function extractArray(originArr,key){var result=[],tmp=null;for(var i=0,len=originArr.length;i<len;i++){tmp=originArr[i][key];if(tmp){result.push(tmp);}}return result;}function clearTableDragTimer(){tableDragTimer&&clearTimeout(tableDragTimer);tableDragTimer=null;}function reconstruct(obj){var attrs=['pageX','pageY','clientX','clientY','srcElement','target'],newObj={};if(obj){for(var i=0,key,val;key=attrs[i];i++){val=obj[key];val&&(newObj[key]=val);}}return newObj;}//边框拖动
function tableBorderDrag(evt){isInResizeBuffer=false;startTd=evt.target||evt.srcElement;if(!startTd)return;var state=getRelation(startTd,mouseCoords(evt));if(/\d/.test(state)){state=state.replace(/\d/,'');startTd=getUETable(startTd).getPreviewCell(startTd,state=='v');}hideDragLine(me);getDragLine(me,me.document);me.fireEvent('saveScene');showDragLineAt(state,startTd);mousedown=true;//拖动开始
onDrag=state;dragTd=startTd;}function mouseUpEvent(type,evt){if(isEditorDisabled()){return;}clearTableDragTimer();isInResizeBuffer=false;if(onBorder){singleClickState=++singleClickState%3;userActionStatus={x:evt.clientX,y:evt.clientY};tableResizeTimer=setTimeout(function(){singleClickState>0&&singleClickState--;},dblclickTime);if(singleClickState===2){singleClickState=0;tableDbclickHandler(evt);return;}}if(evt.button==2)return;var me=this;//清除表格上原生跨选问题
var range=me.selection.getRange(),start=domUtils.findParentByTagName(range.startContainer,'table',true),end=domUtils.findParentByTagName(range.endContainer,'table',true);if(start||end){if(start===end){start=domUtils.findParentByTagName(range.startContainer,['td','th','caption'],true);end=domUtils.findParentByTagName(range.endContainer,['td','th','caption'],true);if(start!==end){me.selection.clearRange();}}else{me.selection.clearRange();}}mousedown=false;me.document.body.style.webkitUserSelect='';//拖拽状态下的mouseUP
if(onDrag&&dragTd){me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();singleClickState=0;dragLine=me.document.getElementById('ue_tableDragLine');// trace 3973
if(dragLine){var dragTdPos=domUtils.getXY(dragTd),dragLinePos=domUtils.getXY(dragLine);switch(onDrag){case"h":changeColWidth(dragTd,dragLinePos.x-dragTdPos.x);break;case"v":changeRowHeight(dragTd,dragLinePos.y-dragTdPos.y-dragTd.offsetHeight);break;default:}onDrag="";dragTd=null;hideDragLine(me);me.fireEvent('saveScene');return;}}//正常状态下的mouseup
if(!startTd){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,"td",true);if(!target)target=domUtils.findParentByTagName(evt.target||evt.srcElement,"th",true);if(target&&(target.tagName=="TD"||target.tagName=="TH")){if(me.fireEvent("excludetable",target)===true)return;range=new dom.Range(me.document);range.setStart(target,0).setCursor(false,true);}}else{var ut=getUETable(startTd),cell=ut?ut.selectedTds[0]:null;if(cell){range=new dom.Range(me.document);if(domUtils.isEmptyBlock(cell)){range.setStart(cell,0).setCursor(false,true);}else{range.selectNodeContents(cell).shrinkBoundary().setCursor(false,true);}}else{range=me.selection.getRange().shrinkBoundary();if(!range.collapsed){var start=domUtils.findParentByTagName(range.startContainer,['td','th'],true),end=domUtils.findParentByTagName(range.endContainer,['td','th'],true);//在table里边的不能清除
if(start&&!end||!start&&end||start&&end&&start!==end){range.setCursor(false,true);}}}startTd=null;me.removeListener('mouseover',mouseOverEvent);}me._selectionChange(250,evt);}function mouseOverEvent(type,evt){if(isEditorDisabled()){return;}var me=this,tar=evt.target||evt.srcElement;currentTd=domUtils.findParentByTagName(tar,"td",true)||domUtils.findParentByTagName(tar,"th",true);//需要判断两个TD是否位于同一个表格内
if(startTd&&currentTd&&(startTd.tagName=="TD"&&currentTd.tagName=="TD"||startTd.tagName=="TH"&&currentTd.tagName=="TH")&&domUtils.findParentByTagName(startTd,'table')==domUtils.findParentByTagName(currentTd,'table')){var ut=getUETable(currentTd);if(startTd!=currentTd){me.document.body.style.webkitUserSelect='none';me.selection.getNative()[browser.ie9below?'empty':'removeAllRanges']();var range=ut.getCellsRange(startTd,currentTd);ut.setSelected(range);}else{me.document.body.style.webkitUserSelect='';ut.clearSelected();}}evt.preventDefault?evt.preventDefault():evt.returnValue=false;}function setCellHeight(cell,height,backHeight){var lineHight=parseInt(domUtils.getComputedStyle(cell,"line-height"),10),tmpHeight=backHeight+height;height=tmpHeight<lineHight?lineHight:tmpHeight;if(cell.style.height)cell.style.height="";cell.rowSpan==1?cell.setAttribute("height",height):cell.removeAttribute&&cell.removeAttribute("height");}function changeColWidth(cell,changeValue){var ut=getUETable(cell);if(ut){//根据当前移动的边框获取相关的单元格
var table=ut.table,cells=getCellsByMoveBorder(cell,table);table.style.width="";table.removeAttribute("width");//修正改变量
changeValue=correctChangeValue(changeValue,cell,cells);if(cell.nextSibling){utils.each(cells,function(cellGroup){cellGroup.left.width=+cellGroup.left.width+changeValue;cellGroup.right&&(cellGroup.right.width=+cellGroup.right.width-changeValue);});}else{utils.each(cells,function(cellGroup){cellGroup.left.width-=-changeValue;});}}}function isEditorDisabled(){return me.body.contentEditable==="false";}function changeRowHeight(td,changeValue){if(Math.abs(changeValue)<10)return;var ut=getUETable(td);if(ut){var cells=ut.getSameEndPosCells(td,"y"),//备份需要连带变化的td的原始高度，否则后期无法获取正确的值
backHeight=cells[0]?cells[0].offsetHeight:0;for(var i=0,cell;cell=cells[i++];){setCellHeight(cell,changeValue,backHeight);}}}/**
         * 获取调整单元格大小的相关单元格
         * @isContainMergeCell 返回的结果中是否包含发生合并后的单元格
         */function getCellsByMoveBorder(cell,table,isContainMergeCell){if(!table){table=domUtils.findParentByTagName(cell,'table');}if(!table){return null;}//获取到该单元格所在行的序列号
var index=domUtils.getNodeIndex(cell),temp=cell,rows=table.rows,colIndex=0;while(temp){//获取到当前单元格在未发生单元格合并时的序列
if(temp.nodeType===1){colIndex+=temp.colSpan||1;}temp=temp.previousSibling;}temp=null;//记录想关的单元格
var borderCells=[];utils.each(rows,function(tabRow){var cells=tabRow.cells,currIndex=0;utils.each(cells,function(tabCell){currIndex+=tabCell.colSpan||1;if(currIndex===colIndex){borderCells.push({left:tabCell,right:tabCell.nextSibling||null});return false;}else if(currIndex>colIndex){if(isContainMergeCell){borderCells.push({left:tabCell});}return false;}});});return borderCells;}function correctChangeValue(changeValue,relatedCell,cells){//为单元格的paading预留空间
changeValue-=getTabcellSpace();if(changeValue<0){return 0;}changeValue-=getTableCellWidth(relatedCell);//确定方向
var direction=changeValue<0?'left':'right';changeValue=Math.abs(changeValue);//只关心非最后一个单元格就可以
utils.each(cells,function(cellGroup){var curCell=cellGroup[direction];//为单元格保留最小空间
if(curCell){changeValue=Math.min(changeValue,getTableCellWidth(curCell)-cellMinWidth);}});//修正越界
changeValue=changeValue<0?0:changeValue;return direction==='left'?-changeValue:changeValue;}function getTableCellWidth(cell){var width=0,//偏移纠正量
width=cell.offsetWidth-getTabcellSpace();//最后一个节点纠正一下
if(!cell.nextSibling){width-=getTableCellOffset(cell);}width=width<0?0:width;try{cell.width=width;}catch(e){}return width;}/**
         * 获取单元格所在表格的最末单元格的偏移量
         */function getTableCellOffset(cell){tab=domUtils.findParentByTagName(cell,"table",false);if(tab.offsetVal===undefined){var prev=cell.previousSibling;if(prev){//最后一个单元格和前一个单元格的width diff结果 如果恰好为一个border width， 则条件成立
tab.offsetVal=cell.offsetWidth-prev.offsetWidth===UT.borderWidth?UT.borderWidth:0;}else{tab.offsetVal=0;}}return tab.offsetVal;}function getTabcellSpace(){if(UT.tabcellSpace===undefined){var tab=me.document.createElement("table"),tbody=me.document.createElement("tbody"),trow=me.document.createElement("tr"),tabcell=me.document.createElement("td"),mirror=null;tabcell.style.cssText='border: 0;';tabcell.width=1;trow.appendChild(tabcell);trow.appendChild(mirror=tabcell.cloneNode(false));tbody.appendChild(trow);tab.appendChild(tbody);tab.style.cssText="visibility: hidden;";me.body.appendChild(tab);UT.paddingSpace=tabcell.offsetWidth-1;var tmpTabWidth=tab.offsetWidth;tabcell.style.cssText='';mirror.style.cssText='';UT.borderWidth=(tab.offsetWidth-tmpTabWidth)/3;UT.tabcellSpace=UT.paddingSpace+UT.borderWidth;me.body.removeChild(tab);}getTabcellSpace=function getTabcellSpace(){return UT.tabcellSpace;};return UT.tabcellSpace;}function getDragLine(editor,doc){if(mousedown)return;dragLine=editor.document.createElement("div");domUtils.setAttributes(dragLine,{id:"ue_tableDragLine",unselectable:'on',contenteditable:false,'onresizestart':'return false','ondragstart':'return false','onselectstart':'return false',style:"background-color:blue;position:absolute;padding:0;margin:0;background-image:none;border:0px none;opacity:0;filter:alpha(opacity=0)"});editor.body.appendChild(dragLine);}function hideDragLine(editor){if(mousedown)return;var line;while(line=editor.document.getElementById('ue_tableDragLine')){domUtils.remove(line);}}/**
         * 依据state（v|h）在cell位置显示横线
         * @param state
         * @param cell
         */function showDragLineAt(state,cell){if(!cell)return;var table=domUtils.findParentByTagName(cell,"table"),caption=table.getElementsByTagName('caption'),width=table.offsetWidth,height=table.offsetHeight-(caption.length>0?caption[0].offsetHeight:0),tablePos=domUtils.getXY(table),cellPos=domUtils.getXY(cell),css;switch(state){case"h":css='height:'+height+'px;top:'+(tablePos.y+(caption.length>0?caption[0].offsetHeight:0))+'px;left:'+(cellPos.x+cell.offsetWidth);dragLine.style.cssText=css+'px;position: absolute;display:block;background-color:blue;width:1px;border:0; color:blue;opacity:.3;filter:alpha(opacity=30)';break;case"v":css='width:'+width+'px;left:'+tablePos.x+'px;top:'+(cellPos.y+cell.offsetHeight);//必须加上border:0和color:blue，否则低版ie不支持背景色显示
dragLine.style.cssText=css+'px;overflow:hidden;position: absolute;display:block;background-color:blue;height:1px;border:0;color:blue;opacity:.2;filter:alpha(opacity=20)';break;default:}}/**
         * 当表格边框颜色为白色时设置为虚线,true为添加虚线
         * @param editor
         * @param flag
         */function switchBorderColor(editor,flag){var tableArr=domUtils.getElementsByTagName(editor.body,"table"),color;for(var i=0,node;node=tableArr[i++];){var td=domUtils.getElementsByTagName(node,"td");if(td[0]){if(flag){color=td[0].style.borderColor.replace(/\s/g,"");if(/(#ffffff)|(rgb\(255,255,255\))/ig.test(color))domUtils.addClass(node,"noBorderTable");}else{domUtils.removeClasses(node,"noBorderTable");}}}}function getTableWidth(editor,needIEHack,defaultValue){var body=editor.body;return body.offsetWidth-(needIEHack?parseInt(domUtils.getComputedStyle(body,'margin-left'),10)*2:0)-defaultValue.tableBorder*2-(editor.options.offsetWidth||0);}/**
         * 获取当前拖动的单元格
         */function getTargetTd(editor,evt){var target=domUtils.findParentByTagName(evt.target||evt.srcElement,["td","th"],true),dir=null;if(!target){return null;}dir=getRelation(target,mouseCoords(evt));//如果有前一个节点， 需要做一个修正， 否则可能会得到一个错误的td
if(!target){return null;}if(dir==='h1'&&target.previousSibling){var position=domUtils.getXY(target),cellWidth=target.offsetWidth;if(Math.abs(position.x+cellWidth-evt.clientX)>cellWidth/3){target=target.previousSibling;}}else if(dir==='v1'&&target.parentNode.previousSibling){var position=domUtils.getXY(target),cellHeight=target.offsetHeight;if(Math.abs(position.y+cellHeight-evt.clientY)>cellHeight/3){target=target.parentNode.previousSibling.firstChild;}}//排除了非td内部以及用于代码高亮部分的td
return target&&!(editor.fireEvent("excludetable",target)===true)?target:null;}};// plugins/table.sort.js
/**
     * Created with JetBrains PhpStorm.
     * User: Jinqn
     * Date: 13-10-12
     * Time: 上午10:20
     * To change this template use File | Settings | File Templates.
     */UE.UETable.prototype.sortTable=function(sortByCellIndex,compareFn){var table=this.table,rows=table.rows,trArray=[],flag=rows[0].cells[0].tagName==="TH",lastRowIndex=0;if(this.selectedTds.length){var range=this.cellsRange,len=range.endRowIndex+1;for(var i=range.beginRowIndex;i<len;i++){trArray[i]=rows[i];}trArray.splice(0,range.beginRowIndex);lastRowIndex=range.endRowIndex+1===this.rowsNum?0:range.endRowIndex+1;}else{for(var i=0,len=rows.length;i<len;i++){trArray[i]=rows[i];}}var Fn={'reversecurrent':function reversecurrent(td1,td2){return 1;},'orderbyasc':function orderbyasc(td1,td2){var value1=td1.innerText||td1.textContent,value2=td2.innerText||td2.textContent;return value1.localeCompare(value2);},'reversebyasc':function reversebyasc(td1,td2){var value1=td1.innerHTML,value2=td2.innerHTML;return value2.localeCompare(value1);},'orderbynum':function orderbynum(td1,td2){var value1=td1[browser.ie?'innerText':'textContent'].match(/\d+/),value2=td2[browser.ie?'innerText':'textContent'].match(/\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return (value1||0)-(value2||0);},'reversebynum':function reversebynum(td1,td2){var value1=td1[browser.ie?'innerText':'textContent'].match(/\d+/),value2=td2[browser.ie?'innerText':'textContent'].match(/\d+/);if(value1)value1=+value1[0];if(value2)value2=+value2[0];return (value2||0)-(value1||0);}};//对表格设置排序的标记data-sort-type
table.setAttribute('data-sort-type',compareFn&&typeof compareFn==="string"&&Fn[compareFn]?compareFn:'');//th不参与排序
flag&&trArray.splice(0,1);trArray=utils.sort(trArray,function(tr1,tr2){var result;if(compareFn&&typeof compareFn==="function"){result=compareFn.call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else if(compareFn&&typeof compareFn==="number"){result=1;}else if(compareFn&&typeof compareFn==="string"&&Fn[compareFn]){result=Fn[compareFn].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}else{result=Fn['orderbyasc'].call(this,tr1.cells[sortByCellIndex],tr2.cells[sortByCellIndex]);}return result;});var fragment=table.ownerDocument.createDocumentFragment();for(var j=0,len=trArray.length;j<len;j++){fragment.appendChild(trArray[j]);}var tbody=table.getElementsByTagName("tbody")[0];if(!lastRowIndex){tbody.appendChild(fragment);}else{tbody.insertBefore(fragment,rows[lastRowIndex-range.endRowIndex+range.beginRowIndex-1]);}};UE.plugins['tablesort']=function(){var me=this,UT=UE.UETable,getUETable=function getUETable(tdOrTable){return UT.getUETable(tdOrTable);},getTableItemsByRange=function getTableItemsByRange(editor){return UT.getTableItemsByRange(editor);};me.ready(function(){//添加表格可排序的样式
utils.cssRule('tablesort','table.sortEnabled tr.firstRow th,table.sortEnabled tr.firstRow td{padding-right:20px;background-repeat: no-repeat;background-position: center right;'+'   background-image:url('+me.options.themePath+me.options.theme+'/images/sortable.png);}',me.document);//做单元格合并操作时,清除可排序标识
me.addListener("afterexeccommand",function(type,cmd){if(cmd=='mergeright'||cmd=='mergedown'||cmd=='mergecells'){this.execCommand('disablesort');}});});//表格排序
UE.commands['sorttable']={queryCommandState:function queryCommandState(){var me=this,tableItems=getTableItemsByRange(me);if(!tableItems.cell)return -1;var table=tableItems.table,cells=table.getElementsByTagName("td");for(var i=0,cell;cell=cells[i++];){if(cell.rowSpan!=1||cell.colSpan!=1)return -1;}return 0;},execCommand:function execCommand(cmd,fn){var me=this,range=me.selection.getRange(),bk=range.createBookmark(true),tableItems=getTableItemsByRange(me),cell=tableItems.cell,ut=getUETable(tableItems.table),cellInfo=ut.getCellInfo(cell);ut.sortTable(cellInfo.cellIndex,fn);range.moveToBookmark(bk);try{range.select();}catch(e){}}};//设置表格可排序,清除表格可排序
UE.commands["enablesort"]=UE.commands["disablesort"]={queryCommandState:function queryCommandState(cmd){var table=getTableItemsByRange(this).table;if(table&&cmd=='enablesort'){var cells=domUtils.getElementsByTagName(table,'th td');for(var i=0;i<cells.length;i++){if(cells[i].getAttribute('colspan')>1||cells[i].getAttribute('rowspan')>1)return -1;}}return !table?-1:cmd=='enablesort'^table.getAttribute('data-sort')!='sortEnabled'?-1:0;},execCommand:function execCommand(cmd){var table=getTableItemsByRange(this).table;table.setAttribute("data-sort",cmd=="enablesort"?"sortEnabled":"sortDisabled");cmd=="enablesort"?domUtils.addClass(table,"sortEnabled"):domUtils.removeClasses(table,"sortEnabled");}};};// plugins/contextmenu.js
///import core
///commands 右键菜单
///commandsName  ContextMenu
///commandsTitle  右键菜单
/**
     * 右键菜单
     * @function
     * @name baidu.editor.plugins.contextmenu
     * @author zhanyi
     */UE.plugins['contextmenu']=function(){var me=this;me.setOpt('enableContextMenu',true);if(me.getOpt('enableContextMenu')===false){return;}var lang=me.getLang("contextMenu"),menu,items=me.options.contextMenu||[{label:lang['selectall'],cmdName:'selectall'},{label:lang.cleardoc,cmdName:'cleardoc',exec:function exec(){if(confirm(lang.confirmclear)){this.execCommand('cleardoc');}}},'-',{label:lang.unlink,cmdName:'unlink'},'-',{group:lang.paragraph,icon:'justifyjustify',subMenu:[{label:lang.justifyleft,cmdName:'justify',value:'left'},{label:lang.justifyright,cmdName:'justify',value:'right'},{label:lang.justifycenter,cmdName:'justify',value:'center'},{label:lang.justifyjustify,cmdName:'justify',value:'justify'}]},'-',{group:lang.table,icon:'table',subMenu:[{label:lang.inserttable,cmdName:'inserttable'},{label:lang.deletetable,cmdName:'deletetable'},'-',{label:lang.deleterow,cmdName:'deleterow'},{label:lang.deletecol,cmdName:'deletecol'},{label:lang.insertcol,cmdName:'insertcol'},{label:lang.insertcolnext,cmdName:'insertcolnext'},{label:lang.insertrow,cmdName:'insertrow'},{label:lang.insertrownext,cmdName:'insertrownext'},'-',{label:lang.insertcaption,cmdName:'insertcaption'},{label:lang.deletecaption,cmdName:'deletecaption'},{label:lang.inserttitle,cmdName:'inserttitle'},{label:lang.deletetitle,cmdName:'deletetitle'},{label:lang.inserttitlecol,cmdName:'inserttitlecol'},{label:lang.deletetitlecol,cmdName:'deletetitlecol'},'-',{label:lang.mergecells,cmdName:'mergecells'},{label:lang.mergeright,cmdName:'mergeright'},{label:lang.mergedown,cmdName:'mergedown'},'-',{label:lang.splittorows,cmdName:'splittorows'},{label:lang.splittocols,cmdName:'splittocols'},{label:lang.splittocells,cmdName:'splittocells'},'-',{label:lang.averageDiseRow,cmdName:'averagedistributerow'},{label:lang.averageDisCol,cmdName:'averagedistributecol'},'-',{label:lang.edittd,cmdName:'edittd',exec:function exec(){if(UE.ui['edittd']){new UE.ui['edittd'](this);}this.getDialog('edittd').open();}},{label:lang.edittable,cmdName:'edittable',exec:function exec(){if(UE.ui['edittable']){new UE.ui['edittable'](this);}this.getDialog('edittable').open();}},{label:lang.setbordervisible,cmdName:'setbordervisible'}]},{group:lang.tablesort,icon:'tablesort',subMenu:[{label:lang.enablesort,cmdName:'enablesort'},{label:lang.disablesort,cmdName:'disablesort'},'-',{label:lang.reversecurrent,cmdName:'sorttable',value:'reversecurrent'},{label:lang.orderbyasc,cmdName:'sorttable',value:'orderbyasc'},{label:lang.reversebyasc,cmdName:'sorttable',value:'reversebyasc'},{label:lang.orderbynum,cmdName:'sorttable',value:'orderbynum'},{label:lang.reversebynum,cmdName:'sorttable',value:'reversebynum'}]},{group:lang.borderbk,icon:'borderBack',subMenu:[{label:lang.setcolor,cmdName:"interlacetable",exec:function exec(){this.execCommand("interlacetable");}},{label:lang.unsetcolor,cmdName:"uninterlacetable",exec:function exec(){this.execCommand("uninterlacetable");}},{label:lang.setbackground,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#bbb","#ccc"]});}},{label:lang.unsetbackground,cmdName:"cleartablebackground",exec:function exec(){this.execCommand("cleartablebackground");}},{label:lang.redandblue,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["red","blue"]});}},{label:lang.threecolorgradient,cmdName:"settablebackground",exec:function exec(){this.execCommand("settablebackground",{repeat:true,colorList:["#aaa","#bbb","#ccc"]});}}]},{group:lang.aligntd,icon:'aligntd',subMenu:[{cmdName:'cellalignment',value:{align:'left',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'top'}},{cmdName:'cellalignment',value:{align:'left',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'middle'}},{cmdName:'cellalignment',value:{align:'left',vAlign:'bottom'}},{cmdName:'cellalignment',value:{align:'center',vAlign:'bottom'}},{cmdName:'cellalignment',value:{align:'right',vAlign:'bottom'}}]},{group:lang.aligntable,icon:'aligntable',subMenu:[{cmdName:'tablealignment',className:'left',label:lang.tableleft,value:"left"},{cmdName:'tablealignment',className:'center',label:lang.tablecenter,value:"center"},{cmdName:'tablealignment',className:'right',label:lang.tableright,value:"right"}]},'-',{label:lang.insertparagraphbefore,cmdName:'insertparagraph',value:true},{label:lang.insertparagraphafter,cmdName:'insertparagraph'},{label:lang['copy'],cmdName:'copy'},{label:lang['paste'],cmdName:'paste'}];if(!items.length){return;}var uiUtils=UE.ui.uiUtils;me.addListener('contextmenu',function(type,evt){var offset=uiUtils.getViewportOffsetByEvent(evt);me.fireEvent('beforeselectionchange');if(menu){menu.destroy();}for(var i=0,ti,contextItems=[];ti=items[i];i++){var last;(function(item){if(item=='-'){if((last=contextItems[contextItems.length-1])&&last!=='-'){contextItems.push('-');}}else if(item.hasOwnProperty("group")){for(var j=0,cj,subMenu=[];cj=item.subMenu[j];j++){(function(subItem){if(subItem=='-'){if((last=subMenu[subMenu.length-1])&&last!=='-'){subMenu.push('-');}else{subMenu.splice(subMenu.length-1);}}else{if((me.commands[subItem.cmdName]||UE.commands[subItem.cmdName]||subItem.query)&&(subItem.query?subItem.query():me.queryCommandState(subItem.cmdName))>-1){subMenu.push({'label':subItem.label||me.getLang("contextMenu."+subItem.cmdName+(subItem.value||''))||"",'className':'edui-for-'+subItem.cmdName+(subItem.className?' edui-for-'+subItem.cmdName+'-'+subItem.className:''),onclick:subItem.exec?function(){subItem.exec.call(me);}:function(){me.execCommand(subItem.cmdName,subItem.value);}});}}})(cj);}if(subMenu.length){var getLabel=function getLabel(){switch(item.icon){case"table":return me.getLang("contextMenu.table");case"justifyjustify":return me.getLang("contextMenu.paragraph");case"aligntd":return me.getLang("contextMenu.aligntd");case"aligntable":return me.getLang("contextMenu.aligntable");case"tablesort":return lang.tablesort;case"borderBack":return lang.borderbk;default:return '';}};contextItems.push({//todo 修正成自动获取方式
'label':getLabel(),className:'edui-for-'+item.icon,'subMenu':{items:subMenu,editor:me}});}}else{//有可能commmand没有加载右键不能出来，或者没有command也想能展示出来添加query方法
if((me.commands[item.cmdName]||UE.commands[item.cmdName]||item.query)&&(item.query?item.query.call(me):me.queryCommandState(item.cmdName))>-1){contextItems.push({'label':item.label||me.getLang("contextMenu."+item.cmdName),className:'edui-for-'+(item.icon?item.icon:item.cmdName+(item.value||'')),onclick:item.exec?function(){item.exec.call(me);}:function(){me.execCommand(item.cmdName,item.value);}});}}})(ti);}if(contextItems[contextItems.length-1]=='-'){contextItems.pop();}menu=new UE.ui.Menu({items:contextItems,className:"edui-contextmenu",editor:me});menu.render();menu.showAt(offset);me.fireEvent("aftershowcontextmenu",menu);domUtils.preventDefault(evt);if(browser.ie){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}});// 添加复制的flash按钮
me.addListener('aftershowcontextmenu',function(type,menu){if(me.zeroclipboard){var items=menu.items;for(var key in items){if(items[key].className=='edui-for-copy'){me.zeroclipboard.clip(items[key].getDom());}}}});};// plugins/shortcutmenu.js
///import core
///commands       弹出菜单
// commandsName  popupmenu
///commandsTitle  弹出菜单
/**
     * 弹出菜单
     * @function
     * @name baidu.editor.plugins.popupmenu
     * @author xuheng
     */UE.plugins['shortcutmenu']=function(){var me=this,menu,items=me.options.shortcutMenu||[];if(!items.length){return;}me.addListener('contextmenu mouseup',function(type,e){var me=this,customEvt={type:type,target:e.target||e.srcElement,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY};setTimeout(function(){var rng=me.selection.getRange();if(rng.collapsed===false||type=="contextmenu"){if(!menu){menu=new baidu.editor.ui.ShortCutMenu({editor:me,items:items,theme:me.options.theme,className:'edui-shortcutmenu'});menu.render();me.fireEvent("afterrendershortcutmenu",menu);}menu.show(customEvt,!!UE.plugins['contextmenu']);}});if(type=='contextmenu'){domUtils.preventDefault(e);if(browser.ie9below){var ieRange;try{ieRange=me.selection.getNative().createRange();}catch(e){return;}if(ieRange.item){var range=new dom.Range(me.document);range.selectNode(ieRange.item(0)).select(true,true);}}}});me.addListener('keydown',function(type){if(type=="keydown"){menu&&!menu.isHidden&&menu.hide();}});};// plugins/basestyle.js
/**
     * B、I、sub、super命令支持
     * @file
     * @since 1.2.6.1
     */UE.plugins['basestyle']=function(){/**
         * 字体加粗
         * @command bold
         * @param { String } cmd 命令字符串
         * @remind 对已加粗的文本内容执行该命令， 将取消加粗
         * @method execCommand
         * @example
         * ```javascript
         * //editor是编辑器实例
         * //对当前选中的文本内容执行加粗操作
         * //第一次执行， 文本内容加粗
         * editor.execCommand( 'bold' );
         *
         * //第二次执行， 文本内容取消加粗
         * editor.execCommand( 'bold' );
         * ```
         */ /**
         * 字体倾斜
         * @command italic
         * @method execCommand
         * @param { String } cmd 命令字符串
         * @remind 对已倾斜的文本内容执行该命令， 将取消倾斜
         * @example
         * ```javascript
         * //editor是编辑器实例
         * //对当前选中的文本内容执行斜体操作
         * //第一次操作， 文本内容将变成斜体
         * editor.execCommand( 'italic' );
         *
         * //再次对同一文本内容执行， 则文本内容将恢复正常
         * editor.execCommand( 'italic' );
         * ```
         */ /**
         * 下标文本，与“superscript”命令互斥
         * @command subscript
         * @method execCommand
         * @remind  把选中的文本内容切换成下标文本， 如果当前选中的文本已经是下标， 则该操作会把文本内容还原成正常文本
         * @param { String } cmd 命令字符串
         * @example
         * ```javascript
         * //editor是编辑器实例
         * //对当前选中的文本内容执行下标操作
         * //第一次操作， 文本内容将变成下标文本
         * editor.execCommand( 'subscript' );
         *
         * //再次对同一文本内容执行， 则文本内容将恢复正常
         * editor.execCommand( 'subscript' );
         * ```
         */ /**
         * 上标文本，与“subscript”命令互斥
         * @command superscript
         * @method execCommand
         * @remind 把选中的文本内容切换成上标文本， 如果当前选中的文本已经是上标， 则该操作会把文本内容还原成正常文本
         * @param { String } cmd 命令字符串
         * @example
         * ```javascript
         * //editor是编辑器实例
         * //对当前选中的文本内容执行上标操作
         * //第一次操作， 文本内容将变成上标文本
         * editor.execCommand( 'superscript' );
         *
         * //再次对同一文本内容执行， 则文本内容将恢复正常
         * editor.execCommand( 'superscript' );
         * ```
         */var basestyles={'bold':['strong','b'],'italic':['em','i'],'subscript':['sub'],'superscript':['sup']},getObj=function getObj(editor,tagNames){return domUtils.filterNodeList(editor.selection.getStartElementPath(),tagNames);},me=this;//添加快捷键
me.addshortcutkey({"Bold":"ctrl+66",//^B
"Italic":"ctrl+73",//^I
"Underline":"ctrl+85"//^U
});me.addInputRule(function(root){utils.each(root.getNodesByTagName('b i'),function(node){switch(node.tagName){case'b':node.tagName='strong';break;case'i':node.tagName='em';}});});for(var style in basestyles){(function(cmd,tagNames){me.commands[cmd]={execCommand:function execCommand(cmdName){var range=me.selection.getRange(),obj=getObj(this,tagNames);if(range.collapsed){if(obj){var tmpText=me.document.createTextNode('');range.insertNode(tmpText).removeInlineStyle(tagNames);range.setStartBefore(tmpText);domUtils.remove(tmpText);}else{var tmpNode=range.document.createElement(tagNames[0]);if(cmdName=='superscript'||cmdName=='subscript'){tmpText=me.document.createTextNode('');range.insertNode(tmpText).removeInlineStyle(['sub','sup']).setStartBefore(tmpText).collapse(true);}range.insertNode(tmpNode).setStart(tmpNode,0);}range.collapse(true);}else{if(cmdName=='superscript'||cmdName=='subscript'){if(!obj||obj.tagName.toLowerCase()!=cmdName){range.removeInlineStyle(['sub','sup']);}}obj?range.removeInlineStyle(tagNames):range.applyInlineStyle(tagNames[0]);}range.select();},queryCommandState:function queryCommandState(){return getObj(this,tagNames)?1:0;}};})(style,basestyles[style]);}};// plugins/elementpath.js
/**
     * 选取路径命令
     * @file
     */UE.plugins['elementpath']=function(){var currentLevel,tagNames,me=this;me.setOpt('elementPathEnabled',false);if(!me.options.elementPathEnabled){return;}me.commands['elementpath']={execCommand:function execCommand(cmdName,level){var start=tagNames[level],range=me.selection.getRange();currentLevel=level*1;range.selectNode(start).select();},queryCommandValue:function queryCommandValue(){//产生一个副本，不能修改原来的startElementPath;
var parents=[].concat(this.selection.getStartElementPath()).reverse(),names=[];tagNames=parents;for(var i=0,ci;ci=parents[i];i++){if(ci.nodeType==3){continue;}var name=ci.tagName.toLowerCase();if(name=='img'&&ci.getAttribute('anchorname')){name='anchor';}names[i]=name;if(currentLevel==i){currentLevel=-1;break;}}return names;}};};// plugins/formatmatch.js
/**
     * 格式刷，只格式inline的
     * @file
     * @since 1.2.6.1
     */ /**
     * 格式刷
     * @command formatmatch
     * @method execCommand
     * @remind 该操作不能复制段落格式
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //获取格式刷
     * editor.execCommand( 'formatmatch' );
     * ```
     */UE.plugins['formatmatch']=function(){var me=this,list=[],img,flag=0;me.addListener('reset',function(){list=[];flag=0;});function addList(type,evt){if(browser.webkit){var target=evt.target.tagName=='IMG'?evt.target:null;}function addFormat(range){if(text){range.selectNode(text);}return range.applyInlineStyle(list[list.length-1].tagName,null,list);}me.undoManger&&me.undoManger.save();var range=me.selection.getRange(),imgT=target||range.getClosedNode();if(img&&imgT&&imgT.tagName=='IMG'){//trace:964
imgT.style.cssText+=';float:'+(img.style.cssFloat||img.style.styleFloat||'none')+';display:'+(img.style.display||'inline');img=null;}else{if(!img){var collapsed=range.collapsed;if(collapsed){var text=me.document.createTextNode('match');range.insertNode(text).select();}me.__hasEnterExecCommand=true;//不能把block上的属性干掉
//trace:1553
var removeFormatAttributes=me.options.removeFormatAttributes;me.options.removeFormatAttributes='';me.execCommand('removeformat');me.options.removeFormatAttributes=removeFormatAttributes;me.__hasEnterExecCommand=false;//trace:969
range=me.selection.getRange();if(list.length){addFormat(range);}if(text){range.setStartBefore(text).collapse(true);}range.select();text&&domUtils.remove(text);}}me.undoManger&&me.undoManger.save();me.removeListener('mouseup',addList);flag=0;}me.commands['formatmatch']={execCommand:function execCommand(cmdName){if(flag){flag=0;list=[];me.removeListener('mouseup',addList);return;}var range=me.selection.getRange();img=range.getClosedNode();if(!img||img.tagName!='IMG'){range.collapse(true).shrinkBoundary();var start=range.startContainer;list=domUtils.findParents(start,true,function(node){return !domUtils.isBlockElm(node)&&node.nodeType==1;});//a不能加入格式刷, 并且克隆节点
for(var i=0,ci;ci=list[i];i++){if(ci.tagName=='A'){list.splice(i,1);break;}}}me.addListener('mouseup',addList);flag=1;},queryCommandState:function queryCommandState(){return flag;},notNeedUndo:1};};// plugins/searchreplace.js
///import core
///commands 查找替换
///commandsName  SearchReplace
///commandsTitle  查询替换
///commandsDialog  dialogs\searchreplace
/**
     * @description 查找替换
     * @author zhanyi
     */UE.plugin.register('searchreplace',function(){var me=this;var _blockElm={'table':1,'tbody':1,'tr':1,'ol':1,'ul':1};function findTextInString(textContent,opt,currentIndex){var str=opt.searchStr;if(opt.dir==-1){textContent=textContent.split('').reverse().join('');str=str.split('').reverse().join('');currentIndex=textContent.length-currentIndex;}var reg=new RegExp(str,'g'+(opt.casesensitive?'':'i')),match;while(match=reg.exec(textContent)){if(match.index>=currentIndex){return opt.dir==-1?textContent.length-match.index-opt.searchStr.length:match.index;}}return -1;}function findTextBlockElm(node,currentIndex,opt){var textContent,index,methodName=opt.all||opt.dir==1?'getNextDomNode':'getPreDomNode';if(domUtils.isBody(node)){node=node.firstChild;}while(node){textContent=node.nodeType==3?node.nodeValue:node[browser.ie?'innerText':'textContent'];index=findTextInString(textContent,opt,currentIndex);if(index!=-1){return {'node':node,'index':index};}node=domUtils[methodName](node);while(node&&_blockElm[node.nodeName.toLowerCase()]){node=domUtils[methodName](node,true);}if(node){currentIndex=opt.dir==-1?(node.nodeType==3?node.nodeValue:node[browser.ie?'innerText':'textContent']).length:0;}}}function findNTextInBlockElm(node,index,str){var currentIndex=0,currentNode=node.firstChild,currentNodeLength=0,result;while(currentNode){if(currentNode.nodeType==3){currentNodeLength=currentNode.nodeValue.replace(/(^[\t\r\n]+)|([\t\r\n]+$)/,'').length;currentIndex+=currentNodeLength;if(currentIndex>=index){return {'node':currentNode,'index':currentNodeLength-(currentIndex-index)};}}else if(!dtd.$empty[currentNode.tagName]){currentNodeLength=currentNode[browser.ie?'innerText':'textContent'].replace(/(^[\t\r\n]+)|([\t\r\n]+$)/,'').length;currentIndex+=currentNodeLength;if(currentIndex>=index){result=findNTextInBlockElm(currentNode,currentNodeLength-(currentIndex-index),str);if(result){return result;}}}currentNode=domUtils.getNextDomNode(currentNode);}}function searchReplace(me,opt){var rng=me.selection.getRange(),startBlockNode,searchStr=opt.searchStr,span=me.document.createElement('span');span.innerHTML='$$ueditor_searchreplace_key$$';rng.shrinkBoundary(true);//判断是不是第一次选中
if(!rng.collapsed){rng.select();var rngText=me.selection.getText();if(new RegExp('^'+opt.searchStr+'$',opt.casesensitive?'':'i').test(rngText)){if(opt.replaceStr!=undefined){replaceText(rng,opt.replaceStr);rng.select();return true;}else{rng.collapse(opt.dir==-1);}}}rng.insertNode(span);rng.enlargeToBlockElm(true);startBlockNode=rng.startContainer;var currentIndex=startBlockNode[browser.ie?'innerText':'textContent'].indexOf('$$ueditor_searchreplace_key$$');rng.setStartBefore(span);domUtils.remove(span);var result=findTextBlockElm(startBlockNode,currentIndex,opt);if(result){var rngStart=findNTextInBlockElm(result.node,result.index,searchStr);var rngEnd=findNTextInBlockElm(result.node,result.index+searchStr.length,searchStr);rng.setStart(rngStart.node,rngStart.index).setEnd(rngEnd.node,rngEnd.index);if(opt.replaceStr!==undefined){replaceText(rng,opt.replaceStr);}rng.select();return true;}else{rng.setCursor();}}function replaceText(rng,str){str=me.document.createTextNode(str);rng.deleteContents().insertNode(str);}return {commands:{'searchreplace':{execCommand:function execCommand(cmdName,opt){utils.extend(opt,{all:false,casesensitive:false,dir:1},true);var num=0;if(opt.all){var rng=me.selection.getRange(),first=me.body.firstChild;if(first&&first.nodeType==1){rng.setStart(first,0);rng.shrinkBoundary(true);}else if(first.nodeType==3){rng.setStartBefore(first);}rng.collapse(true).select(true);if(opt.replaceStr!==undefined){me.fireEvent('saveScene');}while(searchReplace(this,opt)){num++;}if(num){me.fireEvent('saveScene');}}else{if(opt.replaceStr!==undefined){me.fireEvent('saveScene');}if(searchReplace(this,opt)){num++;}if(num){me.fireEvent('saveScene');}}return num;},notNeedUndo:1}}};});// plugins/customstyle.js
/**
     * 自定义样式
     * @file
     * @since 1.2.6.1
     */ /**
     * 根据config配置文件里“customstyle”选项的值对匹配的标签执行样式替换。
     * @command customstyle
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * editor.execCommand( 'customstyle' );
     * ```
     */UE.plugins['customstyle']=function(){var me=this;me.setOpt({'customstyle':[{tag:'h1',name:'tc',style:'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;'},{tag:'h1',name:'tl',style:'font-size:32px;font-weight:bold;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:left;margin:0 0 10px 0;'},{tag:'span',name:'im',style:'font-size:16px;font-style:italic;font-weight:bold;line-height:18px;'},{tag:'span',name:'hi',style:'font-size:16px;font-style:italic;font-weight:bold;color:rgb(51, 153, 204);line-height:18px;'}]});me.commands['customstyle']={execCommand:function execCommand(cmdName,obj){var me=this,tagName=obj.tag,node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label');},true),range,bk,tmpObj={};for(var p in obj){if(obj[p]!==undefined)tmpObj[p]=obj[p];}delete tmpObj.tag;if(node&&node.getAttribute('label')==obj.label){range=this.selection.getRange();bk=range.createBookmark();if(range.collapsed){//trace:1732 删掉自定义标签，要有p来回填站位
if(dtd.$block[node.tagName]){var fillNode=me.document.createElement('p');domUtils.moveChild(node,fillNode);node.parentNode.insertBefore(fillNode,node);domUtils.remove(node);}else{domUtils.remove(node,true);}}else{var common=domUtils.getCommonAncestor(bk.start,bk.end),nodes=domUtils.getElementsByTagName(common,tagName);if(new RegExp(tagName,'i').test(common.tagName)){nodes.push(common);}for(var i=0,ni;ni=nodes[i++];){if(ni.getAttribute('label')==obj.label){var ps=domUtils.getPosition(ni,bk.start),pe=domUtils.getPosition(ni,bk.end);if((ps&domUtils.POSITION_FOLLOWING||ps&domUtils.POSITION_CONTAINS)&&(pe&domUtils.POSITION_PRECEDING||pe&domUtils.POSITION_CONTAINS))if(dtd.$block[tagName]){var fillNode=me.document.createElement('p');domUtils.moveChild(ni,fillNode);ni.parentNode.insertBefore(fillNode,ni);}domUtils.remove(ni,true);}}node=domUtils.findParent(common,function(node){return node.getAttribute('label')==obj.label;},true);if(node){domUtils.remove(node,true);}}range.moveToBookmark(bk).select();}else{if(dtd.$block[tagName]){this.execCommand('paragraph',tagName,tmpObj,'customstyle');range=me.selection.getRange();if(!range.collapsed){range.collapse();node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label')==obj.label;},true);var pNode=me.document.createElement('p');domUtils.insertAfter(node,pNode);domUtils.fillNode(me.document,pNode);range.setStart(pNode,0).setCursor();}}else{range=me.selection.getRange();if(range.collapsed){node=me.document.createElement(tagName);domUtils.setAttributes(node,tmpObj);range.insertNode(node).setStart(node,0).setCursor();return;}bk=range.createBookmark();range.applyInlineStyle(tagName,tmpObj).moveToBookmark(bk).select();}}},queryCommandValue:function queryCommandValue(){var parent=domUtils.filterNodeList(this.selection.getStartElementPath(),function(node){return node.getAttribute('label');});return parent?parent.getAttribute('label'):'';}};//当去掉customstyle是，如果是块元素，用p代替
me.addListener('keyup',function(type,evt){var keyCode=evt.keyCode||evt.which;if(keyCode==32||keyCode==13){var range=me.selection.getRange();if(range.collapsed){var node=domUtils.findParent(me.selection.getStart(),function(node){return node.getAttribute('label');},true);if(node&&dtd.$block[node.tagName]&&domUtils.isEmptyNode(node)){var p=me.document.createElement('p');domUtils.insertAfter(node,p);domUtils.fillNode(me.document,p);domUtils.remove(node);range.setStart(p,0).setCursor();}}}});};// plugins/catchremoteimage.js
///import core
///commands 远程图片抓取
///commandsName  catchRemoteImage,catchremoteimageenable
///commandsTitle  远程图片抓取
/**
     * 远程图片抓取,当开启本插件时所有不符合本地域名的图片都将被抓取成为本地服务器上的图片
     */UE.plugins['catchremoteimage']=function(){var me=this,ajax=UE.ajax;/* 设置默认值 */if(me.options.catchRemoteImageEnable===false)return;me.setOpt({catchRemoteImageEnable:false});me.addListener("afterpaste",function(){me.fireEvent("catchRemoteImage");});me.addListener("catchRemoteImage",function(){var catcherLocalDomain=me.getOpt('catcherLocalDomain'),catcherActionUrl=me.getActionUrl(me.getOpt('catcherActionName')),catcherUrlPrefix=me.getOpt('catcherUrlPrefix'),catcherFieldName=me.getOpt('catcherFieldName');var remoteImages=[],imgs=domUtils.getElementsByTagName(me.document,"img"),test=function test(src,urls){if(src.indexOf(location.host)!=-1||/(^\.)|(^\/)/.test(src)){return true;}if(urls){for(var j=0,url;url=urls[j++];){if(src.indexOf(url)!==-1){return true;}}}return false;};for(var i=0,ci;ci=imgs[i++];){if(ci.getAttribute("word_img")){continue;}var src=ci.getAttribute("_src")||ci.src||"";if(/^(https?|ftp):/i.test(src)&&!test(src,catcherLocalDomain)){remoteImages.push(src);}}if(remoteImages.length){catchremoteimage(remoteImages,{//成功抓取
success:function success(r){try{var info=r.state!==undefined?r:eval("("+r.responseText+")");}catch(e){return;}/* 获取源路径和新路径 */var i,j,ci,cj,oldSrc,newSrc,list=info.list;for(i=0;ci=imgs[i++];){oldSrc=ci.getAttribute("_src")||ci.src||"";for(j=0;cj=list[j++];){if(oldSrc==cj.source&&cj.state=="SUCCESS"){//抓取失败时不做替换处理
newSrc=catcherUrlPrefix+cj.url;domUtils.setAttributes(ci,{"src":newSrc,"_src":newSrc});break;}}}me.fireEvent('catchremotesuccess');},//回调失败，本次请求超时
error:function error(){me.fireEvent("catchremoteerror");}});}function catchremoteimage(imgs,callbacks){var params=utils.serializeParam(me.queryCommandValue('serverparam'))||'',url=utils.formatUrl(catcherActionUrl+(catcherActionUrl.indexOf('?')==-1?'?':'&')+params),isJsonp=utils.isCrossDomainUrl(url),opt={'method':'POST','dataType':isJsonp?'jsonp':'','timeout':60000,//单位：毫秒，回调请求超时设置。目标用户如果网速不是很快的话此处建议设置一个较大的数值
'onsuccess':callbacks["success"],'onerror':callbacks["error"]};opt[catcherFieldName]=imgs;ajax.request(url,opt);}});};// plugins/snapscreen.js
/**
     * 截屏插件，为UEditor提供插入支持
     * @file
     * @since 1.4.2
     */UE.plugin.register('snapscreen',function(){var me=this;var snapplugin;function getLocation(url){var search,a=document.createElement('a'),params=utils.serializeParam(me.queryCommandValue('serverparam'))||'';a.href=url;if(browser.ie){a.href=a.href;}search=a.search;if(params){search=search+(search.indexOf('?')==-1?'?':'&')+params;search=search.replace(/[&]+/ig,'&');}return {'port':a.port,'hostname':a.hostname,'path':a.pathname+search||+a.hash};}return {commands:{/**
                 * 字体背景颜色
                 * @command snapscreen
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @example
                 * ```javascript
                 * editor.execCommand('snapscreen');
                 * ```
                 */'snapscreen':{execCommand:function execCommand(cmd){var url,local,res;var lang=me.getLang("snapScreen_plugin");if(!snapplugin){var container=me.container;var doc=me.container.ownerDocument||me.container.document;snapplugin=doc.createElement("object");try{snapplugin.type="application/x-pluginbaidusnap";}catch(e){return;}snapplugin.style.cssText="position:absolute;left:-9999px;width:0;height:0;";snapplugin.setAttribute("width","0");snapplugin.setAttribute("height","0");container.appendChild(snapplugin);}function onSuccess(rs){try{rs=eval("("+rs+")");if(rs.state=='SUCCESS'){var opt=me.options;me.execCommand('insertimage',{src:opt.snapscreenUrlPrefix+rs.url,_src:opt.snapscreenUrlPrefix+rs.url,alt:rs.title||'',floatStyle:opt.snapscreenImgAlign});}else{alert(rs.state);}}catch(e){alert(lang.callBackErrorMsg);}}url=me.getActionUrl(me.getOpt('snapscreenActionName'));local=getLocation(url);setTimeout(function(){try{res=snapplugin.saveSnapshot(local.hostname,local.path,local.port);}catch(e){me.ui._dialogs['snapscreenDialog'].open();return;}onSuccess(res);},50);},queryCommandState:function queryCommandState(){return navigator.userAgent.indexOf("Windows",0)!=-1?0:-1;}}}};});// plugins/insertparagraph.js
/**
     * 插入段落
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入段落
     * @command insertparagraph
     * @method execCommand
     * @param { String } cmd 命令字符串
     * @example
     * ```javascript
     * //editor是编辑器实例
     * editor.execCommand( 'insertparagraph' );
     * ```
     */UE.commands['insertparagraph']={execCommand:function execCommand(cmdName,front){var me=this,range=me.selection.getRange(),start=range.startContainer,tmpNode;while(start){if(domUtils.isBody(start)){break;}tmpNode=start;start=start.parentNode;}if(tmpNode){var p=me.document.createElement('p');if(front){tmpNode.parentNode.insertBefore(p,tmpNode);}else{tmpNode.parentNode.insertBefore(p,tmpNode.nextSibling);}domUtils.fillNode(me.document,p);range.setStart(p,0).setCursor(false,true);}}};// plugins/webapp.js
/**
     * 百度应用
     * @file
     * @since 1.2.6.1
     */ /**
     * 插入百度应用
     * @command webapp
     * @method execCommand
     * @remind 需要百度APPKey
     * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>
     * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，
     * height=>应用容器高度，logo=>应用logo，url=>应用地址
     * @example
     * ```javascript
     * //editor是编辑器实例
     * //在编辑器里插入一个“植物大战僵尸”的APP
     * editor.execCommand( 'webapp' , {
     *     title: '植物大战僵尸',
     *     width: 560,
     *     height: 465,
     *     logo: '应用展示的图片',
     *     url: '百度应用的地址'
     * } );
     * ```
     */ //UE.plugins['webapp'] = function () {
//    var me = this;
//    function createInsertStr( obj, toIframe, addParagraph ) {
//        return !toIframe ?
//                (addParagraph ? '<p>' : '') + '<img title="'+obj.title+'" width="' + obj.width + '" height="' + obj.height + '"' +
//                        ' src="' + me.options.UEDITOR_HOME_URL + 'themes/default/images/spacer.gif" style="background:url(' + obj.logo+') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="' + obj.url + '" />' +
//                        (addParagraph ? '</p>' : '')
//                :
//                '<iframe class="edui-faked-webapp" title="'+obj.title+'" width="' + obj.width + '" height="' + obj.height + '"  scrolling="no" frameborder="0" src="' + obj.url + '" logo_url = '+obj.logo+'></iframe>';
//    }
//
//    function switchImgAndIframe( img2frame ) {
//        var tmpdiv,
//                nodes = domUtils.getElementsByTagName( me.document, !img2frame ? "iframe" : "img" );
//        for ( var i = 0, node; node = nodes[i++]; ) {
//            if ( node.className != "edui-faked-webapp" ){
//                continue;
//            }
//            tmpdiv = me.document.createElement( "div" );
//            tmpdiv.innerHTML = createInsertStr( img2frame ? {url:node.getAttribute( "_url" ), width:node.width, height:node.height,title:node.title,logo:node.style.backgroundImage.replace("url(","").replace(")","")} : {url:node.getAttribute( "src", 2 ),title:node.title, width:node.width, height:node.height,logo:node.getAttribute("logo_url")}, img2frame ? true : false,false );
//            node.parentNode.replaceChild( tmpdiv.firstChild, node );
//        }
//    }
//
//    me.addListener( "beforegetcontent", function () {
//        switchImgAndIframe( true );
//    } );
//    me.addListener( 'aftersetcontent', function () {
//        switchImgAndIframe( false );
//    } );
//    me.addListener( 'aftergetcontent', function ( cmdName ) {
//        if ( cmdName == 'aftergetcontent' && me.queryCommandState( 'source' ) ){
//            return;
//        }
//        switchImgAndIframe( false );
//    } );
//
//    me.commands['webapp'] = {
//        execCommand:function ( cmd, obj ) {
//            me.execCommand( "inserthtml", createInsertStr( obj, false,true ) );
//        }
//    };
//};
UE.plugin.register('webapp',function(){var me=this;function createInsertStr(obj,toEmbed){return !toEmbed?'<img title="'+obj.title+'" width="'+obj.width+'" height="'+obj.height+'"'+' src="'+me.options.UEDITOR_HOME_URL+'themes/default/images/spacer.gif" _logo_url="'+obj.logo+'" style="background:url('+obj.logo+') no-repeat center center; border:1px solid gray;" class="edui-faked-webapp" _url="'+obj.url+'" '+(obj.align&&!obj.cssfloat?'align="'+obj.align+'"':'')+(obj.cssfloat?'style="float:'+obj.cssfloat+'"':'')+'/>':'<iframe class="edui-faked-webapp" title="'+obj.title+'" '+(obj.align&&!obj.cssfloat?'align="'+obj.align+'"':'')+(obj.cssfloat?'style="float:'+obj.cssfloat+'"':'')+'width="'+obj.width+'" height="'+obj.height+'"  scrolling="no" frameborder="0" src="'+obj.url+'" logo_url = "'+obj.logo+'"></iframe>';}return {outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(node){var html;if(node.getAttr('class')=='edui-faked-webapp'){html=createInsertStr({title:node.getAttr('title'),'width':node.getAttr('width'),'height':node.getAttr('height'),'align':node.getAttr('align'),'cssfloat':node.getStyle('float'),'url':node.getAttr("_url"),'logo':node.getAttr('_logo_url')},true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('iframe'),function(node){if(node.getAttr('class')=='edui-faked-webapp'){var img=UE.uNode.createElement(createInsertStr({title:node.getAttr('title'),'width':node.getAttr('width'),'height':node.getAttr('height'),'align':node.getAttr('align'),'cssfloat':node.getStyle('float'),'url':node.getAttr("src"),'logo':node.getAttr('logo_url')}));node.parentNode.replaceChild(img,node);}});},commands:{/**
                 * 插入百度应用
                 * @command webapp
                 * @method execCommand
                 * @remind 需要百度APPKey
                 * @remind 百度应用主页： <a href="http://app.baidu.com/" target="_blank">http://app.baidu.com/</a>
                 * @param { Object } appOptions 应用所需的参数项， 支持的key有： title=>应用标题， width=>应用容器宽度，
                 * height=>应用容器高度，logo=>应用logo，url=>应用地址
                 * @example
                 * ```javascript
                 * //editor是编辑器实例
                 * //在编辑器里插入一个“植物大战僵尸”的APP
                 * editor.execCommand( 'webapp' , {
                 *     title: '植物大战僵尸',
                 *     width: 560,
                 *     height: 465,
                 *     logo: '应用展示的图片',
                 *     url: '百度应用的地址'
                 * } );
                 * ```
                 */'webapp':{execCommand:function execCommand(cmd,obj){var me=this,str=createInsertStr(utils.extend(obj,{align:'none'}),false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-webapp";return flag?1:0;}}}};});// plugins/template.js
///import core
///import plugins\inserthtml.js
///import plugins\cleardoc.js
///commands 模板
///commandsName  template
///commandsTitle  模板
///commandsDialog  dialogs\template
UE.plugins['template']=function(){UE.commands['template']={execCommand:function execCommand(cmd,obj){obj.html&&this.execCommand("inserthtml",obj.html);}};this.addListener("click",function(type,evt){var el=evt.target||evt.srcElement,range=this.selection.getRange();var tnode=domUtils.findParent(el,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);tnode&&range.selectNode(tnode).shrinkBoundary().select();});this.addListener("keydown",function(type,evt){var range=this.selection.getRange();if(!range.collapsed){if(!evt.ctrlKey&&!evt.metaKey&&!evt.shiftKey&&!evt.altKey){var tnode=domUtils.findParent(range.startContainer,function(node){if(node.className&&domUtils.hasClass(node,"ue_t")){return node;}},true);if(tnode){domUtils.removeClasses(tnode,["ue_t"]);}}}});};// plugins/music.js
/**
     * 插入音乐命令
     * @file
     */UE.plugin.register('music',function(){var me=this;function creatInsertStr(url,width,height,align,cssfloat,toEmbed){return !toEmbed?'<img '+(align&&!cssfloat?'align="'+align+'"':'')+(cssfloat?'style="float:'+cssfloat+'"':'')+' width="'+width+'" height="'+height+'" _url="'+url+'" class="edui-faked-music"'+' src="'+me.options.langPath+me.options.lang+'/images/music.png" />':'<embed type="application/x-shockwave-flash" class="edui-faked-music" pluginspage="http://www.macromedia.com/go/getflashplayer"'+' src="'+url+'" width="'+width+'" height="'+height+'" '+(align&&!cssfloat?'align="'+align+'"':'')+(cssfloat?'style="float:'+cssfloat+'"':'')+' wmode="transparent" play="true" loop="false" menu="false" allowscriptaccess="never" allowfullscreen="true" >';}return {outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(node){var html;if(node.getAttr('class')=='edui-faked-music'){var cssfloat=node.getStyle('float');var align=node.getAttr('align');html=creatInsertStr(node.getAttr("_url"),node.getAttr('width'),node.getAttr('height'),align,cssfloat,true);var embed=UE.uNode.createElement(html);node.parentNode.replaceChild(embed,node);}});},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('embed'),function(node){if(node.getAttr('class')=='edui-faked-music'){var cssfloat=node.getStyle('float');var align=node.getAttr('align');html=creatInsertStr(node.getAttr("src"),node.getAttr('width'),node.getAttr('height'),align,cssfloat,false);var img=UE.uNode.createElement(html);node.parentNode.replaceChild(img,node);}});},commands:{/**
                 * 插入音乐
                 * @command music
                 * @method execCommand
                 * @param { Object } musicOptions 插入音乐的参数项， 支持的key有： url=>音乐地址；
                 * width=>音乐容器宽度；height=>音乐容器高度；align=>音乐文件的对齐方式， 可选值有: left, center, right, none
                 * @example
                 * ```javascript
                 * //editor是编辑器实例
                 * //在编辑器里插入一个“植物大战僵尸”的APP
                 * editor.execCommand( 'music' , {
                 *     width: 400,
                 *     height: 95,
                 *     align: "center",
                 *     url: "音乐地址"
                 * } );
                 * ```
                 */'music':{execCommand:function execCommand(cmd,musicObj){var me=this,str=creatInsertStr(musicObj.url,musicObj.width||400,musicObj.height||95,"none",false);me.execCommand("inserthtml",str);},queryCommandState:function queryCommandState(){var me=this,img=me.selection.getRange().getClosedNode(),flag=img&&img.className=="edui-faked-music";return flag?1:0;}}}};});// plugins/autoupload.js
/**
     * @description
     * 1.拖放文件到编辑区域，自动上传并插入到选区
     * 2.插入粘贴板的图片，自动上传并插入到选区
     * @author Jinqn
     * @date 2013-10-14
     */UE.plugin.register('autoupload',function(){function sendAndInsertFile(file,editor){var me=editor;//模拟数据
var fieldName,urlPrefix,maxSize,allowFiles,actionUrl,loadingHtml,errorHandler,successHandler,filetype=/image\/\w+/i.test(file.type)?'image':'file',loadingId='loading_'+(+new Date()).toString(36);fieldName=me.getOpt(filetype+'FieldName');//urlPrefix = me.getOpt(filetype + 'UrlPrefix');
urlPrefix=window.pathConfig.fileServer+"download?filePath=";maxSize=me.getOpt(filetype+'MaxSize');allowFiles=me.getOpt(filetype+'AllowFiles');actionUrl=me.getActionUrl(me.getOpt(filetype+'ActionName'));errorHandler=function errorHandler(title){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent('showmessage',{'id':loadingId,'content':title,'type':'error','timeout':4000});};if(filetype=='image'){loadingHtml='<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('autoupload.loading')||'')+'" >';successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);if(loader){loader.setAttribute('src',link);loader.setAttribute('_src',link);loader.setAttribute('title',data.title||'');loader.setAttribute('alt',data.original||'');loader.removeAttribute('id');domUtils.removeClasses(loader,'loadingclass');}};}else{loadingHtml='<p>'+'<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('autoupload.loading')||'')+'" >'+'</p>';successHandler=function successHandler(data){var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);var rng=me.selection.getRange(),bk=rng.createBookmark();rng.selectNode(loader).select();me.execCommand('insertfile',{'url':link});rng.moveToBookmark(bk).select();};}/* 插入loading的占位符 */me.execCommand('inserthtml',loadingHtml);/* 判断后端配置是否没有加载成功 */ // if (!me.getOpt(filetype + 'ActionName')) {
//     errorHandler(me.getLang('autoupload.errorLoadConfig'));
//     return;
// }
/* 判断文件大小是否超出限制 */if(file.size>maxSize){errorHandler(me.getLang('autoupload.exceedSizeError'));return;}/* 判断文件格式是否超出允许 */var fileext=file.name?file.name.substr(file.name.lastIndexOf('.')):'';if(fileext&&filetype!='image'||allowFiles&&(allowFiles.join('')+'.').indexOf(fileext.toLowerCase()+'.')==-1){errorHandler(me.getLang('autoupload.exceedTypeError'));return;}/* 拖放文件，截屏方式采用ajax提交 */var fd=new FormData();//fd.append("file", files[0]);
fd.append("file",file,file.name||'blob.'+file.type.substr('image/'.length));fd.append("serviceName","srv_bxfile_service");fd.append("interfaceName","add");fd.append("app_no",me.srvApp);fd.append("file_no","");var queryString="?bx_auth_ticket="+sessionStorage.getItem("bx_auth_ticket");var path=window.pathConfig.fileServer+"upload"+queryString;console.log(path);jQuery.ajax({type:"POST",url:path,//图片上传出来的url，返回的是图片上传后的路径，http格式
cache:false,contentType:false,data:fd,xhrFields:{withCredentials:true},processData:false,dataType:"json",success:function success(data){//data是返回的hash,key之类的值，key是定义的文件名
console.log(data);var downStr=top.window.pathConfig.fileServer+"download?filePath="+data.fileurl;var json={};json.name=data.src_name;json.original=data.src_name;json.size=data.file_size;json.state='SUCESS';json.type='.'+data.file_type;json.fileno=data.file_no;json.url=data.fileurl;//重新设置返回结果
successHandler(json);},error:function error(){alert("上传失败");}});}function getPasteImage(e){return e.clipboardData&&e.clipboardData.items&&e.clipboardData.items.length==1&&/^image\//.test(e.clipboardData.items[0].type)?e.clipboardData.items:null;}function getDropImage(e){return e.dataTransfer&&e.dataTransfer.files?e.dataTransfer.files:null;}return {outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(n){if(/\b(loaderrorclass)|(bloaderrorclass)\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});utils.each(root.getNodesByTagName('p'),function(n){if(/\bloadpara\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});},bindEvents:{//插入粘贴板的图片，拖放插入图片
'ready':function ready(e){var me=this;if(window.FormData&&window.FileReader){domUtils.on(me.body,'paste drop',function(e){var hasImg=false,items;//获取粘贴板文件列表或者拖放文件列表
items=e.type=='paste'?getPasteImage(e):getDropImage(e);if(items){var len=items.length,file;while(len--){file=items[len];if(file.getAsFile)file=file.getAsFile();if(file&&file.size>0){sendAndInsertFile(file,me);hasImg=true;}}hasImg&&e.preventDefault();}});//取消拖放图片时出现的文字光标位置提示
domUtils.on(me.body,'dragover',function(e){if(e.dataTransfer.types[0]=='Files'){e.preventDefault();}});//设置loading的样式
utils.cssRule('loading','.loadingclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-left:1px;height: 22px;width: 22px;}\n'+'.loaderrorclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;'+'}',this.document);}}}};});// plugins/autosave.js
UE.plugin.register('autosave',function(){var me=this,//无限循环保护
lastSaveTime=new Date(),//最小保存间隔时间
MIN_TIME=20,//auto save key
saveKey=null;function save(editor){var saveData;if(new Date()-lastSaveTime<MIN_TIME){return;}if(!editor.hasContents()){//这里不能调用命令来删除， 会造成事件死循环
saveKey&&me.removePreferences(saveKey);return;}lastSaveTime=new Date();editor._saveFlag=null;saveData=me.body.innerHTML;if(editor.fireEvent("beforeautosave",{content:saveData})===false){return;}me.setPreferences(saveKey,saveData);editor.fireEvent("afterautosave",{content:saveData});}return {defaultOptions:{//默认间隔时间
saveInterval:500},bindEvents:{'ready':function ready(){var _suffix="-drafts-data",key=null;if(me.key){key=me.key+_suffix;}else{key=(me.container.parentNode.id||'ue-common')+_suffix;}//页面地址+编辑器ID 保持唯一
saveKey=(location.protocol+location.host+location.pathname).replace(/[.:\/]/g,'_')+key;},'contentchange':function contentchange(){if(!saveKey){return;}if(me._saveFlag){window.clearTimeout(me._saveFlag);}if(me.options.saveInterval>0){me._saveFlag=window.setTimeout(function(){save(me);},me.options.saveInterval);}else{save(me);}}},commands:{'clearlocaldata':{execCommand:function execCommand(cmd,name){if(saveKey&&me.getPreferences(saveKey)){me.removePreferences(saveKey);}},notNeedUndo:true,ignoreContentChange:true},'getlocaldata':{execCommand:function execCommand(cmd,name){return saveKey?me.getPreferences(saveKey)||'':'';},notNeedUndo:true,ignoreContentChange:true},'drafts':{execCommand:function execCommand(cmd,name){if(saveKey){me.body.innerHTML=me.getPreferences(saveKey)||'<p>'+domUtils.fillHtml+'</p>';me.focus(true);}},queryCommandState:function queryCommandState(){return saveKey?me.getPreferences(saveKey)===null?-1:0:-1;},notNeedUndo:true,ignoreContentChange:true}}};});// plugins/charts.js
UE.plugin.register('charts',function(){var me=this;return {bindEvents:{'chartserror':function chartserror(){}},commands:{'charts':{execCommand:function execCommand(cmd,data){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,'table',true),flagText=[],config={};if(!tableNode){return false;}if(!validData(tableNode)){me.fireEvent("chartserror");return false;}config.title=data.title||'';config.subTitle=data.subTitle||'';config.xTitle=data.xTitle||'';config.yTitle=data.yTitle||'';config.suffix=data.suffix||'';config.tip=data.tip||'';//数据对齐方式
config.dataFormat=data.tableDataFormat||'';//图表类型
config.chartType=data.chartType||0;for(var key in config){if(!config.hasOwnProperty(key)){continue;}flagText.push(key+":"+config[key]);}tableNode.setAttribute("data-chart",flagText.join(";"));domUtils.addClass(tableNode,"edui-charts-table");},queryCommandState:function queryCommandState(cmd,name){var tableNode=domUtils.findParentByTagName(this.selection.getRange().startContainer,'table',true);return tableNode&&validData(tableNode)?0:-1;}}},inputRule:function inputRule(root){utils.each(root.getNodesByTagName('table'),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style");}});},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('table'),function(tableNode){if(tableNode.getAttr("data-chart")!==undefined){tableNode.setAttr("style","display: none;");}});}};function validData(table){var firstRows=null,cellCount=0;//行数不够
if(table.rows.length<2){return false;}//列数不够
if(table.rows[0].cells.length<2){return false;}//第一行所有cell必须是th
firstRows=table.rows[0].cells;cellCount=firstRows.length;for(var i=0,cell;cell=firstRows[i];i++){if(cell.tagName.toLowerCase()!=='th'){return false;}}for(var i=1,row;row=table.rows[i];i++){//每行单元格数不匹配， 返回false
if(row.cells.length!=cellCount){return false;}//第一列不是th也返回false
if(row.cells[0].tagName.toLowerCase()!=='th'){return false;}for(var j=1,cell;cell=row.cells[j];j++){var value=utils.trim(cell.innerText||cell.textContent||'');value=value.replace(new RegExp(UE.dom.domUtils.fillChar,'g'),'').replace(/^\s+|\s+$/g,'');//必须是数字
if(!/^\d*\.?\d+$/.test(value)){return false;}}}return true;}});// plugins/section.js
/**
     * 目录大纲支持插件
     * @file
     * @since 1.3.0
     */UE.plugin.register('section',function(){/* 目录节点对象 */function Section(option){this.tag='';this.level=-1,this.dom=null;this.nextSection=null;this.previousSection=null;this.parentSection=null;this.startAddress=[];this.endAddress=[];this.children=[];}function getSection(option){var section=new Section();return utils.extend(section,option);}function getNodeFromAddress(startAddress,root){var current=root;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var me=this;return {bindMultiEvents:{type:'aftersetcontent afterscencerestore',handler:function handler(){me.fireEvent('updateSections');}},bindEvents:{/* 初始化、拖拽、粘贴、执行setcontent之后 */'ready':function ready(){me.fireEvent('updateSections');domUtils.on(me.body,'drop paste',function(){me.fireEvent('updateSections');});},/* 执行paragraph命令之后 */'afterexeccommand':function afterexeccommand(type,cmd){if(cmd=='paragraph'){me.fireEvent('updateSections');}},/* 部分键盘操作，触发updateSections事件 */'keyup':function keyup(type,e){var me=this,range=me.selection.getRange();if(range.collapsed!=true){me.fireEvent('updateSections');}else{var keyCode=e.keyCode||e.which;if(keyCode==13||keyCode==8||keyCode==46){me.fireEvent('updateSections');}}}},commands:{'getsections':{execCommand:function execCommand(cmd,levels){var levelFn=levels||['h1','h2','h3','h4','h5','h6'];for(var i=0;i<levelFn.length;i++){if(typeof levelFn[i]=='string'){levelFn[i]=function(fn){return function(node){return node.tagName==fn.toUpperCase();};}(levelFn[i]);}else if(typeof levelFn[i]!='function'){levelFn[i]=function(node){return null;};}}function getSectionLevel(node){for(var i=0;i<levelFn.length;i++){if(levelFn[i](node))return i;}return -1;}var me=this,Directory=getSection({'level':-1,'title':'root'}),previous=Directory;function traversal(node,Directory){var level,tmpSection=null,parent,child,children=node.childNodes;for(var i=0,len=children.length;i<len;i++){child=children[i];level=getSectionLevel(child);if(level>=0){var address=me.selection.getRange().selectNode(child).createAddress(true).startAddress,current=getSection({'tag':child.tagName,'title':child.innerText||child.textContent||'','level':level,'dom':child,'startAddress':utils.clone(address,[]),'endAddress':utils.clone(address,[]),'children':[]});previous.nextSection=current;current.previousSection=previous;parent=previous;while(level<=parent.level){parent=parent.parentSection;}current.parentSection=parent;parent.children.push(current);tmpSection=previous=current;}else{child.nodeType===1&&traversal(child,Directory);tmpSection&&tmpSection.endAddress[tmpSection.endAddress.length-1]++;}}}traversal(me.body,Directory);return Directory;},notNeedUndo:true},'movesection':{execCommand:function execCommand(cmd,sourceSection,targetSection,isAfter){var me=this,targetAddress,target;if(!sourceSection||!targetSection||targetSection.level==-1)return;targetAddress=isAfter?targetSection.endAddress:targetSection.startAddress;target=getNodeFromAddress(targetAddress,me.body);/* 判断目标地址是否被源章节包含 */if(!targetAddress||!target||isContainsAddress(sourceSection.startAddress,sourceSection.endAddress,targetAddress))return;var startNode=getNodeFromAddress(sourceSection.startAddress,me.body),endNode=getNodeFromAddress(sourceSection.endAddress,me.body),current,nextNode;if(isAfter){current=endNode;while(current&&!(domUtils.getPosition(startNode,current)&domUtils.POSITION_FOLLOWING)){nextNode=current.previousSibling;domUtils.insertAfter(target,current);if(current==startNode)break;current=nextNode;}}else{current=startNode;while(current&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;target.parentNode.insertBefore(current,target);if(current==endNode)break;current=nextNode;}}me.fireEvent('updateSections');/* 获取地址的包含关系 */function isContainsAddress(startAddress,endAddress,addressTarget){var isAfterStartAddress=false,isBeforeEndAddress=false;for(var i=0;i<startAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]>startAddress[i]){isAfterStartAddress=true;break;}else if(addressTarget[i]<startAddress[i]){break;}}for(var i=0;i<endAddress.length;i++){if(i>=addressTarget.length)break;if(addressTarget[i]<startAddress[i]){isBeforeEndAddress=true;break;}else if(addressTarget[i]>startAddress[i]){break;}}return isAfterStartAddress&&isBeforeEndAddress;}}},'deletesection':{execCommand:function execCommand(cmd,section,keepChildren){var me=this;if(!section)return;function getNodeFromAddress(startAddress){var current=me.body;for(var i=0;i<startAddress.length;i++){if(!current.childNodes)return null;current=current.childNodes[startAddress[i]];}return current;}var startNode=getNodeFromAddress(section.startAddress),endNode=getNodeFromAddress(section.endAddress),current=startNode,nextNode;if(!keepChildren){while(current&&domUtils.inDoc(endNode,me.document)&&!(domUtils.getPosition(current,endNode)&domUtils.POSITION_FOLLOWING)){nextNode=current.nextSibling;domUtils.remove(current);current=nextNode;}}else{domUtils.remove(current);}me.fireEvent('updateSections');}},'selectsection':{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={'startAddress':utils.clone(section.startAddress,[]),'endAddress':utils.clone(section.endAddress,[])};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).select().scrollToView();return true;},notNeedUndo:true},'scrolltosection':{execCommand:function execCommand(cmd,section){if(!section&&!section.dom)return false;var me=this,range=me.selection.getRange(),address={'startAddress':section.startAddress,'endAddress':section.endAddress};address.endAddress[address.endAddress.length-1]++;range.moveToAddress(address).scrollToView();return true;},notNeedUndo:true}}};});// plugins/simpleupload.js
/**
     * @description
     * 简单上传:点击按钮,直接选择文件上传
     * @author Jinqn
     * @date 2014-03-31
     */UE.plugin.register('simpleupload',function(){var me=this,isLoaded=false,containerBtn;function initUploadBtn(){var w=containerBtn.offsetWidth||20,h=containerBtn.offsetHeight||20,btnIframe=document.createElement('iframe'),btnStyle='display:block;width:'+w+'px;height:'+h+'px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;';domUtils.on(btnIframe,'load',function(){var timestrap=(+new Date()).toString(36),wrapper,btnIframeDoc,btnIframeBody;btnIframeDoc=btnIframe.contentDocument||btnIframe.contentWindow.document;btnIframeBody=btnIframeDoc.body;wrapper=btnIframeDoc.createElement('div');wrapper.innerHTML='<form id="edui_form_'+timestrap+'" target="edui_iframe_'+timestrap+'" method="POST" enctype="multipart/form-data" action="'+me.getOpt('serverUrl')+'" '+'style="'+btnStyle+'">'+'<input id="edui_input_'+timestrap+'" type="file" accept="image/gif,image/jpeg,image/png,image/jpg" name="'+me.options.imageFieldName+'" '+'style="'+btnStyle+'">'+'</form>'+'<iframe id="edui_iframe_'+timestrap+'" name="edui_iframe_'+timestrap+'" style="display:none;width:0;height:0;border:0;margin:0;padding:0;position:absolute;"></iframe>';wrapper.className='edui-'+me.options.theme;wrapper.id=me.ui.id+'_iframeupload';btnIframeBody.style.cssText=btnStyle;btnIframeBody.style.width=w+'px';btnIframeBody.style.height=h+'px';btnIframeBody.appendChild(wrapper);if(btnIframeBody.parentNode){btnIframeBody.parentNode.style.width=w+'px';btnIframeBody.parentNode.style.height=w+'px';}var form=btnIframeDoc.getElementById('edui_form_'+timestrap);var input=btnIframeDoc.getElementById('edui_input_'+timestrap);var iframe=btnIframeDoc.getElementById('edui_iframe_'+timestrap);domUtils.on(input,'change',function(){if(!input.value)return;var loadingId='loading_'+(+new Date()).toString(36);var params=utils.serializeParam(me.queryCommandValue('serverparam'))||'';var imageActionUrl=me.getActionUrl(me.getOpt('imageActionName'));var allowFiles=me.getOpt('imageAllowFiles');me.focus();me.execCommand('inserthtml','<img class="loadingclass" id="'+loadingId+'" src="'+me.options.themePath+me.options.theme+'/images/spacer.gif" title="'+(me.getLang('simpleupload.loading')||'')+'" >');function imageUploadCb(data){var urlPrefix=window.pathConfig.fileServer+"download?filePath=";var link=urlPrefix+data.url,loader=me.document.getElementById(loadingId);if(loader){loader.setAttribute('src',link);loader.setAttribute('_src',link);loader.setAttribute('title',data.title||'');loader.setAttribute('alt',data.original||'');loader.removeAttribute('id');domUtils.removeClasses(loader,'loadingclass');}}function showErrorLoader(title){if(loadingId){var loader=me.document.getElementById(loadingId);loader&&domUtils.remove(loader);me.fireEvent('showmessage',{'id':loadingId,'content':title,'type':'error','timeout':4000});}}/* 判断后端配置是否没有加载成功 */if(!me.getOpt('imageActionName')){console.log('ajax upload simple image file.');//errorHandler(me.getLang('autoupload.errorLoadConfig'));
//return;
}// 判断文件格式是否错误
var filename=input.value,fileext=filename?filename.substr(filename.lastIndexOf('.')):'';if(!fileext||allowFiles&&(allowFiles.join('')+'.').indexOf(fileext.toLowerCase()+'.')==-1){showErrorLoader(me.getLang('simpleupload.exceedTypeError'));return;}//选中文件上传，修改为ajax方式，支持跨域
var fd=new FormData();fd.append("file",input.files[0]);fd.append("serviceName","srv_bxfile_service");fd.append("interfaceName","add");fd.append("app_no",me.srvApp);fd.append("file_no","");var queryString="?bx_auth_ticket="+sessionStorage.getItem("bx_auth_ticket");var path=window.pathConfig.fileServer+"upload"+queryString;jQuery.ajax({type:"POST",url:path,//图片上传出来的url，返回的是图片上传后的路径，http格式
cache:false,contentType:false,data:fd,xhrFields:{withCredentials:true},processData:false,dataType:"json",success:function success(data){//data是返回的hash,key之类的值，key是定义的文件名
console.log(data);var downStr=window.pathConfig.fileServer+"download?filePath="+data.fileurl;var json={};json.name=data.src_name;json.original=data.src_name;json.size=data.file_size;json.state='SUCESS';json.type='.'+data.file_type;json.fileno=data.file_no;json.url=data.fileurl;//重新设置返回结果
imageUploadCb(json);console.log(downStr);//$('#' + fieldIdName).summernote('insertImage', downStr);
},error:function error(){alert("上传失败");}});//domUtils.on(iframe, 'load', callback);
//form.action = window.pathConfig.fileServer + "upload";
//form.action = utils.formatUrl(imageActionUrl + (imageActionUrl.indexOf('?') == -1 ? '?' : '&') + params);
//form.submit();
});var stateTimer;me.addListener('selectionchange',function(){clearTimeout(stateTimer);stateTimer=setTimeout(function(){var state=me.queryCommandState('simpleupload');if(state==-1){input.disabled='disabled';}else{input.disabled=false;}},400);});isLoaded=true;});btnIframe.style.cssText=btnStyle;containerBtn.appendChild(btnIframe);}return {bindEvents:{'ready':function ready(){//设置loading的样式
utils.cssRule('loading','.loadingclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loading.gif\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;}\n'+'.loaderrorclass{display:inline-block;cursor:default;background: url(\''+this.options.themePath+this.options.theme+'/images/loaderror.png\') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;'+'}',this.document);},/* 初始化简单上传按钮 */'simpleuploadbtnready':function simpleuploadbtnready(type,container){containerBtn=container;me.afterConfigReady(initUploadBtn);}},outputRule:function outputRule(root){utils.each(root.getNodesByTagName('img'),function(n){if(/\b(loaderrorclass)|(bloaderrorclass)\b/.test(n.getAttr('class'))){n.parentNode.removeChild(n);}});},commands:{'simpleupload':{queryCommandState:function queryCommandState(){return isLoaded?0:-1;}}}};});// plugins/serverparam.js
/**
     * 服务器提交的额外参数列表设置插件
     * @file
     * @since 1.2.6.1
     */UE.plugin.register('serverparam',function(){var serverParam={};return {commands:{/**
                 * 修改服务器提交的额外参数列表,清除所有项
                 * @command serverparam
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @example
                 * ```javascript
                 * editor.execCommand('serverparam');
                 * editor.queryCommandValue('serverparam'); //返回空
                 * ```
                 */ /**
                 * 修改服务器提交的额外参数列表,删除指定项
                 * @command serverparam
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @param { String } key 要清除的属性
                 * @example
                 * ```javascript
                 * editor.execCommand('serverparam', 'name'); //删除属性name
                 * ```
                 */ /**
                 * 修改服务器提交的额外参数列表,使用键值添加项
                 * @command serverparam
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @param { String } key 要添加的属性
                 * @param { String } value 要添加属性的值
                 * @example
                 * ```javascript
                 * editor.execCommand('serverparam', 'name', 'hello');
                 * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}
                 * ```
                 */ /**
                 * 修改服务器提交的额外参数列表,传入键值对对象添加多项
                 * @command serverparam
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @param { Object } key 传入的键值对对象
                 * @example
                 * ```javascript
                 * editor.execCommand('serverparam', {'name': 'hello'});
                 * editor.queryCommandValue('serverparam'); //返回对象 {'name': 'hello'}
                 * ```
                 */ /**
                 * 修改服务器提交的额外参数列表,使用自定义函数添加多项
                 * @command serverparam
                 * @method execCommand
                 * @param { String } cmd 命令字符串
                 * @param { Function } key 自定义获取参数的函数
                 * @example
                 * ```javascript
                 * editor.execCommand('serverparam', function(editor){
                 *     return {'key': 'value'};
                 * });
                 * editor.queryCommandValue('serverparam'); //返回对象 {'key': 'value'}
                 * ```
                 */ /**
                 * 获取服务器提交的额外参数列表
                 * @command serverparam
                 * @method queryCommandValue
                 * @param { String } cmd 命令字符串
                 * @example
                 * ```javascript
                 * editor.queryCommandValue( 'serverparam' ); //返回对象 {'key': 'value'}
                 * ```
                 */'serverparam':{execCommand:function execCommand(cmd,key,value){if(key===undefined||key===null){//不传参数,清空列表
serverParam={};}else if(utils.isString(key)){//传入键值
if(value===undefined||value===null){delete serverParam[key];}else{serverParam[key]=value;}}else if(utils.isObject(key)){//传入对象,覆盖列表项
utils.extend(serverParam,key,true);}else if(utils.isFunction(key)){//传入函数,添加列表项
utils.extend(serverParam,key(),true);}},queryCommandValue:function queryCommandValue(){return serverParam||{};}}}};});// plugins/insertfile.js
/**
     * 插入附件
     */UE.plugin.register('insertfile',function(){var me=this;function getFileIcon(url){var ext=url.substr(url.lastIndexOf('.')+1).toLowerCase(),maps={"rar":"icon_rar.gif","zip":"icon_rar.gif","tar":"icon_rar.gif","gz":"icon_rar.gif","bz2":"icon_rar.gif","doc":"icon_doc.gif","docx":"icon_doc.gif","pdf":"icon_pdf.gif","mp3":"icon_mp3.gif","xls":"icon_xls.gif","chm":"icon_chm.gif","ppt":"icon_ppt.gif","pptx":"icon_ppt.gif","avi":"icon_mv.gif","rmvb":"icon_mv.gif","wmv":"icon_mv.gif","flv":"icon_mv.gif","swf":"icon_mv.gif","rm":"icon_mv.gif","exe":"icon_exe.gif","psd":"icon_psd.gif","txt":"icon_txt.gif","jpg":"icon_jpg.gif","png":"icon_jpg.gif","jpeg":"icon_jpg.gif","gif":"icon_jpg.gif","ico":"icon_jpg.gif","bmp":"icon_jpg.gif"};return maps[ext]?maps[ext]:maps['txt'];}return {commands:{'insertfile':{execCommand:function execCommand(command,filelist){filelist=utils.isArray(filelist)?filelist:[filelist];var i,item,icon,title,html='',URL=me.getOpt('UEDITOR_HOME_URL'),iconDir=URL+(URL.substr(URL.length-1)=='/'?'':'/')+'dialogs/attachment/fileTypeImages/';for(i=0;i<filelist.length;i++){item=filelist[i];icon=iconDir+getFileIcon(item.url);title=item.title||item.url.substr(item.url.lastIndexOf('/')+1);html+='<p style="line-height: 16px;">'+'<img style="vertical-align: middle; margin-right: 2px;" src="'+icon+'" _src="'+icon+'" />'+'<a style="font-size:12px; color:#0066cc;" href="'+item.url+'" title="'+title+'">'+title+'</a>'+'</p>';}me.execCommand('insertHtml',html);}}}};});// plugins/xssFilter.js
/**
     * @file xssFilter.js
     * @desc xss过滤器
     * @author robbenmu
     */UE.plugins.xssFilter=function(){var config=UEDITOR_CONFIG;var whitList=config.whitList;function filter(node){var tagName=node.tagName;var attrs=node.attrs;if(!whitList.hasOwnProperty(tagName)){node.parentNode.removeChild(node);return false;}UE.utils.each(attrs,function(val,key){if(whitList[tagName].indexOf(key)===-1){node.setAttr(key);}});}// 添加inserthtml\paste等操作用的过滤规则
if(whitList&&config.xssFilterRules){this.options.filterRules=function(){var result={};UE.utils.each(whitList,function(val,key){result[key]=function(node){return filter(node);};});return result;}();}UE.utils.each(whitList,function(val,key){});// 添加input过滤规则
//
if(whitList&&config.inputXssFilter){this.addInputRule(function(root){root.traversal(function(node){if(node.type!=='element'){return false;}filter(node);});});}// 添加output过滤规则
//
if(whitList&&config.outputXssFilter){this.addOutputRule(function(root){root.traversal(function(node){if(node.type!=='element'){return false;}filter(node);});});}};// ui/ui.js
var baidu=baidu||{};baidu.editor=baidu.editor||{};UE.ui=baidu.editor.ui={};// ui/uiutils.js
(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils;var magic='$EDITORUI';var root=window[magic]={};var uidMagic='ID'+magic;var uidCount=0;var uiUtils=baidu.editor.ui.uiUtils={uid:function uid(obj){return obj?obj[uidMagic]||(obj[uidMagic]=++uidCount):++uidCount;},hook:function hook(fn,callback){var _dg;if(fn&&fn._callbacks){_dg=fn;}else{_dg=function dg(){var q;if(fn){q=fn.apply(this,arguments);}var callbacks=_dg._callbacks;var k=callbacks.length;while(k--){var r=callbacks[k].apply(this,arguments);if(q===undefined){q=r;}}return q;};_dg._callbacks=[];}_dg._callbacks.push(callback);return _dg;},createElementByHtml:function createElementByHtml(html){var el=document.createElement('div');el.innerHTML=html;el=el.firstChild;el.parentNode.removeChild(el);return el;},getViewportElement:function getViewportElement(){return browser.ie&&browser.quirks?document.body:document.documentElement;},getClientRect:function getClientRect(element){var bcr;//trace  IE6下在控制编辑器显隐时可能会报错，catch一下
try{bcr=element.getBoundingClientRect();}catch(e){bcr={left:0,top:0,height:0,width:0};}var rect={left:Math.round(bcr.left),top:Math.round(bcr.top),height:Math.round(bcr.bottom-bcr.top),width:Math.round(bcr.right-bcr.left)};var doc;while((doc=element.ownerDocument)!==document&&(element=domUtils.getWindow(doc).frameElement)){bcr=element.getBoundingClientRect();rect.left+=bcr.left;rect.top+=bcr.top;}rect.bottom=rect.top+rect.height;rect.right=rect.left+rect.width;return rect;},getViewportRect:function getViewportRect(){var viewportEl=uiUtils.getViewportElement();var width=(window.innerWidth||viewportEl.clientWidth)|0;var height=(window.innerHeight||viewportEl.clientHeight)|0;return {left:0,top:0,height:height,width:width,bottom:height,right:width};},setViewportOffset:function setViewportOffset(element,offset){var fixedLayer=uiUtils.getFixedLayer();if(element.parentNode===fixedLayer){element.style.left=offset.left+'px';element.style.top=offset.top+'px';}else{domUtils.setViewportOffset(element,offset);}},getEventOffset:function getEventOffset(evt){var el=evt.target||evt.srcElement;var rect=uiUtils.getClientRect(el);var offset=uiUtils.getViewportOffsetByEvent(evt);return {left:offset.left-rect.left,top:offset.top-rect.top};},getViewportOffsetByEvent:function getViewportOffsetByEvent(evt){var el=evt.target||evt.srcElement;var frameEl=domUtils.getWindow(el).frameElement;var offset={left:evt.clientX,top:evt.clientY};if(frameEl&&el.ownerDocument!==document){var rect=uiUtils.getClientRect(frameEl);offset.left+=rect.left;offset.top+=rect.top;}return offset;},setGlobal:function setGlobal(id,obj){root[id]=obj;return magic+'["'+id+'"]';},unsetGlobal:function unsetGlobal(id){delete root[id];},copyAttributes:function copyAttributes(tgt,src){var attributes=src.attributes;var k=attributes.length;while(k--){var attrNode=attributes[k];if(attrNode.nodeName!='style'&&attrNode.nodeName!='class'&&(!browser.ie||attrNode.specified)){tgt.setAttribute(attrNode.nodeName,attrNode.nodeValue);}}if(src.className){domUtils.addClass(tgt,src.className);}if(src.style.cssText){tgt.style.cssText+=';'+src.style.cssText;}},removeStyle:function removeStyle(el,styleName){if(el.style.removeProperty){el.style.removeProperty(styleName);}else if(el.style.removeAttribute){el.style.removeAttribute(styleName);}else throw'';},contains:function contains(elA,elB){return elA&&elB&&(elA===elB?false:elA.contains?elA.contains(elB):elA.compareDocumentPosition(elB)&16);},startDrag:function startDrag(evt,callbacks,doc){var doc=doc||document;var startX=evt.clientX;var startY=evt.clientY;function handleMouseMove(evt){var x=evt.clientX-startX;var y=evt.clientY-startY;callbacks.ondragmove(x,y,evt);if(evt.stopPropagation){evt.stopPropagation();}else{evt.cancelBubble=true;}}if(doc.addEventListener){var handleMouseUp=function handleMouseUp(evt){doc.removeEventListener('mousemove',handleMouseMove,true);doc.removeEventListener('mouseup',handleMouseUp,true);window.removeEventListener('mouseup',handleMouseUp,true);callbacks.ondragstop();};doc.addEventListener('mousemove',handleMouseMove,true);doc.addEventListener('mouseup',handleMouseUp,true);window.addEventListener('mouseup',handleMouseUp,true);evt.preventDefault();}else{var releaseCaptrue=function releaseCaptrue(){elm.releaseCapture();elm.detachEvent('onmousemove',handleMouseMove);elm.detachEvent('onmouseup',releaseCaptrue);elm.detachEvent('onlosecaptrue',releaseCaptrue);callbacks.ondragstop();};var elm=evt.srcElement;elm.setCapture();elm.attachEvent('onmousemove',handleMouseMove);elm.attachEvent('onmouseup',releaseCaptrue);elm.attachEvent('onlosecaptrue',releaseCaptrue);evt.returnValue=false;}callbacks.ondragstart();},getFixedLayer:function getFixedLayer(){var layer=document.getElementById('edui_fixedlayer');if(layer==null){layer=document.createElement('div');layer.id='edui_fixedlayer';document.body.appendChild(layer);if(browser.ie&&browser.version<=8){layer.style.position='absolute';bindFixedLayer();setTimeout(updateFixedOffset);}else{layer.style.position='fixed';}layer.style.left='0';layer.style.top='0';layer.style.width='0';layer.style.height='0';}return layer;},makeUnselectable:function makeUnselectable(element){if(browser.opera||browser.ie&&browser.version<9){element.unselectable='on';if(element.hasChildNodes()){for(var i=0;i<element.childNodes.length;i++){if(element.childNodes[i].nodeType==1){uiUtils.makeUnselectable(element.childNodes[i]);}}}}else{if(element.style.MozUserSelect!==undefined){element.style.MozUserSelect='none';}else if(element.style.WebkitUserSelect!==undefined){element.style.WebkitUserSelect='none';}else if(element.style.KhtmlUserSelect!==undefined){element.style.KhtmlUserSelect='none';}}}};function updateFixedOffset(){var layer=document.getElementById('edui_fixedlayer');uiUtils.setViewportOffset(layer,{left:0,top:0});//        layer.style.display = 'none';
//        layer.style.display = 'block';
//#trace: 1354
//        setTimeout(updateFixedOffset);
}function bindFixedLayer(adjOffset){domUtils.on(window,'scroll',updateFixedOffset);domUtils.on(window,'resize',baidu.editor.utils.defer(updateFixedOffset,0,true));}})();// ui/uibase.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,EventBase=baidu.editor.EventBase,UIBase=baidu.editor.ui.UIBase=function(){};UIBase.prototype={className:'',uiName:'',initOptions:function initOptions(options){var me=this;for(var k in options){me[k]=options[k];}this.id=this.id||'edui'+uiUtils.uid();},initUIBase:function initUIBase(){this._globalKey=utils.unhtml(uiUtils.setGlobal(this.id,this));},render:function render(holder){var html=this.renderHtml();var el=uiUtils.createElementByHtml(html);//by xuheng 给每个node添加class
var list=domUtils.getElementsByTagName(el,"*");var theme="edui-"+(this.theme||this.editor.options.theme);var layer=document.getElementById('edui_fixedlayer');for(var i=0,node;node=list[i++];){domUtils.addClass(node,theme);}domUtils.addClass(el,theme);if(layer){layer.className="";domUtils.addClass(layer,theme);}var seatEl=this.getDom();if(seatEl!=null){seatEl.parentNode.replaceChild(el,seatEl);uiUtils.copyAttributes(el,seatEl);}else{if(typeof holder=='string'){holder=document.getElementById(holder);}holder=holder||uiUtils.getFixedLayer();domUtils.addClass(holder,theme);holder.appendChild(el);}this.postRender();},getDom:function getDom(name){if(!name){return document.getElementById(this.id);}else{return document.getElementById(this.id+'_'+name);}},postRender:function postRender(){this.fireEvent('postrender');},getHtmlTpl:function getHtmlTpl(){return '';},formatHtml:function formatHtml(tpl){var prefix='edui-'+this.uiName;return tpl.replace(/##/g,this.id).replace(/%%-/g,this.uiName?prefix+'-':'').replace(/%%/g,(this.uiName?prefix:'')+' '+this.className).replace(/\$\$/g,this._globalKey);},renderHtml:function renderHtml(){return this.formatHtml(this.getHtmlTpl());},dispose:function dispose(){var box=this.getDom();if(box)baidu.editor.dom.domUtils.remove(box);uiUtils.unsetGlobal(this.id);}};utils.inherits(UIBase,EventBase);})();// ui/separator.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Separator=baidu.editor.ui.Separator=function(options){this.initOptions(options);this.initSeparator();};Separator.prototype={uiName:'separator',initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-box %%"></div>';}};utils.inherits(Separator,UIBase);})();// ui/mask.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,uiUtils=baidu.editor.ui.uiUtils;var Mask=baidu.editor.ui.Mask=function(options){this.initOptions(options);this.initUIBase();};Mask.prototype={getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-mask %%" onclick="return $$._onClick(event, this);" onmousedown="return $$._onMouseDown(event, this);"></div>';},postRender:function postRender(){var me=this;domUtils.on(window,'resize',function(){setTimeout(function(){if(!me.isHidden()){me._fill();}});});},show:function show(zIndex){this._fill();this.getDom().style.display='';this.getDom().style.zIndex=zIndex;},hide:function hide(){this.getDom().style.display='none';this.getDom().style.zIndex='';},isHidden:function isHidden(){return this.getDom().style.display=='none';},_onMouseDown:function _onMouseDown(){return false;},_onClick:function _onClick(e,target){this.fireEvent('click',e,target);},_fill:function _fill(){var el=this.getDom();var vpRect=uiUtils.getViewportRect();el.style.width=vpRect.width+'px';el.style.height=vpRect.height+'px';}};utils.inherits(Mask,UIBase);})();// ui/popup.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup=function(options){this.initOptions(options);this.initPopup();};var allPopups=[];function closeAllPopup(evt,el){for(var i=0;i<allPopups.length;i++){var pop=allPopups[i];if(!pop.isHidden()){if(pop.queryAutoHide(el)!==false){if(evt&&/scroll/ig.test(evt.type)&&pop.className=="edui-wordpastepop")return;pop.hide();}}}if(allPopups.length)pop.editor.fireEvent("afterhidepop");}Popup.postHide=closeAllPopup;var ANCHOR_CLASSES=['edui-anchor-topleft','edui-anchor-topright','edui-anchor-bottomleft','edui-anchor-bottomright'];Popup.prototype={SHADOW_RADIUS:5,content:null,_hidden:false,autoRender:true,canSideLeft:true,canSideUp:true,initPopup:function initPopup(){this.initUIBase();allPopups.push(this);},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-popup %%" onmousedown="return false;">'+' <div id="##_body" class="edui-popup-body">'+' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>'+' <div class="edui-shadow"></div>'+' <div id="##_content" class="edui-popup-content">'+this.getContentHtmlTpl()+'  </div>'+' </div>'+'</div>';},getContentHtmlTpl:function getContentHtmlTpl(){if(this.content){if(typeof this.content=='string'){return this.content;}return this.content.renderHtml();}else{return '';}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){if(this.content instanceof UIBase){this.content.postRender();}//捕获鼠标滚轮
if(this.captureWheel&&!this.captured){this.captured=true;var winHeight=(document.documentElement.clientHeight||document.body.clientHeight)-80,_height=this.getDom().offsetHeight,_top=uiUtils.getClientRect(this.combox.getDom()).top,content=this.getDom('content'),ifr=this.getDom('body').getElementsByTagName('iframe'),me=this;ifr.length&&(ifr=ifr[0]);while(_top+_height>winHeight){_height-=30;}content.style.height=_height+'px';//同步更改iframe高度
ifr&&(ifr.style.height=_height+'px');//阻止在combox上的鼠标滚轮事件, 防止用户的正常操作被误解
if(window.XMLHttpRequest){domUtils.on(content,'onmousewheel'in document.body?'mousewheel':'DOMMouseScroll',function(e){if(e.preventDefault){e.preventDefault();}else{e.returnValue=false;}if(e.wheelDelta){content.scrollTop-=e.wheelDelta/120*60;}else{content.scrollTop-=e.detail/-3*60;}});}else{//ie6
domUtils.on(this.getDom(),'mousewheel',function(e){e.returnValue=false;me.getDom('content').scrollTop-=e.wheelDelta/120*60;});}}this.fireEvent('postRenderAfter');this.hide(true);this._UIBase_postRender();},_doAutoRender:function _doAutoRender(){if(!this.getDom()&&this.autoRender){this.render();}},mesureSize:function mesureSize(){var box=this.getDom('content');return uiUtils.getClientRect(box);},fitSize:function fitSize(){if(this.captureWheel&&this.sized){return this.__size;}this.sized=true;var popBodyEl=this.getDom('body');popBodyEl.style.width='';popBodyEl.style.height='';var size=this.mesureSize();if(this.captureWheel){popBodyEl.style.width=-(-20-size.width)+'px';var height=parseInt(this.getDom('content').style.height,10);!window.isNaN(height)&&(size.height=height);}else{popBodyEl.style.width=size.width+'px';}popBodyEl.style.height=size.height+'px';this.__size=size;this.captureWheel&&(this.getDom('content').style.overflow='auto');return size;},showAnchor:function showAnchor(element,hoz){this.showAnchorRect(uiUtils.getClientRect(element),hoz);},showAnchorRect:function showAnchorRect(rect,hoz,adj){this._doAutoRender();var vpRect=uiUtils.getViewportRect();this.getDom().style.visibility='hidden';this._show();var popSize=this.fitSize();var sideLeft,sideUp,left,top;if(hoz){sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.left-popSize.width:rect.right;top=sideUp?rect.bottom-popSize.height:rect.top;}else{sideLeft=this.canSideLeft&&rect.right+popSize.width>vpRect.right&&rect.left>popSize.width;sideUp=this.canSideUp&&rect.top+popSize.height>vpRect.bottom&&rect.bottom>popSize.height;left=sideLeft?rect.right-popSize.width:rect.left;top=sideUp?rect.top-popSize.height:rect.bottom;}var popEl=this.getDom();uiUtils.setViewportOffset(popEl,{left:left,top:top});domUtils.removeClasses(popEl,ANCHOR_CLASSES);popEl.className+=' '+ANCHOR_CLASSES[(sideUp?1:0)*2+(sideLeft?1:0)];if(this.editor){popEl.style.zIndex=this.editor.container.style.zIndex*1+10;baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=popEl.style.zIndex-1;}this.getDom().style.visibility='visible';},showAt:function showAt(offset){var left=offset.left;var top=offset.top;var rect={left:left,top:top,right:left,bottom:top,height:0,width:0};this.showAnchorRect(rect,false,true);},_show:function _show(){if(this._hidden){var box=this.getDom();box.style.display='';this._hidden=false;//                if (box.setActive) {
//                    box.setActive();
//                }
this.fireEvent('show');}},isHidden:function isHidden(){return this._hidden;},show:function show(){this._doAutoRender();this._show();},hide:function hide(notNofity){if(!this._hidden&&this.getDom()){this.getDom().style.display='none';this._hidden=true;if(!notNofity){this.fireEvent('hide');}}},queryAutoHide:function queryAutoHide(el){return !el||!uiUtils.contains(this.getDom(),el);}};utils.inherits(Popup,UIBase);domUtils.on(document,'mousedown',function(evt){var el=evt.target||evt.srcElement;closeAllPopup(evt,el);});domUtils.on(window,'scroll',function(evt,el){closeAllPopup(evt,el);});})();// ui/colorpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,ColorPicker=baidu.editor.ui.ColorPicker=function(options){this.initOptions(options);this.noColorText=this.noColorText||this.editor.getLang("clearColor");this.initUIBase();};ColorPicker.prototype={getHtmlTpl:function getHtmlTpl(){return genColorPicker(this.noColorText,this.editor);},_onTableClick:function _onTableClick(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute('data-color');if(color){this.fireEvent('pickcolor',color);}},_onTableOver:function _onTableOver(evt){var tgt=evt.target||evt.srcElement;var color=tgt.getAttribute('data-color');if(color){this.getDom('preview').style.backgroundColor=color;}},_onTableOut:function _onTableOut(){this.getDom('preview').style.backgroundColor='';},_onPickNoColor:function _onPickNoColor(){this.fireEvent('picknocolor');}};utils.inherits(ColorPicker,UIBase);var COLORS=('ffffff,000000,eeece1,1f497d,4f81bd,c0504d,9bbb59,8064a2,4bacc6,f79646,'+'f2f2f2,7f7f7f,ddd9c3,c6d9f0,dbe5f1,f2dcdb,ebf1dd,e5e0ec,dbeef3,fdeada,'+'d8d8d8,595959,c4bd97,8db3e2,b8cce4,e5b9b7,d7e3bc,ccc1d9,b7dde8,fbd5b5,'+'bfbfbf,3f3f3f,938953,548dd4,95b3d7,d99694,c3d69b,b2a2c7,92cddc,fac08f,'+'a5a5a5,262626,494429,17365d,366092,953734,76923c,5f497a,31859b,e36c09,'+'7f7f7f,0c0c0c,1d1b10,0f243e,244061,632423,4f6128,3f3151,205867,974806,'+'c00000,ff0000,ffc000,ffff00,92d050,00b050,00b0f0,0070c0,002060,7030a0,').split(',');function genColorPicker(noColorText,editor){var html='<div id="##" class="edui-colorpicker %%">'+'<div class="edui-colorpicker-topbar edui-clearfix">'+'<div unselectable="on" id="##_preview" class="edui-colorpicker-preview"></div>'+'<div unselectable="on" class="edui-colorpicker-nocolor" onclick="$$._onPickNoColor(event, this);">'+noColorText+'</div>'+'</div>'+'<table  class="edui-box" style="border-collapse: collapse;" onmouseover="$$._onTableOver(event, this);" onmouseout="$$._onTableOut(event, this);" onclick="return $$._onTableClick(event, this);" cellspacing="0" cellpadding="0">'+'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;padding-top: 2px"><td colspan="10">'+editor.getLang("themeColor")+'</td> </tr>'+'<tr class="edui-colorpicker-tablefirstrow" >';for(var i=0;i<COLORS.length;i++){if(i&&i%10===0){html+='</tr>'+(i==60?'<tr style="border-bottom: 1px solid #ddd;font-size: 13px;line-height: 25px;color:#39C;"><td colspan="10">'+editor.getLang("standardColor")+'</td></tr>':'')+'<tr'+(i==60?' class="edui-colorpicker-tablefirstrow"':'')+'>';}html+=i<70?'<td style="padding: 0 2px;"><a hidefocus title="'+COLORS[i]+'" onclick="return false;" href="javascript:" unselectable="on" class="edui-box edui-colorpicker-colorcell"'+' data-color="#'+COLORS[i]+'"'+' style="background-color:#'+COLORS[i]+';border:solid #ccc;'+(i<10||i>=60?'border-width:1px;':i>=10&&i<20?'border-width:1px 1px 0 1px;':'border-width:0 1px 0 1px;')+'"'+'></a></td>':'';}html+='</tr></table></div>';return html;}})();// ui/tablepicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var TablePicker=baidu.editor.ui.TablePicker=function(options){this.initOptions(options);this.initTablePicker();};TablePicker.prototype={defaultNumRows:10,defaultNumCols:10,maxNumRows:20,maxNumCols:20,numRows:10,numCols:10,lengthOfCellSide:22,initTablePicker:function initTablePicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-tablepicker %%">'+'<div class="edui-tablepicker-body">'+'<div class="edui-infoarea">'+'<span id="##_label" class="edui-label"></span>'+'</div>'+'<div class="edui-pickarea"'+' onmousemove="$$._onMouseMove(event, this);"'+' onmouseover="$$._onMouseOver(event, this);"'+' onmouseout="$$._onMouseOut(event, this);"'+' onclick="$$._onClick(event, this);"'+'>'+'<div id="##_overlay" class="edui-overlay"></div>'+'</div>'+'</div>'+'</div>';},_UIBase_render:UIBase.prototype.render,render:function render(holder){this._UIBase_render(holder);this.getDom('label').innerHTML='0'+this.editor.getLang("t_row")+' x 0'+this.editor.getLang("t_col");},_track:function _track(numCols,numRows){var style=this.getDom('overlay').style;var sideLen=this.lengthOfCellSide;style.width=numCols*sideLen+'px';style.height=numRows*sideLen+'px';var label=this.getDom('label');label.innerHTML=numCols+this.editor.getLang("t_col")+' x '+numRows+this.editor.getLang("t_row");this.numCols=numCols;this.numRows=numRows;},_onMouseOver:function _onMouseOver(evt,el){var rel=evt.relatedTarget||evt.fromElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom('label').innerHTML='0'+this.editor.getLang("t_col")+' x 0'+this.editor.getLang("t_row");this.getDom('overlay').style.visibility='';}},_onMouseOut:function _onMouseOut(evt,el){var rel=evt.relatedTarget||evt.toElement;if(!uiUtils.contains(el,rel)&&el!==rel){this.getDom('label').innerHTML='0'+this.editor.getLang("t_col")+' x 0'+this.editor.getLang("t_row");this.getDom('overlay').style.visibility='hidden';}},_onMouseMove:function _onMouseMove(evt,el){var style=this.getDom('overlay').style;var offset=uiUtils.getEventOffset(evt);var sideLen=this.lengthOfCellSide;var numCols=Math.ceil(offset.left/sideLen);var numRows=Math.ceil(offset.top/sideLen);this._track(numCols,numRows);},_onClick:function _onClick(){this.fireEvent('picktable',this.numCols,this.numRows);}};utils.inherits(TablePicker,UIBase);})();// ui/stateful.js
(function(){var browser=baidu.editor.browser,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils;var TPL_STATEFUL='onmousedown="$$.Stateful_onMouseDown(event, this);"'+' onmouseup="$$.Stateful_onMouseUp(event, this);"'+(browser.ie?' onmouseenter="$$.Stateful_onMouseEnter(event, this);"'+' onmouseleave="$$.Stateful_onMouseLeave(event, this);"':' onmouseover="$$.Stateful_onMouseOver(event, this);"'+' onmouseout="$$.Stateful_onMouseOut(event, this);"');baidu.editor.ui.Stateful={alwalysHoverable:false,target:null,//目标元素和this指向dom不一样
Stateful_init:function Stateful_init(){this._Stateful_dGetHtmlTpl=this.getHtmlTpl;this.getHtmlTpl=this.Stateful_getHtmlTpl;},Stateful_getHtmlTpl:function Stateful_getHtmlTpl(){var tpl=this._Stateful_dGetHtmlTpl();// 使用function避免$转义
return tpl.replace(/stateful/g,function(){return TPL_STATEFUL;});},Stateful_onMouseEnter:function Stateful_onMouseEnter(evt,el){this.target=el;if(!this.isDisabled()||this.alwalysHoverable){this.addState('hover');this.fireEvent('over');}},Stateful_onMouseLeave:function Stateful_onMouseLeave(evt,el){if(!this.isDisabled()||this.alwalysHoverable){this.removeState('hover');this.removeState('active');this.fireEvent('out');}},Stateful_onMouseOver:function Stateful_onMouseOver(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseEnter(evt,el);}},Stateful_onMouseOut:function Stateful_onMouseOut(evt,el){var rel=evt.relatedTarget;if(!uiUtils.contains(el,rel)&&el!==rel){this.Stateful_onMouseLeave(evt,el);}},Stateful_onMouseDown:function Stateful_onMouseDown(evt,el){if(!this.isDisabled()){this.addState('active');}},Stateful_onMouseUp:function Stateful_onMouseUp(evt,el){if(!this.isDisabled()){this.removeState('active');}},Stateful_postRender:function Stateful_postRender(){if(this.disabled&&!this.hasState('disabled')){this.addState('disabled');}},hasState:function hasState(state){return domUtils.hasClass(this.getStateDom(),'edui-state-'+state);},addState:function addState(state){if(!this.hasState(state)){this.getStateDom().className+=' edui-state-'+state;}},removeState:function removeState(state){if(this.hasState(state)){domUtils.removeClasses(this.getStateDom(),['edui-state-'+state]);}},getStateDom:function getStateDom(){return this.getDom('state');},isChecked:function isChecked(){return this.hasState('checked');},setChecked:function setChecked(checked){if(!this.isDisabled()&&checked){this.addState('checked');}else{this.removeState('checked');}},isDisabled:function isDisabled(){return this.hasState('disabled');},setDisabled:function setDisabled(disabled){if(disabled){this.removeState('hover');this.removeState('checked');this.removeState('active');this.addState('disabled');}else{this.removeState('disabled');}}};})();// ui/button.js
///import core
///import uicore
///import ui/stateful.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,Button=baidu.editor.ui.Button=function(options){if(options.name){var btnName=options.name;var cssRules=options.cssRules;if(!options.className){options.className='edui-for-'+btnName;}options.cssRules='.edui-default  .edui-for-'+btnName+' .edui-icon {'+cssRules+'}';}this.initOptions(options);this.initButton();};Button.prototype={uiName:'button',label:'',title:'',showIcon:true,showText:true,cssRules:'',initButton:function initButton(){this.initUIBase();this.Stateful_init();if(this.cssRules){utils.cssRule('edui-customize-'+this.name+'-style',this.cssRules);}},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-box %%">'+'<div id="##_state" stateful>'+'<div class="%%-wrap"><div id="##_body" unselectable="on" '+(this.title?'title="'+this.title+'"':'')+' class="%%-body" onmousedown="return $$._onMouseDown(event, this);" onclick="return $$._onClick(event, this);">'+(this.showIcon?'<div class="edui-box edui-icon"></div>':'')+(this.showText?'<div class="edui-box edui-label">'+this.label+'</div>':'')+'</div>'+'</div>'+'</div></div>';},postRender:function postRender(){this.Stateful_postRender();this.setDisabled(this.disabled);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=='input'||tagName=='object'||tagName=='object'){return false;}},_onClick:function _onClick(){if(!this.isDisabled()){this.fireEvent('click');}},setTitle:function setTitle(text){var label=this.getDom('label');label.innerHTML=text;}};utils.inherits(Button,UIBase);utils.extend(Button.prototype,Stateful);})();// ui/splitbutton.js
///import core
///import uicore
///import ui/stateful.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Stateful=baidu.editor.ui.Stateful,SplitButton=baidu.editor.ui.SplitButton=function(options){this.initOptions(options);this.initSplitButton();};SplitButton.prototype={popup:null,uiName:'splitbutton',title:'',initSplitButton:function initSplitButton(){this.initUIBase();this.Stateful_init();if(this.popup!=null){var popup=this.popup;this.popup=null;this.setPopup(popup);}},_UIBase_postRender:UIBase.prototype.postRender,postRender:function postRender(){this.Stateful_postRender();this._UIBase_postRender();},setPopup:function setPopup(popup){if(this.popup===popup)return;if(this.popup!=null){this.popup.dispose();}popup.addListener('show',utils.bind(this._onPopupShow,this));popup.addListener('hide',utils.bind(this._onPopupHide,this));popup.addListener('postrender',utils.bind(function(){popup.getDom('body').appendChild(uiUtils.createElementByHtml('<div id="'+this.popup.id+'_bordereraser" class="edui-bordereraser edui-background" style="width:'+(uiUtils.getClientRect(this.getDom()).width+20)+'px"></div>'));popup.getDom().className+=' '+this.className;},this));this.popup=popup;},_onPopupShow:function _onPopupShow(){this.addState('opened');},_onPopupHide:function _onPopupHide(){this.removeState('opened');},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-box %%">'+'<div '+(this.title?'title="'+this.title+'"':'')+' id="##_state" stateful><div class="%%-body">'+'<div id="##_button_body" class="edui-box edui-button-body" onclick="$$._onButtonClick(event, this);">'+'<div class="edui-box edui-icon"></div>'+'</div>'+'<div class="edui-box edui-splitborder"></div>'+'<div class="edui-box edui-arrow" onclick="$$._onArrowClick();"></div>'+'</div></div></div>';},showPopup:function showPopup(){// 当popup往上弹出的时候，做特殊处理
var rect=uiUtils.getClientRect(this.getDom());rect.top-=this.popup.SHADOW_RADIUS;rect.height+=this.popup.SHADOW_RADIUS;this.popup.showAnchorRect(rect);},_onArrowClick:function _onArrowClick(event,el){if(!this.isDisabled()){this.showPopup();}},_onButtonClick:function _onButtonClick(){if(!this.isDisabled()){this.fireEvent('buttonclick');}}};utils.inherits(SplitButton,UIBase);utils.extend(SplitButton.prototype,Stateful,true);})();// ui/colorbutton.js
///import core
///import uicore
///import ui/colorpicker.js
///import ui/popup.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,ColorPicker=baidu.editor.ui.ColorPicker,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,ColorButton=baidu.editor.ui.ColorButton=function(options){this.initOptions(options);this.initColorButton();};ColorButton.prototype={initColorButton:function initColorButton(){var me=this;this.popup=new Popup({content:new ColorPicker({noColorText:me.editor.getLang("clearColor"),editor:me.editor,onpickcolor:function onpickcolor(t,color){me._onPickColor(color);},onpicknocolor:function onpicknocolor(t,color){me._onPickNoColor(color);}}),editor:me.editor});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.getDom('button_body').appendChild(uiUtils.createElementByHtml('<div id="'+this.id+'_colorlump" class="edui-colorlump"></div>'));this.getDom().className+=' edui-colorbutton';},setColor:function setColor(color){this.getDom('colorlump').style.backgroundColor=color;this.color=color;},_onPickColor:function _onPickColor(color){if(this.fireEvent('pickcolor',color)!==false){this.setColor(color);this.popup.hide();}},_onPickNoColor:function _onPickNoColor(color){if(this.fireEvent('picknocolor')!==false){this.popup.hide();}}};utils.inherits(ColorButton,SplitButton);})();// ui/tablebutton.js
///import core
///import uicore
///import ui/popup.js
///import ui/tablepicker.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,TablePicker=baidu.editor.ui.TablePicker,SplitButton=baidu.editor.ui.SplitButton,TableButton=baidu.editor.ui.TableButton=function(options){this.initOptions(options);this.initTableButton();};TableButton.prototype={initTableButton:function initTableButton(){var me=this;this.popup=new Popup({content:new TablePicker({editor:me.editor,onpicktable:function onpicktable(t,numCols,numRows){me._onPickTable(numCols,numRows);}}),'editor':me.editor});this.initSplitButton();},_onPickTable:function _onPickTable(numCols,numRows){if(this.fireEvent('picktable',numCols,numRows)!==false){this.popup.hide();}}};utils.inherits(TableButton,SplitButton);})();// ui/autotypesetpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase;var AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker=function(options){this.initOptions(options);this.initAutoTypeSetPicker();};AutoTypeSetPicker.prototype={initAutoTypeSetPicker:function initAutoTypeSetPicker(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){var me=this.editor,opt=me.options.autotypeset,lang=me.getLang("autoTypeSet");var textAlignInputName='textAlignValue'+me.uid,imageBlockInputName='imageBlockLineValue'+me.uid,symbolConverInputName='symbolConverValue'+me.uid;return '<div id="##" class="edui-autotypesetpicker %%">'+'<div class="edui-autotypesetpicker-body">'+'<table >'+'<tr><td nowrap><input type="checkbox" name="mergeEmptyline" '+(opt["mergeEmptyline"]?"checked":"")+'>'+lang.mergeLine+'</td><td colspan="2"><input type="checkbox" name="removeEmptyline" '+(opt["removeEmptyline"]?"checked":"")+'>'+lang.delLine+'</td></tr>'+'<tr><td nowrap><input type="checkbox" name="removeClass" '+(opt["removeClass"]?"checked":"")+'>'+lang.removeFormat+'</td><td colspan="2"><input type="checkbox" name="indent" '+(opt["indent"]?"checked":"")+'>'+lang.indent+'</td></tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="textAlign" '+(opt["textAlign"]?"checked":"")+'>'+lang.alignment+'</td>'+'<td colspan="2" id="'+textAlignInputName+'">'+'<input type="radio" name="'+textAlignInputName+'" value="left" '+(opt["textAlign"]&&opt["textAlign"]=="left"?"checked":"")+'>'+me.getLang("justifyleft")+'<input type="radio" name="'+textAlignInputName+'" value="center" '+(opt["textAlign"]&&opt["textAlign"]=="center"?"checked":"")+'>'+me.getLang("justifycenter")+'<input type="radio" name="'+textAlignInputName+'" value="right" '+(opt["textAlign"]&&opt["textAlign"]=="right"?"checked":"")+'>'+me.getLang("justifyright")+'</td>'+'</tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="imageBlockLine" '+(opt["imageBlockLine"]?"checked":"")+'>'+lang.imageFloat+'</td>'+'<td nowrap id="'+imageBlockInputName+'">'+'<input type="radio" name="'+imageBlockInputName+'" value="none" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="none"?"checked":"")+'>'+me.getLang("default")+'<input type="radio" name="'+imageBlockInputName+'" value="left" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="left"?"checked":"")+'>'+me.getLang("justifyleft")+'<input type="radio" name="'+imageBlockInputName+'" value="center" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="center"?"checked":"")+'>'+me.getLang("justifycenter")+'<input type="radio" name="'+imageBlockInputName+'" value="right" '+(opt["imageBlockLine"]&&opt["imageBlockLine"]=="right"?"checked":"")+'>'+me.getLang("justifyright")+'</td>'+'</tr>'+'<tr><td nowrap><input type="checkbox" name="clearFontSize" '+(opt["clearFontSize"]?"checked":"")+'>'+lang.removeFontsize+'</td><td colspan="2"><input type="checkbox" name="clearFontFamily" '+(opt["clearFontFamily"]?"checked":"")+'>'+lang.removeFontFamily+'</td></tr>'+'<tr><td nowrap colspan="3"><input type="checkbox" name="removeEmptyNode" '+(opt["removeEmptyNode"]?"checked":"")+'>'+lang.removeHtml+'</td></tr>'+'<tr><td nowrap colspan="3"><input type="checkbox" name="pasteFilter" '+(opt["pasteFilter"]?"checked":"")+'>'+lang.pasteFilter+'</td></tr>'+'<tr>'+'<td nowrap><input type="checkbox" name="symbolConver" '+(opt["bdc2sb"]||opt["tobdc"]?"checked":"")+'>'+lang.symbol+'</td>'+'<td id="'+symbolConverInputName+'">'+'<input type="radio" name="bdc" value="bdc2sb" '+(opt["bdc2sb"]?"checked":"")+'>'+lang.bdc2sb+'<input type="radio" name="bdc" value="tobdc" '+(opt["tobdc"]?"checked":"")+'>'+lang.tobdc+''+'</td>'+'<td nowrap align="right"><button >'+lang.run+'</button></td>'+'</tr>'+'</table>'+'</div>'+'</div>';},_UIBase_render:UIBase.prototype.render};utils.inherits(AutoTypeSetPicker,UIBase);})();// ui/autotypesetbutton.js
///import core
///import uicore
///import ui/popup.js
///import ui/autotypesetpicker.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,AutoTypeSetPicker=baidu.editor.ui.AutoTypeSetPicker,SplitButton=baidu.editor.ui.SplitButton,AutoTypeSetButton=baidu.editor.ui.AutoTypeSetButton=function(options){this.initOptions(options);this.initAutoTypeSetButton();};function getPara(me){var opt={},cont=me.getDom(),editorId=me.editor.uid,inputType=null,attrName=null,ipts=domUtils.getElementsByTagName(cont,"input");for(var i=ipts.length-1,ipt;ipt=ipts[i--];){inputType=ipt.getAttribute("type");if(inputType=="checkbox"){attrName=ipt.getAttribute("name");opt[attrName]&&delete opt[attrName];if(ipt.checked){var attrValue=document.getElementById(attrName+"Value"+editorId);if(attrValue){if(/input/ig.test(attrValue.tagName)){opt[attrName]=attrValue.value;}else{var iptChilds=attrValue.getElementsByTagName("input");for(var j=iptChilds.length-1,iptchild;iptchild=iptChilds[j--];){if(iptchild.checked){opt[attrName]=iptchild.value;break;}}}}else{opt[attrName]=true;}}else{opt[attrName]=false;}}else{opt[ipt.getAttribute("value")]=ipt.checked;}}var selects=domUtils.getElementsByTagName(cont,"select");for(var i=0,si;si=selects[i++];){var attr=si.getAttribute('name');opt[attr]=opt[attr]?si.value:'';}utils.extend(me.editor.options.autotypeset,opt);me.editor.setPreferences('autotypeset',opt);}AutoTypeSetButton.prototype={initAutoTypeSetButton:function initAutoTypeSetButton(){var me=this;this.popup=new Popup({//传入配置参数
content:new AutoTypeSetPicker({editor:me.editor}),'editor':me.editor,hide:function hide(){if(!this._hidden&&this.getDom()){getPara(this);this.getDom().style.display='none';this._hidden=true;this.fireEvent('hide');}}});var flag=0;this.popup.addListener('postRenderAfter',function(){var popupUI=this;if(flag)return;var cont=this.getDom(),btn=cont.getElementsByTagName('button')[0];btn.onclick=function(){getPara(popupUI);me.editor.execCommand('autotypeset');popupUI.hide();};domUtils.on(cont,'click',function(e){var target=e.target||e.srcElement,editorId=me.editor.uid;if(target&&target.tagName=='INPUT'){// 点击图片浮动的checkbox,去除对应的radio
if(target.name=='imageBlockLine'||target.name=='textAlign'||target.name=='symbolConver'){var checked=target.checked,radioTd=document.getElementById(target.name+'Value'+editorId),radios=radioTd.getElementsByTagName('input'),defalutSelect={'imageBlockLine':'none','textAlign':'left','symbolConver':'tobdc'};for(var i=0;i<radios.length;i++){if(checked){if(radios[i].value==defalutSelect[target.name]){radios[i].checked='checked';}}else{radios[i].checked=false;}}}// 点击radio,选中对应的checkbox
if(target.name=='imageBlockLineValue'+editorId||target.name=='textAlignValue'+editorId||target.name=='bdc'){var checkboxs=target.parentNode.previousSibling.getElementsByTagName('input');checkboxs&&(checkboxs[0].checked=true);}getPara(popupUI);}});flag=1;});this.initSplitButton();}};utils.inherits(AutoTypeSetButton,SplitButton);})();// ui/cellalignpicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,UIBase=baidu.editor.ui.UIBase;/**
         * 该参数将新增一个参数： selected， 参数类型为一个Object， 形如{ 'align': 'center', 'valign': 'top' }， 表示单元格的初始
         * 对齐状态为： 竖直居上，水平居中; 其中 align的取值为：'center', 'left', 'right'; valign的取值为: 'top', 'middle', 'bottom'
         * @update 2013/4/2 hancong03@baidu.com
         */var CellAlignPicker=baidu.editor.ui.CellAlignPicker=function(options){this.initOptions(options);this.initSelected();this.initCellAlignPicker();};CellAlignPicker.prototype={//初始化选中状态， 该方法将根据传递进来的参数获取到应该选中的对齐方式图标的索引
initSelected:function initSelected(){var status={valign:{top:0,middle:1,bottom:2},align:{left:0,center:1,right:2},count:3};if(this.selected){this.selectedIndex=status.valign[this.selected.valign]*status.count+status.align[this.selected.align];}},initCellAlignPicker:function initCellAlignPicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){var alignType=['left','center','right'],COUNT=9,tempClassName=null,tempIndex=-1,tmpl=[];for(var i=0;i<COUNT;i++){tempClassName=this.selectedIndex===i?' class="edui-cellalign-selected" ':'';tempIndex=i%3;tempIndex===0&&tmpl.push('<tr>');tmpl.push('<td index="'+i+'" '+tempClassName+' stateful><div class="edui-icon edui-'+alignType[tempIndex]+'"></div></td>');tempIndex===2&&tmpl.push('</tr>');}return '<div id="##" class="edui-cellalignpicker %%">'+'<div class="edui-cellalignpicker-body">'+'<table onclick="$$._onClick(event);">'+tmpl.join('')+'</table>'+'</div>'+'</div>';},getStateDom:function getStateDom(){return this.target;},_onClick:function _onClick(evt){var target=evt.target||evt.srcElement;if(/icon/.test(target.className)){this.items[target.parentNode.getAttribute("index")].onclick();Popup.postHide(evt);}},_UIBase_render:UIBase.prototype.render};utils.inherits(CellAlignPicker,UIBase);utils.extend(CellAlignPicker.prototype,Stateful,true);})();// ui/pastepicker.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,Stateful=baidu.editor.ui.Stateful,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase;var PastePicker=baidu.editor.ui.PastePicker=function(options){this.initOptions(options);this.initPastePicker();};PastePicker.prototype={initPastePicker:function initPastePicker(){this.initUIBase();this.Stateful_init();},getHtmlTpl:function getHtmlTpl(){return '<div class="edui-pasteicon" onclick="$$._onClick(this)"></div>'+'<div class="edui-pastecontainer">'+'<div class="edui-title">'+this.editor.getLang("pasteOpt")+'</div>'+'<div class="edui-button">'+'<div title="'+this.editor.getLang("pasteSourceFormat")+'" onclick="$$.format(false)" stateful>'+'<div class="edui-richtxticon"></div></div>'+'<div title="'+this.editor.getLang("tagFormat")+'" onclick="$$.format(2)" stateful>'+'<div class="edui-tagicon"></div></div>'+'<div title="'+this.editor.getLang("pasteTextFormat")+'" onclick="$$.format(true)" stateful>'+'<div class="edui-plaintxticon"></div></div>'+'</div>'+'</div>'+'</div>';},getStateDom:function getStateDom(){return this.target;},format:function format(param){this.editor.ui._isTransfer=true;this.editor.fireEvent('pasteTransfer',param);},_onClick:function _onClick(cur){var node=domUtils.getNextDomNode(cur),screenHt=uiUtils.getViewportRect().height,subPop=uiUtils.getClientRect(node);if(subPop.top+subPop.height>screenHt)node.style.top=-subPop.height-cur.offsetHeight+"px";else node.style.top="";if(/hidden/ig.test(domUtils.getComputedStyle(node,"visibility"))){node.style.visibility="visible";domUtils.addClass(cur,"edui-state-opened");}else{node.style.visibility="hidden";domUtils.removeClasses(cur,"edui-state-opened");}},_UIBase_render:UIBase.prototype.render};utils.inherits(PastePicker,UIBase);utils.extend(PastePicker.prototype,Stateful,true);})();// ui/toolbar.js
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Toolbar=baidu.editor.ui.Toolbar=function(options){this.initOptions(options);this.initToolbar();};Toolbar.prototype={items:null,initToolbar:function initToolbar(){this.items=this.items||[];this.initUIBase();},add:function add(item,index){if(index===undefined){this.items.push(item);}else{this.items.splice(index,0,item);}},getHtmlTpl:function getHtmlTpl(){var buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}return '<div id="##" class="edui-toolbar %%" onselectstart="return false;" onmousedown="return $$._onMouseDown(event, this);">'+buff.join('')+'</div>';},postRender:function postRender(){var box=this.getDom();for(var i=0;i<this.items.length;i++){this.items[i].postRender();}uiUtils.makeUnselectable(box);},_onMouseDown:function _onMouseDown(e){var target=e.target||e.srcElement,tagName=target&&target.tagName&&target.tagName.toLowerCase();if(tagName=='input'||tagName=='object'||tagName=='object'){return false;}}};utils.inherits(Toolbar,UIBase);})();// ui/menu.js
///import core
///import uicore
///import ui\popup.js
///import ui\stateful.js
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,Popup=baidu.editor.ui.Popup,Stateful=baidu.editor.ui.Stateful,CellAlignPicker=baidu.editor.ui.CellAlignPicker,Menu=baidu.editor.ui.Menu=function(options){this.initOptions(options);this.initMenu();};var menuSeparator={renderHtml:function renderHtml(){return '<div class="edui-menuitem edui-menuseparator"><div class="edui-menuseparator-inner"></div></div>';},postRender:function postRender(){},queryAutoHide:function queryAutoHide(){return true;}};Menu.prototype={items:null,uiName:'menu',initMenu:function initMenu(){this.items=this.items||[];this.initPopup();this.initItems();},initItems:function initItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item=='-'){this.items[i]=this.getSeparator();}else if(!(item instanceof MenuItem)){item.editor=this.editor;item.theme=this.editor.options.theme;this.items[i]=this.createItem(item);}}},getSeparator:function getSeparator(){return menuSeparator;},createItem:function createItem(item){//新增一个参数menu, 该参数存储了menuItem所对应的menu引用
item.menu=this;return new MenuItem(item);},_Popup_getContentHtmlTpl:Popup.prototype.getContentHtmlTpl,getContentHtmlTpl:function getContentHtmlTpl(){if(this.items.length==0){return this._Popup_getContentHtmlTpl();}var buff=[];for(var i=0;i<this.items.length;i++){var item=this.items[i];buff[i]=item.renderHtml();}return '<div class="%%-body">'+buff.join('')+'</div>';},_Popup_postRender:Popup.prototype.postRender,postRender:function postRender(){var me=this;for(var i=0;i<this.items.length;i++){var item=this.items[i];item.ownerMenu=this;item.postRender();}domUtils.on(this.getDom(),'mouseover',function(evt){evt=evt||event;var rel=evt.relatedTarget||evt.fromElement;var el=me.getDom();if(!uiUtils.contains(el,rel)&&el!==rel){me.fireEvent('over');}});this._Popup_postRender();},queryAutoHide:function queryAutoHide(el){if(el){if(uiUtils.contains(this.getDom(),el)){return false;}for(var i=0;i<this.items.length;i++){var item=this.items[i];if(item.queryAutoHide(el)===false){return false;}}}},clearItems:function clearItems(){for(var i=0;i<this.items.length;i++){var item=this.items[i];clearTimeout(item._showingTimer);clearTimeout(item._closingTimer);if(item.subMenu){item.subMenu.destroy();}}this.items=[];},destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}this.clearItems();},dispose:function dispose(){this.destroy();}};utils.inherits(Menu,Popup);/**
         * @update 2013/04/03 hancong03 新增一个参数menu, 该参数存储了menuItem所对应的menu引用
         * @type {Function}
         */var MenuItem=baidu.editor.ui.MenuItem=function(options){this.initOptions(options);this.initUIBase();this.Stateful_init();if(this.subMenu&&!(this.subMenu instanceof Menu)){if(options.className&&options.className.indexOf("aligntd")!=-1){var me=this;//获取单元格对齐初始状态
this.subMenu.selected=this.editor.queryCommandValue('cellalignment');this.subMenu=new Popup({content:new CellAlignPicker(this.subMenu),parentMenu:me,editor:me.editor,destroy:function destroy(){if(this.getDom()){domUtils.remove(this.getDom());}}});this.subMenu.addListener("postRenderAfter",function(){domUtils.on(this.getDom(),"mouseover",function(){me.addState('opened');});});}else{this.subMenu=new Menu(this.subMenu);}}};MenuItem.prototype={label:'',subMenu:null,ownerMenu:null,uiName:'menuitem',alwalysHoverable:true,getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="%%" stateful onclick="$$._onClick(event, this);">'+'<div class="%%-body">'+this.renderLabelHtml()+'</div>'+'</div>';},postRender:function postRender(){var me=this;this.addListener('over',function(){me.ownerMenu.fireEvent('submenuover',me);if(me.subMenu){me.delayShowSubMenu();}});if(this.subMenu){this.getDom().className+=' edui-hassubmenu';this.subMenu.render();this.addListener('out',function(){me.delayHideSubMenu();});this.subMenu.addListener('over',function(){clearTimeout(me._closingTimer);me._closingTimer=null;me.addState('opened');});this.ownerMenu.addListener('hide',function(){me.hideSubMenu();});this.ownerMenu.addListener('submenuover',function(t,subMenu){if(subMenu!==me){me.delayHideSubMenu();}});this.subMenu._bakQueryAutoHide=this.subMenu.queryAutoHide;this.subMenu.queryAutoHide=function(el){if(el&&uiUtils.contains(me.getDom(),el)){return false;}return this._bakQueryAutoHide(el);};}this.getDom().style.tabIndex='-1';uiUtils.makeUnselectable(this.getDom());this.Stateful_postRender();},delayShowSubMenu:function delayShowSubMenu(){var me=this;if(!me.isDisabled()){me.addState('opened');clearTimeout(me._showingTimer);clearTimeout(me._closingTimer);me._closingTimer=null;me._showingTimer=setTimeout(function(){me.showSubMenu();},250);}},delayHideSubMenu:function delayHideSubMenu(){var me=this;if(!me.isDisabled()){me.removeState('opened');clearTimeout(me._showingTimer);if(!me._closingTimer){me._closingTimer=setTimeout(function(){if(!me.hasState('opened')){me.hideSubMenu();}me._closingTimer=null;},400);}}},renderLabelHtml:function renderLabelHtml(){return '<div class="edui-arrow"></div>'+'<div class="edui-box edui-icon"></div>'+'<div class="edui-box edui-label %%-label">'+(this.label||'')+'</div>';},getStateDom:function getStateDom(){return this.getDom();},queryAutoHide:function queryAutoHide(el){if(this.subMenu&&this.hasState('opened')){return this.subMenu.queryAutoHide(el);}},_onClick:function _onClick(event,this_){if(this.hasState('disabled'))return;if(this.fireEvent('click',event,this_)!==false){if(this.subMenu){this.showSubMenu();}else{Popup.postHide(event);}}},showSubMenu:function showSubMenu(){var rect=uiUtils.getClientRect(this.getDom());rect.right-=5;rect.left+=2;rect.width-=7;rect.top-=4;rect.bottom+=4;rect.height+=8;this.subMenu.showAnchorRect(rect,true,true);},hideSubMenu:function hideSubMenu(){this.subMenu.hide();}};utils.inherits(MenuItem,UIBase);utils.extend(MenuItem.prototype,Stateful,true);})();// ui/combox.js
///import core
///import uicore
///import ui/menu.js
///import ui/splitbutton.js
(function(){// todo: menu和item提成通用list
var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,Combox=baidu.editor.ui.Combox=function(options){this.initOptions(options);this.initCombox();};Combox.prototype={uiName:'combox',onbuttonclick:function onbuttonclick(){this.showPopup();},initCombox:function initCombox(){var me=this;this.items=this.items||[];for(var i=0;i<this.items.length;i++){var item=this.items[i];item.uiName='listitem';item.index=i;item.onclick=function(){me.selectByIndex(this.index);};}this.popup=new Menu({items:this.items,uiName:'list',editor:this.editor,captureWheel:true,combox:this});this.initSplitButton();},_SplitButton_postRender:SplitButton.prototype.postRender,postRender:function postRender(){this._SplitButton_postRender();this.setLabel(this.label||'');this.setValue(this.initValue||'');},showPopup:function showPopup(){var rect=uiUtils.getClientRect(this.getDom());rect.top+=1;rect.bottom-=1;rect.height-=2;this.popup.showAnchorRect(rect);},getValue:function getValue(){return this.value;},setValue:function setValue(value){var index=this.indexByValue(value);if(index!=-1){this.selectedIndex=index;this.setLabel(this.items[index].label);this.value=this.items[index].value;}else{this.selectedIndex=-1;this.setLabel(this.getLabelForUnknowValue(value));this.value=value;}},setLabel:function setLabel(label){this.getDom('button_body').innerHTML=label;this.label=label;},getLabelForUnknowValue:function getLabelForUnknowValue(value){return value;},indexByValue:function indexByValue(value){for(var i=0;i<this.items.length;i++){if(value==this.items[i].value){return i;}}return -1;},getItem:function getItem(index){return this.items[index];},selectByIndex:function selectByIndex(index){if(index<this.items.length&&this.fireEvent('select',index)!==false){this.selectedIndex=index;this.value=this.items[index].value;this.setLabel(this.items[index].label);}}};utils.inherits(Combox,SplitButton);})();// ui/dialog.js
///import core
///import uicore
///import ui/mask.js
///import ui/button.js
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,uiUtils=baidu.editor.ui.uiUtils,Mask=baidu.editor.ui.Mask,UIBase=baidu.editor.ui.UIBase,Button=baidu.editor.ui.Button,Dialog=baidu.editor.ui.Dialog=function(options){if(options.name){var name=options.name;var cssRules=options.cssRules;if(!options.className){options.className='edui-for-'+name;}if(cssRules){options.cssRules='.edui-default .edui-for-'+name+' .edui-dialog-content  {'+cssRules+'}';}}this.initOptions(utils.extend({autoReset:true,draggable:true,onok:function onok(){},oncancel:function oncancel(){},onclose:function onclose(t,ok){return ok?this.onok():this.oncancel();},//是否控制dialog中的scroll事件， 默认为不阻止
holdScroll:false},options));this.initDialog();};var modalMask;var dragMask;var activeDialog;Dialog.prototype={draggable:false,uiName:'dialog',initDialog:function initDialog(){var me=this,theme=this.editor.options.theme;if(this.cssRules){utils.cssRule('edui-customize-'+this.name+'-style',this.cssRules);}this.initUIBase();this.modalMask=modalMask||(modalMask=new Mask({className:'edui-dialog-modalmask',theme:theme,onclick:function onclick(){activeDialog&&activeDialog.close(false);}}));this.dragMask=dragMask||(dragMask=new Mask({className:'edui-dialog-dragmask',theme:theme}));this.closeButton=new Button({className:'edui-dialog-closebutton',title:me.closeDialog,theme:theme,onclick:function onclick(){me.close(false);}});this.fullscreen&&this.initResizeEvent();if(this.buttons){for(var i=0;i<this.buttons.length;i++){if(!(this.buttons[i]instanceof Button)){this.buttons[i]=new Button(utils.extend(this.buttons[i],{editor:this.editor},true));}}}},initResizeEvent:function initResizeEvent(){var me=this;domUtils.on(window,"resize",function(){if(me._hidden||me._hidden===undefined){return;}if(me.__resizeTimer){window.clearTimeout(me.__resizeTimer);}me.__resizeTimer=window.setTimeout(function(){me.__resizeTimer=null;var dialogWrapNode=me.getDom(),contentNode=me.getDom('content'),wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode),vpRect=uiUtils.getViewportRect();contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";me.fireEvent("resize");},100);});},fitSize:function fitSize(){var popBodyEl=this.getDom('body');//            if (!(baidu.editor.browser.ie && baidu.editor.browser.version == 7)) {
//                uiUtils.removeStyle(popBodyEl, 'width');
//                uiUtils.removeStyle(popBodyEl, 'height');
//            }
var size=this.mesureSize();popBodyEl.style.width=size.width+'px';popBodyEl.style.height=size.height+'px';return size;},safeSetOffset:function safeSetOffset(offset){var me=this;var el=me.getDom();var vpRect=uiUtils.getViewportRect();var rect=uiUtils.getClientRect(el);var left=offset.left;if(left+rect.width>vpRect.right){left=vpRect.right-rect.width;}var top=offset.top;if(top+rect.height>vpRect.bottom){top=vpRect.bottom-rect.height;}el.style.left=Math.max(left,0)+'px';el.style.top=Math.max(top,0)+'px';},showAtCenter:function showAtCenter(){var vpRect=uiUtils.getViewportRect();if(!this.fullscreen){this.getDom().style.display='';var popSize=this.fitSize();var titleHeight=this.getDom('titlebar').offsetHeight|0;var left=vpRect.width/2-popSize.width/2;var top=vpRect.height/2-(popSize.height-titleHeight)/2-titleHeight;var popEl=this.getDom();this.safeSetOffset({left:Math.max(left|0,0),top:Math.max(top|0,0)});if(!domUtils.hasClass(popEl,'edui-state-centered')){popEl.className+=' edui-state-centered';}}else{var dialogWrapNode=this.getDom(),contentNode=this.getDom('content');dialogWrapNode.style.display="block";var wrapRect=UE.ui.uiUtils.getClientRect(dialogWrapNode),contentRect=UE.ui.uiUtils.getClientRect(contentNode);dialogWrapNode.style.left="-100000px";contentNode.style.width=vpRect.width-wrapRect.width+contentRect.width+"px";contentNode.style.height=vpRect.height-wrapRect.height+contentRect.height+"px";dialogWrapNode.style.width=vpRect.width+"px";dialogWrapNode.style.height=vpRect.height+"px";dialogWrapNode.style.left=0;//保存环境的overflow值
this._originalContext={html:{overflowX:document.documentElement.style.overflowX,overflowY:document.documentElement.style.overflowY},body:{overflowX:document.body.style.overflowX,overflowY:document.body.style.overflowY}};document.documentElement.style.overflowX='hidden';document.documentElement.style.overflowY='hidden';document.body.style.overflowX='hidden';document.body.style.overflowY='hidden';}this._show();},getContentHtml:function getContentHtml(){var contentHtml='';if(typeof this.content=='string'){contentHtml=this.content;}else if(this.iframeUrl){contentHtml='<span id="'+this.id+'_contmask" class="dialogcontmask"></span><iframe id="'+this.id+'_iframe" class="%%-iframe" height="100%" width="100%" frameborder="0" src="'+this.iframeUrl+'"></iframe>';}return contentHtml;},getHtmlTpl:function getHtmlTpl(){var footHtml='';if(this.buttons){var buff=[];for(var i=0;i<this.buttons.length;i++){buff[i]=this.buttons[i].renderHtml();}footHtml='<div class="%%-foot">'+'<div id="##_buttons" class="%%-buttons">'+buff.join('')+'</div>'+'</div>';}return '<div id="##" class="%%"><div '+(!this.fullscreen?'class="%%"':'class="%%-wrap edui-dialog-fullscreen-flag"')+'><div id="##_body" class="%%-body">'+'<div class="%%-shadow"></div>'+'<div id="##_titlebar" class="%%-titlebar">'+'<div class="%%-draghandle" onmousedown="$$._onTitlebarMouseDown(event, this);">'+'<span class="%%-caption">'+(this.title||'')+'</span>'+'</div>'+this.closeButton.renderHtml()+'</div>'+'<div id="##_content" class="%%-content">'+(this.autoReset?'':this.getContentHtml())+'</div>'+footHtml+'</div></div></div>';},postRender:function postRender(){// todo: 保持居中/记住上次关闭位置选项
if(!this.modalMask.getDom()){this.modalMask.render();this.modalMask.hide();}if(!this.dragMask.getDom()){this.dragMask.render();this.dragMask.hide();}var me=this;this.addListener('show',function(){me.modalMask.show(this.getDom().style.zIndex-2);});this.addListener('hide',function(){me.modalMask.hide();});if(this.buttons){for(var i=0;i<this.buttons.length;i++){this.buttons[i].postRender();}}domUtils.on(window,'resize',function(){setTimeout(function(){if(!me.isHidden()){me.safeSetOffset(uiUtils.getClientRect(me.getDom()));}});});//hold住scroll事件，防止dialog的滚动影响页面
//            if( this.holdScroll ) {
//
//                if( !me.iframeUrl ) {
//                    domUtils.on( document.getElementById( me.id + "_iframe"), !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                        domUtils.preventDefault(e);
//                    } );
//                } else {
//                    me.addListener('dialogafterreset', function(){
//                        window.setTimeout(function(){
//                            var iframeWindow = document.getElementById( me.id + "_iframe").contentWindow;
//
//                            if( browser.ie ) {
//
//                                var timer = window.setInterval(function(){
//
//                                    if( iframeWindow.document && iframeWindow.document.body ) {
//                                        window.clearInterval( timer );
//                                        timer = null;
//                                        domUtils.on( iframeWindow.document.body, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                                            domUtils.preventDefault(e);
//                                        } );
//                                    }
//
//                                }, 100);
//
//                            } else {
//                                domUtils.on( iframeWindow, !browser.gecko ? "mousewheel" : "DOMMouseScroll", function(e){
//                                    domUtils.preventDefault(e);
//                                } );
//                            }
//
//                        }, 1);
//                    });
//                }
//
//            }
this._hide();},mesureSize:function mesureSize(){var body=this.getDom('body');var width=uiUtils.getClientRect(this.getDom('content')).width;var dialogBodyStyle=body.style;dialogBodyStyle.width=width;return uiUtils.getClientRect(body);},_onTitlebarMouseDown:function _onTitlebarMouseDown(evt,el){if(this.draggable){var rect;var vpRect=uiUtils.getViewportRect();var me=this;uiUtils.startDrag(evt,{ondragstart:function ondragstart(){rect=uiUtils.getClientRect(me.getDom());me.getDom('contmask').style.visibility='visible';me.dragMask.show(me.getDom().style.zIndex-1);},ondragmove:function ondragmove(x,y){var left=rect.left+x;var top=rect.top+y;me.safeSetOffset({left:left,top:top});},ondragstop:function ondragstop(){me.getDom('contmask').style.visibility='hidden';domUtils.removeClasses(me.getDom(),['edui-state-centered']);me.dragMask.hide();}});}},reset:function reset(){this.getDom('content').innerHTML=this.getContentHtml();this.fireEvent('dialogafterreset');},_show:function _show(){if(this._hidden){this.getDom().style.display='';//要高过编辑器的zindxe
this.editor.container.style.zIndex&&(this.getDom().style.zIndex=this.editor.container.style.zIndex*1+10);this._hidden=false;this.fireEvent('show');baidu.editor.ui.uiUtils.getFixedLayer().style.zIndex=this.getDom().style.zIndex-4;}},isHidden:function isHidden(){return this._hidden;},_hide:function _hide(){if(!this._hidden){var wrapNode=this.getDom();wrapNode.style.display='none';wrapNode.style.zIndex='';wrapNode.style.width='';wrapNode.style.height='';this._hidden=true;this.fireEvent('hide');}},open:function open(){if(this.autoReset){//有可能还没有渲染
try{this.reset();}catch(e){this.render();this.open();}}this.showAtCenter();if(this.iframeUrl){try{this.getDom('iframe').focus();}catch(ex){}}activeDialog=this;},_onCloseButtonClick:function _onCloseButtonClick(evt,el){this.close(false);},close:function close(ok){if(this.fireEvent('close',ok)!==false){//还原环境
if(this.fullscreen){document.documentElement.style.overflowX=this._originalContext.html.overflowX;document.documentElement.style.overflowY=this._originalContext.html.overflowY;document.body.style.overflowX=this._originalContext.body.overflowX;document.body.style.overflowY=this._originalContext.body.overflowY;delete this._originalContext;}this._hide();//销毁content
var content=this.getDom('content');var iframe=this.getDom('iframe');if(content&&iframe){var doc=iframe.contentDocument||iframe.contentWindow.document;doc&&(doc.body.innerHTML='');domUtils.remove(content);}}}};utils.inherits(Dialog,UIBase);})();// ui/menubutton.js
///import core
///import uicore
///import ui/menu.js
///import ui/splitbutton.js
(function(){var utils=baidu.editor.utils,Menu=baidu.editor.ui.Menu,SplitButton=baidu.editor.ui.SplitButton,MenuButton=baidu.editor.ui.MenuButton=function(options){this.initOptions(options);this.initMenuButton();};MenuButton.prototype={initMenuButton:function initMenuButton(){var me=this;this.uiName="menubutton";this.popup=new Menu({items:me.items,className:me.className,editor:me.editor});this.popup.addListener('show',function(){var list=this;for(var i=0;i<list.items.length;i++){list.items[i].removeState('checked');if(list.items[i].value==me._value){list.items[i].addState('checked');this.value=me._value;}}});this.initSplitButton();},setValue:function setValue(value){this._value=value;}};utils.inherits(MenuButton,SplitButton);})();// ui/multiMenu.js
///import core
///import uicore
///commands 表情
(function(){var utils=baidu.editor.utils,Popup=baidu.editor.ui.Popup,SplitButton=baidu.editor.ui.SplitButton,MultiMenuPop=baidu.editor.ui.MultiMenuPop=function(options){this.initOptions(options);this.initMultiMenu();};MultiMenuPop.prototype={initMultiMenu:function initMultiMenu(){var me=this;this.popup=new Popup({content:'',editor:me.editor,iframe_rendered:false,onshow:function onshow(){if(!this.iframe_rendered){this.iframe_rendered=true;this.getDom('content').innerHTML='<iframe id="'+me.id+'_iframe" src="'+me.iframeUrl+'" frameborder="0"></iframe>';me.editor.container.style.zIndex&&(this.getDom().style.zIndex=me.editor.container.style.zIndex*1+1);}}// canSideUp:false,
// canSideLeft:false
});this.onbuttonclick=function(){this.showPopup();};this.initSplitButton();}};utils.inherits(MultiMenuPop,SplitButton);})();// ui/shortcutmenu.js
(function(){var UI=baidu.editor.ui,UIBase=UI.UIBase,uiUtils=UI.uiUtils,utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils;var allMenus=[],//存储所有快捷菜单
timeID,isSubMenuShow=false;//是否有子pop显示
var ShortCutMenu=UI.ShortCutMenu=function(options){this.initOptions(options);this.initShortCutMenu();};ShortCutMenu.postHide=hideAllMenu;ShortCutMenu.prototype={isHidden:true,SPACE:5,initShortCutMenu:function initShortCutMenu(){this.items=this.items||[];this.initUIBase();this.initItems();this.initEvent();allMenus.push(this);},initEvent:function initEvent(){var me=this,doc=me.editor.document;domUtils.on(doc,"mousemove",function(e){if(me.isHidden===false){//有pop显示就不隐藏快捷菜单
if(me.getSubMenuMark()||me.eventType=="contextmenu")return;var flag=true,el=me.getDom(),wt=el.offsetWidth,ht=el.offsetHeight,distanceX=wt/2+me.SPACE,//距离中心X标准
distanceY=ht/2,//距离中心Y标准
x=Math.abs(e.screenX-me.left),//离中心距离横坐标
y=Math.abs(e.screenY-me.top);//离中心距离纵坐标
clearTimeout(timeID);timeID=setTimeout(function(){if(y>0&&y<distanceY){me.setOpacity(el,"1");}else if(y>distanceY&&y<distanceY+70){me.setOpacity(el,"0.5");flag=false;}else if(y>distanceY+70&&y<distanceY+140){me.hide();}if(flag&&x>0&&x<distanceX){me.setOpacity(el,"1");}else if(x>distanceX&&x<distanceX+70){me.setOpacity(el,"0.5");}else if(x>distanceX+70&&x<distanceX+140){me.hide();}});}});//ie\ff下 mouseout不准
if(browser.chrome){domUtils.on(doc,"mouseout",function(e){var relatedTgt=e.relatedTarget||e.toElement;if(relatedTgt==null||relatedTgt.tagName=="HTML"){me.hide();}});}me.editor.addListener("afterhidepop",function(){if(!me.isHidden){isSubMenuShow=true;}});},initItems:function initItems(){if(utils.isArray(this.items)){for(var i=0,len=this.items.length;i<len;i++){var item=this.items[i].toLowerCase();if(UI[item]){this.items[i]=new UI[item](this.editor);this.items[i].className+=" edui-shortcutsubmenu ";}}}},setOpacity:function setOpacity(el,value){if(browser.ie&&browser.version<9){el.style.filter="alpha(opacity = "+parseFloat(value)*100+");";}else{el.style.opacity=value;}},getSubMenuMark:function getSubMenuMark(){isSubMenuShow=false;var layerEle=uiUtils.getFixedLayer();var list=domUtils.getElementsByTagName(layerEle,"div",function(node){return domUtils.hasClass(node,"edui-shortcutsubmenu edui-popup");});for(var i=0,node;node=list[i++];){if(node.style.display!="none"){isSubMenuShow=true;}}return isSubMenuShow;},show:function show(e,hasContextmenu){var me=this,offset={},el=this.getDom(),fixedlayer=uiUtils.getFixedLayer();function setPos(offset){if(offset.left<0){offset.left=0;}if(offset.top<0){offset.top=0;}el.style.cssText="position:absolute;left:"+offset.left+"px;top:"+offset.top+"px;";}function setPosByCxtMenu(menu){if(!menu.tagName){menu=menu.getDom();}offset.left=parseInt(menu.style.left);offset.top=parseInt(menu.style.top);offset.top-=el.offsetHeight+15;setPos(offset);}me.eventType=e.type;el.style.cssText="display:block;left:-9999px";if(e.type=="contextmenu"&&hasContextmenu){var menu=domUtils.getElementsByTagName(fixedlayer,"div","edui-contextmenu")[0];if(menu){setPosByCxtMenu(menu);}else{me.editor.addListener("aftershowcontextmenu",function(type,menu){setPosByCxtMenu(menu);});}}else{offset=uiUtils.getViewportOffsetByEvent(e);offset.top-=el.offsetHeight+me.SPACE;offset.left+=me.SPACE+20;setPos(offset);me.setOpacity(el,0.2);}me.isHidden=false;me.left=e.screenX+el.offsetWidth/2-me.SPACE;me.top=e.screenY-el.offsetHeight/2-me.SPACE;if(me.editor){el.style.zIndex=me.editor.container.style.zIndex*1+10;fixedlayer.style.zIndex=el.style.zIndex-1;}},hide:function hide(){if(this.getDom()){this.getDom().style.display="none";}this.isHidden=true;},postRender:function postRender(){if(utils.isArray(this.items)){for(var i=0,item;item=this.items[i++];){item.postRender();}}},getHtmlTpl:function getHtmlTpl(){var buff;if(utils.isArray(this.items)){buff=[];for(var i=0;i<this.items.length;i++){buff[i]=this.items[i].renderHtml();}buff=buff.join("");}else{buff=this.items;}return '<div id="##" class="%% edui-toolbar" data-src="shortcutmenu" onmousedown="return false;" onselectstart="return false;" >'+buff+'</div>';}};utils.inherits(ShortCutMenu,UIBase);function hideAllMenu(e){var tgt=e.target||e.srcElement,cur=domUtils.findParent(tgt,function(node){return domUtils.hasClass(node,"edui-shortcutmenu")||domUtils.hasClass(node,"edui-popup");},true);if(!cur){for(var i=0,menu;menu=allMenus[i++];){menu.hide();}}}domUtils.on(document,'mousedown',function(e){hideAllMenu(e);});domUtils.on(window,'scroll',function(e){hideAllMenu(e);});})();// ui/breakline.js
(function(){var utils=baidu.editor.utils,UIBase=baidu.editor.ui.UIBase,Breakline=baidu.editor.ui.Breakline=function(options){this.initOptions(options);this.initSeparator();};Breakline.prototype={uiName:'Breakline',initSeparator:function initSeparator(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return '<br/>';}};utils.inherits(Breakline,UIBase);})();// ui/message.js
///import core
///import uicore
(function(){var utils=baidu.editor.utils,domUtils=baidu.editor.dom.domUtils,UIBase=baidu.editor.ui.UIBase,Message=baidu.editor.ui.Message=function(options){this.initOptions(options);this.initMessage();};Message.prototype={initMessage:function initMessage(){this.initUIBase();},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="edui-message %%">'+' <div id="##_closer" class="edui-message-closer">×</div>'+' <div id="##_body" class="edui-message-body edui-message-type-info">'+' <iframe style="position:absolute;z-index:-1;left:0;top:0;background-color: transparent;" frameborder="0" width="100%" height="100%" src="about:blank"></iframe>'+' <div class="edui-shadow"></div>'+' <div id="##_content" class="edui-message-content">'+'  </div>'+' </div>'+'</div>';},reset:function reset(opt){var me=this;if(!opt.keepshow){clearTimeout(this.timer);me.timer=setTimeout(function(){me.hide();},opt.timeout||4000);}opt.content!==undefined&&me.setContent(opt.content);opt.type!==undefined&&me.setType(opt.type);me.show();},postRender:function postRender(){var me=this,closer=this.getDom('closer');closer&&domUtils.on(closer,'click',function(){me.hide();});},setContent:function setContent(content){this.getDom('content').innerHTML=content;},setType:function setType(type){type=type||'info';var body=this.getDom('body');body.className=body.className.replace(/edui-message-type-[\w-]+/,'edui-message-type-'+type);},getContent:function getContent(){return this.getDom('content').innerHTML;},getType:function getType(){var arr=this.getDom('body').match(/edui-message-type-([\w-]+)/);return arr?arr[1]:'';},show:function show(){this.getDom().style.display='block';},hide:function hide(){var dom=this.getDom();if(dom){dom.style.display='none';dom.parentNode&&dom.parentNode.removeChild(dom);}}};utils.inherits(Message,UIBase);})();// adapter/editorui.js
//ui跟编辑器的适配層
//那个按钮弹出是dialog，是下拉筐等都是在这个js中配置
//自己写的ui也要在这里配置，放到baidu.editor.ui下边，当编辑器实例化的时候会根据ueditor.config中的toolbars找到相应的进行实例化
(function(){var utils=baidu.editor.utils;var editorui=baidu.editor.ui;var _Dialog=editorui.Dialog;editorui.buttons={};editorui.Dialog=function(options){var dialog=new _Dialog(options);dialog.addListener('hide',function(){if(dialog.editor){var editor=dialog.editor;try{if(browser.gecko){var y=editor.window.scrollY,x=editor.window.scrollX;editor.body.focus();editor.window.scrollTo(x,y);}else{editor.focus();}}catch(ex){}}});return dialog;};var iframeUrlMap={'anchor':'~/dialogs/anchor/anchor.html','insertimage':'~/dialogs/image/image.html','link':'~/dialogs/link/link.html','spechars':'~/dialogs/spechars/spechars.html','searchreplace':'~/dialogs/searchreplace/searchreplace.html','map':'~/dialogs/map/map.html','gmap':'~/dialogs/gmap/gmap.html','insertvideo':'~/dialogs/video/video.html','help':'~/dialogs/help/help.html','preview':'~/dialogs/preview/preview.html','emotion':'~/dialogs/emotion/emotion.html','wordimage':'~/dialogs/wordimage/wordimage.html','attachment':'~/dialogs/attachment/attachment.html','insertframe':'~/dialogs/insertframe/insertframe.html','edittip':'~/dialogs/table/edittip.html','edittable':'~/dialogs/table/edittable.html','edittd':'~/dialogs/table/edittd.html','webapp':'~/dialogs/webapp/webapp.html','snapscreen':'~/dialogs/snapscreen/snapscreen.html','scrawl':'~/dialogs/scrawl/scrawl.html','music':'~/dialogs/music/music.html','template':'~/dialogs/template/template.html','background':'~/dialogs/background/background.html','charts':'~/dialogs/charts/charts.html'};//为工具栏添加按钮，以下都是统一的按钮触发命令，所以写在一起
var btnCmds=['undo','redo','formatmatch','bold','italic','underline','fontborder','touppercase','tolowercase','strikethrough','subscript','superscript','source','indent','outdent','blockquote','pasteplain','pagebreak','selectall','print','horizontal','removeformat','time','date','unlink','insertparagraphbeforetable','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells','mergecells','deletetable','drafts'];for(var i=0,ci;ci=btnCmds[i++];){ci=ci.toLowerCase();editorui[ci]=function(cmd){return function(editor){var ui=new editorui.Button({className:'edui-for-'+cmd,title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'',onclick:function onclick(){editor.execCommand(cmd);},theme:editor.options.theme,showText:false});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};}(ci);}//清除文档
editorui.cleardoc=function(editor){var ui=new editorui.Button({className:'edui-for-cleardoc',title:editor.options.labelMap.cleardoc||editor.getLang("labelMap.cleardoc")||'',theme:editor.options.theme,onclick:function onclick(){if(confirm(editor.getLang("confirmClear"))){editor.execCommand('cleardoc');}}});editorui.buttons["cleardoc"]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('cleardoc')==-1);});return ui;};//排版，图片排版，文字方向
var typeset={'justify':['left','right','center','justify'],'imagefloat':['none','left','center','right'],'directionality':['ltr','rtl']};for(var p in typeset){(function(cmd,val){for(var i=0,ci;ci=val[i++];){(function(cmd2){editorui[cmd.replace('float','')+cmd2]=function(editor){var ui=new editorui.Button({className:'edui-for-'+cmd.replace('float','')+cmd2,title:editor.options.labelMap[cmd.replace('float','')+cmd2]||editor.getLang("labelMap."+cmd.replace('float','')+cmd2)||'',theme:editor.options.theme,onclick:function onclick(){editor.execCommand(cmd,cmd2);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){ui.setDisabled(editor.queryCommandState(cmd)==-1);ui.setChecked(editor.queryCommandValue(cmd)==cmd2&&!uiReady);});return ui;};})(ci);}})(p,typeset[p]);}//字体颜色和背景颜色
for(var i=0,ci;ci=['backcolor','forecolor'][i++];){editorui[ci]=function(cmd){return function(editor){var ui=new editorui.ColorButton({className:'edui-for-'+cmd,color:'default',title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'',editor:editor,onpickcolor:function onpickcolor(t,color){editor.execCommand(cmd,color);},onpicknocolor:function onpicknocolor(){editor.execCommand(cmd,'default');this.setColor('transparent');this.color='default';},onbuttonclick:function onbuttonclick(){editor.execCommand(cmd,this.color);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};}(ci);}var dialogBtns={noOk:['searchreplace','help','spechars','webapp','preview'],ok:['attachment','anchor','link','insertimage','map','gmap','insertframe','wordimage','insertvideo','insertframe','edittip','edittable','edittd','scrawl','template','music','background','charts']};for(var p in dialogBtns){(function(type,vals){for(var i=0,ci;ci=vals[i++];){//todo opera下存在问题
if(browser.opera&&ci==="searchreplace"){continue;}(function(cmd){editorui[cmd]=function(editor,iframeUrl,title){iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd];title=editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd)||'';var dialog;//没有iframeUrl不创建dialog
if(iframeUrl){dialog=new editorui.Dialog(utils.extend({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:'edui-for-'+cmd,title:title,holdScroll:cmd==='insertimage',fullscreen:/charts|preview/.test(cmd),closeDialog:editor.getLang("closeDialog")},type=='ok'?{buttons:[{className:'edui-okbutton',label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:'edui-cancelbutton',label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]}:{}));editor.ui._dialogs[cmd+"Dialog"]=dialog;}var ui=new editorui.Button({className:'edui-for-'+cmd,title:title,onclick:function onclick(){if(dialog){switch(cmd){case"wordimage":var images=editor.execCommand("wordimage");if(images&&images.length){dialog.render();dialog.open();}break;case"scrawl":if(editor.queryCommandState("scrawl")!=-1){dialog.render();dialog.open();}break;default:dialog.render();dialog.open();}}},theme:editor.options.theme,disabled:cmd=='scrawl'&&editor.queryCommandState("scrawl")==-1||cmd=='charts'});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){//只存在于右键菜单而无工具栏按钮的ui不需要检测状态
var unNeedCheckState={'edittable':1};if(cmd in unNeedCheckState)return;var state=editor.queryCommandState(cmd);if(ui.getDom()){ui.setDisabled(state==-1);ui.setChecked(state);}});return ui;};})(ci.toLowerCase());}})(p,dialogBtns[p]);}editorui.snapscreen=function(editor,iframeUrl,title){title=editor.options.labelMap['snapscreen']||editor.getLang("labelMap.snapscreen")||'';var ui=new editorui.Button({className:'edui-for-snapscreen',title:title,onclick:function onclick(){editor.execCommand("snapscreen");},theme:editor.options.theme});editorui.buttons['snapscreen']=ui;iframeUrl=iframeUrl||(editor.options.iframeUrlMap||{})["snapscreen"]||iframeUrlMap["snapscreen"];if(iframeUrl){var dialog=new editorui.Dialog({iframeUrl:editor.ui.mapUrl(iframeUrl),editor:editor,className:'edui-for-snapscreen',title:title,buttons:[{className:'edui-okbutton',label:editor.getLang("ok"),editor:editor,onclick:function onclick(){dialog.close(true);}},{className:'edui-cancelbutton',label:editor.getLang("cancel"),editor:editor,onclick:function onclick(){dialog.close(false);}}]});dialog.render();editor.ui._dialogs["snapscreenDialog"]=dialog;}editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('snapscreen')==-1);});return ui;};editorui.insertcode=function(editor,list,title){list=editor.options['insertcode']||[];title=editor.options.labelMap['insertcode']||editor.getLang("labelMap.insertcode")||'';// if (!list.length) return;
var items=[];utils.each(list,function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return '<div class="edui-label %%-label" >'+(this.label||'')+'</div>';}});});var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand('insertcode',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:'edui-for-insertcode',indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return -1;}});editorui.buttons['insertcode']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('insertcode');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('insertcode');if(!value){ui.setValue(title);return;}//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号
value&&(value=value.replace(/['"]/g,'').split(',')[0]);ui.setValue(value);}}});return ui;};editorui.fontfamily=function(editor,list,title){list=editor.options['fontfamily']||[];title=editor.options.labelMap['fontfamily']||editor.getLang("labelMap.fontfamily")||'';if(!list.length)return;for(var i=0,ci,items=[];ci=list[i];i++){var langLabel=editor.getLang('fontfamily')[ci.name]||"";(function(key,val){items.push({label:key,value:val,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return '<div class="edui-label %%-label" style="font-family:'+utils.unhtml(this.value)+'">'+(this.label||'')+'</div>';}});})(ci.label||langLabel,ci.val);}var ui=new editorui.Combox({editor:editor,items:items,onselect:function onselect(t,index){editor.execCommand('FontFamily',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},title:title,initValue:title,className:'edui-for-fontfamily',indexByValue:function indexByValue(value){if(value){for(var i=0,ci;ci=this.items[i];i++){if(ci.value.indexOf(value)!=-1)return i;}}return -1;}});editorui.buttons['fontfamily']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('FontFamily');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('FontFamily');//trace:1871 ie下从源码模式切换回来时，字体会带单引号，而且会有逗号
value&&(value=value.replace(/['"]/g,'').split(',')[0]);ui.setValue(value);}}});return ui;};editorui.fontsize=function(editor,list,title){title=editor.options.labelMap['fontsize']||editor.getLang("labelMap.fontsize")||'';list=list||editor.options['fontsize']||[];if(!list.length)return;var items=[];for(var i=0;i<list.length;i++){var size=list[i]+'px';items.push({label:size,value:size,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return '<div class="edui-label %%-label" style="line-height:1;font-size:'+this.value+'">'+(this.label||'')+'</div>';}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,onselect:function onselect(t,index){editor.execCommand('FontSize',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},className:'edui-for-fontsize'});editorui.buttons['fontsize']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('FontSize');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);ui.setValue(editor.queryCommandValue('FontSize'));}}});return ui;};editorui.paragraph=function(editor,list,title){title=editor.options.labelMap['paragraph']||editor.getLang("labelMap.paragraph")||'';list=editor.options['paragraph']||[];if(utils.isEmptyObject(list))return;var items=[];for(var i in list){items.push({value:i,label:list[i]||editor.getLang("paragraph")[i],theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return '<div class="edui-label %%-label"><span class="edui-for-'+this.value+'">'+(this.label||'')+'</span></div>';}});}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:'edui-for-paragraph',onselect:function onselect(t,index){editor.execCommand('Paragraph',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons['paragraph']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('Paragraph');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('Paragraph');var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};//自定义标题
editorui.customstyle=function(editor){var list=editor.options['customstyle']||[],title=editor.options.labelMap['customstyle']||editor.getLang("labelMap.customstyle")||'';if(!list.length)return;var langCs=editor.getLang('customstyle');for(var i=0,items=[],t;t=list[i++];){(function(t){var ck={};ck.label=t.label?t.label:langCs[t.name];ck.style=t.style;ck.className=t.className;ck.tag=t.tag;items.push({label:ck.label,value:ck,theme:editor.options.theme,renderLabelHtml:function renderLabelHtml(){return '<div class="edui-label %%-label">'+'<'+ck.tag+' '+(ck.className?' class="'+ck.className+'"':"")+(ck.style?' style="'+ck.style+'"':"")+'>'+ck.label+"<\/"+ck.tag+">"+'</div>';}});})(t);}var ui=new editorui.Combox({editor:editor,items:items,title:title,initValue:title,className:'edui-for-customstyle',onselect:function onselect(t,index){editor.execCommand('customstyle',this.items[index].value);},onbuttonclick:function onbuttonclick(){this.showPopup();},indexByValue:function indexByValue(value){for(var i=0,ti;ti=this.items[i++];){if(ti.label==value){return i-1;}}return -1;}});editorui.buttons['customstyle']=ui;editor.addListener('selectionchange',function(type,causeByUi,uiReady){if(!uiReady){var state=editor.queryCommandState('customstyle');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('customstyle');var index=ui.indexByValue(value);if(index!=-1){ui.setValue(value);}else{ui.setValue(ui.initValue);}}}});return ui;};editorui.inserttable=function(editor,iframeUrl,title){title=editor.options.labelMap['inserttable']||editor.getLang("labelMap.inserttable")||'';var ui=new editorui.TableButton({editor:editor,title:title,className:'edui-for-inserttable',onpicktable:function onpicktable(t,numCols,numRows){editor.execCommand('InsertTable',{numRows:numRows,numCols:numCols,border:1});},onbuttonclick:function onbuttonclick(){this.showPopup();}});editorui.buttons['inserttable']=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('inserttable')==-1);});return ui;};editorui.lineheight=function(editor){var val=editor.options.lineheight||[];if(!val.length)return;for(var i=0,ci,items=[];ci=val[i++];){items.push({//todo:写死了
label:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("lineheight",this.value);}});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-lineheight',title:editor.options.labelMap['lineheight']||editor.getLang("labelMap.lineheight")||'',items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue('LineHeight')||this.value;editor.execCommand("LineHeight",value);}});editorui.buttons['lineheight']=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('LineHeight');if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('LineHeight');value&&ui.setValue((value+'').replace(/cm/,''));ui.setChecked(state);}});return ui;};var rowspacings=['top','bottom'];for(var r=0,ri;ri=rowspacings[r++];){(function(cmd){editorui['rowspacing'+cmd]=function(editor){var val=editor.options['rowspacing'+cmd]||[];if(!val.length)return null;for(var i=0,ci,items=[];ci=val[i++];){items.push({label:ci,value:ci,theme:editor.options.theme,onclick:function onclick(){editor.execCommand("rowspacing",this.value,cmd);}});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-rowspacing'+cmd,title:editor.options.labelMap['rowspacing'+cmd]||editor.getLang("labelMap.rowspacing"+cmd)||'',items:items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue('rowspacing',cmd)||this.value;editor.execCommand("rowspacing",value,cmd);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('rowspacing',cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue('rowspacing',cmd);value&&ui.setValue((value+'').replace(/%/,''));ui.setChecked(state);}});return ui;};})(ri);}//有序，无序列表
var lists=['insertorderedlist','insertunorderedlist'];for(var l=0,cl;cl=lists[l++];){(function(cmd){editorui[cmd]=function(editor){var vals=editor.options[cmd],_onMenuClick=function _onMenuClick(){editor.execCommand(cmd,this.value);},items=[];for(var i in vals){items.push({label:vals[i]||editor.getLang()[cmd][i]||"",value:i,theme:editor.options.theme,onclick:_onMenuClick});}var ui=new editorui.MenuButton({editor:editor,className:'edui-for-'+cmd,title:editor.getLang("labelMap."+cmd)||'','items':items,onbuttonclick:function onbuttonclick(){var value=editor.queryCommandValue(cmd)||this.value;editor.execCommand(cmd,value);}});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState(cmd);if(state==-1){ui.setDisabled(true);}else{ui.setDisabled(false);var value=editor.queryCommandValue(cmd);ui.setValue(value);ui.setChecked(state);}});return ui;};})(cl);}editorui.fullscreen=function(editor,title){title=editor.options.labelMap['fullscreen']||editor.getLang("labelMap.fullscreen")||'';var ui=new editorui.Button({className:'edui-for-fullscreen',title:title,theme:editor.options.theme,onclick:function onclick(){if(editor.ui){editor.ui.setFullScreen(!editor.ui.isFullScreen());}this.setChecked(editor.ui.isFullScreen());}});editorui.buttons['fullscreen']=ui;editor.addListener('selectionchange',function(){var state=editor.queryCommandState('fullscreen');ui.setDisabled(state==-1);ui.setChecked(editor.ui.isFullScreen());});return ui;};// 表情
editorui["emotion"]=function(editor,iframeUrl){var cmd="emotion";var ui=new editorui.MultiMenuPop({title:editor.options.labelMap[cmd]||editor.getLang("labelMap."+cmd+"")||'',editor:editor,className:'edui-for-'+cmd,iframeUrl:editor.ui.mapUrl(iframeUrl||(editor.options.iframeUrlMap||{})[cmd]||iframeUrlMap[cmd])});editorui.buttons[cmd]=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState(cmd)==-1);});return ui;};editorui.autotypeset=function(editor){var ui=new editorui.AutoTypeSetButton({editor:editor,title:editor.options.labelMap['autotypeset']||editor.getLang("labelMap.autotypeset")||'',className:'edui-for-autotypeset',onbuttonclick:function onbuttonclick(){editor.execCommand('autotypeset');}});editorui.buttons['autotypeset']=ui;editor.addListener('selectionchange',function(){ui.setDisabled(editor.queryCommandState('autotypeset')==-1);});return ui;};/* 简单上传插件 */editorui["simpleupload"]=function(editor){var name='simpleupload',ui=new editorui.Button({className:'edui-for-'+name,title:editor.options.labelMap[name]||editor.getLang("labelMap."+name)||'',onclick:function onclick(){},theme:editor.options.theme,showText:false});editorui.buttons[name]=ui;editor.addListener('ready',function(){var b=ui.getDom('body'),iconSpan=b.children[0];editor.fireEvent('simpleuploadbtnready',iconSpan);});editor.addListener('selectionchange',function(type,causeByUi,uiReady){var state=editor.queryCommandState(name);if(state==-1){ui.setDisabled(true);ui.setChecked(false);}else{if(!uiReady){ui.setDisabled(false);ui.setChecked(state);}}});return ui;};})();// adapter/editor.js
///import core
///commands 全屏
///commandsName FullScreen
///commandsTitle  全屏
(function(){var utils=baidu.editor.utils,uiUtils=baidu.editor.ui.uiUtils,UIBase=baidu.editor.ui.UIBase,domUtils=baidu.editor.dom.domUtils;var nodeStack=[];function EditorUI(options){this.initOptions(options);this.initEditorUI();}EditorUI.prototype={uiName:'editor',initEditorUI:function initEditorUI(){this.editor.ui=this;this._dialogs={};this.initUIBase();this._initToolbars();var editor=this.editor,me=this;editor.addListener('ready',function(){//提供getDialog方法
editor.getDialog=function(name){return editor.ui._dialogs[name+"Dialog"];};domUtils.on(editor.window,'scroll',function(evt){baidu.editor.ui.Popup.postHide(evt);});//提供编辑器实时宽高(全屏时宽高不变化)
editor.ui._actualFrameWidth=editor.options.initialFrameWidth;UE.browser.ie&&UE.browser.version===6&&editor.container.ownerDocument.execCommand("BackgroundImageCache",false,true);//display bottom-bar label based on config
if(editor.options.elementPathEnabled){editor.ui.getDom('elementpath').innerHTML='<div class="edui-editor-breadcrumb">'+editor.getLang("elementPathTip")+':</div>';}if(editor.options.wordCount){var countFn=function countFn(){setCount(editor,me);domUtils.un(editor.document,"click",arguments.callee);};domUtils.on(editor.document,"click",countFn);editor.ui.getDom('wordcount').innerHTML=editor.getLang("wordCountTip");}editor.ui._scale();if(editor.options.scaleEnabled){if(editor.autoHeightEnabled){editor.disableAutoHeight();}me.enableScale();}else{me.disableScale();}if(!editor.options.elementPathEnabled&&!editor.options.wordCount&&!editor.options.scaleEnabled){editor.ui.getDom('elementpath').style.display="none";editor.ui.getDom('wordcount').style.display="none";editor.ui.getDom('scale').style.display="none";}if(!editor.selection.isFocus())return;editor.fireEvent('selectionchange',false,true);});editor.addListener('mousedown',function(t,evt){var el=evt.target||evt.srcElement;baidu.editor.ui.Popup.postHide(evt,el);baidu.editor.ui.ShortCutMenu.postHide(evt);});editor.addListener("delcells",function(){if(UE.ui['edittip']){new UE.ui['edittip'](editor);}editor.getDialog('edittip').open();});var pastePop,isPaste=false,timer;editor.addListener("afterpaste",function(){if(editor.queryCommandState('pasteplain'))return;if(baidu.editor.ui.PastePicker){pastePop=new baidu.editor.ui.Popup({content:new baidu.editor.ui.PastePicker({editor:editor}),editor:editor,className:'edui-wordpastepop'});pastePop.render();}isPaste=true;});editor.addListener("afterinserthtml",function(){clearTimeout(timer);timer=setTimeout(function(){if(pastePop&&(isPaste||editor.ui._isTransfer)){if(pastePop.isHidden()){var span=domUtils.createElement(editor.document,'span',{'style':"line-height:0px;",'innerHTML':"\uFEFF"}),range=editor.selection.getRange();range.insertNode(span);var tmp=getDomNode(span,'firstChild','previousSibling');tmp&&pastePop.showAnchor(tmp.nodeType==3?tmp.parentNode:tmp);domUtils.remove(span);}else{pastePop.show();}delete editor.ui._isTransfer;isPaste=false;}},200);});editor.addListener('contextmenu',function(t,evt){baidu.editor.ui.Popup.postHide(evt);});editor.addListener('keydown',function(t,evt){if(pastePop)pastePop.dispose(evt);var keyCode=evt.keyCode||evt.which;if(evt.altKey&&keyCode==90){UE.ui.buttons['fullscreen'].onclick();}});editor.addListener('wordcount',function(type){setCount(this,me);});function setCount(editor,ui){editor.setOpt({wordCount:true,maximumWords:10000,wordCountMsg:editor.options.wordCountMsg||editor.getLang("wordCountMsg"),wordOverFlowMsg:editor.options.wordOverFlowMsg||editor.getLang("wordOverFlowMsg")});var opt=editor.options,max=opt.maximumWords,msg=opt.wordCountMsg,msg=msg.split(',')[0],errMsg=opt.wordOverFlowMsg,countDom=ui.getDom('wordcount');if(!opt.wordCount){return;}var count=editor.getContentLength(true);if(count>max){countDom.innerHTML=errMsg;editor.fireEvent("wordcountoverflow");}else{countDom.innerHTML=msg.replace("{#leave}",max-count).replace("{#count}",count);}}editor.addListener('selectionchange',function(){if(editor.options.elementPathEnabled){me[(editor.queryCommandState('elementpath')==-1?'dis':'en')+'ableElementPath']();}if(editor.options.scaleEnabled){me[(editor.queryCommandState('scale')==-1?'dis':'en')+'ableScale']();}});var popup=new baidu.editor.ui.Popup({editor:editor,content:'',className:'edui-bubble',_onEditButtonClick:function _onEditButtonClick(){this.hide();editor.ui._dialogs.linkDialog.open();},_onImgEditButtonClick:function _onImgEditButtonClick(name){this.hide();editor.ui._dialogs[name]&&editor.ui._dialogs[name].open();},_onImgSetFloat:function _onImgSetFloat(value){this.hide();editor.execCommand("imagefloat",value);},_setIframeAlign:function _setIframeAlign(value){var frame=popup.anchorEl;var newFrame=frame.cloneNode(true);switch(value){case-2:newFrame.setAttribute("align","");break;case-1:newFrame.setAttribute("align","left");break;case 1:newFrame.setAttribute("align","right");break;}frame.parentNode.insertBefore(newFrame,frame);domUtils.remove(frame);popup.anchorEl=newFrame;popup.showAnchor(popup.anchorEl);},_updateIframe:function _updateIframe(){var frame=editor._iframe=popup.anchorEl;if(domUtils.hasClass(frame,'ueditor_baidumap')){editor.selection.getRange().selectNode(frame).select();editor.ui._dialogs.mapDialog.open();popup.hide();}else{editor.ui._dialogs.insertframeDialog.open();popup.hide();}},_onRemoveButtonClick:function _onRemoveButtonClick(cmdName){editor.execCommand(cmdName);this.hide();},queryAutoHide:function queryAutoHide(el){if(el&&el.ownerDocument==editor.document){if(el.tagName.toLowerCase()=='img'||domUtils.findParentByTagName(el,'a',true)){return el!==popup.anchorEl;}}return baidu.editor.ui.Popup.prototype.queryAutoHide.call(this,el);}});popup.render();if(editor.options.imagePopup){editor.addListener('mouseover',function(t,evt){evt=evt||window.event;var el=evt.target||evt.srcElement;if(editor.ui._dialogs.insertframeDialog&&/iframe/ig.test(el.tagName)){var html=popup.formatHtml('<nobr>'+editor.getLang("property")+': <span onclick=$$._setIframeAlign(-2) class="edui-clickable">'+editor.getLang("default")+'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(-1) class="edui-clickable">'+editor.getLang("justifyleft")+'</span>&nbsp;&nbsp;<span onclick=$$._setIframeAlign(1) class="edui-clickable">'+editor.getLang("justifyright")+'</span>&nbsp;&nbsp;'+' <span onclick="$$._updateIframe( this);" class="edui-clickable">'+editor.getLang("modify")+'</span></nobr>');if(html){popup.getDom('content').innerHTML=html;popup.anchorEl=el;popup.showAnchor(popup.anchorEl);}else{popup.hide();}}});editor.addListener('selectionchange',function(t,causeByUi){if(!causeByUi)return;var html='',str="",img=editor.selection.getRange().getClosedNode(),dialogs=editor.ui._dialogs;if(img&&img.tagName=='IMG'){var dialogName='insertimageDialog';if(img.className.indexOf("edui-faked-video")!=-1||img.className.indexOf("edui-upload-video")!=-1){dialogName="insertvideoDialog";}if(img.className.indexOf("edui-faked-webapp")!=-1){dialogName="webappDialog";}if(img.src.indexOf("http://api.map.baidu.com")!=-1){dialogName="mapDialog";}if(img.className.indexOf("edui-faked-music")!=-1){dialogName="musicDialog";}if(img.src.indexOf("http://maps.google.com/maps/api/staticmap")!=-1){dialogName="gmapDialog";}if(img.getAttribute("anchorname")){dialogName="anchorDialog";html=popup.formatHtml('<nobr>'+editor.getLang("property")+': <span onclick=$$._onImgEditButtonClick("anchorDialog") class="edui-clickable">'+editor.getLang("modify")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onRemoveButtonClick(\'anchor\') class="edui-clickable">'+editor.getLang("delete")+'</span></nobr>');}if(img.getAttribute("word_img")){//todo 放到dialog去做查询
editor.word_img=[img.getAttribute("word_img")];dialogName="wordimageDialog";}if(domUtils.hasClass(img,'loadingclass')||domUtils.hasClass(img,'loaderrorclass')){dialogName="";}if(!dialogs[dialogName]){return;}str='<nobr>'+editor.getLang("property")+': '+'<span onclick=$$._onImgSetFloat("none") class="edui-clickable">'+editor.getLang("default")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("left") class="edui-clickable">'+editor.getLang("justifyleft")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("right") class="edui-clickable">'+editor.getLang("justifyright")+'</span>&nbsp;&nbsp;'+'<span onclick=$$._onImgSetFloat("center") class="edui-clickable">'+editor.getLang("justifycenter")+'</span>&nbsp;&nbsp;'+'<span onclick="$$._onImgEditButtonClick(\''+dialogName+'\');" class="edui-clickable">'+editor.getLang("modify")+'</span></nobr>';!html&&(html=popup.formatHtml(str));}if(editor.ui._dialogs.linkDialog){var link=editor.queryCommandValue('link');var url;if(link&&(url=link.getAttribute('_href')||link.getAttribute('href',2))){var txt=url;if(url.length>30){txt=url.substring(0,20)+"...";}if(html){html+='<div style="height:5px;"></div>';}html+=popup.formatHtml('<nobr>'+editor.getLang("anthorMsg")+': <a target="_blank" href="'+url+'" title="'+url+'" >'+txt+'</a>'+' <span class="edui-clickable" onclick="$$._onEditButtonClick();">'+editor.getLang("modify")+'</span>'+' <span class="edui-clickable" onclick="$$._onRemoveButtonClick(\'unlink\');"> '+editor.getLang("clear")+'</span></nobr>');popup.showAnchor(link);}}if(html){popup.getDom('content').innerHTML=html;popup.anchorEl=img||link;popup.showAnchor(popup.anchorEl);}else{popup.hide();}});}},_initToolbars:function _initToolbars(){var editor=this.editor;var toolbars=this.toolbars||[];var toolbarUis=[];for(var i=0;i<toolbars.length;i++){var toolbar=toolbars[i];var toolbarUi=new baidu.editor.ui.Toolbar({theme:editor.options.theme});for(var j=0;j<toolbar.length;j++){var toolbarItem=toolbar[j];var toolbarItemUi=null;if(typeof toolbarItem=='string'){toolbarItem=toolbarItem.toLowerCase();if(toolbarItem=='|'){toolbarItem='Separator';}if(toolbarItem=='||'){toolbarItem='Breakline';}if(baidu.editor.ui[toolbarItem]){toolbarItemUi=new baidu.editor.ui[toolbarItem](editor);}//fullscreen这里单独处理一下，放到首行去
if(toolbarItem=='fullscreen'){if(toolbarUis&&toolbarUis[0]){toolbarUis[0].items.splice(0,0,toolbarItemUi);}else{toolbarItemUi&&toolbarUi.items.splice(0,0,toolbarItemUi);}continue;}}else{toolbarItemUi=toolbarItem;}if(toolbarItemUi&&toolbarItemUi.id){toolbarUi.add(toolbarItemUi);}}toolbarUis[i]=toolbarUi;}//接受外部定制的UI
utils.each(UE._customizeUI,function(obj,key){var itemUI,index;if(obj.id&&obj.id!=editor.key){return false;}itemUI=obj.execFn.call(editor,editor,key);if(itemUI){index=obj.index;if(index===undefined){index=toolbarUi.items.length;}toolbarUi.add(itemUI,index);}});this.toolbars=toolbarUis;},getHtmlTpl:function getHtmlTpl(){return '<div id="##" class="%%">'+'<div id="##_toolbarbox" class="%%-toolbarbox">'+(this.toolbars.length?'<div id="##_toolbarboxouter" class="%%-toolbarboxouter"><div class="%%-toolbarboxinner">'+this.renderToolbarBoxHtml()+'</div></div>':'')+'<div id="##_toolbarmsg" class="%%-toolbarmsg" style="display:none;">'+'<div id = "##_upload_dialog" class="%%-toolbarmsg-upload" onclick="$$.showWordImageDialog();">'+this.editor.getLang("clickToUpload")+'</div>'+'<div class="%%-toolbarmsg-close" onclick="$$.hideToolbarMsg();">x</div>'+'<div id="##_toolbarmsg_label" class="%%-toolbarmsg-label"></div>'+'<div style="height:0;overflow:hidden;clear:both;"></div>'+'</div>'+'<div id="##_message_holder" class="%%-messageholder"></div>'+'</div>'+'<div id="##_iframeholder" class="%%-iframeholder">'+'</div>'+//modify wdcount by matao
'<div id="##_bottombar" class="%%-bottomContainer"><table><tr>'+'<td id="##_elementpath" class="%%-bottombar"></td>'+'<td id="##_wordcount" class="%%-wordcount"></td>'+'<td id="##_scale" class="%%-scale"><div class="%%-icon"></div></td>'+'</tr></table></div>'+'<div id="##_scalelayer"></div>'+'</div>';},showWordImageDialog:function showWordImageDialog(){this._dialogs['wordimageDialog'].open();},renderToolbarBoxHtml:function renderToolbarBoxHtml(){var buff=[];for(var i=0;i<this.toolbars.length;i++){buff.push(this.toolbars[i].renderHtml());}return buff.join('');},setFullScreen:function setFullScreen(fullscreen){var editor=this.editor,container=editor.container.parentNode.parentNode;if(this._fullscreen!=fullscreen){this._fullscreen=fullscreen;this.editor.fireEvent('beforefullscreenchange',fullscreen);if(baidu.editor.browser.gecko){var bk=editor.selection.getRange().createBookmark();}if(fullscreen){while(container.tagName!="BODY"){var position=baidu.editor.dom.domUtils.getComputedStyle(container,"position");nodeStack.push(position);container.style.position="static";container=container.parentNode;}this._bakHtmlOverflow=document.documentElement.style.overflow;this._bakBodyOverflow=document.body.style.overflow;this._bakAutoHeight=this.editor.autoHeightEnabled;this._bakScrollTop=Math.max(document.documentElement.scrollTop,document.body.scrollTop);this._bakEditorContaninerWidth=editor.iframe.parentNode.offsetWidth;if(this._bakAutoHeight){//当全屏时不能执行自动长高
editor.autoHeightEnabled=false;this.editor.disableAutoHeight();}document.documentElement.style.overflow='hidden';//修复，滚动条不收起的问题
window.scrollTo(0,window.scrollY);this._bakCssText=this.getDom().style.cssText;this._bakCssText1=this.getDom('iframeholder').style.cssText;editor.iframe.parentNode.style.width='';this._updateFullScreen();}else{while(container.tagName!="BODY"){container.style.position=nodeStack.shift();container=container.parentNode;}this.getDom().style.cssText=this._bakCssText;this.getDom('iframeholder').style.cssText=this._bakCssText1;if(this._bakAutoHeight){editor.autoHeightEnabled=true;this.editor.enableAutoHeight();}document.documentElement.style.overflow=this._bakHtmlOverflow;document.body.style.overflow=this._bakBodyOverflow;editor.iframe.parentNode.style.width=this._bakEditorContaninerWidth+'px';window.scrollTo(0,this._bakScrollTop);}if(browser.gecko&&editor.body.contentEditable==='true'){var input=document.createElement('input');document.body.appendChild(input);editor.body.contentEditable=false;setTimeout(function(){input.focus();setTimeout(function(){editor.body.contentEditable=true;editor.fireEvent('fullscreenchanged',fullscreen);editor.selection.getRange().moveToBookmark(bk).select(true);baidu.editor.dom.domUtils.remove(input);fullscreen&&window.scroll(0,0);},0);},0);}if(editor.body.contentEditable==='true'){this.editor.fireEvent('fullscreenchanged',fullscreen);this.triggerLayout();}}},_updateFullScreen:function _updateFullScreen(){if(this._fullscreen){var vpRect=uiUtils.getViewportRect();this.getDom().style.cssText='border:0;position:absolute;left:0;top:'+(this.editor.options.topOffset||0)+'px;width:'+vpRect.width+'px;height:'+vpRect.height+'px;z-index:'+(this.getDom().style.zIndex*1+100);uiUtils.setViewportOffset(this.getDom(),{left:0,top:this.editor.options.topOffset||0});this.editor.setHeight(vpRect.height-this.getDom('toolbarbox').offsetHeight-this.getDom('bottombar').offsetHeight-(this.editor.options.topOffset||0),true);//不手动调一下，会导致全屏失效
if(browser.gecko){try{window.onresize();}catch(e){}}}},_updateElementPath:function _updateElementPath(){var bottom=this.getDom('elementpath'),list;if(this.elementPathEnabled&&(list=this.editor.queryCommandValue('elementpath'))){var buff=[];for(var i=0,ci;ci=list[i];i++){buff[i]=this.formatHtml('<span unselectable="on" onclick="$$.editor.execCommand(&quot;elementpath&quot;, &quot;'+i+'&quot;);">'+ci+'</span>');}bottom.innerHTML='<div class="edui-editor-breadcrumb" onmousedown="return false;">'+this.editor.getLang("elementPathTip")+': '+buff.join(' &gt; ')+'</div>';}else{bottom.style.display='none';}},disableElementPath:function disableElementPath(){var bottom=this.getDom('elementpath');bottom.innerHTML='';bottom.style.display='none';this.elementPathEnabled=false;},enableElementPath:function enableElementPath(){var bottom=this.getDom('elementpath');bottom.style.display='';this.elementPathEnabled=true;this._updateElementPath();},_scale:function _scale(){var doc=document,editor=this.editor,editorHolder=editor.container,editorDocument=editor.document,toolbarBox=this.getDom("toolbarbox"),bottombar=this.getDom("bottombar"),scale=this.getDom("scale"),scalelayer=this.getDom("scalelayer");var isMouseMove=false,position=null,minEditorHeight=0,minEditorWidth=editor.options.minFrameWidth,pageX=0,pageY=0,scaleWidth=0,scaleHeight=0;function down(){position=domUtils.getXY(editorHolder);if(!minEditorHeight){minEditorHeight=editor.options.minFrameHeight+toolbarBox.offsetHeight+bottombar.offsetHeight;}scalelayer.style.cssText="position:absolute;left:0;display:;top:0;background-color:#41ABFF;opacity:0.4;filter: Alpha(opacity=40);width:"+editorHolder.offsetWidth+"px;height:"+editorHolder.offsetHeight+"px;z-index:"+(editor.options.zIndex+1);domUtils.on(doc,"mousemove",move);domUtils.on(editorDocument,"mouseup",up);domUtils.on(doc,"mouseup",up);}var me=this;//by xuheng 全屏时关掉缩放
this.editor.addListener('fullscreenchanged',function(e,fullScreen){if(fullScreen){me.disableScale();}else{if(me.editor.options.scaleEnabled){me.enableScale();var tmpNode=me.editor.document.createElement('span');me.editor.body.appendChild(tmpNode);me.editor.body.style.height=Math.max(domUtils.getXY(tmpNode).y,me.editor.iframe.offsetHeight-20)+'px';domUtils.remove(tmpNode);}}});function move(event){clearSelection();var e=event||window.event;pageX=e.pageX||doc.documentElement.scrollLeft+e.clientX;pageY=e.pageY||doc.documentElement.scrollTop+e.clientY;scaleWidth=pageX-position.x;scaleHeight=pageY-position.y;if(scaleWidth>=minEditorWidth){isMouseMove=true;scalelayer.style.width=scaleWidth+'px';}if(scaleHeight>=minEditorHeight){isMouseMove=true;scalelayer.style.height=scaleHeight+"px";}}function up(){if(isMouseMove){isMouseMove=false;editor.ui._actualFrameWidth=scalelayer.offsetWidth-2;editorHolder.style.width=editor.ui._actualFrameWidth+'px';editor.setHeight(scalelayer.offsetHeight-bottombar.offsetHeight-toolbarBox.offsetHeight-2,true);}if(scalelayer){scalelayer.style.display="none";}clearSelection();domUtils.un(doc,"mousemove",move);domUtils.un(editorDocument,"mouseup",up);domUtils.un(doc,"mouseup",up);}function clearSelection(){if(browser.ie)doc.selection.clear();else window.getSelection().removeAllRanges();}this.enableScale=function(){//trace:2868
if(editor.queryCommandState("source")==1)return;scale.style.display="";this.scaleEnabled=true;domUtils.on(scale,"mousedown",down);};this.disableScale=function(){scale.style.display="none";this.scaleEnabled=false;domUtils.un(scale,"mousedown",down);};},isFullScreen:function isFullScreen(){return this._fullscreen;},postRender:function postRender(){UIBase.prototype.postRender.call(this);for(var i=0;i<this.toolbars.length;i++){this.toolbars[i].postRender();}var me=this;var timerId,domUtils=baidu.editor.dom.domUtils,updateFullScreenTime=function updateFullScreenTime(){clearTimeout(timerId);timerId=setTimeout(function(){me._updateFullScreen();});};domUtils.on(window,'resize',updateFullScreenTime);me.addListener('destroy',function(){domUtils.un(window,'resize',updateFullScreenTime);clearTimeout(timerId);});},showToolbarMsg:function showToolbarMsg(msg,flag){this.getDom('toolbarmsg_label').innerHTML=msg;this.getDom('toolbarmsg').style.display='';//
if(!flag){var w=this.getDom('upload_dialog');w.style.display='none';}},hideToolbarMsg:function hideToolbarMsg(){this.getDom('toolbarmsg').style.display='none';},mapUrl:function mapUrl(url){return url?url.replace('~/',this.editor.options.UEDITOR_HOME_URL||''):'';},triggerLayout:function triggerLayout(){var dom=this.getDom();if(dom.style.zoom=='1'){dom.style.zoom='100%';}else{dom.style.zoom='1';}}};utils.inherits(EditorUI,baidu.editor.ui.UIBase);var instances={};UE.ui.Editor=function(options){var editor=new UE.Editor(options);editor.options.editor=editor;utils.loadFile(document,{href:editor.options.themePath+editor.options.theme+"/css/ueditor.css",tag:"link",type:"text/css",rel:"stylesheet"});var oldRender=editor.render;editor.render=function(holder){if(holder.constructor===String){editor.key=holder;instances[holder]=editor;}utils.domReady(function(){editor.langIsReady?renderUI():editor.addListener("langReady",renderUI);function renderUI(){editor.setOpt({labelMap:editor.options.labelMap||editor.getLang('labelMap')});new EditorUI(editor.options);if(holder){if(holder.constructor===String){holder=document.getElementById(holder);}holder&&holder.getAttribute('name')&&(editor.options.textarea=holder.getAttribute('name'));if(holder&&/script|textarea/ig.test(holder.tagName)){var newDiv=document.createElement('div');holder.parentNode.insertBefore(newDiv,holder);var cont=holder.value||holder.innerHTML;editor.options.initialContent=/^[\t\r\n ]*$/.test(cont)?editor.options.initialContent:cont.replace(/>[\n\r\t]+([ ]{4})+/g,'>').replace(/[\n\r\t]+([ ]{4})+</g,'<').replace(/>[\n\r\t]+</g,'><');holder.className&&(newDiv.className=holder.className);holder.style.cssText&&(newDiv.style.cssText=holder.style.cssText);if(/textarea/i.test(holder.tagName)){editor.textarea=holder;editor.textarea.style.display='none';}else{holder.parentNode.removeChild(holder);}if(holder.id){newDiv.id=holder.id;domUtils.removeAttributes(holder,'id');}holder=newDiv;holder.innerHTML='';}}domUtils.addClass(holder,"edui-"+editor.options.theme);editor.ui.render(holder);var opt=editor.options;//给实例添加一个编辑器的容器引用
editor.container=editor.ui.getDom();var parents=domUtils.findParents(holder,true);var displays=[];for(var i=0,ci;ci=parents[i];i++){displays[i]=ci.style.display;ci.style.display='block';}if(opt.initialFrameWidth){opt.minFrameWidth=opt.initialFrameWidth;}else{if(!holder||holder.offsetWidth==undefined||holder.offsetWidth==null||!holder.offsetWidth){opt.minFrameWidth=opt.initialFrameWidth=holder.offsetWidth;}else{opt.minFrameWidth=opt.initialFrameWidth=holder.offsetWidth;}var styleWidth=holder.style.width;if(/%$/.test(styleWidth)){opt.initialFrameWidth=styleWidth;}}if(opt.initialFrameHeight){opt.minFrameHeight=opt.initialFrameHeight;}else{opt.initialFrameHeight=opt.minFrameHeight=holder.offsetHeight<=0?100:holder.offsetHeight;}for(var i=0,ci;ci=parents[i];i++){ci.style.display=displays[i];}//编辑器最外容器设置了高度，会导致，编辑器不占位
//todo 先去掉，没有找到原因
if(holder.style.height){holder.style.height='';}editor.container.style.width=opt.initialFrameWidth+(/%$/.test(opt.initialFrameWidth)?'':'px');editor.container.style.zIndex=opt.zIndex;oldRender.call(editor,editor.ui.getDom('iframeholder'));editor.fireEvent("afteruiready");}});};return editor;};/**
         * @file
         * @name UE
         * @short UE
         * @desc UEditor的顶部命名空间
         */ /**
         * @name getEditor
         * @since 1.2.4+
         * @grammar UE.getEditor(id,[opt])  =>  Editor实例
         * @desc 提供一个全局的方法得到编辑器实例
         *
         * * ''id''  放置编辑器的容器id, 如果容器下的编辑器已经存在，就直接返回
         * * ''opt'' 编辑器的可选参数
         * @example
         *  UE.getEditor('containerId',{onready:function(){//创建一个编辑器实例
         *      this.setContent('hello')
         *  }});
         *  UE.getEditor('containerId'); //返回刚创建的实例
         *
         */UE.getEditor=function(id,opt){var editor=instances[id];if(!editor){editor=instances[id]=new UE.ui.Editor(opt);editor.render(id);}return editor;};UE.delEditor=function(id){var editor;if(editor=instances[id]){editor.key&&editor.destroy();delete instances[id];}};UE.registerUI=function(uiName,fn,index,editorId){utils.each(uiName.split(/\s+/),function(name){UE._customizeUI[name]={id:editorId,execFn:fn,index:index};});};})();// adapter/message.js
UE.registerUI('message',function(editor){var editorui=baidu.editor.ui;var Message=editorui.Message;var holder;var _messageItems=[];var me=editor;me.addListener('ready',function(){holder=document.getElementById(me.ui.id+'_message_holder');updateHolderPos();setTimeout(function(){updateHolderPos();},500);});me.addListener('showmessage',function(type,opt){opt=utils.isString(opt)?{'content':opt}:opt;var message=new Message({'timeout':opt.timeout,'type':opt.type,'content':opt.content,'keepshow':opt.keepshow,'editor':me}),mid=opt.id||'msg_'+(+new Date()).toString(36);message.render(holder);_messageItems[mid]=message;message.reset(opt);updateHolderPos();return mid;});me.addListener('updatemessage',function(type,id,opt){opt=utils.isString(opt)?{'content':opt}:opt;var message=_messageItems[id];message.render(holder);message&&message.reset(opt);});me.addListener('hidemessage',function(type,id){var message=_messageItems[id];message&&message.hide();});function updateHolderPos(){var toolbarbox=me.ui.getDom('toolbarbox');if(toolbarbox){holder.style.top=toolbarbox.offsetHeight+3+'px';}holder.style.zIndex=Math.max(me.options.zIndex,me.iframe.style.zIndex)+1;}});// adapter/autosave.js
/*UE.registerUI('autosave', function(editor) {
        var timer = null,
            uid = null;
        editor.on('afterautosave', function() {
            clearTimeout(timer);

            timer = setTimeout(function() {
                if (uid) {
                    editor.trigger('hidemessage', uid);
                }
                uid = editor.trigger('showmessage', {
                    content: editor.getLang('autosave.success'),
                    timeout: 2000
                });

            }, 2000)
        })

    });*/})();/**
 * Created with JetBrains PhpStorm.
 * User: taoqili
 * Date: 12-6-12
 * Time: 下午5:02
 * To change this template use File | Settings | File Templates.
 */UE.I18N['zh-cn']={'labelMap':{'anchor':'锚点','undo':'撤销','redo':'重做','bold':'加粗','indent':'首行缩进','snapscreen':'截图','italic':'斜体','underline':'下划线','strikethrough':'删除线','subscript':'下标','fontborder':'字符边框','superscript':'上标','formatmatch':'格式刷','source':'源代码','blockquote':'引用','pasteplain':'纯文本粘贴模式','selectall':'全选','print':'打印','preview':'预览','horizontal':'分隔线','removeformat':'清除格式','time':'时间','date':'日期','unlink':'取消链接','insertrow':'前插入行','insertcol':'前插入列','mergeright':'右合并单元格','mergedown':'下合并单元格','deleterow':'删除行','deletecol':'删除列','splittorows':'拆分成行','splittocols':'拆分成列','splittocells':'完全拆分单元格','deletecaption':'删除表格标题','inserttitle':'插入标题','mergecells':'合并多个单元格','deletetable':'删除表格','cleardoc':'清空文档','insertparagraphbeforetable':"表格前插入行",'insertcode':'代码语言','fontfamily':'字体','fontsize':'字号','paragraph':'段落格式','simpleupload':'单图上传','insertimage':'多图上传','edittable':'表格属性','edittd':'单元格属性','link':'超链接','emotion':'表情','spechars':'特殊字符','searchreplace':'查询替换','map':'Baidu地图','gmap':'Google地图','insertvideo':'视频','help':'帮助','justifyleft':'居左对齐','justifyright':'居右对齐','justifycenter':'居中对齐','justifyjustify':'两端对齐','forecolor':'字体颜色','backcolor':'背景色','insertorderedlist':'有序列表','insertunorderedlist':'无序列表','fullscreen':'全屏','directionalityltr':'从左向右输入','directionalityrtl':'从右向左输入','rowspacingtop':'段前距','rowspacingbottom':'段后距','pagebreak':'分页','insertframe':'插入Iframe','imagenone':'默认','imageleft':'左浮动','imageright':'右浮动','attachment':'附件','imagecenter':'居中','wordimage':'图片转存','lineheight':'行间距','edittip':'编辑提示','customstyle':'自定义标题','autotypeset':'自动排版','webapp':'百度应用','touppercase':'字母大写','tolowercase':'字母小写','background':'背景','template':'模板','scrawl':'涂鸦','music':'音乐','inserttable':'插入表格','drafts':'从草稿箱加载','charts':'图表'},'insertorderedlist':{'num':'1,2,3...','num1':'1),2),3)...','num2':'(1),(2),(3)...','cn':'一,二,三....','cn1':'一),二),三)....','cn2':'(一),(二),(三)....','decimal':'1,2,3...','lower-alpha':'a,b,c...','lower-roman':'i,ii,iii...','upper-alpha':'A,B,C...','upper-roman':'I,II,III...'},'insertunorderedlist':{'circle':'○ 大圆圈','disc':'● 小黑点','square':'■ 小方块 ','dash':'— 破折号','dot':' 。 小圆圈'},'paragraph':{'p':'段落','h1':'标题 1','h2':'标题 2','h3':'标题 3','h4':'标题 4','h5':'标题 5','h6':'标题 6'},'fontfamily':{'songti':'宋体','kaiti':'楷体','heiti':'黑体','lishu':'隶书','yahei':'微软雅黑','andaleMono':'andale mono','arial':'arial','arialBlack':'arial black','comicSansMs':'comic sans ms','impact':'impact','timesNewRoman':'times new roman'},'customstyle':{'tc':'标题居中','tl':'标题居左','im':'强调','hi':'明显强调'},'autoupload':{'exceedSizeError':'文件大小超出限制','exceedTypeError':'文件格式不允许','jsonEncodeError':'服务器返回格式错误','loading':"正在上传...",'loadError':"上传错误",'errorLoadConfig':'后端配置项没有正常加载，上传插件不能正常使用！'},'simpleupload':{'exceedSizeError':'文件大小超出限制','exceedTypeError':'文件格式不允许','jsonEncodeError':'服务器返回格式错误','loading':"正在上传...",'loadError':"上传错误",'errorLoadConfig':'后端配置项没有正常加载，上传插件不能正常使用！'},'elementPathTip':"元素路径",'wordCountTip':"字数统计",'wordCountMsg':'当前已输入{#count}个字符, 您还可以输入{#leave}个字符。 ','wordOverFlowMsg':'<span style="color:red;">字数超出最大允许值，服务器可能拒绝保存！</span>','ok':"确认",'cancel':"取消",'closeDialog':"关闭对话框",'tableDrag':"表格拖动必须引入uiUtils.js文件！",'autofloatMsg':"工具栏浮动依赖编辑器UI，您首先需要引入UI文件!",'loadconfigError':'获取后台配置项请求出错，上传功能将不能正常使用！','loadconfigFormatError':'后台配置项返回格式出错，上传功能将不能正常使用！','loadconfigHttpError':'请求后台配置项http错误，上传功能将不能正常使用！','snapScreen_plugin':{'browserMsg':"仅支持IE浏览器！",'callBackErrorMsg':"服务器返回数据有误，请检查配置项之后重试。",'uploadErrorMsg':"截图上传失败，请检查服务器端环境! "},'insertcode':{'as3':'ActionScript 3','bash':'Bash/Shell','cpp':'C/C++','css':'CSS','cf':'ColdFusion','c#':'C#','delphi':'Delphi','diff':'Diff','erlang':'Erlang','groovy':'Groovy','html':'HTML','java':'Java','jfx':'JavaFX','js':'JavaScript','pl':'Perl','php':'PHP','plain':'Plain Text','ps':'PowerShell','python':'Python','ruby':'Ruby','scala':'Scala','sql':'SQL','vb':'Visual Basic','xml':'XML'},'confirmClear':"确定清空当前文档么？",'contextMenu':{'delete':"删除",'selectall':"全选",'deletecode':"删除代码",'cleardoc':"清空文档",'confirmclear':"确定清空当前文档么？",'unlink':"删除超链接",'paragraph':"段落格式",'edittable':"表格属性",'aligntd':"单元格对齐方式",'aligntable':'表格对齐方式','tableleft':'左浮动','tablecenter':'居中显示','tableright':'右浮动','edittd':"单元格属性",'setbordervisible':'设置表格边线可见','justifyleft':'左对齐','justifyright':'右对齐','justifycenter':'居中对齐','justifyjustify':'两端对齐','table':"表格",'inserttable':'插入表格','deletetable':"删除表格",'insertparagraphbefore':"前插入段落",'insertparagraphafter':'后插入段落','deleterow':"删除当前行",'deletecol':"删除当前列",'insertrow':"前插入行",'insertcol':"左插入列",'insertrownext':'后插入行','insertcolnext':'右插入列','insertcaption':'插入表格名称','deletecaption':'删除表格名称','inserttitle':'插入表格标题行','deletetitle':'删除表格标题行','inserttitlecol':'插入表格标题列','deletetitlecol':'删除表格标题列','averageDiseRow':'平均分布各行','averageDisCol':'平均分布各列','mergeright':"向右合并",'mergeleft':"向左合并",'mergedown':"向下合并",'mergecells':"合并单元格",'splittocells':"完全拆分单元格",'splittocols':"拆分成列",'splittorows':"拆分成行",'tablesort':'表格排序','enablesort':'设置表格可排序','disablesort':'取消表格可排序','reversecurrent':'逆序当前','orderbyasc':'按ASCII字符升序','reversebyasc':'按ASCII字符降序','orderbynum':'按数值大小升序','reversebynum':'按数值大小降序','borderbk':'边框底纹','setcolor':'表格隔行变色','unsetcolor':'取消表格隔行变色','setbackground':'选区背景隔行','unsetbackground':'取消选区背景','redandblue':'红蓝相间','threecolorgradient':'三色渐变','copy':"复制(Ctrl + c)",'copymsg':"浏览器不支持,请使用 'Ctrl + c'",'paste':"粘贴(Ctrl + v)",'pastemsg':"浏览器不支持,请使用 'Ctrl + v'"},'copymsg':"浏览器不支持,请使用 'Ctrl + c'",'pastemsg':"浏览器不支持,请使用 'Ctrl + v'",'anthorMsg':"链接",'clearColor':'清空颜色','standardColor':'标准颜色','themeColor':'主题颜色','property':'属性','default':'默认','modify':'修改','justifyleft':'左对齐','justifyright':'右对齐','justifycenter':'居中','justify':'默认','clear':'清除','anchorMsg':'锚点','delete':'删除','clickToUpload':"点击上传",'unset':'尚未设置语言文件','t_row':'行','t_col':'列','more':'更多','pasteOpt':'粘贴选项','pasteSourceFormat':"保留源格式",'tagFormat':'只保留标签','pasteTextFormat':'只保留文本','autoTypeSet':{'mergeLine':"合并空行",'delLine':"清除空行",'removeFormat':"清除格式",'indent':"首行缩进",'alignment':"对齐方式",'imageFloat':"图片浮动",'removeFontsize':"清除字号",'removeFontFamily':"清除字体",'removeHtml':"清除冗余HTML代码",'pasteFilter':"粘贴过滤",'run':"执行",'symbol':'符号转换','bdc2sb':'全角转半角','tobdc':'半角转全角'},'background':{'static':{'lang_background_normal':'背景设置','lang_background_local':'在线图片','lang_background_set':'选项','lang_background_none':'无背景色','lang_background_colored':'有背景色','lang_background_color':'颜色设置','lang_background_netimg':'网络图片','lang_background_align':'对齐方式','lang_background_position':'精确定位','repeatType':{'options':["居中","横向重复","纵向重复","平铺","自定义"]}},'noUploadImage':"当前未上传过任何图片！",'toggleSelect':"单击可切换选中状态\n原图尺寸: "},//===============dialog i18N=======================
'insertimage':{'static':{'lang_tab_remote':"插入图片",//节点
'lang_tab_upload':"本地上传",'lang_tab_online':"在线管理",'lang_tab_search':"图片搜索",'lang_input_url':"地 址：",'lang_input_size':"大 小：",'lang_input_width':"宽度",'lang_input_height':"高度",'lang_input_border':"边 框：",'lang_input_vhspace':"边 距：",'lang_input_title':"描 述：",'lang_input_align':'图片浮动方式：','lang_imgLoading':"　图片加载中……",'lang_start_upload':"开始上传",'lock':{'title':"锁定宽高比例"},//属性
'searchType':{'title':"图片类型",'options':["新闻","壁纸","表情","头像"]},//select的option
'searchTxt':{'value':"请输入搜索关键词"},'searchBtn':{'value':"百度一下"},'searchReset':{'value':"清空搜索"},'noneAlign':{'title':'无浮动'},'leftAlign':{'title':'左浮动'},'rightAlign':{'title':'右浮动'},'centerAlign':{'title':'居中独占一行'}},'uploadSelectFile':'点击选择图片','uploadAddFile':'继续添加','uploadStart':'开始上传','uploadPause':'暂停上传','uploadContinue':'继续上传','uploadRetry':'重试上传','uploadDelete':'删除','uploadTurnLeft':'向左旋转','uploadTurnRight':'向右旋转','uploadPreview':'预览中','uploadNoPreview':'不能预览','updateStatusReady':'选中_张图片，共_KB。','updateStatusConfirm':'已成功上传_张照片，_张照片上传失败','updateStatusFinish':'共_张（_KB），_张上传成功','updateStatusError':'，_张上传失败。','errorNotSupport':'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。','errorLoadConfig':'后端配置项没有正常加载，上传插件不能正常使用！','errorExceedSize':'文件大小超出','errorFileType':'文件格式不允许','errorInterrupt':'文件传输中断','errorUploadRetry':'上传失败，请重试','errorHttp':'http请求错误','errorServerUpload':'服务器返回出错','remoteLockError':"宽高不正确,不能所定比例",'numError':"请输入正确的长度或者宽度值！例如：123，400",'imageUrlError':"不允许的图片格式或者图片域！",'imageLoadError':"图片加载失败！请检查链接地址或网络状态！",'searchRemind':"请输入搜索关键词",'searchLoading':"图片加载中，请稍后……",'searchRetry':" :( ，抱歉，没有找到图片！请重试一次！"},'attachment':{'static':{'lang_tab_upload':'上传附件','lang_tab_online':'在线附件','lang_start_upload':"开始上传",'lang_drop_remind':"可以将文件拖到这里，单次最多可选100个文件"},'uploadSelectFile':'点击选择文件','uploadAddFile':'继续添加','uploadStart':'开始上传','uploadPause':'暂停上传','uploadContinue':'继续上传','uploadRetry':'重试上传','uploadDelete':'删除','uploadTurnLeft':'向左旋转','uploadTurnRight':'向右旋转','uploadPreview':'预览中','updateStatusReady':'选中_个文件，共_KB。','updateStatusConfirm':'已成功上传_个文件，_个文件上传失败','updateStatusFinish':'共_个（_KB），_个上传成功','updateStatusError':'，_张上传失败。','errorNotSupport':'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。','errorLoadConfig':'后端配置项没有正常加载，上传插件不能正常使用！','errorExceedSize':'文件大小超出','errorFileType':'文件格式不允许','errorInterrupt':'文件传输中断','errorUploadRetry':'上传失败，请重试','errorHttp':'http请求错误','errorServerUpload':'服务器返回出错'},'insertvideo':{'static':{'lang_tab_insertV':"插入视频",'lang_tab_searchV':"搜索视频",'lang_tab_uploadV':"上传视频",'lang_video_url':"视频网址",'lang_video_size':"视频尺寸",'lang_videoW':"宽度",'lang_videoH':"高度",'lang_alignment':"对齐方式",'videoSearchTxt':{'value':"请输入搜索关键字！"},'videoType':{'options':["全部","热门","娱乐","搞笑","体育","科技","综艺"]},'videoSearchBtn':{'value':"百度一下"},'videoSearchReset':{'value':"清空结果"},'lang_input_fileStatus':' 当前未上传文件','startUpload':{'style':"background:url(upload.png) no-repeat;"},'lang_upload_size':"视频尺寸",'lang_upload_width':"宽度",'lang_upload_height':"高度",'lang_upload_alignment':"对齐方式",'lang_format_advice':"建议使用mp4格式."},'numError':"请输入正确的数值，如123,400",'floatLeft':"左浮动",'floatRight':"右浮动",'"default"':"默认",'block':"独占一行",'urlError':"输入的视频地址有误，请检查后再试！",'loading':" &nbsp;视频加载中，请等待……",'clickToSelect':"点击选中",'goToSource':'访问源视频','noVideo':" &nbsp; &nbsp;抱歉，找不到对应的视频，请重试！",'browseFiles':'浏览文件','uploadSuccess':'上传成功!','delSuccessFile':'从成功队列中移除','delFailSaveFile':'移除保存失败文件','statusPrompt':' 个文件已上传！ ','flashVersionError':'当前Flash版本过低，请更新FlashPlayer后重试！','flashLoadingError':'Flash加载失败!请检查路径或网络状态','fileUploadReady':'等待上传……','delUploadQueue':'从上传队列中移除','limitPrompt1':'单次不能选择超过','limitPrompt2':'个文件！请重新选择！','delFailFile':'移除失败文件','fileSizeLimit':'文件大小超出限制！','emptyFile':'空文件无法上传！','fileTypeError':'文件类型不允许！','unknownError':'未知错误！','fileUploading':'上传中，请等待……','cancelUpload':'取消上传','netError':'网络错误','failUpload':'上传失败!','serverIOError':'服务器IO错误！','noAuthority':'无权限！','fileNumLimit':'上传个数限制','failCheck':'验证失败，本次上传被跳过！','fileCanceling':'取消中，请等待……','stopUploading':'上传已停止……','uploadSelectFile':'点击选择文件','uploadAddFile':'继续添加','uploadStart':'开始上传','uploadPause':'暂停上传','uploadContinue':'继续上传','uploadRetry':'重试上传','uploadDelete':'删除','uploadTurnLeft':'向左旋转','uploadTurnRight':'向右旋转','uploadPreview':'预览中','updateStatusReady':'选中_个文件，共_KB。','updateStatusConfirm':'成功上传_个，_个失败','updateStatusFinish':'共_个(_KB)，_个成功上传','updateStatusError':'，_张上传失败。','errorNotSupport':'WebUploader 不支持您的浏览器！如果你使用的是IE浏览器，请尝试升级 flash 播放器。','errorLoadConfig':'后端配置项没有正常加载，上传插件不能正常使用！','errorExceedSize':'文件大小超出','errorFileType':'文件格式不允许','errorInterrupt':'文件传输中断','errorUploadRetry':'上传失败，请重试','errorHttp':'http请求错误','errorServerUpload':'服务器返回出错'},'webapp':{'tip1':"本功能由百度APP提供，如看到此页面，请各位站长首先申请百度APPKey!",'tip2':"申请完成之后请至ueditor.config.js中配置获得的appkey! ",'applyFor':"点此申请",'anthorApi':"百度API"},'template':{'static':{'lang_template_bkcolor':'背景颜色','lang_template_clear':'保留原有内容','lang_template_select':'选择模板'},'blank':"空白文档",'blog':"博客文章",'resume':"个人简历",'richText':"图文混排",'sciPapers':"科技论文"},'scrawl':{'static':{'lang_input_previousStep':"上一步",'lang_input_nextsStep':"下一步",'lang_input_clear':'清空','lang_input_addPic':'添加背景','lang_input_ScalePic':'缩放背景','lang_input_removePic':'删除背景','J_imgTxt':{title:'添加背景图片'}},'noScarwl':"尚未作画，白纸一张~",'scrawlUpLoading':"涂鸦上传中,别急哦~",'continueBtn':"继续",'imageError':"糟糕，图片读取失败了！",'backgroundUploading':'背景图片上传中,别急哦~'},'music':{'static':{'lang_input_tips':"输入歌手/歌曲/专辑，搜索您感兴趣的音乐！",'J_searchBtn':{value:'搜索歌曲'}},'emptyTxt':'未搜索到相关音乐结果，请换一个关键词试试。','chapter':'歌曲','singer':'歌手','special':'专辑','listenTest':'试听'},'anchor':{'static':{'lang_input_anchorName':'锚点名字：'}},'charts':{'static':{'lang_data_source':'数据源：','lang_chart_format':'图表格式：','lang_data_align':'数据对齐方式','lang_chart_align_same':'数据源与图表X轴Y轴一致','lang_chart_align_reverse':'数据源与图表X轴Y轴相反','lang_chart_title':'图表标题','lang_chart_main_title':'主标题：','lang_chart_sub_title':'子标题：','lang_chart_x_title':'X轴标题：','lang_chart_y_title':'Y轴标题：','lang_chart_tip':'提示文字','lang_cahrt_tip_prefix':'提示文字前缀：','lang_cahrt_tip_description':'仅饼图有效， 当鼠标移动到饼图中相应的块上时，提示框内的文字的前缀','lang_chart_data_unit':'数据单位','lang_chart_data_unit_title':'单位：','lang_chart_data_unit_description':'显示在每个数据点上的数据的单位， 比如： 温度的单位 ℃','lang_chart_type':'图表类型：','lang_prev_btn':'上一个','lang_next_btn':'下一个'}},'emotion':{'static':{'lang_input_choice':'精选','lang_input_Tuzki':'兔斯基','lang_input_BOBO':'BOBO','lang_input_lvdouwa':'绿豆蛙','lang_input_babyCat':'baby猫','lang_input_bubble':'泡泡','lang_input_youa':'有啊'}},'gmap':{'static':{'lang_input_address':'地址','lang_input_search':'搜索','address':{value:"北京"}},searchError:'无法定位到该地址!'},'help':{'static':{'lang_input_about':'关于UEditor','lang_input_shortcuts':'快捷键','lang_input_introduction':'UEditor是由百度web前端研发部开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点。开源基于BSD协议，允许自由使用和修改代码。','lang_Txt_shortcuts':'快捷键','lang_Txt_func':'功能','lang_Txt_bold':'给选中字设置为加粗','lang_Txt_copy':'复制选中内容','lang_Txt_cut':'剪切选中内容','lang_Txt_Paste':'粘贴','lang_Txt_undo':'重新执行上次操作','lang_Txt_redo':'撤销上一次操作','lang_Txt_italic':'给选中字设置为斜体','lang_Txt_underline':'给选中字加下划线','lang_Txt_selectAll':'全部选中','lang_Txt_visualEnter':'软回车','lang_Txt_fullscreen':'全屏'}},'insertframe':{'static':{'lang_input_address':'地址：','lang_input_width':'宽度：','lang_input_height':'高度：','lang_input_isScroll':'允许滚动条：','lang_input_frameborder':'显示框架边框：','lang_input_alignMode':'对齐方式：','align':{title:"对齐方式",options:["默认","左对齐","右对齐","居中"]}},'enterAddress':'请输入地址!'},'link':{'static':{'lang_input_text':'文本内容：','lang_input_url':'链接地址：','lang_input_title':'标题：','lang_input_target':'是否在新窗口打开：'},'validLink':'只支持选中一个链接时生效','httpPrompt':'您输入的超链接中不包含http等协议名称，默认将为您添加http://前缀'},'map':{'static':{lang_city:"城市",lang_address:"地址",city:{value:"北京"},lang_search:"搜索",lang_dynamicmap:"插入动态地图"},cityMsg:"请选择城市",errorMsg:"抱歉，找不到该位置！"},'searchreplace':{'static':{lang_tab_search:"查找",lang_tab_replace:"替换",lang_search1:"查找",lang_search2:"查找",lang_replace:"替换",lang_searchReg:'支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',lang_searchReg1:'支持正则表达式，添加前后斜杠标示为正则表达式，例如“/表达式/”',lang_case_sensitive1:"区分大小写",lang_case_sensitive2:"区分大小写",nextFindBtn:{value:"下一个"},preFindBtn:{value:"上一个"},nextReplaceBtn:{value:"下一个"},preReplaceBtn:{value:"上一个"},repalceBtn:{value:"替换"},repalceAllBtn:{value:"全部替换"}},getEnd:"已经搜索到文章末尾！",getStart:"已经搜索到文章头部",countMsg:"总共替换了{#count}处！"},'snapscreen':{'static':{lang_showMsg:"截图功能需要首先安装UEditor截图插件！ ",lang_download:"点此下载",lang_step1:"第一步，下载UEditor截图插件并运行安装。",lang_step2:"第二步，插件安装完成后即可使用，如不生效，请重启浏览器后再试！"}},'spechars':{'static':{},tsfh:"特殊字符",lmsz:"罗马字符",szfh:"数学字符",rwfh:"日文字符",xlzm:"希腊字母",ewzm:"俄文字符",pyzm:"拼音字母",yyyb:"英语音标",zyzf:"其他"},'edittable':{'static':{'lang_tableStyle':'表格样式','lang_insertCaption':'添加表格名称行','lang_insertTitle':'添加表格标题行','lang_insertTitleCol':'添加表格标题列','lang_orderbycontent':"使表格内容可排序",'lang_tableSize':'自动调整表格尺寸','lang_autoSizeContent':'按表格文字自适应','lang_autoSizePage':'按页面宽度自适应','lang_example':'示例','lang_borderStyle':'表格边框','lang_color':'颜色:'},captionName:'表格名称',titleName:'标题',cellsName:'内容',errorMsg:'有合并单元格，不可排序'},'edittip':{'static':{lang_delRow:'删除整行',lang_delCol:'删除整列'}},'edittd':{'static':{lang_tdBkColor:'背景颜色:'}},'formula':{'static':{}},'wordimage':{'static':{lang_resave:"转存步骤",uploadBtn:{src:"upload.png",alt:"上传"},clipboard:{style:"background: url(copy.png) -153px -1px no-repeat;"},lang_step:"1、点击顶部复制按钮，将地址复制到剪贴板；2、点击添加照片按钮，在弹出的对话框中使用Ctrl+V粘贴地址；3、点击打开后选择图片上传流程。"},'fileType':"图片",'flashError':"FLASH初始化失败，请检查FLASH插件是否正确安装！",'netError':"网络连接错误，请重试！",'copySuccess':"图片地址已经复制！",'flashI18n':{}//留空默认中文
},'autosave':{'saving':'保存中...','success':'本地保存成功'}};

var ueditor_all = /*#__PURE__*/Object.freeze({

});

/*!
 * UEditor
 * version: ueditor
 * build: Wed Aug 10 2016 11:06:16 GMT+0800 (CST)
 */
(function () {
  (function () {
    UE = window.UE || {};
    var isIE = !!window.ActiveXObject; //定义utils工具

    var utils = {
      removeLastbs: function removeLastbs(url) {
        return url.replace(/\/$/, '');
      },
      extend: function extend(t, s) {
        var a = arguments,
            notCover = this.isBoolean(a[a.length - 1]) ? a[a.length - 1] : false,
            len = this.isBoolean(a[a.length - 1]) ? a.length - 1 : a.length;

        for (var i = 1; i < len; i++) {
          var x = a[i];

          for (var k in x) {
            if (!notCover || !t.hasOwnProperty(k)) {
              t[k] = x[k];
            }
          }
        }

        return t;
      },
      isIE: isIE,
      cssRule: isIE ? function (key, style, doc) {
        var indexList, index;
        doc = doc || document;

        if (doc.indexList) {
          indexList = doc.indexList;
        } else {
          indexList = doc.indexList = {};
        }

        var sheetStyle;

        if (!indexList[key]) {
          if (style === undefined) {
            return '';
          }

          sheetStyle = doc.createStyleSheet('', index = doc.styleSheets.length);
          indexList[key] = index;
        } else {
          sheetStyle = doc.styleSheets[indexList[key]];
        }

        if (style === undefined) {
          return sheetStyle.cssText;
        }

        sheetStyle.cssText = sheetStyle.cssText + '\n' + (style || '');
      } : function (key, style, doc) {
        doc = doc || document;
        var head = doc.getElementsByTagName('head')[0],
            node;

        if (!(node = doc.getElementById(key))) {
          if (style === undefined) {
            return '';
          }

          node = doc.createElement('style');
          node.id = key;
          head.appendChild(node);
        }

        if (style === undefined) {
          return node.innerHTML;
        }

        if (style !== '') {
          node.innerHTML = node.innerHTML + '\n' + style;
        } else {
          head.removeChild(node);
        }
      },
      domReady: function domReady(onready) {
        var doc = window.document;

        if (doc.readyState === "complete") {
          onready();
        } else {
          if (isIE) {
            (function () {
              if (doc.isReady) return;

              try {
                doc.documentElement.doScroll("left");
              } catch (error) {
                setTimeout(arguments.callee, 0);
                return;
              }

              onready();
            })();

            window.attachEvent('onload', function () {
              onready();
            });
          } else {
            doc.addEventListener("DOMContentLoaded", function () {
              doc.removeEventListener("DOMContentLoaded", arguments.callee, false);
              onready();
            }, false);
            window.addEventListener('load', function () {
              onready();
            }, false);
          }
        }
      },
      each: function each(obj, iterator$$1, context) {
        if (obj == null) return;

        if (obj.length === +obj.length) {
          for (var i = 0, l = obj.length; i < l; i++) {
            if (iterator$$1.call(context, obj[i], i, obj) === false) return false;
          }
        } else {
          for (var key in obj) {
            if (obj.hasOwnProperty(key)) {
              if (iterator$$1.call(context, obj[key], key, obj) === false) return false;
            }
          }
        }
      },
      inArray: function inArray(arr, item) {
        var index = -1;
        this.each(arr, function (v, i) {
          if (v === item) {
            index = i;
            return false;
          }
        });
        return index;
      },
      pushItem: function pushItem(arr, item) {
        if (this.inArray(arr, item) == -1) {
          arr.push(item);
        }
      },
      trim: function trim(str) {
        return str.replace(/(^[ \t\n\r]+)|([ \t\n\r]+$)/g, '');
      },
      indexOf: function indexOf(array, item, start) {
        var index = -1;
        start = this.isNumber(start) ? start : 0;
        this.each(array, function (v, i) {
          if (i >= start && v === item) {
            index = i;
            return false;
          }
        });
        return index;
      },
      hasClass: function hasClass(element, className) {
        className = className.replace(/(^[ ]+)|([ ]+$)/g, '').replace(/[ ]{2,}/g, ' ').split(' ');

        for (var i = 0, ci, cls = element.className; ci = className[i++];) {
          if (!new RegExp('\\b' + ci + '\\b', 'i').test(cls)) {
            return false;
          }
        }

        return i - 1 == className.length;
      },
      addClass: function addClass(elm, classNames) {
        if (!elm) return;
        classNames = this.trim(classNames).replace(/[ ]{2,}/g, ' ').split(' ');

        for (var i = 0, ci, cls = elm.className; ci = classNames[i++];) {
          if (!new RegExp('\\b' + ci + '\\b').test(cls)) {
            cls += ' ' + ci;
          }
        }

        elm.className = utils.trim(cls);
      },
      removeClass: function removeClass(elm, classNames) {
        classNames = this.isArray(classNames) ? classNames : this.trim(classNames).replace(/[ ]{2,}/g, ' ').split(' ');

        for (var i = 0, ci, cls = elm.className; ci = classNames[i++];) {
          cls = cls.replace(new RegExp('\\b' + ci + '\\b'), '');
        }

        cls = this.trim(cls).replace(/[ ]{2,}/g, ' ');
        elm.className = cls;
        !cls && elm.removeAttribute('className');
      },
      on: function on(element, type, handler) {
        var types = this.isArray(type) ? type : type.split(/\s+/),
            k = types.length;
        if (k) while (k--) {
          type = types[k];

          if (element.addEventListener) {
            element.addEventListener(type, handler, false);
          } else {
            if (!handler._d) {
              handler._d = {
                els: []
              };
            }

            var key = type + handler.toString(),
                index = utils.indexOf(handler._d.els, element);

            if (!handler._d[key] || index == -1) {
              if (index == -1) {
                handler._d.els.push(element);
              }

              if (!handler._d[key]) {
                handler._d[key] = function (evt) {
                  return handler.call(evt.srcElement, evt || window.event);
                };
              }

              element.attachEvent('on' + type, handler._d[key]);
            }
          }
        }
        element = null;
      },
      off: function off(element, type, handler) {
        var types = this.isArray(type) ? type : type.split(/\s+/),
            k = types.length;
        if (k) while (k--) {
          type = types[k];

          if (element.removeEventListener) {
            element.removeEventListener(type, handler, false);
          } else {
            var key = type + handler.toString();

            try {
              element.detachEvent('on' + type, handler._d ? handler._d[key] : handler);
            } catch (e) {}

            if (handler._d && handler._d[key]) {
              var index = utils.indexOf(handler._d.els, element);

              if (index != -1) {
                handler._d.els.splice(index, 1);
              }

              handler._d.els.length == 0 && delete handler._d[key];
            }
          }
        }
      },
      loadFile: function () {
        var tmpList = [];

        function getItem(doc, obj) {
          try {
            for (var i = 0, ci; ci = tmpList[i++];) {
              if (ci.doc === doc && ci.url == (obj.src || obj.href)) {
                return ci;
              }
            }
          } catch (e) {
            return null;
          }
        }

        return function (doc, obj, fn) {
          var item = getItem(doc, obj);

          if (item) {
            if (item.ready) {
              fn && fn();
            } else {
              item.funs.push(fn);
            }

            return;
          }

          tmpList.push({
            doc: doc,
            url: obj.src || obj.href,
            funs: [fn]
          });

          if (!doc.body) {
            var html = [];

            for (var p in obj) {
              if (p == 'tag') continue;
              html.push(p + '="' + obj[p] + '"');
            }

            doc.write('<' + obj.tag + ' ' + html.join(' ') + ' ></' + obj.tag + '>');
            return;
          }

          if (obj.id && doc.getElementById(obj.id)) {
            return;
          }

          var element = doc.createElement(obj.tag);
          delete obj.tag;

          for (var p in obj) {
            element.setAttribute(p, obj[p]);
          }

          element.onload = element.onreadystatechange = function () {
            if (!this.readyState || /loaded|complete/.test(this.readyState)) {
              item = getItem(doc, obj);

              if (item.funs.length > 0) {
                item.ready = 1;

                for (var fi; fi = item.funs.pop();) {
                  fi();
                }
              }

              element.onload = element.onreadystatechange = null;
            }
          };

          element.onerror = function () {
            throw Error('The load ' + (obj.href || obj.src) + ' fails,check the url');
          };

          doc.getElementsByTagName("head")[0].appendChild(element);
        };
      }()
    };
    utils.each(['String', 'Function', 'Array', 'Number', 'RegExp', 'Object', 'Boolean'], function (v) {
      utils['is' + v] = function (obj) {
        return Object.prototype.toString.apply(obj) == '[object ' + v + ']';
      };
    });
    var parselist = {};
    UE.parse = {
      register: function register(parseName, fn) {
        parselist[parseName] = fn;
      },
      load: function load(opt) {
        utils.each(parselist, function (v) {
          v.call(opt, utils);
        });
      }
    };

    window.uParse = function (selector, opt) {
      utils.domReady(function () {
        var contents;

        if (document.querySelectorAll) {
          contents = document.querySelectorAll(selector);
        } else {
          if (/^#/.test(selector)) {
            contents = [document.getElementById(selector.replace(/^#/, ''))];
          } else if (/^\./.test(selector)) {
            var contents = [];
            utils.each(document.getElementsByTagName('*'), function (node) {
              if (node.className && new RegExp('\\b' + selector.replace(/^\./, '') + '\\b', 'i').test(node.className)) {
                contents.push(node);
              }
            });
          } else {
            contents = document.getElementsByTagName(selector);
          }
        }

        utils.each(contents, function (v) {
          UE.parse.load(utils.extend({
            root: v,
            selector: selector
          }, opt));
        });
      });
    };
  })();

  UE.parse.register('insertcode', function (utils) {
    var pres = this.root.getElementsByTagName('pre');

    if (pres.length) {
      if (typeof XRegExp == "undefined") {
        var jsurl, cssurl;

        if (this.rootPath !== undefined) {
          jsurl = utils.removeLastbs(this.rootPath) + '/third-party/SyntaxHighlighter/shCore.js';
          cssurl = utils.removeLastbs(this.rootPath) + '/third-party/SyntaxHighlighter/shCoreDefault.css';
        } else {
          jsurl = this.highlightJsUrl;
          cssurl = this.highlightCssUrl;
        }

        utils.loadFile(document, {
          id: "syntaxhighlighter_css",
          tag: "link",
          rel: "stylesheet",
          type: "text/css",
          href: cssurl
        });
        utils.loadFile(document, {
          id: "syntaxhighlighter_js",
          src: jsurl,
          tag: "script",
          type: "text/javascript",
          defer: "defer"
        }, function () {
          utils.each(pres, function (pi) {
            if (pi && /brush/i.test(pi.className)) {
              SyntaxHighlighter.highlight(pi);
            }
          });
        });
      } else {
        utils.each(pres, function (pi) {
          if (pi && /brush/i.test(pi.className)) {
            SyntaxHighlighter.highlight(pi);
          }
        });
      }
    }
  });
  UE.parse.register('table', function (utils) {
    var me = this,
        root = this.root,
        tables = root.getElementsByTagName('table');

    if (tables.length) {
      //按照标签名查找父节点
      var findParentByTagName = function findParentByTagName(target, tagNames) {
        var i,
            current = target;
        tagNames = utils.isArray(tagNames) ? tagNames : [tagNames];

        while (current) {
          for (i = 0; i < tagNames.length; i++) {
            if (current.tagName == tagNames[i].toUpperCase()) return current;
          }

          current = current.parentNode;
        }

        return null;
      }; //表格排序


      var sortTable = function sortTable(table, sortByCellIndex, compareFn) {
        var rows = table.rows,
            trArray = [],
            flag = rows[0].cells[0].tagName === "TH";

        for (var i = 0, len = rows.length; i < len; i++) {
          trArray[i] = rows[i];
        }

        var Fn = {
          'reversecurrent': function reversecurrent(td1, td2) {
            return 1;
          },
          'orderbyasc': function orderbyasc(td1, td2) {
            var value1 = td1.innerText || td1.textContent,
                value2 = td2.innerText || td2.textContent;
            return value1.localeCompare(value2);
          },
          'reversebyasc': function reversebyasc(td1, td2) {
            var value1 = td1.innerHTML,
                value2 = td2.innerHTML;
            return value2.localeCompare(value1);
          },
          'orderbynum': function orderbynum(td1, td2) {
            var value1 = td1[utils.isIE ? 'innerText' : 'textContent'].match(/\d+/),
                value2 = td2[utils.isIE ? 'innerText' : 'textContent'].match(/\d+/);
            if (value1) value1 = +value1[0];
            if (value2) value2 = +value2[0];
            return (value1 || 0) - (value2 || 0);
          },
          'reversebynum': function reversebynum(td1, td2) {
            var value1 = td1[utils.isIE ? 'innerText' : 'textContent'].match(/\d+/),
                value2 = td2[utils.isIE ? 'innerText' : 'textContent'].match(/\d+/);
            if (value1) value1 = +value1[0];
            if (value2) value2 = +value2[0];
            return (value2 || 0) - (value1 || 0);
          }
        }; //对表格设置排序的标记data-sort-type

        table.setAttribute('data-sort-type', compareFn && typeof compareFn === "string" && Fn[compareFn] ? compareFn : ''); //th不参与排序

        flag && trArray.splice(0, 1);
        trArray = sort(trArray, function (tr1, tr2) {
          var result;

          if (compareFn && typeof compareFn === "function") {
            result = compareFn.call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);
          } else if (compareFn && typeof compareFn === "number") {
            result = 1;
          } else if (compareFn && typeof compareFn === "string" && Fn[compareFn]) {
            result = Fn[compareFn].call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);
          } else {
            result = Fn['orderbyasc'].call(this, tr1.cells[sortByCellIndex], tr2.cells[sortByCellIndex]);
          }

          return result;
        });
        var fragment = table.ownerDocument.createDocumentFragment();

        for (var j = 0, len = trArray.length; j < len; j++) {
          fragment.appendChild(trArray[j]);
        }

        var tbody = table.getElementsByTagName("tbody")[0];

        {
          tbody.appendChild(fragment);
        }
      }; //冒泡排序


      var sort = function sort(array, compareFn) {
        compareFn = compareFn || function (item1, item2) {
          return item1.localeCompare(item2);
        };

        for (var i = 0, len = array.length; i < len; i++) {
          for (var j = i, length = array.length; j < length; j++) {
            if (compareFn(array[i], array[j]) > 0) {
              var t = array[i];
              array[i] = array[j];
              array[j] = t;
            }
          }
        }

        return array;
      }; //更新表格


      var updateTable = function updateTable(table) {
        //给第一行设置firstRow的样式名称,在排序图标的样式上使用到
        if (!utils.hasClass(table.rows[0], "firstRow")) {
          for (var i = 1; i < table.rows.length; i++) {
            utils.removeClass(table.rows[i], "firstRow");
          }

          utils.addClass(table.rows[0], "firstRow");
        }
      };

      var selector = this.selector; //追加默认的表格样式

      utils.cssRule('table', selector + ' table.noBorderTable td,' + selector + ' table.noBorderTable th,' + selector + ' table.noBorderTable caption{border:1px dashed #ddd !important}' + selector + ' table.sortEnabled tr.firstRow th,' + selector + ' table.sortEnabled tr.firstRow td{padding-right:20px; background-repeat: no-repeat;' + 'background-position: center right; background-image:url(' + this.rootPath + 'themes/default/images/sortable.png);}' + selector + ' table.sortEnabled tr.firstRow th:hover,' + selector + ' table.sortEnabled tr.firstRow td:hover{background-color: #EEE;}' + selector + ' table{margin-bottom:10px;border-collapse:collapse;display:table;}' + selector + ' td,' + selector + ' th{ background:white; padding: 5px 10px;border: 1px solid #DDD;}' + selector + ' caption{border:1px dashed #DDD;border-bottom:0;padding:3px;text-align:center;}' + selector + ' th{border-top:1px solid #BBB;background:#F7F7F7;}' + selector + ' table tr.firstRow th{border-top:2px solid #BBB;background:#F7F7F7;}' + selector + ' tr.ue-table-interlace-color-single td{ background: #fcfcfc; }' + selector + ' tr.ue-table-interlace-color-double td{ background: #f7faff; }' + selector + ' td p{margin:0;padding:0;}', document); //填充空的单元格

      utils.each('td th caption'.split(' '), function (tag) {
        var cells = root.getElementsByTagName(tag);
        cells.length && utils.each(cells, function (node) {
          if (!node.firstChild) {
            node.innerHTML = '&nbsp;';
          }
        });
      }); //表格可排序

      var tables = root.getElementsByTagName('table');
      utils.each(tables, function (table) {
        if (/\bsortEnabled\b/.test(table.className)) {
          utils.on(table, 'click', function (e) {
            var target = e.target || e.srcElement,
                cell = findParentByTagName(target, ['td', 'th']);
            var table = findParentByTagName(target, 'table'),
                colIndex = utils.indexOf(table.rows[0].cells, cell),
                sortType = table.getAttribute('data-sort-type');

            if (colIndex != -1) {
              sortTable(table, colIndex, me.tableSortCompareFn || sortType);
              updateTable(table);
            }
          });
        }
      });
    }
  });
  UE.parse.register('charts', function (utils) {
    utils.cssRule('chartsContainerHeight', '.edui-chart-container { height:' + (this.chartContainerHeight || 300) + 'px}');
    var resourceRoot = this.rootPath,
        containers = this.root,
        sources = null; //不存在指定的根路径， 则直接退出

    if (!resourceRoot) {
      return;
    }

    if (sources = parseSources()) {
      loadResources();
    }

    function parseSources() {
      if (!containers) {
        return null;
      }

      return extractChartData(containers);
    }
    /**
     * 提取数据
     */


    function extractChartData(rootNode) {
      var data = [],
          tables = rootNode.getElementsByTagName("table");

      for (var i = 0, tableNode; tableNode = tables[i]; i++) {
        if (tableNode.getAttribute("data-chart") !== null) {
          data.push(formatData(tableNode));
        }
      }

      return data.length ? data : null;
    }

    function formatData(tableNode) {
      var meta = tableNode.getAttribute("data-chart"),
          metaConfig = {},
          data = []; //提取table数据

      for (var i = 0, row; row = tableNode.rows[i]; i++) {
        var rowData = [];

        for (var j = 0, cell; cell = row.cells[j]; j++) {
          var value = cell.innerText || cell.textContent || '';
          rowData.push(cell.tagName == 'TH' ? value : value | 0);
        }

        data.push(rowData);
      } //解析元信息


      meta = meta.split(";");

      for (var i = 0, metaData; metaData = meta[i]; i++) {
        metaData = metaData.split(":");
        metaConfig[metaData[0]] = metaData[1];
      }

      return {
        table: tableNode,
        meta: metaConfig,
        data: data
      };
    } //加载资源


    function loadResources() {
      loadJQuery();
    }

    function loadJQuery() {
      //不存在jquery， 则加载jquery
      if (!window.jQuery) {
        utils.loadFile(document, {
          src: resourceRoot + "/third-party/jquery-1.10.2.min.js",
          tag: "script",
          type: "text/javascript",
          defer: "defer"
        }, function () {
          loadHighcharts();
        });
      } else {
        loadHighcharts();
      }
    }

    function loadHighcharts() {
      //不存在Highcharts， 则加载Highcharts
      if (!window.Highcharts) {
        utils.loadFile(document, {
          src: resourceRoot + "/third-party/highcharts/highcharts.js",
          tag: "script",
          type: "text/javascript",
          defer: "defer"
        }, function () {
          loadTypeConfig();
        });
      } else {
        loadTypeConfig();
      }
    } //加载图表差异化配置文件


    function loadTypeConfig() {
      utils.loadFile(document, {
        src: resourceRoot + "/dialogs/charts/chart.config.js",
        tag: "script",
        type: "text/javascript",
        defer: "defer"
      }, function () {
        render();
      });
    } //渲染图表


    function render() {
      var config = null,
          chartConfig = null,
          container = null;

      for (var i = 0, len = sources.length; i < len; i++) {
        config = sources[i];
        chartConfig = analysisConfig(config);
        container = createContainer(config.table);
        renderChart(container, typeConfig[config.meta.chartType], chartConfig);
      }
    }
    /**
     * 渲染图表
     * @param container 图表容器节点对象
     * @param typeConfig 图表类型配置
     * @param config 图表通用配置
     * */


    function renderChart(container, typeConfig, config) {
      $(container).highcharts($.extend({}, typeConfig, {
        credits: {
          enabled: false
        },
        exporting: {
          enabled: false
        },
        title: {
          text: config.title,
          x: -20 //center

        },
        subtitle: {
          text: config.subTitle,
          x: -20
        },
        xAxis: {
          title: {
            text: config.xTitle
          },
          categories: config.categories
        },
        yAxis: {
          title: {
            text: config.yTitle
          },
          plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
          }]
        },
        tooltip: {
          enabled: true,
          valueSuffix: config.suffix
        },
        legend: {
          layout: 'vertical',
          align: 'right',
          verticalAlign: 'middle',
          borderWidth: 1
        },
        series: config.series
      }));
    }
    /**
     * 创建图表的容器
     * 新创建的容器会替换掉对应的table对象
     * */


    function createContainer(tableNode) {
      var container = document.createElement("div");
      container.className = "edui-chart-container";
      tableNode.parentNode.replaceChild(container, tableNode);
      return container;
    } //根据config解析出正确的类别和图表数据信息


    function analysisConfig(config) {
      var series = [],
          //数据类别
      categories = [],
          result = [],
          data = config.data,
          meta = config.meta; //数据对齐方式为相反的方式， 需要反转数据

      if (meta.dataFormat != "1") {
        for (var i = 0, len = data.length; i < len; i++) {
          for (var j = 0, jlen = data[i].length; j < jlen; j++) {
            if (!result[j]) {
              result[j] = [];
            }

            result[j][i] = data[i][j];
          }
        }

        data = result;
      }

      result = {}; //普通图表

      if (meta.chartType != typeConfig.length - 1) {
        categories = data[0].slice(1);

        for (var i = 1, curData; curData = data[i]; i++) {
          series.push({
            name: curData[0],
            data: curData.slice(1)
          });
        }

        result.series = series;
        result.categories = categories;
        result.title = meta.title;
        result.subTitle = meta.subTitle;
        result.xTitle = meta.xTitle;
        result.yTitle = meta.yTitle;
        result.suffix = meta.suffix;
      } else {
        var curData = [];

        for (var i = 1, len = data[0].length; i < len; i++) {
          curData.push([data[0][i], data[1][i] | 0]);
        } //饼图


        series[0] = {
          type: 'pie',
          name: meta.tip,
          data: curData
        };
        result.series = series;
        result.title = meta.title;
        result.suffix = meta.suffix;
      }

      return result;
    }
  });
  UE.parse.register('background', function (utils) {
    var me = this,
        root = me.root,
        p = root.getElementsByTagName('p'),
        styles;

    for (var i = 0, ci; ci = p[i++];) {
      styles = ci.getAttribute('data-background');

      if (styles) {
        ci.parentNode.removeChild(ci);
      }
    } //追加默认的表格样式


    styles && utils.cssRule('ueditor_background', me.selector + '{' + styles + '}', document);
  });
  UE.parse.register('list', function (utils) {
    var customCss = [],
        customStyle = {
      'cn': 'cn-1-',
      'cn1': 'cn-2-',
      'cn2': 'cn-3-',
      'num': 'num-1-',
      'num1': 'num-2-',
      'num2': 'num-3-',
      'dash': 'dash',
      'dot': 'dot'
    };
    utils.extend(this, {
      liiconpath: 'http://bs.baidu.com/listicon/',
      listDefaultPaddingLeft: '20'
    });
    var root = this.root,
        ols = root.getElementsByTagName('ol'),
        uls = root.getElementsByTagName('ul'),
        selector = this.selector;

    if (ols.length) {
      applyStyle.call(this, ols);
    }

    if (uls.length) {
      applyStyle.call(this, uls);
    }

    if (ols.length || uls.length) {
      customCss.push(selector + ' .list-paddingleft-1{padding-left:0}');
      customCss.push(selector + ' .list-paddingleft-2{padding-left:' + this.listDefaultPaddingLeft + 'px}');
      customCss.push(selector + ' .list-paddingleft-3{padding-left:' + this.listDefaultPaddingLeft * 2 + 'px}');
      utils.cssRule('list', selector + ' ol,' + selector + ' ul{margin:0;padding:0;}li{clear:both;}' + customCss.join('\n'), document);
    }

    function applyStyle(nodes) {
      var T = this;
      utils.each(nodes, function (list) {
        if (list.className && /custom_/i.test(list.className)) {
          var listStyle = list.className.match(/custom_(\w+)/)[1];

          if (listStyle == 'dash' || listStyle == 'dot') {
            utils.pushItem(customCss, selector + ' li.list-' + customStyle[listStyle] + '{background-image:url(' + T.liiconpath + customStyle[listStyle] + '.gif)}');
            utils.pushItem(customCss, selector + ' ul.custom_' + listStyle + '{list-style:none;} ' + selector + ' ul.custom_' + listStyle + ' li{background-position:0 3px;background-repeat:no-repeat}');
          } else {
            var index = 1;
            utils.each(list.childNodes, function (li) {
              if (li.tagName == 'LI') {
                utils.pushItem(customCss, selector + ' li.list-' + customStyle[listStyle] + index + '{background-image:url(' + T.liiconpath + 'list-' + customStyle[listStyle] + index + '.gif)}');
                index++;
              }
            });
            utils.pushItem(customCss, selector + ' ol.custom_' + listStyle + '{list-style:none;}' + selector + ' ol.custom_' + listStyle + ' li{background-position:0 3px;background-repeat:no-repeat}');
          }

          switch (listStyle) {
            case 'cn':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-1{padding-left:25px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-2{padding-left:40px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-3{padding-left:55px}');
              break;

            case 'cn1':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-1{padding-left:30px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-2{padding-left:40px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-3{padding-left:55px}');
              break;

            case 'cn2':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-1{padding-left:40px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-2{padding-left:55px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-3{padding-left:68px}');
              break;

            case 'num':
            case 'num1':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-1{padding-left:25px}');
              break;

            case 'num2':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-1{padding-left:35px}');
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft-2{padding-left:40px}');
              break;

            case 'dash':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft{padding-left:35px}');
              break;

            case 'dot':
              utils.pushItem(customCss, selector + ' li.list-' + listStyle + '-paddingleft{padding-left:20px}');
          }
        }
      });
    }
  });
  UE.parse.register('vedio', function (utils) {
    var video = this.root.getElementsByTagName('video'),
        audio = this.root.getElementsByTagName('audio');
    document.createElement('video');
    document.createElement('audio');

    if (video.length || audio.length) {
      var sourcePath = utils.removeLastbs(this.rootPath),
          jsurl = sourcePath + '/third-party/video-js/video.js',
          cssurl = sourcePath + '/third-party/video-js/video-js.min.css',
          swfUrl = sourcePath + '/third-party/video-js/video-js.swf';

      if (window.videojs) {
        videojs.autoSetup();
      } else {
        utils.loadFile(document, {
          id: "video_css",
          tag: "link",
          rel: "stylesheet",
          type: "text/css",
          href: cssurl
        });
        utils.loadFile(document, {
          id: "video_js",
          src: jsurl,
          tag: "script",
          type: "text/javascript"
        }, function () {
          videojs.options.flash.swf = swfUrl;
          videojs.autoSetup();
        });
      }
    }
  });
})();

var ueditor_parse = /*#__PURE__*/Object.freeze({

});

module.exports = index;
